(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    768841,      14325]
NotebookOptionsPosition[    602261,      11161]
NotebookOutlinePosition[    759217,      14132]
CellTagsIndexPosition[    757537,      14083]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Fugacities in an Ideal Binary Mixture", "Title",
 TaggingRules->{},
 CellChangeTimes->{3.685987571981817*^9},
 CellTags->{"Name", "Title"},
 CellID->506550020,ExpressionUUID->"4e6b307d-1328-4ed8-ab12-4b74ad926e1f"],

Cell[CellGroupData[{

Cell[TextData[{
 "Caption",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CaptionCells", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "The caption provides all the information needed to understand the \
Demonstration. It should be between three and five sentences long, but \
clarity is more important than length. Include only text in this section \
\[LongDash] no code, graphics, etc. Do not change the cell style or copy \
cells from other sections. Do not copy text from books or the web. Write your \
ideas in your own words. If you want to refer to something on the web, link \
to it in the Details.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCaptionCells"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "dd70618f-c0e1-4d17-8487-ce35f63968d8"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "CaptionCells"},
 CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
 CellID->138150581,ExpressionUUID->"70908813-5ca9-47e8-ac97-f13cb0dc6105"],

Cell[TextData[{
 "This Demonstration shows how the fugacities of benzene (",
 Cell[BoxData[
  FormBox[
   StyleBox["B",
    FontSlant->"Plain"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "d1ec2216-fd37-4c3a-8ce4-0ae89078caf7"],
 ") and toluene (",
 Cell[BoxData[
  FormBox[
   StyleBox["T",
    FontSlant->"Plain"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "28df31ce-93a6-4e61-b7a2-fcd2cce2f19a"],
 ") change with temperature and molar composition at constant pressure. The \
liquid mixture is an ideal solution and the gas phase is ideal, so Raoult's \
law models vapor-liquid equilibrium. Use sliders to vary the temperature and \
overall mole fraction of benzene. Use buttons to view the \
temperature-composition diagram (",
 Cell[BoxData[
  FormBox["T", TraditionalForm]], "InlineMath",ExpressionUUID->
  "987a7f11-131f-414d-99b6-5620734a2bb4"],
 "-",
 Cell[BoxData[
  FormBox["x", TraditionalForm]], "InlineMath",ExpressionUUID->
  "5ab9fd88-5614-4a45-b174-aa61e70550fb"],
 "-",
 Cell[BoxData[
  FormBox["y", TraditionalForm]], "InlineMath",ExpressionUUID->
  "867ab63e-30c5-408e-ab81-3026e46f067c"],
 "), the fugacity-temperature plot or both plots at once."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{
  3.6859875925938497`*^9, {3.685987730683936*^9, 3.6859877370869474`*^9}, {
   3.6896133660263977`*^9, 3.6896133936780577`*^9}},
 CellID->987809950,ExpressionUUID->"6765a598-ceb1-44a6-86fc-e7cc0fc3f635"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialization Code",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"InitializationCode", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Provide any code that must be evaluated before the ", 
           StyleBox["Manipulate", "MRbig"], 
           ". This will automatically be built into the ", 
           StyleBox["Manipulate", "MRbig"], 
           " in the final notebook version. Never use a package that is not \
included in the default distribution of ", 
           StyleBox["Mathematica", FontSlant -> "Italic"], 
           ". To use a package, use the ", 
           StyleBox["Initialization", "MRbig"], " option (with ", 
           StyleBox["Get", "MRbig"], ", not ", 
           StyleBox["Needs", "MRbig"], ") in the ", 
           StyleBox["Manipulate", "MRbig"], 
           " itself, and use the full name of the function from the package. \
For example:\n", 
           StyleBox[
           "  Manipulate[\n  \[Ellipsis]\n  ComputationalGeometry`ConvexHull[\
\[Ellipsis]]\[Ellipsis]\n  \[Ellipsis]\n  Initialization :> \
Get[\"ComputationalGeometry`\"],\n  \[Ellipsis]\n  ]", "MR"], 
           "\nIf you provide initialization code, include a ", 
           StyleBox["SaveDefinitions->True", "MRbig"], " option in the ", 
           StyleBox["Manipulate", "MRbig"], ".", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoInitializationCode"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "90e71991-370e-405f-b6c7-6d98d57ae09d"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "InitializationCode"},
 DefaultNewCellStyle->"Input",
 CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
 
 CellID->447669593,ExpressionUUID->"3be5ae5e-713b-473c-91d6-c5b125911151"],

Cell[TextData[{
 "If you provide initialization code, include a ",
 StyleBox["SaveDefinitions->True", "MRbig"],
 " option in the ",
 StyleBox["Manipulate", "MRbig"],
 "."
}], "CodeText",
 Editable->False,
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "samplecell", "TabNext"},
 CellID->687519280,ExpressionUUID->"d16b521a-d388-4f82-93b8-c19934a33bc8"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Manipulate",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ManipulateGroup", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"This section contains the ", 
           StyleBox["Manipulate", "MRbig"], 
           " input cell and its evaluated output cell. Make all control \
labels or labels in the output as descriptive as possible, with only proper \
nouns and proper adjectives capitalized. More description of the controls can \
be provided in the Details section below, if necessary. If you change this ", 
           
           StyleBox["Manipulate", "MRbig"], 
           " after creating screenshots and/or thumbnails, use ", 
           StyleBox["Update Thumbnail & Snapshots", FontWeight -> "Bold"], 
           " in the toolbar to update any copies in later sections. You can \
control the Flash preview for the Demonstration with the ", 
           StyleBox["AutorunSequencing", "MRbig"], " option. Use ", 
           StyleBox["SaveDefinitions->True", "MRbig"], 
           " if you provided initialization code in the previous section."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoManipulateGroup"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "2492ec6d-ec00-42e5-b846-564082276832"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ManipulateGroup"},
 DefaultNewCellStyle->"Input",
 CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
 CellID->791025314,ExpressionUUID->"870ab159-d6ff-4905-96eb-2d2eeef666e1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "Tx", ",", "Ty", ",", "VLE", ",", "P", ",", "PsatB", ",", "PsatT", ",", 
       "xB", ",", "yB", ",", "fB", ",", "fT", ",", "fBfunc", ",", "fTfunc", 
       ",", "xB0", ",", "yB0", ",", "fB0", ",", "fT0", ",", "TxyStuff", ",", 
       "fStuff", ",", "opt1", ",", "TxyPlotOnly", ",", "fPlotOnly", ",", 
       "opt2", ",", "TxyPlotBoth", ",", "fPlotBoth"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Tx", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"13.14055", "*", 
         RowBox[{"x", "^", "2"}]}], "-", 
        RowBox[{"43.6023", "*", "x"}], "+", "110.7101"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Ty", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "14.5068"}], "*", 
         RowBox[{"x", "^", "2"}]}], "-", 
        RowBox[{"15.7199", "*", "x"}], "+", "110.6248"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"VLE", "[", "T_", "]"}], ":=", 
       RowBox[{
        RowBox[{"Tx", "[", "z", "]"}], "\[LessEqual]", "T", "\[LessEqual]", 
        RowBox[{"Ty", "[", "z", "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"P", "=", "1"}], ";", 
      RowBox[{"(*", "bar", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PsatB", "[", "T_", "]"}], ":=", 
       RowBox[{"0.00133322368", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"6.87987", "-", 
           RowBox[{"(", 
            RowBox[{"1196.76", "/", 
             RowBox[{"(", 
              RowBox[{"T", "+", "219.161"}], ")"}]}], ")"}]}], ")"}]}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PsatT", "[", "T_", "]"}], ":=", 
       RowBox[{"0.00133322368", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"6.95087", "-", 
           RowBox[{"(", 
            RowBox[{"1342.31", "/", 
             RowBox[{"(", 
              RowBox[{"T", "+", "219.187"}], ")"}]}], ")"}]}], ")"}]}]}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xB", "[", "T_", "]"}], ":=", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"VLE", "[", "T", "]"}], ",", 
         RowBox[{"x", "/.", 
          RowBox[{"Quiet", "@", 
           RowBox[{
            RowBox[{"Solve", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Tx", "[", "x", "]"}], "\[Equal]", "T"}], ",", "x"}], 
             "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
         RowBox[{
          RowBox[{"Tx", "[", "z", "]"}], ">", "T"}], ",", "z", ",", 
         RowBox[{
          RowBox[{"Ty", "[", "z", "]"}], "<", "T"}], ",", "0"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"yB", "[", "T_", "]"}], ":=", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"VLE", "[", "T", "]"}], ",", 
         RowBox[{"x", "/.", 
          RowBox[{"Quiet", "@", 
           RowBox[{
            RowBox[{"Solve", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Ty", "[", "x", "]"}], "\[Equal]", "T"}], ",", "x"}], 
             "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}]}]}], ",", 
         RowBox[{
          RowBox[{"Tx", "[", "z", "]"}], ">", "T"}], ",", "0", ",", 
         RowBox[{
          RowBox[{"Ty", "[", "z", "]"}], "<", "T"}], ",", "z"}], "]"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fB", "[", "T_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"PsatB", "[", "T", "]"}], "*", "z"}], ",", 
            RowBox[{"T", "\[LessEqual]", 
             RowBox[{"Tx", "[", "z", "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"yB", "[", "T", "]"}], "*", "P"}], ",", 
            RowBox[{"VLE", "[", "T", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"z", "*", "P"}], ",", 
            RowBox[{"T", "\[GreaterEqual]", 
             RowBox[{"Ty", "[", "z", "]"}]}]}], "}"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fT", "[", "T_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"PsatT", "[", "T", "]"}], "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "z"}], ")"}]}], ",", 
            RowBox[{"T", "\[LessEqual]", 
             RowBox[{"Tx", "[", "z", "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"P", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"yB", "[", "T", "]"}]}], ")"}]}], ",", 
            RowBox[{"VLE", "[", "T", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"P", "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "z"}], ")"}]}], ",", 
            RowBox[{"T", "\[GreaterEqual]", 
             RowBox[{"Ty", "[", "z", "]"}]}]}], "}"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"fBfunc", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"Interpolation", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#", ",", 
              RowBox[{"fB", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
           RowBox[{"Range", "[", 
            RowBox[{"75", ",", "115"}], "]"}]}], ",", 
          RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"fTfunc", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"Interpolation", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#", ",", 
              RowBox[{"fT", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
           RowBox[{"Range", "[", 
            RowBox[{"75", ",", "115"}], "]"}]}], ",", 
          RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"xB0", "=", 
       RowBox[{"xB", "[", "temp", "]"}]}], ";", 
      RowBox[{"yB0", "=", 
       RowBox[{"yB", "[", "temp", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fB0", "=", 
       RowBox[{"fB", "[", "temp", "]"}]}], ";", 
      RowBox[{"fT0", "=", 
       RowBox[{"fT", "[", "temp", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"TxyStuff", "=", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"VLE", "[", "temp", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Dashed", ",", "Blue", ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"z", ",", "temp"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"yB0", ",", "temp"}], "}"}]}], "}"}], "]"}], ",", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"0", ",", "0.6", ",", "0"}], "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"z", ",", "temp"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"xB0", ",", "temp"}], "}"}]}], "}"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Thickness", "@", "0.007"}], ",", "Dotted", ",", "Blue", 
             ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"xB0", ",", "75"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"xB0", ",", "temp"}], "}"}]}], "}"}], "]"}], ",", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"0", ",", "0.6", ",", "0"}], "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"yB0", ",", "75"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"yB0", ",", "temp"}], "}"}]}], "}"}], "]"}]}], "}"}],
            ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Thickness", "@", "0.007"}], ",", "Dotted", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"temp", "<", 
                RowBox[{"Tx", "[", "z", "]"}]}], ",", "Blue", ",", 
               RowBox[{"RGBColor", "[", 
                RowBox[{"0", ",", "0.6", ",", "0"}], "]"}]}], "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"z", ",", "75"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"z", ",", "temp"}], "}"}]}], "}"}], "]"}]}], "}"}]}],
           "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"VLE", "[", "temp", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{"xB0", "-", "yB0"}], "]"}], ">", "0.07149"}], ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Framed", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#1", ",", "Italic"}], "]"}], ",", "\"\<B\>\""}], 
                    "]"}], ",", "17", ",", "#3"}], "]"}], ",", 
                    RowBox[{"Background", "\[Rule]", "White"}], ",", 
                    RowBox[{"FrameStyle", "\[Rule]", "#3"}], ",", 
                    RowBox[{"FrameMargins", "\[Rule]", "Small"}]}], "]"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"#2", ",", "78"}], "}"}]}], "]"}]}], "]"}], "&"}], 
             "@@@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<x\>\"", ",", "xB0", ",", "Blue"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\"\<y\>\"", ",", "yB0", ",", 
                 RowBox[{"RGBColor", "[", 
                  RowBox[{"0", ",", "0.6", ",", "0"}], "]"}]}], "}"}]}], 
              "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Framed", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#1", ",", "Italic"}], "]"}], ",", "\"\<B\>\""}], 
                    "]"}], ",", "17", ",", "#3"}], "]"}], ",", 
                 RowBox[{"Background", "\[Rule]", "White"}], ",", 
                 RowBox[{"FrameStyle", "\[Rule]", "#3"}], ",", 
                 RowBox[{"FrameMargins", "\[Rule]", "Small"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"z", ",", "78"}], "}"}], ",", 
               RowBox[{"Which", "[", 
                RowBox[{
                 RowBox[{"#2", "\[LessEqual]", "0.0475"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
                 RowBox[{"#2", "\[GreaterEqual]", "0.9525"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}], ",", "True", ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "&"}], "@@", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"temp", "<", 
               RowBox[{"Tx", "[", "z", "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<x\>\"", ",", "xB0", ",", "Blue"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<y\>\"", ",", "yB0", ",", 
                RowBox[{"RGBColor", "[", 
                 RowBox[{"0", ",", "0.6", ",", "0"}], "]"}]}], "}"}]}], 
             "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PointSize", "@", "0.017"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"z", ",", "temp"}], "}"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"fStuff", "=", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<f\>\"", ",", "Italic"}], "]"}], ",", 
               "\"\<B\>\""}], "]"}], ",", "17", ",", 
             RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"temp", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"fB0", "\[GreaterEqual]", "fT0"}], "&&", 
                RowBox[{"z", "<", "0.7"}]}], ",", 
               RowBox[{"fB0", "+", "0.1"}], ",", 
               RowBox[{"fB0", "-", "0.1"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{"temp", "\[LessEqual]", "76"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
             RowBox[{"temp", ">", "114"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", "True", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<f\>\"", ",", "Italic"}], "]"}], ",", 
               "\"\<T\>\""}], "]"}], ",", "17", ",", 
             RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"temp", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"fB0", "\[GreaterEqual]", "fT0"}], "&&", 
                RowBox[{"z", "<", "0.7"}]}], ",", 
               RowBox[{"fT0", "-", "0.1"}], ",", 
               RowBox[{"fT0", "+", "0.1"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{"temp", "\[LessEqual]", "76"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
             RowBox[{"temp", ">", "114"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", "True", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PointSize", "@", "0.017"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"temp", ",", "fB0"}], "}"}], "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"temp", ",", "fT0"}], "}"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"opt1", "=", 
       RowBox[{"Sequence", "[", 
        RowBox[{
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"17", ",", "Black"}], "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"600", ",", "410"}], "}"}]}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"60", ",", "15"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"50", ",", "10"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Row", "[", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<P\>\"", ",", "Italic"}], "]"}], ",", 
                "\"\< = \>\"", ",", "P", ",", "\"\< bar\>\"", ",", 
                RowBox[{"Spacer", "@", "50"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Subscript", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<f\>\"", ",", "Italic"}], "]"}], ",", 
                  "\"\<B\>\""}], "]"}], ",", "\"\< = \>\"", ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"temp", "<", 
                    RowBox[{"Tx", "[", "z", "]"}]}], ",", "\"\<x\>\"", ",", 
                    "\"\<y\>\""}], "]"}], ",", "Italic"}], "]"}], ",", 
                  "\"\<B\>\""}], "]"}], ",", 
                RowBox[{"Superscript", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\< P\>\"", ",", "Italic"}], "]"}], ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"temp", "<", 
                    RowBox[{"Tx", "[", "z", "]"}]}], ",", "\"\<sat\>\"", ",", 
                    "\"\<\>\""}], "]"}]}], "]"}], ",", "\"\< = \>\"", ",", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{"fB0", ",", 
                  RowBox[{"{", 
                   RowBox[{"2", ",", "2"}], "}"}]}], "]"}], ",", 
                "\"\< bar\>\"", ",", "\[IndentingNewLine]", 
                RowBox[{"Spacer", "@", "50"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Subscript", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<f\>\"", ",", "Italic"}], "]"}], ",", 
                  "\"\<T\>\""}], "]"}], ",", "\"\< = \>\"", ",", 
                RowBox[{"Subscript", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"temp", "<", 
                    RowBox[{"Tx", "[", "z", "]"}]}], ",", "\"\<x\>\"", ",", 
                    "\"\<y\>\""}], "]"}], ",", "Italic"}], "]"}], ",", 
                  "\"\<T\>\""}], "]"}], ",", 
                RowBox[{"Superscript", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\< P\>\"", ",", "Italic"}], "]"}], ",", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"temp", "<", 
                    RowBox[{"Tx", "[", "z", "]"}]}], ",", "\"\<sat\>\"", ",", 
                    "\"\<\>\""}], "]"}]}], "]"}], ",", "\"\< = \>\"", ",", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{"fT0", ",", 
                  RowBox[{"{", 
                   RowBox[{"2", ",", "2"}], "}"}]}], "]"}], ",", 
                "\"\< bar\>\""}], "\[IndentingNewLine]", "}"}], ",", 
              RowBox[{"ImageMargins", "\[Rule]", "1"}]}], "]"}], ",", "17"}], 
           "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"TxyPlotOnly", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Tx", "[", "x", "]"}], ",", 
           RowBox[{"Ty", "[", "x", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Blue"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"0", ",", "0.6", ",", "0"}], "]"}]}], "}"}]}], "}"}]}],
          ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"75", ",", "121"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<mole fraction benzene\>\"", ",", 
            "\"\<temperature (\[Degree]C)\>\""}], "}"}]}], ",", 
         RowBox[{"Evaluate", "@", "opt1"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"#1", ",", "18", ",", 
                  RowBox[{"GrayLevel", "@", "0.4"}]}], "]"}], ",", 
                RowBox[{"Scaled", "@", "#2"}]}], "]"}], "&"}], "@@@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<liquid\>\"", ",", 
                 RowBox[{"{", 
                  RowBox[{"0.15", ",", "0.2"}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\"\<vapor\>\"", ",", 
                 RowBox[{"{", 
                  RowBox[{"0.85", ",", "0.8"}], "}"}]}], "}"}]}], "}"}]}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"Row", "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<B\>\""}], "]"}], ",", "\"\< = \>\"", ",", 
                   RowBox[{"NumberForm", "[", 
                    RowBox[{"xB0", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}], ",", 
                   RowBox[{"Spacer", "@", "15"}], ",", 
                   RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<B\>\""}], "]"}], ",", "\"\< = \>\"", ",", 
                   RowBox[{"NumberForm", "[", 
                    RowBox[{"yB0", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ",", 
                "17"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0.5", ",", "118"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", "TxyStuff"}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"fPlotOnly", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"fBfunc", "[", "T", "]"}], ",", 
           RowBox[{"fTfunc", "[", "T", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"T", ",", "75", ",", "115"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Purple"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Dashed", ",", "Purple"}], "}"}]}], 
           "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"75", ",", "115"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.05"}], ",", "1.05"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<temperature (\[Degree]C)\>\"", ",", 
            "\"\<fugacity (bar)\>\""}], "}"}]}], ",", 
         RowBox[{"Evaluate", "@", "opt1"}], ",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", "fStuff", "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"**", "**"}], "*****)"}], "\[IndentingNewLine]", 
      RowBox[{"opt2", "=", 
       RowBox[{"Sequence", "[", 
        RowBox[{
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"60", ",", "15"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"40", ",", "10"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"600", ",", "410"}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"TxyPlotBoth", "=", 
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "115"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "75"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "75"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "115"}], "}"}]}], "}"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", "75"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"#", ",", "76"}], "}"}]}], "}"}], "]"}], "&"}], "/@", 
             RowBox[{"Range", "[", 
              RowBox[{"0.1", ",", "0.9", ",", "0.1"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"NumberForm", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}]}], "]"}], ",", "17"}], 
                 "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"#", ",", "72"}], "}"}]}], "]"}], "&"}], "/@", 
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", "1", ",", "0.2"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "#"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0.01", ",", "#"}], "}"}]}], "}"}], "]"}], ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "#"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0.99", ",", "#"}], "}"}]}], "}"}], "]"}]}], 
               "}"}], "&"}], "/@", 
             RowBox[{"Range", "[", 
              RowBox[{"80", ",", "110", ",", "5"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"#", ",", "17"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "#"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1.25", ",", "0"}], "}"}]}], "]"}], "&"}], "/@", 
             RowBox[{"Range", "[", 
              RowBox[{"80", ",", "110", ",", "10"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<mole fraction benzene\>\"", ",", "17"}], "]"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"0.5", ",", "68"}], "}"}]}], "]"}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<temperature (\[Degree]C)\>\"", ",", "17"}], "]"}],
               ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "0.085"}], ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"75", "+", "115"}], ")"}], "/", "2"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "]"}], ","}], 
           "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Tx", "[", "x", "]"}], ",", 
             RowBox[{"Ty", "[", "x", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Thick", ",", "Blue"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Thick", ",", 
                RowBox[{"RGBColor", "[", 
                 RowBox[{"0", ",", "0.6", ",", "0"}], "]"}]}], "}"}]}], 
             "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"#1", ",", "18", ",", 
                  RowBox[{"GrayLevel", "@", "0.4"}]}], "]"}], ",", "#2"}], 
               "]"}], "&"}], "@@@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<liquid\>\"", ",", 
                 RowBox[{"{", 
                  RowBox[{"0.1", ",", "80"}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\"\<vapor\>\"", ",", 
                 RowBox[{"{", 
                  RowBox[{"0.9", ",", "105"}], "}"}]}], "}"}]}], "}"}]}], ",",
             "\[IndentingNewLine]", "TxyStuff"}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"75", ",", "155"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Evaluate", "@", "opt2"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"fPlotBoth", "=", 
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{"Purple", ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"EdgeForm", "@", "Purple"}], ",", 
              RowBox[{"FaceForm", "@", "None"}], ",", 
              RowBox[{"Rectangle", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"75", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"115", ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"#", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"#", ",", "0.03"}], "}"}]}], "}"}], "]"}], ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"#", ",", "1"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"#", ",", "0.97"}], "}"}]}], "}"}], "]"}]}], 
               "}"}], "&"}], "/@", 
             RowBox[{"Range", "[", 
              RowBox[{"80", ",", "110", ",", "5"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"#", ",", "17"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"#", ",", 
                  RowBox[{"-", "0.06"}]}], "}"}]}], "]"}], "&"}], "/@", 
             RowBox[{"Range", "[", 
              RowBox[{"80", ",", "110", ",", "10"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"75", ",", "#"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"75.4", ",", "#"}], "}"}]}], "}"}], "]"}], ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"115", ",", "#"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"114.6", ",", "#"}], "}"}]}], "}"}], "]"}]}], 
               "}"}], "&"}], "/@", 
             RowBox[{"Range", "[", 
              RowBox[{"0.1", ",", "0.9", ",", "0.1"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"NumberForm", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}]}], "]"}], ",", "17"}], 
                 "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"75", ",", "#"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1.25", ",", "0"}], "}"}]}], "]"}], "&"}], "/@", 
             RowBox[{"Range", "[", 
              RowBox[{"0.2", ",", "1", ",", "0.2"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<temperature (\[Degree]C)\>\"", ",", "17"}], "]"}],
               ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"75", "+", "115"}], ")"}], "/", "2"}], ",", 
                RowBox[{"-", "0.15"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<fugacity (bar)\>\"", ",", "17"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"71.5", ",", "0.5"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], 
           "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"fBfunc", "[", "T", "]"}], ",", 
             RowBox[{"fTfunc", "[", "T", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"T", ",", "75", ",", "115"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Thick", ",", "Purple"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Thick", ",", "Dashed", ",", "Purple"}], "}"}]}], 
             "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", "fStuff", "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"75", ",", "115"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Evaluate", "@", "opt2"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{
       "fob", ",", "1", ",", "TxyPlotOnly", ",", "2", ",", "fPlotOnly", ",", 
        "3", ",", 
        RowBox[{"Overlay", "[", 
         RowBox[{"{", 
          RowBox[{"TxyPlotBoth", ",", "fPlotBoth"}], "}"}], "]"}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"fob", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "\[Rule]", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<T\[Hyphen]x\[Hyphen]y\>\"", ",", "Italic"}], 
               "]"}]}], ",", 
             RowBox[{"2", "\[Rule]", 
              RowBox[{"Row", "@", 
               RowBox[{"{", 
                RowBox[{"\"\< fugacity versus \>\"", ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<T \>\"", ",", "Italic"}], "]"}]}], "}"}]}]}], 
             ",", 
             RowBox[{"3", "\[Rule]", "\"\< both \>\""}]}], "}"}], ",", 
           "Setter"}], "}"}], "]"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "z", ",", "0.6", ",", "\"\<overall mole fraction benzene\>\""}], 
             "}"}], ",", "0", ",", "1", ",", "0.01", ",", 
            RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "temp", ",", "92", ",", "\"\<temperature (\[Degree]C)\>\""}], 
             "}"}], ",", "75", ",", "115", ",", "0.5", ",", 
            RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}]}], 
        "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.6859847935017414`*^9, 3.685984851268081*^9}, {
   3.6859848958621826`*^9, 3.68598498054436*^9}, {3.6859850152644453`*^9, 
   3.685985320823121*^9}, {3.6859853550811877`*^9, 3.685985411286357*^9}, {
   3.685985786290412*^9, 3.6859858040804725`*^9}, {3.6859858395965796`*^9, 
   3.685985862960617*^9}, {3.685985919411723*^9, 3.685985957015829*^9}, {
   3.685986003320916*^9, 3.6859860700500827`*^9}, {3.6859861023641644`*^9, 
   3.685986126610219*^9}, {3.685986180509341*^9, 3.685986198123384*^9}, {
   3.685986228157433*^9, 3.685986254436474*^9}, {3.6859862937276196`*^9, 
   3.6859862958276224`*^9}, {3.6859863498777237`*^9, 3.6859864949020176`*^9}, 
   3.6859865825892353`*^9, {3.685986807874965*^9, 3.6859870336634293`*^9}, {
   3.6859870771465282`*^9, 3.685987134854638*^9}, {3.68598716921274*^9, 
   3.6859871746517487`*^9}, {3.6859872079218163`*^9, 
   3.6859872378248787`*^9}, {3.685987269080928*^9, 3.6859873390930986`*^9}, {
   3.685987433042266*^9, 3.685987443743283*^9}, {3.685987519542535*^9, 
   3.685987521333604*^9}, 3.689613132381448*^9, 3.689613200690688*^9, {
   3.689613292768856*^9, 3.689613309225049*^9}, {3.689613782687429*^9, 
   3.689613800170417*^9}},
 CellID->79696319,ExpressionUUID->"90cb350d-c5a3-4878-9133-f940cb9f2aac"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`fob$$ = 1, $CellContext`temp$$ = 
    92, $CellContext`z$$ = 0.6, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`fob$$], 1, ""}, {
      1 -> Style["T\[Hyphen]x\[Hyphen]y", Italic], 2 -> 
       Row[{" fugacity versus ", 
          Style["T ", Italic]}], 3 -> " both "}}, {{
       Hold[$CellContext`z$$], 0.6, "overall mole fraction benzene"}, 0, 1, 
      0.01}, {{
       Hold[$CellContext`temp$$], 92, "temperature (\[Degree]C)"}, 75, 115, 
      0.5}, {
      Hold[
       Grid[{{
          Manipulate`Place[1]}, {
          Manipulate`Place[2], 
          Manipulate`Place[3]}}, Alignment -> Left]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    600., {203., 207.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`fob$11959$$ = 
    False, $CellContext`z$11960$$ = 0, $CellContext`temp$11961$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`fob$$ = 1, $CellContext`temp$$ = 
        92, $CellContext`z$$ = 0.6}, "ControllerVariables" :> {
        Hold[$CellContext`fob$$, $CellContext`fob$11959$$, False], 
        Hold[$CellContext`z$$, $CellContext`z$11960$$, 0], 
        Hold[$CellContext`temp$$, $CellContext`temp$11961$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`Tx$, $CellContext`Ty$, $CellContext`VLE$, \
$CellContext`P$, $CellContext`PsatB$, $CellContext`PsatT$, $CellContext`xB$, \
$CellContext`yB$, $CellContext`fB$, $CellContext`fT$, $CellContext`fBfunc$, \
$CellContext`fTfunc$, $CellContext`xB0$, $CellContext`yB0$, \
$CellContext`fB0$, $CellContext`fT0$, $CellContext`TxyStuff$, \
$CellContext`fStuff$, $CellContext`opt1$, $CellContext`TxyPlotOnly$, \
$CellContext`fPlotOnly$, $CellContext`opt2$, $CellContext`TxyPlotBoth$, \
$CellContext`fPlotBoth$}, $CellContext`Tx$[
           Pattern[$CellContext`x, 
            Blank[]]] := 
         13.14055 $CellContext`x^2 - 43.6023 $CellContext`x + 
          110.7101; $CellContext`Ty$[
           Pattern[$CellContext`x, 
            Blank[]]] := (-14.5068) $CellContext`x^2 - 15.7199 $CellContext`x + 
          110.6248; $CellContext`VLE$[
           Pattern[$CellContext`T$, 
            
            Blank[]]] := $CellContext`Tx$[$CellContext`z$$] <= \
$CellContext`T$ <= $CellContext`Ty$[$CellContext`z$$]; $CellContext`P$ = 
         1; $CellContext`PsatB$[
           Pattern[$CellContext`T, 
            Blank[]]] := 
         0.00133322368 
          10^(6.87987 - 1196.76/($CellContext`T + 
            219.161)); $CellContext`PsatT$[
           Pattern[$CellContext`T, 
            Blank[]]] := 
         0.00133322368 
          10^(6.95087 - 1342.31/($CellContext`T + 219.187)); $CellContext`xB$[
          
           Pattern[$CellContext`T$, 
            Blank[]]] := Which[
           $CellContext`VLE$[$CellContext`T$], 
           ReplaceAll[$CellContext`x, 
            Quiet[
             Part[
              
              Solve[$CellContext`Tx$[$CellContext`x] == $CellContext`T$, \
$CellContext`x], 
              1]]], $CellContext`Tx$[$CellContext`z$$] > $CellContext`T$, \
$CellContext`z$$, $CellContext`Ty$[$CellContext`z$$] < $CellContext`T$, 
           0]; $CellContext`yB$[
           Pattern[$CellContext`T$, 
            Blank[]]] := Which[
           $CellContext`VLE$[$CellContext`T$], 
           ReplaceAll[$CellContext`x, 
            Quiet[
             Part[
              
              Solve[$CellContext`Ty$[$CellContext`x] == $CellContext`T$, \
$CellContext`x], -1]]], $CellContext`Tx$[$CellContext`z$$] > $CellContext`T$, 
           0, $CellContext`Ty$[$CellContext`z$$] < $CellContext`T$, \
$CellContext`z$$]; $CellContext`fB$[
           Pattern[$CellContext`T$, 
            Blank[]]] := 
         Piecewise[{{$CellContext`PsatB$[$CellContext`T$] $CellContext`z$$, \
$CellContext`T$ <= $CellContext`Tx$[$CellContext`z$$]}, \
{$CellContext`yB$[$CellContext`T$] $CellContext`P$, 
             $CellContext`VLE$[$CellContext`T$]}, {$CellContext`z$$ \
$CellContext`P$, $CellContext`T$ >= $CellContext`Ty$[$CellContext`z$$]}}]; \
$CellContext`fT$[
           Pattern[$CellContext`T$, 
            Blank[]]] := 
         Piecewise[{{$CellContext`PsatT$[$CellContext`T$] (
              1 - $CellContext`z$$), $CellContext`T$ <= \
$CellContext`Tx$[$CellContext`z$$]}, {$CellContext`P$ (
              1 - $CellContext`yB$[$CellContext`T$]), 
             $CellContext`VLE$[$CellContext`T$]}, {$CellContext`P$ (
              1 - $CellContext`z$$), $CellContext`T$ >= \
$CellContext`Ty$[$CellContext`z$$]}}]; $CellContext`fBfunc$ = Quiet[
           Interpolation[
            Map[{#, 
              $CellContext`fB$[#]}& , 
             Range[75, 115]], InterpolationOrder -> 1]]; $CellContext`fTfunc$ = 
         Quiet[
           Interpolation[
            Map[{#, 
              $CellContext`fT$[#]}& , 
             Range[75, 115]], InterpolationOrder -> 
            1]]; $CellContext`xB0$ = $CellContext`xB$[$CellContext`temp$$]; \
$CellContext`yB0$ = $CellContext`yB$[$CellContext`temp$$]; $CellContext`fB0$ = \
$CellContext`fB$[$CellContext`temp$$]; $CellContext`fT0$ = \
$CellContext`fT$[$CellContext`temp$$]; $CellContext`TxyStuff$ = {
           If[
            $CellContext`VLE$[$CellContext`temp$$], {Thick, Dashed, Blue, 
             
             Line[{{$CellContext`z$$, $CellContext`temp$$}, \
{$CellContext`yB0$, $CellContext`temp$$}}], 
             RGBColor[0, 0.6, 0], 
             
             Line[{{$CellContext`z$$, $CellContext`temp$$}, \
{$CellContext`xB0$, $CellContext`temp$$}}], 
             Thickness[0.007], Dotted, Blue, 
             
             Line[{{$CellContext`xB0$, 
                75}, {$CellContext`xB0$, $CellContext`temp$$}}], 
             RGBColor[0, 0.6, 0], 
             
             Line[{{$CellContext`yB0$, 
                75}, {$CellContext`yB0$, $CellContext`temp$$}}]}, {
             Thickness[0.007], Dotted, 
             
             If[$CellContext`temp$$ < $CellContext`Tx$[$CellContext`z$$], 
              Blue, 
              RGBColor[0, 0.6, 0]], 
             
             Line[{{$CellContext`z$$, 
                75}, {$CellContext`z$$, $CellContext`temp$$}}]}], 
           If[
            $CellContext`VLE$[$CellContext`temp$$], {
             Apply[If[Abs[$CellContext`xB0$ - $CellContext`yB0$] > 0.07149, 
               Text[
                Framed[
                 Style[
                  Subscript[
                   Style[#, Italic], "B"], 17, #3], Background -> White, 
                 FrameStyle -> #3, FrameMargins -> Small], {#2, 78}]]& , {{
               "x", $CellContext`xB0$, Blue}, {"y", $CellContext`yB0$, 
                RGBColor[0, 0.6, 0]}}, {1}]}, 
            Apply[Text[
              Framed[
               Style[
                Subscript[
                 Style[#, Italic], "B"], 17, #3], Background -> White, 
               FrameStyle -> #3, FrameMargins -> Small], {$CellContext`z$$, 
               78}, 
              
              Which[#2 <= 0.0475, {-1, 0}, #2 >= 0.9525, {1, 0}, True, {0, 
               0}]]& , 
             
             If[$CellContext`temp$$ < $CellContext`Tx$[$CellContext`z$$], {
              "x", $CellContext`xB0$, Blue}, {"y", $CellContext`yB0$, 
               RGBColor[0, 0.6, 0]}]]], 
           PointSize[0.017], 
           
           Point[{$CellContext`z$$, $CellContext`temp$$}]}; \
$CellContext`fStuff$ = {
           Text[
            Style[
             Subscript[
              Style["f", Italic], "B"], 17, Background -> 
             White], {$CellContext`temp$$, 
             If[
              
              And[$CellContext`fB0$ >= $CellContext`fT0$, $CellContext`z$$ < 
               0.7], $CellContext`fB0$ + 0.1, $CellContext`fB0$ - 0.1]}, 
            
            Which[$CellContext`temp$$ <= 76, {-1, 0}, $CellContext`temp$$ > 
             114, {1, 0}, True, {0, 0}]], 
           Text[
            Style[
             Subscript[
              Style["f", Italic], "T"], 17, Background -> 
             White], {$CellContext`temp$$, 
             If[
              
              And[$CellContext`fB0$ >= $CellContext`fT0$, $CellContext`z$$ < 
               0.7], $CellContext`fT0$ - 0.1, $CellContext`fT0$ + 0.1]}, 
            
            Which[$CellContext`temp$$ <= 76, {-1, 0}, $CellContext`temp$$ > 
             114, {1, 0}, True, {0, 0}]], 
           PointSize[0.017], 
           Point[{$CellContext`temp$$, $CellContext`fB0$}], 
           
           Point[{$CellContext`temp$$, $CellContext`fT0$}]}; \
$CellContext`opt1$ = 
         Sequence[
          Axes -> False, Frame -> True, LabelStyle -> {17, Black}, 
           ImageSize -> {600, 410}, ImagePadding -> {{60, 15}, {50, 10}}, 
           PlotLabel -> Style[
             Row[{
               Style["P", Italic], " = ", $CellContext`P$, " bar", 
               Spacer[50], 
               Subscript[
                Style["f", Italic], "B"], " = ", 
               Subscript[
                Style[
                 
                 If[$CellContext`temp$$ < $CellContext`Tx$[$CellContext`z$$], 
                  "x", "y"], Italic], "B"], 
               Superscript[
                Style[" P", Italic], 
                
                If[$CellContext`temp$$ < $CellContext`Tx$[$CellContext`z$$], 
                 "sat", ""]], " = ", 
               NumberForm[$CellContext`fB0$, {2, 2}], " bar", 
               Spacer[50], 
               Subscript[
                Style["f", Italic], "T"], " = ", 
               Subscript[
                Style[
                 
                 If[$CellContext`temp$$ < $CellContext`Tx$[$CellContext`z$$], 
                  "x", "y"], Italic], "T"], 
               Superscript[
                Style[" P", Italic], 
                
                If[$CellContext`temp$$ < $CellContext`Tx$[$CellContext`z$$], 
                 "sat", ""]], " = ", 
               NumberForm[$CellContext`fT0$, {2, 2}], " bar"}, ImageMargins -> 
              1], 17]]; $CellContext`TxyPlotOnly$ = Plot[{
            $CellContext`Tx$[$CellContext`x], 
            $CellContext`Ty$[$CellContext`x]}, {$CellContext`x, 0, 1}, 
           PlotStyle -> {{Thick, Blue}, {Thick, 
              RGBColor[0, 0.6, 0]}}, PlotRange -> {{0, 1}, {75, 121}}, 
           FrameLabel -> {
            "mole fraction benzene", "temperature (\[Degree]C)"}, 
           Evaluate[$CellContext`opt1$], Epilog -> {
             Apply[Text[
               Style[#, 18, 
                GrayLevel[0.4]], 
               Scaled[#2]]& , {{"liquid", {0.15, 0.2}}, {
               "vapor", {0.85, 0.8}}}, {1}], 
             Text[
              Style[
               Row[{
                 Subscript[
                  Style["x", Italic], "B"], " = ", 
                 NumberForm[$CellContext`xB0$, {2, 2}], 
                 Spacer[15], 
                 Subscript[
                  Style["y", Italic], "B"], " = ", 
                 NumberForm[$CellContext`yB0$, {2, 2}]}], 17], {
              0.5, 118}], $CellContext`TxyStuff$}]; $CellContext`fPlotOnly$ = 
         Plot[{
            $CellContext`fBfunc$[$CellContext`T], 
            $CellContext`fTfunc$[$CellContext`T]}, {$CellContext`T, 75, 115}, 
           PlotStyle -> {{Thick, Purple}, {Thick, Dashed, Purple}}, 
           PlotRange -> {{75, 115}, {-0.05, 1.05}}, 
           FrameLabel -> {"temperature (\[Degree]C)", "fugacity (bar)"}, 
           Evaluate[$CellContext`opt1$], 
           Epilog -> {$CellContext`fStuff$}]; $CellContext`opt2$ = 
         Sequence[
          Axes -> False, ImagePadding -> {{60, 15}, {40, 10}}, AspectRatio -> 
           Full, ImageSize -> {600, 410}]; $CellContext`TxyPlotBoth$ = Show[
           Graphics[{
             Line[{{0, 115}, {0, 75}, {1, 75}, {1, 115}}], 
             Map[Line[{{#, 75}, {#, 76}}]& , 
              Range[0.1, 0.9, 0.1]], 
             Map[Text[
               Style[
                NumberForm[#, {2, 1}], 17], {#, 72}]& , 
              Range[0, 1, 0.2]], 
             Map[{
               Line[{{0, #}, {0.01, #}}], 
               Line[{{1, #}, {0.99, #}}]}& , 
              Range[80, 110, 5]], 
             Map[Text[
               Style[#, 17], {0, #}, {1.25, 0}]& , 
              Range[80, 110, 10]], 
             Text[
              Style["mole fraction benzene", 17], {0.5, 68}], 
             Text[
              Style["temperature (\[Degree]C)", 17], {-0.085, (75 + 115)/2}, {
              0, 0}, {0, 1}], Null}], 
           Plot[{
             $CellContext`Tx$[$CellContext`x], 
             $CellContext`Ty$[$CellContext`x]}, {$CellContext`x, 0, 1}, 
            PlotStyle -> {{Thick, Blue}, {Thick, 
               RGBColor[0, 0.6, 0]}}], Epilog -> {
             Apply[Text[
               Style[#, 18, 
                GrayLevel[0.4]], #2]& , {{"liquid", {0.1, 80}}, {
               "vapor", {0.9, 105}}}, {1}], $CellContext`TxyStuff$}, 
           PlotRange -> {{0, 1}, {75, 155}}, 
           Evaluate[$CellContext`opt2$]]; $CellContext`fPlotBoth$ = Show[
           Graphics[{Purple, {
              EdgeForm[Purple], 
              FaceForm[None], 
              Rectangle[{75, 0}, {115, 1}]}, 
             Map[{
               Line[{{#, 0}, {#, 0.03}}], 
               Line[{{#, 1}, {#, 0.97}}]}& , 
              Range[80, 110, 5]], 
             Map[Text[
               Style[#, 17], {#, -0.06}]& , 
              Range[80, 110, 10]], 
             Map[{
               Line[{{75, #}, {75.4, #}}], 
               Line[{{115, #}, {114.6, #}}]}& , 
              Range[0.1, 0.9, 0.1]], 
             Map[Text[
               Style[
                NumberForm[#, {2, 1}], 17], {75, #}, {1.25, 0}]& , 
              Range[0.2, 1, 0.2]], 
             Text[
              Style["temperature (\[Degree]C)", 17], {(75 + 115)/2, -0.15}], 
             Text[
              Style["fugacity (bar)", 17], {71.5, 0.5}, {0, 0}, {0, 1}]}], 
           Plot[{
             $CellContext`fBfunc$[$CellContext`T], 
             $CellContext`fTfunc$[$CellContext`T]}, {$CellContext`T, 75, 115},
             PlotStyle -> {{Thick, Purple}, {Thick, Dashed, Purple}}], 
           Epilog -> {$CellContext`fStuff$}, 
           PlotRange -> {{75, 115}, {-1, 1}}, 
           Evaluate[$CellContext`opt2$]]; 
        Switch[$CellContext`fob$$, 1, $CellContext`TxyPlotOnly$, 
          2, $CellContext`fPlotOnly$, 3, 
          Overlay[{$CellContext`TxyPlotBoth$, $CellContext`fPlotBoth$}]]], 
      "Specifications" :> {{{$CellContext`fob$$, 1, ""}, {
         1 -> Style["T\[Hyphen]x\[Hyphen]y", Italic], 2 -> 
          Row[{" fugacity versus ", 
             Style["T ", Italic]}], 3 -> " both "}, ControlType -> Setter, 
         ControlPlacement -> 
         1}, {{$CellContext`z$$, 0.6, "overall mole fraction benzene"}, 0, 1, 
         0.01, Appearance -> "Labeled", ImageSize -> Small, ControlPlacement -> 
         2}, {{$CellContext`temp$$, 92, "temperature (\[Degree]C)"}, 75, 115, 
         0.5, Appearance -> "Labeled", ImageSize -> Small, ControlPlacement -> 
         3}, 
        Grid[{{
           Manipulate`Place[1]}, {
           Manipulate`Place[2], 
           Manipulate`Place[3]}}, Alignment -> Left]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{
      643.0999999999999, {253.90426330566407`, 259.6361968994141}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 TaggingRules->{},
 CellID->64237867,ExpressionUUID->"305e3528-4ff7-4b71-ba42-51b4608f2711"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Snapshots",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SnapshotGroup", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "To create snapshots, click 'Add Snapshot' in the toolbar at least \
three times, and adjust the controls of each copy to show a range of \
interesting settings. Optional captions for the screenshots may be included \
in the Details section.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSnapshotGroup"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "279cff6b-7606-4a88-a670-4b0ca19f68fa"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SnapshotGroup"},
 DefaultNewCellStyle->"Text",
 CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
 CellID->98938448,ExpressionUUID->"5f1f1995-7f11-4483-b01f-c9a3f2a1c9cf"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
aA0cOPDhS2RtFChQ4GGDw4cPm5lICEOxy41IKAYAAACcWS0UaykpKdKBv+22
2wIXb32Tz1CclJQky9WqVSvfgkkQEIqN9u/fL2ujfv36PoxLKAYAAACsz7Kh
+JdffpEOfP/+/c2PsmTJkuuvv/7111/XQ6ZMmSJDBg0a5HnEqVOnSrE1a9YY
B3bp0qVu3boJCQkOhfMTil988cXq1avLchUtWrRWrVrt2rWTgUuXLpX/P/30
U10sOTlZhvTr18+YR958883GjRsXLly4du3aUuFXX31VyuzYsUMVkHr27t37
uuuuK1SokFRbFllqaJz1zp07ZWXKWzLrhg0bjh492viWTEomKP+PHDlSJqJr
+MADD8hAmZ38/8knnxgn+Mwzz8jAv//+22EZVeHPPvvMOLBv374ycPPmzXqO
AwYMkCFXXHFFp06dvv32W11SIpsMf+ONN4YOHVqtWrUCBQqo4RJOu3fvfvXV
V0vFbrnllvHjx+tRzKzA//znP7LUMm7lypXvu+++Xbt2ud5CTubMmSNr48kn
nzRZ3iifofj3339/5JFHypYtW6ZMmR49eqxYscJYRja9bALZoMWLF2/RosU7
77yjd0iXG1FPdvHixZ07d5ZpVqhQ4f7775cPpslaEYoBAAAQliwbikeMGCEd
+BkzZpgf5fz581WqVClRooSkA3m5atUqiVQSCqQP73nEefPmybwmTpyoh/zw
ww8ypGfPns6F8xOKP/roo/bt28uUr7zySgmDEmpk4I8//ihDJMvrYomJiTLk
nnvu0UMGDx4sQ4oVK9a6dWsJxfJ/1apV5e+GDRsyci8gVVm7Tp06Mn1JmvK/
jkLi8OHDsh5k4LXXXtuqVSvJSvK/BC71ruRQeSmJSf6fMGFC27Zt5aVkMamh
JFMZKBEyOjr6tttu0xNMS0uT9SwR1XklqMJNmjTRQySiFilSRGatXh49elQt
gtT27rvvlrdiYmJkE6h316xZo+YuE7n++uvvvPNONTsJszJclq5Xr14VK1aU
/yUGqlHyXIFjx46VlzIFWUaZoExZ1n9KSoqZTTZs2DAZVzK1mcIO8hmKZRMX
LlxYAq/adqVKlTJ+B1KjRg0ZKNtdttfll18u/w8aNEi963Ij6slWztWmTRu1
G9x0000m92RCMQAAAMKSZUNxu3btpMcuCcv8KGL8+PEylmTPgwcPSiIoV66c
/JPnWDt37pSxnn/+efUyOztbUpuENeefiXPyffq0jKvCnR6SZ6aTdC8vJQnu
379fDXn33XfVHZ9UKF6+fLlEm/79+6t3ZWuWKVOmUKFC8o8aoi6M1QUkllar
Vk2y4datWzP+HYoz3Jx5e8cdd6jNoV7Onj1bXr744osul1EFT33R9MyZM6Xw
8OHD1ctHH31UXr722mvq5bp16yRfS6xTP22rUCyV/+mnn/QEv/vuOxmof/nd
s2dPo0aNdOrPcwXWr18/NjZW9gT18o033pDVtWDBApeVd9CqVSuZlPMP4mbk
MxQbU/DIkSONG6Vnz57ycsiQIeql7FTqWxF9BzAPp083adIkLS1NjaV+UDZ5
QjWhGAAAAGHJsqG4dOnSEpQuXrzoMFx65of/TWqu35V5XXnllVWrVq1Xr16x
YsUky5gZ8fz583FxcR07dlQvJ02apEKcy4oFPxSPGTNGXhpPDxZ16tTRodjZ
I488YoxyEoElYRlPqJa3pk+fHh8fn2EuFE+cOFEGvv/+++qlCmXu5q4Kjx07
Vr3s2rWrvFQBXFx77bXly5c3lpe0KwXWrl2bcSkUt23b1lhA/ZTftGlTl3cn
y3MF3nrrrfJy2rRpPmwydVc037Z1PkOxXtsZuY8Jlr26ZMmS6qVs0DJlykhE
1QXU9wavvPKKeukhFH/zzTd6iFrzM2fONFMrQjEAAADCkjVDsbq7UYsWLZzf
euihhxyejyNhx1jg7bffloGxsbG//PKL+RFr5ZJ/pLdfsWJFSW2ZmZkWCcW9
evWSlytXrjRORy2OjqXbtm17+eWXW7Vqdcstt6if/4R6Ik9CQoL8f8cdd7ir
kplQLNUuUqSIOilaMpGkMw/3npLCRYsW1Wc+Fy9evHHjxsZFEzcaqCESpTMu
heJnn33WOMHk5GSZXVTuc6waNmw4bNgw2ZfMr0DZ0NHR0TKkXLlyktBnzJih
f0P3bMuWLZ5XnWf5DMWLFy82DuzQoYMMlN3v8OHDzrXas2ePcb/yEIqNv3pP
mDBBhnzxxRdmakUoBgAAQFiyZij+9ttvpa8uKc/5rXHjxg35N+NJzhcuXOjU
qZOMK6n2/Pnz5ke87777ChYsmJ2drTL15MmT3dUt+KFYXVA8f/5843TURaMq
FEtelpSqTrGWKaufcXUoVt8wtGzZ0l2VzIRi0a1bN4mWe/fu/f7776XABx98
4GExpbA6Y3nWrFlSWN8XS2U3cb+B5OI2bdrIZDPchGKRkpLy+eefS61KlCih
pvDxxx+bXIFi7dq1Ms2aNWuqca+//np9NrUHU6ZMMZ6l7K18hmKHr0HUD+4S
aWUTyD+yxozvqq8+7rrrLvXS5N2nCcUAAACANUOxxBAVA02W1wYNGiQj3nzz
zfJ36tSp5kd85ZVXZJR169ZdfvnlN910k4RrdyX9HorVfbb79Omjh8iKMma6
GTNmOBSQWKRSsArFTz75pENK7dKliw7FQsJyhQoVjNWQjCkTkXSTYToUqyz8
0UcfPfLII3FxcZ5DpWy7qNxTvnv06FGwYEHjg32vvPLK6tWruxvRXSjWZF+V
dCyJW9aAxLQMEyvQSEKlJMcow326POjfv7/D+cZeyWcolsU0DqxTp06RIkXU
IpcvX/6qq64yvrtw4UIZZfDgweoloRgAAAAwyZqhuFmzZtJXT0xMNJ9qxccf
fxyVe8to6bqXKFGidu3azpcku/PVV1/JuPXq1ZO/y5Yt81DS76FYclNU7m2E
9ZCXX37ZmOkkfkqkjcq9sdXq1avnzJkjsV394qlCsTqx9rffflPlpYYqMutQ
3LFjR2NqlnTTtGlT/VukQyhWvzlec801DjWXtVquXLkmTZqUKlVKPUzKA1X4
zjvvvPzyyzt37mx8S/3GbbyO9e2335ZFULV1GYolHnbr1s14OvF1111XuHDh
1NTUPFegrHAZd9CgQSpOismTJ0cZLr/1oFGjRlGG24t5K5+hWJZIKq+GqJuV
6RuAq3uY6+deyaLJqjauVZcbkVAMAAAAOLNgKM7Ozi5atGjFihVN5lll/vz5
MTExkhpkjvLyueee8+q3ZkmXKmZ26tTJc8kdO3b4NxQL/UAlSWoPPPBAoUKF
HH7oXLVqVbFixaIukUiofgtWofijjz6Kyn2Cj6RmSX9XXnmlmoIOxVu3bi1b
tmxcXJzk02HDhjVs2FDevf3229W7DqE4I/fuUjJEkq/Ds4kHDBigKjB9+vQ8
l1QXnjVrlnG41FmmLzWUrDpy5Eh1m/HatWsb7z7tEIrVE7LKlCnz/PPPjx8/
XkXC+++/3+QKVMvbpk0bWVEjRoyQucuusm7dOs/1lwBYpEgRh3uCeSWfofjy
yy+vWbOmbNDu3bvLJ6JgwYJLly5VBWSTyVLIEFkJQ4cObdCggdqpjLfect6I
hGIAAADAWdBC8cGDB02G4u3bt0tHXeKbyTwrNm/eLPmlUqVKEjnVkEOHDsXG
xjZv3tzkFCThykwLFCiwZ88ezyUlFCclJfkcimVc5zN7pf5169ZVEbJcuXLT
pk2Tfzp27Ggsk5KSMm/ePEmRU6dOTUtLU3ffUgFH0ookUFkDUbm3ourTp88T
TzwR9e9bKq1cubJFixaqTPHixSVnSU303B1OP545c6aEQRl46623GuuwevVq
NQv1E61nKt5KNFMnaRstWbLkzjvvLFy4sJqaJLu9e/eqt/78888ow9OjtC+/
/FK2r1pFkhZlAY118LwC9+3bJ/9LhJSB0dHREsAXLlyYZ/0lNbs7B9skn0Ox
bAuZ9XfffafSblTufclmzJhhLLNs2bK77rpLbdAKFSrI/uDw5GXnjagmK+tK
l/n8889liKxbM7UiFAMAACAsBS0US0rdsmWL+ZwbZJ9++qmkg+eeey7PkpLZ
k5OTfQ7FHhw+fHjXrl36LF9NBr7xxhuShfUQybMlS5YsVqyYMW9KYNm2bZvU
zcMsZEPv3LnTZM0ldTrcpVldKfzYY4+ZGT1PEu2lws6R2YOEhAQPJzO7W4GK
rB+17byuqK98DsVGB3O5e1c2kOezu503om9knyEUAwAAICxFeCi+ePHikSNH
fvrppyJFilStWlV6/nmOIqEyQKHYHdk66prip59+eubMmaNHj77tttvkZZcu
XYJTgYzcH1vnzZtXvXr1mJgY40+N8MAvodgiCMUAAAAIV8EJxZmZmRKKt23b
5u7hv6GyY8cOdXpq6dKl165dm2f58+fPx8fHSyiWdBC0UCyWL19eo0aNKIPu
3bubOYfZX9QFwtHR0WZu2gwl/EJxenq6ai4IxQAAAAgbQQvFhw8f3rp16759
+4IQdc1LSkr6/PPPZ86cKTnXTPkjR46EJBRn5J79u2nTpu+++27x4sX6psRB
s379+vnz58uyB3m+tnYoV1Z4heK0tDT5SygGAABA2AhaKJZZSCj2/LQj65P6
7927NzU1NfihGDaVFRah+GSu48ePp6SknMkVoOYCAAAACLLghOLTp0+np6fH
x8f/8ssv2dnZoY62PpKa//rrrwkJCRINJCAQimFGlv1DsfqZmFAMAACAsBSE
UJx1KRfLXDZu3Lh9+/ZQp1sf7dixY9u2bfl5HhMiUFa4hGLZ7VNTU8+fPx/Q
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
Ec+/oViSVOnSpQsWLPjAAw8MGzZMXYkmh37jxI8ePVqgQIGo3AuUHEbfunVr
qVKlJHp079591KhR7du3l2KSMY13n3Y4XqveRdWqVV9++eXnnnuuXLly6tE8
QQjFWZfurVS7du0hQ4Y88sgjl112mcxdX2Xs/Egm9d1+nTp1Xnzxxeeff965
M+DAZCiWA5wsuAzv1q3bW2+9JXlNrQQdiuPj42Ve0q2VIdKTUQ8NueOOO/QU
JC9H5V7GIlNWJ0k6hOI8t6xvoVha+Fq1asna69mzZ9GiRWX6K1euVAU87wx5
znHp0qXR0dHSMZNu1SgD/Q2G522RZyjOs3rwF/UryYkTJw4fPiw9f9mC5ruC
UlhGkRFl9Ej7fcSPfbasS+lJPi/SwshHTz5cN9xwg055EpbVY9qMT+u+7777
ZMgtt9zy7rvvyuhVqlSJMtzB3jrkgywVk4+wvpWr58bBt1AsRwc55Mnid+3a
VY6A0jQZr632do5ZJo59zq26UA9Uqlu37quvvirHJjWK51CcZ/WcDRo0KMpw
LzLPVqxYIdWQPUpa1xEjRsgqUk/ok6o6PMOrSZMmshqt85zrYKIZtBo/NrBb
tmyRNiE2NrZfv34ffvihNCbycZD9Xz+ZJTExUd2lQfT8N4erWgDkh39DsVi1
atXdd99dpEgRdTh+9NFHHZ5InnXpEP/+++87j758+fK77rqrcOHCUiAmJkYi
mH4MxN9//x1leK6Qcvr0aTn+qtlJ+b59+6qfMHR/Q90iVbcbDi8dqIeMGH/I
iPr3LYi/++47h59cJdCp+wSq63n1YziyLl3M26NHD4faVqtWTTVuV111lbv7
7SuyXYw9FncrISu3MyPpUk1W6iPViDLcfTor99v+li1bqhVVvHhxaUuNT8GQ
tlc6SOqBm+o0P1lFDl9Uet6yzqtO3TjC+KhKI7UhfvjhB5Wv1ZckDidbetgZ
8pyjOrnd2YEDB1Rhz9vC5XqWmhjvHuO5evAj2VjSE5Y9VtZwfHx8UlKSma6g
FJPCMoqMKKNH2o06/RuKZQWqkKvUqFHD4QeLhg0bStCThkgPkR54//79pXen
RpHsafxl2Tq++eabChUqROX+GKqGeG4cvD1MqOPdggULJFRG5d6RW9bVzz//
bKyDt3PMMnHsc27Vs3Ib9nr16qm5lC9ffubMmVGG+0i7O754e+RSPy6PHj3a
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
CxZIZpe117x5cz28V69eXi0jrVYYIxTD1l566SXdsnk++L755pu65AMPPBC0
GrqTnJx8//33R/0bHcsI98EHH+idQbqUoa5O+LBpQ/HNN9/oyrzwwgvGt44e
PVqnTh31VpkyZc6ePeuXOb777rt6jk8++aTLMrRdcEbb5Xd2bLX83mRdvHhR
/+5cvHhxydcOBYxfHTRo0EAPP3PmjDGGT5gwwTiWhPennnpKv7tq1Srzy0ir
FcYIxbC1Fi1aqNapcOHC//zzj4eS8q60qKqwtMxBq6FL06dPd3l1DB3LCCf9
GbUpr7/++lDXJazYtKG46aabVE1q1KjhfMJhfHy8voRTmpT8z27FihWxsbFq
gk2aNDl37pxzGdouuETb5Xd2bLX83mRt2bJFNzJjx451Weaxxx5TBQoUKKBb
rfnz5+sRu3Xr5jyWpOYqVaqoAh07djS/jLRaYYxQDPu6ePHi5Zdfrlqnxo0b
51leyqjC5cuXD0L13Pn444+NncnKlSs3a9bMvx3LgwcPfvvttzNnzty1a5fJ
K4yk2JEjR5YsWTJx4sQvvvhi3rx5hw4dclf4/PnzcujRd6iQEadMmTJ37twD
Bw74UH9Il+ZcrqpVq6pN2atXLzXE22uvrEPtJMLDHihvnbskcDWxaUORmpqq
W4kxY8a4LNOmTRtVoGHDhvmc3cmTJ/U1oSVKlEhMTHQuQ9sFB2HWdtFq5Ucg
mqzx48frabq7X/ScOXN0mQ0bNqiBo0eP1gMTEhJcjigpW7d4nr92MKLVCmOE
YtiXtD+60Rs4cGCe5fXlcnfeeWcQqufOqFGjdLU7d+58/Pjx4cOH+6tj+dtv
v1WqVMnYcS1ZsuSTTz555swZd6OvWbNGVojx8kBN6uPyAiU9R+k5d+3aVV/U
I/906dLFh0WIcE2bNnVe+Ur79u1DXTtfZGZm6r3i+++/d1dsyJAhes8J3PHd
pg3FTz/9pKu9efNml2Xee+89vQLl6Jyf2cma0bMbN26cyzK0XXAQTm0XrVY+
BaLJmjp1qnoAU40aNdyVkUSp56sfTfXQQw+pIR7uf7548WI9ovnkQqsVxgjF
sK8ZM2boxuSrr77yXNh4G5Dnn38+ODV0SXUsGzdurB9y56+O5XXXXef8RAyl
Xr16e/bscRgxOzv7iSee0A2sO88995zDiHou3bp1cyhs5jttGMlW0I/1dCYd
sFBX0EdlypRRi/Duu++6LLB//36963p7qxOv2LShePXVV1U14uLi3P3otnDh
Ql1bOZr7PK8tW7boE6fr169/4cIFl8Vou2AUfm0XrVZ+BLPJMnrhhRfUBOXT
rYN2kyZN1MBmzZq5G3H9+vW6Ml9++aXJ2dFqhTFCMexrwIABumXYvXu3h5Ky
6zZo0EAXnjNnTtAq6Wz16tVLliwxDvFXx1Jr1KjR4MGDH3744XLlyumBlSpV
kk+occTp06frd6XVbd++vRxcXnvttUcffdT4cA3pLTt8H+7uQCAmTpzowyJE
soyMjE6dOt177736WYqyQe+9ZOnSpaGuoI9uv/12tTiPP/64ywL6+F6kSJEj
R44EriY2bSj69OmjqlGtWjV3ZXbu3KlrO2vWLJ/npc+Clo+2h54qbReMwq/t
otXKj2A2WVpycnKJEiXUBOvWrauHd+3aVQ308BPzb7/9pivzwQcfmJwjrVYY
IxTDvho2bKiahZIlS3q4jmP//v3SKuo25MYbb8zzWqe0tLQfveTQ+nnFjx1L
+X/y5Mn6rePHj+ubdYiPPvrIOOItt9yihpcqVWrbtm3Gt06fPm28N+NLL71k
fNfYRBctWvStt976888/J02a9OCDD544ccKHRYDo0KGDPsIGYXaB3sn1I3Fd
flG/Zs0avQtJr8B/i+VC4BqKnECuRn3noiZNmrgrk56erissH0Azk3VmPIew
R48eXo1L24Wc4LZdAW24aLXysw6D1mQZde/eXU/Q+Pu+bCA1UDKmzNTluPLx
1+Oaf0oUrVYYIxTDps6dO1eoUCHVStxxxx1nDc6cOZOSkrJ79+5Fixa9+OKL
xufIR0dH60tOPDBeomLS1q1bfV4WP3Ysnb82PH/+/NVXX63evfLKK/XJRatX
r9ZjTZs2zXmysib1qnN4yoOxif7kk098qDOc6S+ZBwwYEITZBXonlx1DjSV7
kfO7+ty2ChUq5PNiWM8C2lDkBHI1tm7dWpVv2bKluzJyzNWTdXchcJ50L06W
evv27V6NS9uFnOC2XQFtuGi18rMOg9ZkacOGDdNTu/XWW41fCHz77bf6rb59
+zqPKwHWeCP9Z555xuRMabXCGKEYNiW7rretuhwy3F0o5MCmoVhGd3kHxc8/
/1zX8/fff1cDN2zY8NJLL0nb27x5c3c3hdDnknXo0ME4XDfR0vibvNciPEtI
SNDbaObMmUGYY6B38mXLlukRHb7Nnjt3rn7L+DV7IAS0ocgJ5GrUWfXuu+92
V0Y+fXqy77zzjsk6GxnXjw/3bKHtQpDbroA2XLRa+VmHwWmyNOOjsQsVKuTw
hd7JkyfLly+vV86YMWOMn/e0tDR9H2zF3WPZndFqhTFCMWzqs88+86pJL1u2
7M8//2xy4tKOXe2l/fv3+7ws/upYvvHGGy4LZGZm6vVg8sl6Bw8enDJlyrXX
XqvGatu2rfFd3UQ7DIfPjD2uXbt2BWGOgd7Jk5OT9RKtW7dODz937pzer268
8UZ393Tyl4A2FDmBXI36Ol8Pd/HNzs7WNXf3DBTPjCcfbty40dvRabsQ5LYr
oA0XrVZ+1mFwmqyc3GRt/I1YPtQun3r8zTffGNdS48aN33zzzcmTJw8dOtR4
Da/ywgsvmJw7rVYYIxTDpnr37u35MFGsWLFatWq1bt26b9++8+fP1494syB/
dSw93KNSnyY0ePBg53cPHDjw3XffjRo1qlevXg0bNixZsqTDynTXRPfv39+H
CsPZiy++qFbp5Zdf7u6r4E2bNg12MmTIENlwv/7668mTJ4Nc5zzp2+8Yfz/S
j4YUDrfiCcQC2rehkA+dqqGHn12MvS8fLtCT0QsXLqxGb9q0qQ+VpO1Cnm3X
ggULnD/XLq1Zsyb49XfgVasVoEWzaasVhCYrJ/c04x49euiJyCfa5dnIirGk
M1l71113nfr/rbfeMlkBWq0wRiiGTdWpU0e1EpUqVTrk5Pjx46GuoBf81bFc
vHixuzI33HCDKtOpUyfjcBnFeF8Id9w10R9//LEPFYazO++8U61S2Rzuysih
38M2kgPrsmXLglnnPDVv3lzVTd+UJj09XfcWOnbs6FA+EAto34ZC3z21QYMG
7socO3ZMr5/Zs2d7O4tZs2bp0SdMmOBDJWm7kGfbJT35PDeTYoVb6XrVagVo
0WzaagWhyZJtcccdd+gpFCpUKM+7bcuad35wWHR09NChQy9evKi/Ffz0009N
1oFWK4wRimFHmZmZupW47777Ql2d/PJXx9LDR69u3bqqzCOPPKIH/uc//3HZ
IMsEGzZs+OKLL+Z5Mo9f7h6JCxcu6IdKvPzyy+6K6cx48803N8/VtGnTW265
Rd+do0CBAr/88kswa+7Z008/rSrWs2dPNWTIkCFqSFxcnPOZln5fQFs3FM8+
+6yqeYUKFdyVMT6fdOHChd7OQndiZXOkpqb6UEnarghnpu2Snnzzf1N3kSpd
urTD8B9//DHI9XfmVasViEWzb6sV6Cbr4MGDtWvX1qOXKlVq9erVZkY8fPiw
HFwGDhzYqlWrbt26jRgxQj1E2Hi2vPnnQ9FqhTFCMexoxYoVuj15++23Q12d
/PJXx9LDYVf3W/RVMMuWLYuNjdWrsX79+q+88srs2bO3b9+uz8W666671Ltt
2rQxTo0m2r927NihN8T8+fPdFdOZ0fnaz8mTJ6tvvC11zdH48eNVhRs3bpyT
+/QQva+6vEut3xfQ1g3FhAkTVM2jo6Pd3ZhFPrB6AQ8dOuTV9GWa+geUdu3a
+VZJ2q4IZ7LtcnDVVVdJ+c6dOwe0br7xttVykP9Fs2+rFdAma9OmTcanAFer
Vi0+Pj6fFf7999/1BB0eDewBrVYYIxTDjox3HVyyZInfp7948eIKXtq3b5/P
s/NXx9LdqTVpaWl6dX399ddq4BNPPKEHvvfeey5HvP7661UBhycs0ET719Sp
U/W2SExMdFfMQ2YU3bp1i8o9nez06dNmZhqEnXzp0qWqwuXLl9c1jMo9EVqO
JoFewJzANxQ5gVyNy5cv15V3uPhaGzhwoHENe8X4iBCfT1ul7YpwJtsuB/lJ
joFuuLxttfy4aIp9W63ANVmSHMuUKaMn3qhRozzPbMnOzj527JgcSjysw0ce
eURNsGLFiuYrQ6sVxgjFsCP9jPjo6OhAPLvcpo9katasmcsCb775pq6nvqNm
9erV1ZBatWq5HEsOKLJ6VZk777zT+BZNtH8988wzZg7NnjPj0KFDo7zJjEHY
yZOSkvS4uqspPvzwwyAsYE7gG4qcQK5GOZ7qnxsGDRrkXEB6ffp0O4cr18ww
9r19vsERbVeEM9l2OchPcgx0w+Vtq+XHRVPs22oFqMmSlSB7l66JrFuZUZ5j
rVy5Uo/i8vHrJ0+eLFKkiCrQvXt3k5XJodUKa4Ri2NHVl56NXqNGjUBM36ah
WFpU5ysu09PTr7jiClWgXr16+lkS+s4hd9xxh/M05ZPetGlTvXQOd6alifav
W2+91Uw/wUNmzMjIUBdbtWrVyuRMg7OT691M74TXXXfduXPngrCAOYFvKHIC
vBp79uypRilatKjzI1EmTpyopynV8Lbm999/vx791KlT3o6u0HZFOJNtlwMr
h+IcL1stPy6aYutWKxBNlv7iRXTt2lWStZmxpB1Q13eLYcOGeZ7s2rVrTVYm
h1YrrBGKYTspKSm66XjooYcCMYvjx48v9NLZs2d9np2/OpaicOHCxpOF5Kik
72MZ9e+bJepbhsbGxurnyyvyMXe4QaJMxFiAJtqPZM/RW3D06NEeSurM+OGH
H/6c66effpo7d+6YMWOqVKkiwy+77LIVK1aYnG9wdnL95Ert+++/D84CBqGh
yAnwavzzzz/1bweVKlUyXkM3depUfYVazZo1HR6cKrWStFI/10svveRy4lWr
VlWjSzfe58Wn7Ypk5tsuB/lJjkFouLxqtRzkMxTbvdXye5O1fv16/ZmNyr2M
d4lHxt/WW7ZsqRuKX3/9VQ+XWRtvG96hQwev1h6tVhgjFMN2fvnlF910hMcN
6v3YsYzK/fbypptueuaZZzp27KjPZRLt27c3jvXRRx/pt6SV7tWr17hx46Qm
0h9wmGBU7hfmxkMYTbQfrVu3zuUx1JnnJxYJk7fiDKannnrKWMPbb7/dQ2H/
LmB4NBR9+vTRS1G0aFH5FA8YMKBBgwa65ykf3oVON3E9cuSIHsvlT3gXL17U
H3OHlsErtF2RzHzb5cDKN9rK8bLVcpDPRQuDVsu/TZbxAUxmGO/2JgFH/1gc
lXuTxmHDht133336l9yo3NP+nX/R9oxWK4wRimE7I0eO1E2Hz5fCWYq/OpbS
zOrjjoPu3btnZGQYx5ImV9/q0KWaNWuOGTNGvzR+HUoT7UeffvqpPrZ6voIs
z8wox3crPNPESI77unqygHLE8VDYvwsYHg3FuXPn+vXr52GduPwM5hmK5Wiu
C7zwwgs+V4+2K5KZb7scWDwUe9VqOcjnooVBq+XHJis7O9uYas1wuAX6xIkT
3TUsUbmPjtq9e7e3C0irFcYIxbCdBx98ULUPcXFx7m77by+vv/66bhV9GL1Y
sWJq9G3btk2fPl2daKpVrlz5888/dzmirL033nijePHixvLSyNeoUWPs2LHy
cT579qy+E8Vzzz2nR9THKUkxPi4zLtHncVWvXt1zSZ0Z//zzz/OXpKSkSDP+
2Wef6e+ofbi8NHB+/vlnvWsZn9jokn8XMJwaiilTpjh8rqNyHxnj7qfzpKQk
3Vvr2rWrc4GDBw/q6Uij4XPFaLsimfm2y4HFQ7FXrZaDfC5a2LRafmmyjh07
FuUl54t85WjSqFEjh2KXXXbZq6++mp6e7sOi0WqFMUIxEH4SEhJmzZr1ww8/
yDElz8KnT5/esmWLBA1pb9etWyef8SDUED7wfHPmzZs3q3ebN28e/Lq589BD
D6laFS1a9MiRI54L23EBgyk1NXXBggVfffXVokWLJNWGujoBQdsVCSweir1q
tRxYfNGCzDpNVmJi4u+//y41mTt3rhxK/PuFA61W2CAUA4AteM6MokaNGvJu
mTJlglwxd9asWaO//B8xYkSe5W23gAB8YOXk6G2r5cDKiwbAM0IxANhCnplR
PcvD3WMQgywzM1M9RElUqVLFzPfh9lpAAL6xbHL0odVyYNlFA5AnQjEA2ILn
zPjtt9+qdx9//PHg1025cOHClClTli9fLpVp3Lixvmzq559/NjO69RcQQP5Z
Kjnms9VyYKlFA+AVQjEA2ILOjO+88873l8yZM+eLL77o1q1bgQIFonKf9bBq
1apQ1fD48eNRTh588EGTo1t/AQHkn6WSYz5bLQeWWjQAXiEUA4At5PnEIjFm
zJgQ1nDfvn0O9WnatOnp06dNjm79BQSQf5ZKjvlstRxYatEAeIVQDAC2MHPm
TOeQGBsbW7FixQYNGjz++OMhf65lQkJC6dKlVcWKFy8+dOjQU6dOmR/d+gsI
IP9UcuzSpUuoK/L/5LPVcmCpRQPgFUIxAMCPkpKSjhw5cvHixVBXBABModUC
QCgGAAAAAEQsQjEAAAAAIGIRigEAAAAAEYtQDAAAAACIWIRiAAAAAEDEIhQD
AAAAACIWoRgAAAAAELEIxQAAAACAiEUoBgAAAABELEIxAAAAACBiEYoBAAAA
ABGLUAwAAAAAiFiEYgAAAABAxCIUAwAAAAAiFqEYAAAAABCxCMUAAAAAgIhF
KAYAAAAARCxCMQAAAAAgYhGKAQAAAAARi1AMAAAAAIhYhGI4exIAAAAAfBXq
QOMdQjGcWXk3tnLdcqxdPSvXLcfa1bNy3XKsXT0r1y3H2tWzct1yrF09K9ct
x9rVs3LdcqxdPSvXLcfa1bNy3XKsXT0r1y3H8tVzRiiGMyvvxlauW461q2fl
uuVYu3pWrluOtatn5brlWLt6Vq5bjrWrZ+W65Vi7elauW461q2fluuVYu3pW
rluOtatn5brlWL56zgjFIfHEE0/UqVOnQ4cOeZZMT0//9NNPBwwY0LZt2xtu
uKF9+/ZDhgyZNGlSZmam5xEvXrw4a9asfv36tWjR4uabb+7Tp8/kyZN37dpl
pnpW3o2tXLcca1fPynXLsXb1rFy3HGtXz8p1y7F29axctxxrV8/KdcuxdvWs
XLcca1fPynXLsXb1rFy3HGtXz8p1y7F89ZwRioNPsmpUrmuuucZDsfPnz48d
O7ZUqVJRrlSqVGn27Nnuxt2wYYMEYZcjDh48WPKy5xpaeTe2ct1yrF09K9ct
x9rVs3LdcqxdPSvXLcfa1bNy3XKsXT0r1y3H2tWzct1yrF09K9ctx9rVs3Ld
cqxdPSvXLcfy1XNGKA6yZcuWFSlSxEwo7t27t8tUazRixAjnEffu3Vu2bFkP
Yz322GPZ2dkeZm3l3djKdcuxdvWsXLcca1fPynXLsXb1rFy3HGtXz8p1y7F2
9axctxxrV8/KdcuxdvWsXLcca1fPynXLsXb1rFy3HMtXzxmhOJjmzp1brFgx
HU49hOKvv/5aFytUqNDIkSPXrFmTkJCwcuXKvn37RkdHq7diY2Md1rak3Vq1
aulxu3fvvmjRoh07dkyaNElmp4cPHz7cQz1ttxsjDLDXIfjY6xB87HUIPvY6
BJ/t9jpCcXAkJyfff//9Dr/YugvFFy9e1D/1Fi9eXCKtQ4Hvv/9eT6RBgwbG
t7755hv91gsvvGB86+jRo3Xq1FFvlSlT5uzZs+5qa7vdGGGAvQ7Bx16H4GOv
Q/Cx1yH4bLfXEYqDYPr06S4vDXYXirds2aLLjB071mWZxx57TBUoUKDAuXPn
9PCbbrpJDa9Ro4bzOdLx8fExMTGqgNTKXYVttxsjDLDXIfjY6xB87HUIPvY6
BJ/t9jpCcaB9/PHHxiBcuXLlZs2aeQ7F48eP1+WTkpJclpkzZ44us2HDBjUw
NTVVDxwzZozLEdu0aaMKNGzY0F2dbbcbAwAAALAI26UJQnGgjRo1SgfVzp07
Hz9+fPjw4Z5D8dSpU9UDmGrUqOFusvPmzdOT/eOPP9TAn376SQ/cvHmzyxHf
e+89VSA6Olq2pssyttuNAQAAAFiE7dIEoTjQVChu3LjxggUL1JA8Q7EZL7zw
gppITEyMzravvvqqGhgXF+fu/tILFy7UwVm2vssyttuNAQAAAFiE7dIEoTjQ
Vq9evWTJEuOQ/Ifi5OTkEiVKqInUrVtXD+/Tp48aWK1aNXfj7ty5U4fiWbNm
uSxju90YAAAAgEXYLk0QioMv/6G4e/fuOti+++67evgDDzygBjZp0sTduOnp
6XrcSZMmuSxju90YAAAAgEXYLk0QioMvn6F42LBhOtXeeuutxtOkW7durYa3
bNnS3eiyjfTo48aNc1nGdrsxAAAAAIuwXZogFAdffkLxBx98oCNtoUKFtm/f
bny3RYsW6q27777b3RQuXryop/DOO++4LPOkG97WFgAAAEC4cpcabBccCMXB
51soljBr/I04JibG+UHD+mFP7du3dzed7OxsPRF3j22y3W4MAAAAwCJslyYI
xcHnQyg+e/Zsjx49jIl42rRpzsXatm2b5y/FmZmZXFMMAAAAIEBslyYIxcHn
bShOT0+/4447jGdNz5kzx2XJrl27qjINGjRwN7Vjx47pSc2ePdtlGdvtxgAA
AAAswnZpglAcfF6F4oMHD9auXVvH2FKlSq1evdpd4WeffVYVq1Chgrsyf/31
l57awoULXZax3W4MAAAAwCJslyYIxcFnPhRv2rSpXLlyOsNWq1YtPj7eQ/kJ
EyaoktHR0WfOnHFZZvbs2XqChw4dclnGdrsxAAAAAIuwXZogFAefyVC8ffv2
MmXK6ADbqFGj1NRUz1Nevny5Lr906VKXZQYOHKgKlC9f3t10bLcbAwAAALAI
26UJQnHwmQnFJ06cqFixok64nTt3lnWb55SlTIkSJdQogwYNci6QnZ197bXX
qgKdOnVyNx3b7cYAAAAALMJ2aYJQHHxmQvEzzzyjE3HXrl0lzJqceM+ePdVY
RYsW3b9/v8O7EydO1JOdN2+eu4nYbjcGAAAAYBG2SxOE4uDLMxSvX78+JiZG
p9cff/xxiUcnTpzQ4/7555/R0dFqxEqVKhmvQZ46dWpsbKx6q2bNmhcuXHBX
Q9vtxgAAAAAswnZpglAcfHmGYuMDmMyYP3++cfQ+ffrot4oWLdq+ffsBAwY0
aNBAh2WJxu7uO63YbjcGAAAAYBG2SxOE4uDzHIqzs7MLFSqUn1B87ty5fv36
eSg/adIkzzW03W4MAAAAwCJslyYIxcH3+uuvq3Bas2ZN53ePHTvmVSIWv/zy
i/N0pkyZUqVKFYeSjRs39vCYY812uzEAAAAAi7BdmiAUh7fU1NQFCxZ89dVX
ixYtOnjwoMmxbLcbAwAAALAI26UJQjGc2W43BgAAAGARtksThGI4s91uDAAA
AMAibJcmCMVwZrvdGAAs4uLFi7NmzerXr1+LFi1uvvnmPn36TJ48edeuXT5P
cNq0af/Jy9q1a81M6oknnqhTp06HDh18rgzy5K8dYM2aNRO88eeff+Y5TXYA
AEFjuzRBKIYz2+3GAGAFGzZskBzk8o6IgwcPlrjk7QSPHz9u5naLZhptSWqq
sLunASL//LgDeH6KhLNBgwZ5niA7AIBgsl2aIBTDme12YwAIub1795YtW9ZD
bHnssceys7O9muayZcvMBKI8G22ZTpEiRchEAeXfHcC/oZgdAECQ2S5NEIrh
zHa7MQCEloSdWrVq6YTSvXv3RYsW7dixY9KkSZJB9PDhw4d7NdmPPvpIjRgX
F1fDvTfeeMPDRObOnVusWDFdBzJRIPh9Bxg9erSHLS6qV69uDMUzZsxwNyl2
AADBZ7s0QSiGM9vtxgAQWt98840OHS+88ILxraNHj9apU0e9VaZMmbNnz5qf
bK9evdSIt99+uw+1Sk5Ovv/++x1+UiQTBUKAdgAP3n33XT1Hd0dtdgAAoWK7
NEEohjPb7cYAEFo33XSTShw1atRwPkU2Pj4+JiZGFZg+fbr5ydarV0+N9dxz
z3lbJZlRqVKlopyQiQIhQDuAOytWrIiNjVUTbNKkyblz55zLsAMACCHbpQlC
MZzZbjcGYAvnz58/l+uff/5xWUDSxLlLfLgtVaikpqbqxDFmzBiXZdq0aaMK
NGzY0ORkz549GxcXp8b66quvvKrSxx9/bMxBlStXbtasWWgzkd76HrasvKV3
gGDWLZ8CtAO4c/LkyQoVKqiplShRIjEx0bmMBXcAABHFdmmCUAxnttuNAdiC
vuiyZMmSGRkZDu8mJSXprr5YtGhRSCrpg59++klXe/PmzS7LvPfee6pAdHS0
HEnNTHbDhg16st4+02fUqFF63M6dOx8/fnz48OEhzESZmZmy4KoC33//vbti
Q4YM0WvpwIEDwaxhfgRoB3Bn4MCBenbjxo1zWcZqOwCASGO7NEEohjPb7cYA
bGHixIm6oy4ZwfjWP//807x5c/3uiy++GKpK+uDVV19V1Y6Li3N3e+GFCxfq
pZMjr5nJfvnll/rXwIsXL+7fv3/evHlvvfXWu+++u2DBgqSkJA/jqkzUuHFj
KamGhDwTlSlTRlVA6u+ygCxgwYIFVZlevXoFuXr5EaAdwKUtW7boE6fr169/
4cIFl8UsuAMAiCi2SxOEYjiz3W4MwBbOnz9ftWpV1TMvV66cHDL0W4MHD9aR
oWPHju66+tbUp08fVfNq1aq5K7Nz5069gLNmzTIz2f79+6vypUqV6tKli/6l
VWvXrt3Ro0ddjrt69eolS5YYh4Q8E91+++2qAo8//rjLAt26dVMFihQpcuTI
kSBXLz8CtAO4pM+CjomJ8RCuLbgDAIgotksThGI4s91uDMAu9K+fYuLEiWqg
ZAQ9sF69epmZmYGYdVpa2o9eMsZ2Dx544AFV+SZNmrgrk56erpdx0qRJZiar
448HV1xxhYezkY1Cnon0g3dluZzfXbNmjV6o1157LRAVsN0O4Gzx4sV6Ij16
9PBq3JDvAAAiiu3SBKEYzmy3GwOwi3/++Uc/trVWrVoXL17csWOHfohq2bJl
Dx48GKBZz5s3L8+M6WDr1q1mpty6dWtVvmXLlu7KyPFRT9bddaBGsmZKlChh
rIysJZlRnz59mjZtqk8zFkWLFjVz+W3IM9Enn3yit7LzuxIn1bsVKlTI5yW3
7thrB3CpRYsWagrR0dHbt2/3atyQ7wAAIort0gShGM6eNAh1XQCEm6lTp+p0
8O2339asWVP9L0Fv1apVgZtv4DKRjip33323uzIScvVk33nnnTynuXfvXl0+
JiZm/Pjx58+f1+9u27atfv36uoBUIM8JhjwTLVu2TFf4xIkTxrfmzp2r35o8
eXKAKmCvHcCZdNj0FLp06eLt6CHfAQCEtyedhLpG3iEUw5ntdmMANpKdnV29
enXnABK4NKT8/vvvV3tp//79Zqasz3Nu3769uzKy1HpJ3T21x+jAgQNPP/10
69ata9eu/fXXXzsXyMzMrFy5sp5mnt8nhDwTJScn69quW7dODz937ty1116r
ht94442Bu5zcXjuAs+7du+spbNy40dvRQ74DAIgotksThGI4s91uDMBeZsyY
4ZCIhwwZ4lxs06ZNg51IyVGjRv36668nT54Mfs1datu2bZ4/FEqG1Qvr8yWl
DmbPnq2n+cknn3gubIVMVLp0aVWHmTNn6oFjx47VS7F06VJjeXYA4+iFCxdW
ozdt2tSHSlphBwAQOWyXJgjFcGa73RiAvWRnZ1esWFFnhHbt2rn8fXDatGlR
7pUsWXLZsmXBr7yzrl27qio1aNDAXZljx47pmkuY9ct8JRXqaT711FOeC1sh
E+mnbulbaaWnp5cqVUoN7Nixo0N5dgDNeDO6CRMm+FBJK+wAACKH7dIEoRjO
bLcbA7CXH374ISYmJs9Ovs5EN998c/NcTZs2veWWW8qWLauGFyhQ4Jdffgly
5Z09++yzqj4VKlRwV+avv/7Sy7tw4UJ/zfrKK69U02zVqpXnklbIRE8//bSq
Q8+ePdWQIUOGqCFxcXG7du1yKM8OoOncLSsqNTXVh0paYQcAEDlslyYIxXBm
u90YgI3IcUffblqpWrWq8S5Sms5EzldQTp48WZ1N2rZt26DU2hMJ9aqe0dHR
Z86ccVnGeKrzoUOHzE/c5ZrRihcvrqb56KOPep6OFTLR+PHjVR0aN24sL/fv
369voz1gwADn8uwAikyzaNGiatx27dr5Vkkr7AAAIoft0gShGM5stxsDsIvD
hw9XqFAhyol+ZrGRh0wkunXrJm8VKlTo9OnTZma9ePHiCl7at2+fmSkvX75c
L4jDVbHawIEDVYHy5cubmaaExKuvvrpIkSIVK1Z0V+bIkSN6vnne0NgKmUhW
jnElqC0YlXsitHQwnMtH8g7w/7F3H+BRlXnDxkmhJQSQjoCIIqCgglJEl0Vh
bahgQUVhlQWkinSp0lwEpChIEQKEDiHSRXpHWkQ6gVASIAmQGEgDUmbm+U52
vj3v7Jwzk0KSM8/M/bu83st35jmTf8IDcu+ZOcfW/v37nf9OyQ5X2AAAPId0
NUEUQ0u6bQxACklJSc8884z61/vZs2c/++yz1n+vVq1aamqq3XrnTTRw4MAc
NVH+3ZFH+W+fek/hPn36aBeYTCb1Astt2rTJzmsOGDBAHeP48eO6ayZOnKiu
WbdunfMXdIUmunHjhm08qv8+ZcoU3fWevAFsTZo0SR3p4MGDOT3cyhU2AADP
IV1NEMXQkm4bA3B9She8+eab6t/tu3fvLv73MtTa6yc7aSKlr5988slC2fgs
rSr/mkjx6aefWg/x8/PT3sfn559/Vl9TGSM7L7hlyxb1kLfeeku7ICoqSn3v
dI0aNdLS0py/oIs0kXpZrYceesj6LzVr1nQ0vCdvAFsffPCBenhiYmJOD7dy
kQ0AwENIVxNEMbSk28YAXF/Pnj3Vv9g3b97c+lFZ5f9Wq1bN+mDlypXtPo+p
NtGUKVM2/seGDRtCQkImT55sPapkyZJ79uzJ5gDx8fFbckh78tqRw4cPe3l5
WaetUqVKWFiY+lRQUJCPj4/1qdq1a9tdZ1uZqmHDhs//x5AhQ9THlR/FI488
ov7E+vfvr/wXVn32yJEjSgirz65YsSLLCV2kidRb+qrWrFnjaLEnbwBbjz76
qPVwZUtkcx4tF9kAADyEdDVBFENLum0MwMVNnTpVjaDq1avHxcWpT82YMUN9
Sllme5TzO/Io9u/fX+DfikOdO3dWB/Pz82vVqlXv3r0bNWqktpJSRtrLDtt+
LtjujbVKZxUuXFh9Vqlg5Q/nAQMGtGzZ0vZx5SiLxZLleC7SRN26dbP9Ffz7
3//uZLGHbwAr5RdXvRyZ8pq5Hs9FNgAADyFdTRDF0JJuGwNwZbY3YPL39z9x
4oTts8p/ONRLb1WoUEH5r4z6VJZN9PDDD69fv77AvyF9aWlpPXr0cDJtYGCg
9ijnTRQUFKRedlhLqS2ldHRv8azlIk00bdo02/mVv4Q4WcwGUCh/9VIXDBo0
KNfjucgGAOAhpKsJohha0m1jAC7rxo0b6g2YlAgKCQnRrvnhhx/Uv/bPmzdP
fVxtosOHD6f/161bt5T/cs2aNUu9tFEuPqSZfxYsWKC+IVzVtGlTR+c0lZ+P
eiaxbdu22gVKNH3yySe2t3Uu9J+rSzVu3DhH3/jo0aOtx9auXTuX31te2Lhx
o/pdfPbZZ84XswEUERER6ussWrQo14O5yAYA4CGkqwmiGFrSbWMAbsn5xYdP
nDhhfbZZs2YFP5tzsbGxmzdvXrp06datW5WoefAXVP7zeurUqVWrVq1cufLY
sWPOb17sytq3b2/9VfPz81N63/liNgAASEq6miCKoSXdNgbglpw3kaJWrVrK
s+XKlSvgwZA7Bw8eVM+Kjhw5Msv1bAAAkJR0NUEUQ0u6bQzALWXZRNWrV1ee
rVOnTgEPhlxITk623kSp0H9uS2374XFH2AAAICnpaoIohpZ02xiAW3LeRCtW
rLA+26lTp4KfDdlhNpsXLFiwe/du5ReradOm6mdjN27cmJ3D2QAAICnpaoIo
hpZ02xiAW1KbaPz48Wv+a9WqVXPnzv3oo4+styXy8fHZt2+f0ZNCX3x8fCGN
jz/+OJuHswEAQFLS1QRRDC3ptjEAt5TlHXkUkydPNnpMOHTp0iW7X6+XXnrp
7t272TycDQAAkpKuJohiaEm3jQG4pSVLlmgjyMfH5+GHH27UqFGnTp0OHjxo
9Ixw5urVq2XLlrX+wpUoUWLgwIGJiYnZP5wNAACSkq4miGJoSbeNAQAu68aN
G9evX7dYLEYPAgAoINLVBFEMLem2MQAAAAAXIV1NEMXQkm4bAwAAAHAR0tUE
UQwt6bYxAAAAABchXU0QxdCSbhsDAAAAcBHS1QRRDC3ptjEAAAAAFyFdTRDF
0JJuGwMAAABwEdLVBFEMLem2MQAAAAAXIV1NEMXQ6mrD6FkAAAAAuLSuGkZP
lDNEMbSk28YAAAAAXIR0NUEUQ0u6bQwAAADARUhXE0QxtKTbxgAAAABchHQ1
QRRDS7ptDAAAAMBFSFcTRDG0pNvGAAAAAFyEdDVBFENLum0MAAAAwEVIVxNE
MbSk28YAAAAAXIR0NUEUQ0u6bQwAAADARUhXE0QxtKTbxgAAAABchHQ1QRRD
S7ptDAAAAMBFSFcTRDG0pNvGAAAAAFyEdDVBFENLum0MAAAAwEVIVxNEMbSk
28YAAAAAXIR0NUEUQ0u6bQwAAADARUhXE0QxtKTbxgAAAABchHQ1QRRDS7pt
DAAAAMBFSFcTRDG0pNvGAAAAAFyEdDVBFENLum0MAAAAwEVIVxNEMbSk28YA
AAAAXIR0NUEUQ0u6bQwAAADARUhXE0QxtKTbxgAAAABchHQ1QRRDS7ptDAAA
AMBFSFcTRDG0pNvGAAAAAFyEdDVBFENLum0MAAAAwEVIVxNEMbSk28YAAAAA
XIR0NUEUQ0u6bQwAAADARUhXE0QxtKTbxgAAAABchHQ1QRRDq6sNo2cBAAAA
4NK6ahg9Uc4QxdCSbhsDAAAAcBHS1QRRDC3ptjEAAAAAFyFdTRDF0JJuGwMA
AABwEdLVBFEMLem2MQAAAAAXIV1NEMXQkm4bAwAAAHAR0tUEUQwt6bYxAAAA
ABchXU0QxdCSbhsDAAAAcBHS1QRRDC3ptjEAAAAAFyFdTRDF0JJuGwMAAABw
EdLVBFEMLem2MQAAAAAXIV1NEMXQkm4bAwAAAHAR0tUEUQwt6bYxAAAAABch
XU0QxdCSbhsDAAAAcBHS1QRRDC3ptjEAAAAAFyFdTRDF0JJuGwMAAABwEdLV
BFEMLem2MQAAAAAXIV1NEMXQkm4bAwAAAHAR0tUEUQwt6bYxAAAAABchXU0Q
xdCSbhsDAAAAcBHS1QRRDC3ptjEAAAAAFyFdTRDF0JJuGwMAAABwEdLVBFEM
Lem2MQAAAAAXIV1NEMXQkm4bAwAAAHAR0tUEUQwt6bYxAAAAABchXU0QxdCS
bhsDAAAg+2JiYs79V1pamqNlFotFXRYdHW33rNlsvnnz5okTJ7Zs2bJw4cJZ
s2YFBQUFBwcfPnw4MTFR9wUjIyOtr3bnzh3l/01NTQ0LC/v1119//vln5RU2
bdoUHh6enflv3boVGhq6YcOGuXPnzp8/Xxng9OnTCQkJjtZfuXLF+nWTkpKU
sZWvsmrVKuWLrl69WnkwO18ROSJdTRDF0JJuGwMAACD7fvjhh67/dfDgQUfL
zp8/ry77/vvv1ceVrty9e/fXX3/d1YEvv/xy27ZtyjK7F+zXr591gdKkp06d
6tWrl/bY8ePHR0REOBpJyW0ln3W/aLdu3UJCQtLT07VHKfNY12zcuFGJaLsD
58yZk+OfIJySriaIYmhJt40BAACQffv27VOTUAlkR8ts83PHjh3WB00m09y5
cx3lsK0ZM2bYvWDfvn2tTw0cOLBHjx6ODlQaVvcE7pkzZ7766ivnX3TkyJFX
r161O1Ct7/79+2sPWbly5YP9OGFPupogiqFl+6eE0bMAAAAgj927d089edqt
WzfdNx6npaWpBaoEbHJysvXxo0eP2v5dsXfv3kr8Ll68WCnlsWPH2vVmZGSk
7WuqUWx7+OzZs0NCQn788UdlEtsuvn37tu2xygBKStse+/XXXytfetq0aXap
O2jQIKVKbI/VPSWt0kY0ckr7UzV6opwhiqEl3TYGAABAjti+i3jbtm3aBbbx
q3Sr+vj48ePVx+fMmaP0te1RZ8+eVZpUXaDEsu2zdlE8fPjwGzduqM+ePn26
T58+6rPz5s2zPVb5WupTPXv23LNnj/qU2Wxev369bVMHBwfbHmsXxSNGjNi0
adOuXbtmzpw5derUXP384Ix0NUEUQ0u6bQwAAIAcsf288L///W/tgunTp6sL
Tp48aX0wIiLCNi11P8B75MgRdY1dctpGsfLv6tln1blz52zrVT2FferUKdvH
L1y4oP26SoOoC5RAjoqKUp+yjWLl61ov84X8I11NEMXQkm4bAwAAIEcsFsvQ
oUPVVIyJibF9NjExsXv37tanBg4caDKZrI8fP378u+++s14va8uWLbqvrCSn
+rITJkywfco2ijdt2qR7+Pfff6+u2b9/v/XB1atXqw/OmjXL0Xek1L267Lff
flOfso1i21PMyCfS1QRRDC3ptjEAAAByauPGjWoqrl271vapHTt2qE/98ssv
2mOVv/arpWxLiYVjx46pxyoFbfusGsVffvnl/f/92K9KyRP1cPUd1DNmzFAf
dPIRYKXZ1WULFixQH7eN4mvXrjn+kSBvSFcTRDG0pNvGAAAAyCnl7/ZqKg4d
OtRisahP2Z5y1d6hWJWcnHzx4kXlL/9r1qyZPXv2qFGjuv6vcePG2a5Xo3js
2LGOXlOJVvXwyZMnWx8cMWKE9ZFu3bplZGQ4OjYuLk49dvz48erjtlHsKMaR
h6SrCaIYWtJtYwAAAOTC1KlT1VpU8tb6oFLBummpSktL27Nnz8iRI7tmxVEU
a+/WpFJyQz1c+RLKI0oFqxfR+vrrr518OyaTSV3Zp08f9XE1igcOHJijnw9y
R7qaIIqhJd02BgAAQC7YXhRryZIl1gfXrFmjPqj9BG5sbKzt9aW1bG8l7CiK
f/rpJ0cjpaenq4cPHTpUeSQ1NdX2RsPOv6PevXtbV/bs2VN9UD3822+/zdHP
B7kjXU0QxdCSbhsDAAAgF9LS0tS7ICnFmpGRYTabBw8erHal3R2XEhMThw8f
blfBPXr0GDt27IIFC7Zt23b+/HmlCLKM4pkzZzoaSYlu9XDrR5KVkZRJrI/0
69fPybdj+6VtzymrUax7nW3kOelqgiiGlnTbGAAAALmzdOlSNSRPnTp14cIF
9f8NDAy0W7x+/XrbHA4KCoqIiLC74lZCQkKWUezkjK3tvaLUd1nbvlX7vuMP
BUdFRanLbL8EUVzApKsJohha0m1jAAAA5M6VK1fUkFy8ePHy5cvV//fs2bN2
iydNmqQ+a3fBapVylLrGLkJtrz5tdw5atWHDBvVw9cLXtlefPnHihKPvxfai
2dOnT1cfJ4oLmHQ1QRRDS7ptDAAAgFxTrxrdr1+/AQMGWP998ODBZrPZbqX6
NmbFrVu3tC+lHDJz5kx1zZgxY2yftb1PsRK/2sOVUrZdc+nSJevjISEh6oNj
x461vVC2Ki0tTR1esWvXLvUporiASVcTRDG0pNvGAAAAyLVt27Z11Vi3bp12
Zf/+/dUFYWFhds8qrbp48WLbFxk+fLjtAtvg7dOnz40bN2yfVYJ6yZIl6gKl
ytX4jY2Nte3xzZs3231p5dhly5apC7p165aQkKA+SxQXMOlqgiiGlnTbGAAA
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
1YT7RfHy5cvVeyodOnQop4cPHTpUPfz8+fP5MaHrk24be44TJ8Trr+ucMvb3
FyNGiMREo+dDVk78dWJU6KinQ57O8qZOgw4NOnzrsMViMXpkAACAnJGuJtwv
ilNTU8uUKWOt2gYNGiTk5A6vu3fvLlKkiPXYZs2a5d+QLk66bexpdu0SjRrp
pHG5cuLHH0UaN/+RwaXES9+f+L7p2qZec7yc1HHVpVX7/N6HWx4DAACJSFcT
7hfFiv79+6tne5s0aRIXF5edo3bu3KleuVoRHByc33O6LOm2sQeyWISyQ2vW
1EnjGjXE0qWCE4yyiLkbM+vsrFd/fdV3rq+TOq60uFKP/T12Ru00mU1GjwwA
AOCMdDXhllGcnJz85JNPqnkbEBDwzTffXL16VXexyWQ6dOjQe++9V8jGSy+9
lJGRUcBjuw7ptrHHSk8XM2eKihV10rh+fbF5s9HzISdup95efGHxu1vfLT6v
uJM6LreoXOc9nTdf25xuTjd6ZAAAAB3S1YRbRrHi7Nmz/v7+hf6XUseNGzf+
/PPPx40bN3bs2K+++qpNmza2Z4et6tate/v2baO/AyNJt409XEqKGDNGBATo
pHHz5iLnH6yHwVLSU4IvBX+4/cMS80s4qePSQaU/2/XZ+oj19zPuGz0yAADA
/5GuJtw1ihUHDx5U71mcfc2aNYuK8vTbhkq3jaGIjRW9e+vfuendd8XZs0bP
h5xTandtxNr2O9uXCirlpI4DFgS029Hul8u/3M24a/TIAAAA8tWEG0exIikp
qWPHjt7e3tnJ4YcffnjZsmVGj+wSpNvGUF2+LD75ROfOTd7eomNHERlp9HzI
lTRT2q9Xf/3X7n+VWVjGSR37zfd7f+v7yy8uT0pLMnpkAADguaSrCfeOYqvo
6OjJkyc/99xzunVcpUqV7t27//bbb6mpqUZP6iqk28awc/y4eOMNnVPGRYuK
vn0zzylDUhnmjG3Xt3Xb163CogpO6rhoYNF3Nr+zJHxJYhq36QIAAAVNuprw
hChWZWRkREVFHT169Ndff927d++FCxeSkjifokO6bQxde/aIpk110jggQIwe
LZKTjZ4PD8BsMe+J3vPlgS+rLKnivI5bb2m9NHwpdQwAAAqMdDXhUVGMbJJu
G8OJdetE3bo6aVy+vJg2jZsaS89isfx+4/f+B/tXX1bdeR232dJGqWPeWQ0A
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
1/uckZGRxT8nohjA7KWlaR7morfl5rIeC2QpU5mZkpeit2UXZLOei0tFRRQR
oblz9dtva+5NbTyQmzXT3Jvr2DHcm0vfrfRbH/7+ofhqapetLr/e/5X1dBWI
u5pAFIMYd8uYL2WKYsG5c+eKZ2ZgYGCa8DsokfCv27Fjx3QXSEuG7Z49e4p/
dMeOHXfv3s3Jybly5cqmTZvG/FNpoliwffv24q/aunVrZmYmaW7ckXv48OHi
yYwoBpADFxeJ35AN3MYAoGK5hbqJ62P4yeGs5+Le48e0aZPmicYODqW6N9fG
jbg31z8cjj3cckdLyScaX3lyhfV0FYK7mkAUgxh3y5gvZY3ioqKiJUuW6AXs
5MmT9fJTMmxTUlIkD5NUyigW/jXXPRZZ55tvvpH8QohiALPn6koKhf7m48N6
LJAl9zB3RZBCb/MM92Q9l/koKKATJ2jKFGrevFT35vr+ezp7lgw/PUNGCtWF
qyNX19lUR/xG469OffU49zHrAcsZdzWBKAYx7pYxX8oaxfTsIurAwEBDMVs8
UfXCVnD8+HG9s8nF7dixY+3atWWKYkF6evqCBQsMfU5vb2/dJd+IYgAAALN0
7x4JP+R79aIqVUoI5Dp16IsvKDiYkpNZD81aal7qhPAJ1hus9dLYYaPD0itL
lSrzufqcu5pAFIMYd8uYL7qbX+kF46xZs7T7hd6UfGF4eLjuGC1PT09fX9/M
zEwjUUzPbge9cOFCvTO5c+fODQsLEz7q7++v3SPUcennEf5lP3jw4JQpU/Tm
WbduXW5u7qJFi7R7fv755+f/OwUAAAAmLzubfv1Vc28uJ6eSTx+//bbm0U7n
zsn69PHNtJuSTzR+Zdsr+x7sYz1d+eCuJhDFIMbdMpaVrKysa9eu/fHHH/fu
3VOpVPTP5wJLRrFWfn7+nTt3Tp06dfXqVUOPGC4rpVIpFPf58+eFT/vgwQPt
PAAAACBD2ntzzZ+vKV+hf40HskJB//kPhYRobs0nT6EPQ1vsaCFO4x4He1xL
vcZ6un+Lu5pAFIMYd8tY5koZxQAAAACVIzmZNm+mIUM0104br2NLS+rQQZPS
Fy6Q1JMezVmhunDltZW1A2vrdbHVBiuPMx5P8p6wHvD5cVcTiGIQ424Zyxyi
GAAAAEyTWk1//UVz5mhuylfi6WNHRxo6lLZupdRU1nNXIiF+x58ZL4SwXhoL
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
NEEohp7t2hgAECqZmUp6uustOzvUZcGRzuSeST+f7nLLupAV6roAx7FdmiAU
Q892bQwACJW4ODeXG37zzVCXBUdq/1V7/bWG+2zsE+q6AMexXZogFEPPdm0M
AAiVxo2V2FjX27vvhrosOFKP9T1i58S63J7d/Gyo6wIcx3ZpglAMPdu1McIA
XYfgo+sQfHQdgo+uQ/DZrusIxdCzXRsjDNB1CD66DsFH1yH46DoEn+26jlAM
Pdu1McIAXYfgo+sQfHQdgo+uQ/DZrusIxdCzXRsjDNB1CD66DsFH1yH46DoE
n+26jlAMPSu3sZVrU6xdnpVrU6xdnpVrU6xdnpVrU6xdnpVrU6xdnpVrU6xd
npVrU6xdnpVrU6xdnpVrU6xdnpVrUyxfnh6hGHpWbmMr16ZYuzwr16ZYuzwr
16ZYuzwr16ZYuzwr16ZYuzwr16ZYuzwr16ZYuzwr16ZYuzwr16ZYuzwr16ZY
vjw9QjH0rNzGVq5NsXZ5Vq5NsXZ5Vq5NsXZ5Vq5NsXZ5Vq5NsXZ5Vq5NsXZ5
Vq5NsXZ5Vq5NsXZ5Vq5NsXZ5Vq5NsXx5eoRi6PUHAMA3ffoMeeyxoS63J598
JtR1wYkeH/D4Y4Mec7k9MeCJUNcFOFGoA83VIRQDAAC/xcUpRYq43t58M9Rl
wZHaf9W+yMdFXG59NvYJdV0ArI5QDAAAAABwLEIxAAAAAMCxCMUAAAAAAMci
FAMAAAAAHItQDAAAAABwLEIxAAAAAMCxCMUAAAAAAMciFAMAAAAAHItQDAAA
AABwLEIxAAAAAMCxCMUAAAAAAMciFIexixcvJiYmDhw4sG3btrfffnvfvn1n
zpz5ww8/WG1NhBMzOiQzM3PKlCnPPfdcx44dGzZs2KlTp6FDh86YMSMrKytQ
ZcPWgvC6dOHChV69erX702+//RbAlWFTJnXdL7/8Mnfu3MGDB7ds2bJp06a9
e/ceP378iRMnAlIz7M6MrhO/uoufp+In7L333nvrrbd27dp19OjRa9asCVTN
CDNPPfVU/fr1H3jgASOLWDNNEIrDVVJSkmizIu4MGTJEdKNF1kQ4CXiHiCQy
adKk8uXLu12zWrVqCxYsMONAYCPBeV0aNWqUXHbv3r0BWRP2ZVLXTZgwITIy
Ur9mTEzMP/7xD37IOpwZXbdq1aratWu7XfP+++9PTU0N9EHA3kSSVdsjLi7O
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
     "], {{0, 514.}, {643.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{643.5, 514.},
   PlotRange->{{0, 643.5}, {0, 514.}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`fob = 1, $CellContext`z = 
     0.6, $CellContext`temp = 92}},
 CellID->178628381,ExpressionUUID->"f63e0ff5-c497-4691-a00b-483618ab28b4"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
je4NulWhPXv2eKtvIeyzLV++XDKLRJWDBw+qIQMGDJDjV5Kyt0lWrFgh/bqa
NWseOHBADfnnn3/OP/986enJLij0wRM2hOJwkChxyy231KhRQ/1A5rXXXrv2
2mv1u88888yNN96o/peAVqFCBSnntGnT9AgSqK+//noZKAFBDxw+fHiZMmWs
McFNrDawNIORFJUGVl0Q+Nxzz+khM2bMsPb9pOEtVarURRddpH+EIn0nGaFR
o0a+5wygUEIeijdv3jxo0CA5VOX81bZt25dffll/1NaqVaumTZtaF7R69er6
9esPGTJED5G2eujQoTLwzDPPvO2222bNmqXfkkZAhj///PPSE6tdu7b0uNTw
jIyM3r17S3erRIkSstyHHnrIeoVeoUKxlFwWIT1AOSOXLl1aljJx4kSZ2+OP
Py69u+Tk5JYtWy5evNg6yQcffHDzzTeXL19eCiDFkK6gfstjKP7www87dux4
xhlnXHLJJSNGjPDxo9rRo0dfcMEFMgdZrpSqQ4cOPjaCkG0lxStXrtxZZ50l
W/7HH3+0zk02rGxn2T4ytyuvvFJfiiYdCZmhTCULknWU/9UKyvjy/5gxY/Qc
fOxZven++OOPm266Sfbd2Wef3aVLFx9fcKsdsWTJkvvuu09GljLffffdP//8
s1uZvVWGApf4+eef1/dE1teffaG3s2woWWWpWg0aNPjoo4/8L56d9SuMWOqz
hY/qDW7cuPHXX389ceJEML1BmVxmIrMyvTfoVoV8HGL27tmh0+xv+a66Tz75
pBytkydP1kPS09OlJfHx8wppM2WS6dOnWwdKD1NW4fDhw74XFzFjx46Vdlu3
sda22kfjUNjThBp//fr10kBJAKxater9999vD3cFLlHmec0110jf+Omnn1bD
vZ37vLXqS5culf/ff/99Pef9+/fLkIEDB6qXPs4v/p+5xDfffCOLlnOEeilB
LCkpad68eTmuFHzeeefJItRbr7zyiowpK+g2BzlUZRJpdfWQAwcOFClSxMdH
xLHawNIMRlJUGtgLL7ywePHi+vNDRQ4TOTRSU1Pl/1WrVkmr8uqrr1pHqF69
etGiRbkMHgih0IZiOUfL0S0HsqS59u3bq5OynKnVu9ITkJfqzKiojpOcbdXL
vXv3Si9LXaR33XXXydlfToL//e9/1buSN+UtyT6JiYlyrpTugSp/3bp11SRy
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
aV0wOpZxbsWKFboy9OjRIy0tLSMjQ6LH6tWro100sxnaUEjXsV69ero83bp1
mz9//oYNGyZNmiRthR7++OOP+znD559/vq5PF1xwgXULfPLJJ95mRdsFK9qu
kDOx1Qp5kyVkNfWEJUqUeOqpp5YvX56amrp06dK+ffsmJiaqt5KSktzShyza
umW6du06d+5cyeyy9Vq3bq2H9+zZs1DrSKsVwwjFMNqjjz6qWzbfJ99nn31W
j3nnnXdGrITeZGVl3XHHHQn/Rscyzr3yyiu6MkiXMtrFiR2GNhTTpk3ThRk1
apT1rd27dzdo0EC9ValSpWPHjoVkiS+99JJeYr9+/TyOQ9sFO9qukDOx1Qp5
k3Xq1Cn9vXOZMmUkX7uNYP3ooGnTpnr40aNHrTF8woQJ1qkkvD/wwAP63Z9+
+sn/daTVimGEYhjtuuuuU61TyZIlT5w44WNMeVdaVDWytMwRK6FHH3/8scdf
x9CxjHPSn1G78qKLLop2WWKKoQ3FpZdeqkpSt25d+wWHKSkp+iec0qQEv7gl
S5YkJSWpGbZo0SI3N9c+Dm0XPKLtCjkTW62QN1lr167Vjczrr7/ucZz77rtP
jVCsWDHdan399dd6wi5dutinktRco0YNNcLNN9/s/zrSasUwQjHMderUqXLl
yqnWqXnz5gWOL+OokStXrhyB4nnzxhtvWDuT1atXb9WqVWg7ljt27Pj888+n
Tp26adMmP39hJKOlpaUtXLjw/fffnzhx4pdffrlz505vIx8/flxOPfoOFTLh
lClTZs2atX379gDKD+nS5LrUqlVL7cqePXuqIYX97ZVzqEoifNRAeSv3tPCV
xNCGYu/evbqVGD9+vMdx2rVrp0Zo1qxZkIs7ePCg/k3oGWeckZ6ebh+Htgtu
YqztotUKRjiarLfeekvP09v9omfOnKnHWbVqlRr4/PPP64GpqakeJ5SUrVs8
3x87WNFqxTBCMcwl7Y9u9IYMGVLg+PrncldffXUEiufN2LFjdbFvvfXW/fv3
P/7446HqWM6ZM6datWrWjmv58uX79et39OhRb5MvX75cNoj154GalMfjD5T0
EqXn3LlzZ/2jHvnn9ttvD2AV4lzLli3tG1/p0KFDtEsXiOzsbF0rvvrqK2+j
DR8+XNec8J3fDW0oZs+erYu9Zs0aj+OMGzdOb0A5OwezONkyenFvvvmmx3Fo
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
honOPf1s9Lp164Zj/oaGYmlR7b+4PHDgwJlnnqlGaNSokX6WhL5zSJs2bezz
lCO9ZcuWeu3c7kxLEx1aTZo08aef4CMzHj58WP3Y6vrrr/dzoZGp5Lqa6Up4
/vnn5+bmRmAF88PfUOSHeTN2795dTZKcnGx/JMr777+v5ynFKGzJ77jjDj35
oUOHCju5QtsV5/xsu9w4ORTnF7LVCuGqKUa3WuFosvQHL6Jz586SrP2ZStoB
9ftu8cgjj/ie7a+//upnYfJptWIaoRjG2bNnj2467r777nAsYv/+/fMK6dix
YwEvLlQdS1GyZEnrxUJyVtL3sUz4980S9S1Dk5KS9PPlFTnM3W6QKDOxjkAT
HUJSc/QefP75532MqTPjq6+++q3L7NmzZ82aNX78+Bo1asjwsmXLLlmyxM/l
RqaS6ydXal999VVkVjACDUV+mDfjb7/9pr87qFatmvU3dB9++KH+hdqFF17o
9uBUKZWklcYujz76qMeZ16pVS00u3fiAV5+2K57533a5CSY5RqDhKlSr5SbI
UGx6qxXyJmvlypX6mE1w/Yx3oU/W79bbtm2rG4rvv/9eD5dFW28b3rFjx0Jt
PVqtGEYohnG+++473XTExg3qQ9ixTHB9ennppZcOGDDg5ptv1tcyiQ4dOlin
eu211/Rb0kr37NnzzTfflJJIf8BthgmuD8ytpzCa6BD6/fffPZ5D7Xw/sUj4
eSvOSHrggQesJbzqqqt8jBzaFYyNhqJ37956LZKTk+UoHjx4cNOmTXXPUw7e
ebabuKalpempPH6Fd+rUKX2Yu7UMhULbFc/8b7vcOPlGW/mFbLXcBLlqMdBq
hbbJsj6AyR/Wu71JwNFfFie4btL4yCOP3Hbbbfqb3ATXZf/2b7R9o9WKYYRi
GOepp57STUfAP4VzlFB1LKWZ1ecdN926dTt8+LB1Kmly9a0OPbrwwgvHjx+v
X1o/DqWJDqF33nlHn1t9/4KswMwo53cnPNPESs77uniygnLG8TFyaFcwNhqK
3Nzc/v37+9gmHo/BAkOxnM31CKNGjQq4eLRd8cz/tsuNw0NxoVotN0GuWgy0
WiFssvLy8qyp1h9ut0B///33vTUsCa5HR23evLmwK0irFcMIxTBO165dVftQ
tGhRb7f9N8vTTz+tW8UAJi9durSafN26dR9//LG60FSrXr36e++953FC2XrP
PPNMmTJlrONLI1+3bt3XX39dDudjx47pO1E89NBDekJ9npIUE+A64zR9HdcF
F1zge0ydGX/77bfjp+3Zs0ea8XfffVd/Rh3Az0vD59tvv9VVy/rERo9Cu4Kx
1FBMmTLF7bhOcD0yxttX55mZmbq31rlzZ/sIO3bs0PORRiPggtF2xTP/2y43
Dg/FhWq13AS5ajHTaoWkycrIyEgoJPuPfOVscuWVV7qNVrZs2SeeeOLAgQMB
rBqtVgwjFAOxJzU1dfr06d98842cUwoc+ciRI2vXrpWgIe3t77//Lsd4BEqI
APi+OfOaNWvUu61bt4582by5++67VamSk5PT0tJ8j2ziCkbS3r17586d++mn
n86fP19SbbSLExa0XfHA4aG4UK2WG4evWoQ5p8lKT0//4YcfpCSzZs2SU0lo
P3Cg1YoZhGIAMILvzCjq1q0r71aqVCnCBfNm+fLl+sP/MWPGFDi+cSsIIABO
To6FbbXcOHnVAPhGKAYAIxSYGdWzPLw9BjHCsrOz1UOURI0aNfz5PNysFQQQ
GMcmxwBaLTeOXTUABSIUA4ARfGfGzz//XL17//33R75sysmTJ6dMmfLjjz9K
YZo3b65/NvXtt9/6M7nzVxBA8ByVHINstdw4atUAFAqhGACMoDPjiy+++NVp
M2fOnDhxYpcuXYoVK5bgetbDTz/9FK0S7t+/P8Gma9eufk7u/BUEEDxHJccg
Wy03jlo1AIVCKAYAIxT4xCIxfvz4KJZw69atbuVp2bLlkSNH/Jzc+SsIIHiO
So5BtlpuHLVqAAqFUAwARpg6dao9JCYlJVWtWrVp06b3339/1J9rmZqaWrFi
RVWwMmXKjBw58tChQ/5P7vwVBBA8lRxvv/32aBfk/wmy1XLjqFUDUCiEYgBA
CGVmZqalpZ06dSraBQEAv9BqASAUAwAAAADiFqEYAAAAABC3CMUAAAAAgLhF
KAYAAAAAxC1CMQAAAAAgbhGKAQAAAABxi1AMAAAAAIhbhGIAAAAAQNwiFAMA
AAAA4hahGAAAAAAQtwjFAAAAAIC4RSgGAAAAAMQtQjEAAAAAIG4RigEAAAAA
cYtQDAAAAACIW4RiAAAAAEDcIhQDAAAAAOIWoRgAAAAAELcIxQAAAACAuEUo
BgAAAADELUIx7PoBAAAAQKCiHWgKh1AMu9BWYycfFE4uW76zi+fksuU7u3hO
Llu+s4vn5LLlO7t4Ti5bvrOL5+Sy5Tu7eE4uW76zi+fksuU7u3hOLlu+s4sX
8rI5eWU9IhTDjlDsEE4unpPLlu/s4jm5bPnOLp6Ty5bv7OI5uWz5zi6ek8uW
7+ziObls+c4unpPLlu/s4jm5bPnOLh6hmFAMO0KxQzi5eE4uW76zi+fksuU7
u3hOLlu+s4vn5LLlO7t4Ti5bvrOL5+Sy5Tu7eE4uW76zi+fksuU7u3iEYkIx
7AjFDuHk4jm5bPnOLp6Ty5bv7OI5uWz5zi6ek8uW7+ziObls+c4unpPLlu/s
4jm5bPnOLp6Ty5bv7OIRignFsCMUO4STi+fksuU7u3hOLlu+s4vn5LLlO7t4
Ti5bvrOL5+Sy5Tu7eE4uW76zi+fksuU7u3hOLlu+s4tHKCYUw864ahyr2BGA
FUcE4IaDArDiiHAO4/YFoRh2xlXjWMWOAKw4IgA3HBSAFUeEcxi3LwjFsDOu
GscqdgRgxREBuOGgAKw4IpzDuH1BKIadcdUYAAAAgEMYlyYIxbAzrhoDAAAA
cAjj0gShGHbGVWMAAAAADmFcmiAUw864agwAAADAIYxLE4Ri2BlXjQEAAAA4
hHFpglAMO+OqMQAAAACHMC5NEIphZ1w1BgAAAOAQxqUJQjHsjKvGAAAAABzC
uDRBKIadcdUYAAAAgEMYlyYIxU7Tp0+fBg0adOzYMcj5nDp1avr06f3797/u
uusuu+yy3r17T548edOmTf5Ma1w1BgAAAOAQxqUJQrGjSIxNcKlTp04w81m1
apUE4QRPhg0bJnnZ9+TGVWMAAAAADmFcmiAUO8fixYtLlSoVfCjesmXLWWed
5TERK/fdd19eXp6PORhXjQEAAAA4hHFpglDsELNmzSpdurTOrQGHYkm79erV
0/Pp1q3b/PnzN2zYMGnSJJmnHv7444/7mIlx1RgAAACAQxiXJgjFUZeVlXXH
HXe4fZkbcCieNm2ansmoUaOsb+3evbtBgwbqrUqVKh07dszbTIyrxgAAAAAc
wrg0QSiOro8//rhChQr2K5wDDsWXXnqpmkPdunXt10inpKQUKVJEjSCL9jYT
46oxAAAAAIcwLk0QiqPojTfesAbh6tWrt2rVKphQvHfvXj238ePHexynXbt2
aoRmzZp5m49x1RgAAACAQxiXJgjFUTR27FidYW+99db9+/c//vjjwYTi2bNn
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
9fjjj6uvkU5ISFC+6bxs2bLiT/vmm2/Ke1WvXt005qsH1KtXz9o3i4VrY6ei
L9AfW34s7PmwIq6UPvnTSdZGAaCJS7svhTYPNXtfmlZ32qnVp7QuDQBgJ8Kl
CScPxfHx8XJClKKi6favv/5a3r5w4ULT7WPHjpW379ixozTHleKqcsY2KCjI
4pju3bvLA55//vliTpuenl6pUiV5L39/f4tjVq9e3bp1686dO7/77rvS78vi
GOHa2ElkJWVFj4tW39PG9J7SN46V9q9rAKCUdHm67SO3+1b0NXubingnIicl
R+vqAAA2J1yacPJQLL0c+ZvCnTp1Mt0+d+5cOVoOHz7cdHtUVJS8PTg4uDTH
3bhxoxKKjx49anFMYGCgPECqUKqzONNKgVeZ9sqV+7/zp3BtXO5d2n0psk+k
r5v5J0z5MbPZzAPBB+5mWv4rDgDQRHJs8pw2c8zer6Y8OOXI4iNalwYAsC3h
0oSTh+I//vv14QceeMD068PKN3PNwvKuXbvk7UOHDi3NQceNGyfP4+bmZu3+
0koAl0i/puJMO2HCBHl8s2bNTLdLv7jz588Xf4En4dq4vNLl6n6f//ucp8w/
VSo3d13eY/m5zedKs3QXANiOXqffPXH3xMoTzd6+wruGZ17K1Lo6AICtCJcm
CMVdu3aVg+T48eOVjUlJSUpolf5d2T5mzBh5+8SJE0tz0IEDB8rzNGnSxNqY
06dPK6E4IiKiONO+/fbb8vh+/fpJ/7l3794vvviidevW8tlwLy+vl19+efny
5fecR7g2Ln/SL6RHfR0V8ECAxTgcUCNg64it6efTtS4TAO7t5smb6tsg+Hn4
RfaO5O4HAFAuCZcmCMVSvFWyZ+/evXfv3i1vb9y4sbzxueeeu379urRl06ZN
np6e8sYVK1aU5qB9+/aV53nxxRetjcnIyFAKCwsLK860zz//vDx+yJAho0aN
krOwWv/+/TMzi/oreuHauNwwGozntpz7seeP6tu3yo/ZrWfHzostuMPSnwBE
Ir25HZh+YJLnJLP3tMlek89tPqd1dQCAMiZcmiAUS9mzRo0aSmD08PCQtwcH
BysbpXT54IMPKv/p5uaWmJhYmoN269ZNnqpLly7Wxkg/TOWIM2fOLM60Tz75
pMUU7OXlZbbl1VdfLWIe4dq4HMi9lbtv6r4ZTWdYzMK+br6RvSMv7bqkdZkA
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
GEbKtTFccyPlRmJM4pHII1FfRUV9HWVac+mQecj9quZXpvWZv2fKmvF3jA9r
GrbstWVbPt3i6JZJQIlEKAYA+DLl0gShGEbKtTEK7lrStT/e+X1o6uhKowsU
cq9lmobi4FLBtkyb6SYn15+8dPhS1vUsd+4HYGmEYgCAL1MuTRCKYaRcG0Mj
Am/C3oTDSw7/NP6nLf/eYlqjfye3gCF3bNWxWo3I0dMenrbo74vWDfjja79Z
N4i9gDlCMQDAlymXJgjFMFKujX1Zji1nXpt5k+tOHlF+RGFDrt2flJMppvWn
N5++8POF679dd+d+ACUKoRgA4MuUSxOEYhgp18YlUnZG9m8nfhOBNGZGzLbP
ti1/a7lYYlo5rtq4QoXc7xp9pxWMqjhqSv0pC9ovWPve2l3jdv1+6Xd37hDg
QwjFAABfplyaIBTDSLk2LmEWdlgYEhQS7G8fckVGNq2XIdfujwjUpvXno87/
8c7vZd75BdxFhuKDBw96ey4AAHiacmmCUAwj5drY+nJsOVfOXzm369zBhQd3
jtm55t01C9ovSD2Talo8vfH0QoXciJcjtIIxN4+Z9sif3/ntv+6nkJ/S4tLc
uU8AAACACeXSBKEYRr11vD2XkmBxp8XDSw83htxTm06Z1kd0iTANxTEzYkzr
k2OTk35N+s+V/7hzJwAAAABzvQ28PaPCIRTDSLk29rCc7Jy0s2lnfzyrve27
tu/ahR0XTntk2pmtZ0zrl3RdYh5yw8xD7sZ/bRRrhwcM/7rW1zObz4x8PXLL
p1t+mf6Lo+8IAwAAANahXJogFMNIuTZ2kxxbjunypd2WmobcX777xbR+48CN
pvXbPttmWp9+IT0tLk1E72LbEwAAAMBTlEsThGIYKdfGRXQ1/urJDSdjwmK2
Ddu28u2Vc1vNnVx38sgKI3/+9mfT+k0fbzINuVuHbjWt3zN5j1g7rtq47xp9
F/5S+IZ/btg9YfeR5UccfacYAAAAUJdyaYJQDCPl2jhfWTeyfjvx29WEq6Zr
t/x7i2nIFctN6/d+s9e0fvlby80f/XqWmECx7QwAAABgYcqlCUIxjJRrYztJ
vybt/HLn9+9/v+iFRaGPhY6tOlYLrZs+3mRaHz0t2jTkRr4RaVp/fM3x8dXH
T/+f6RFdIrS3fWOXxSZEJ1z/jZscAQAAwNcplyYIxTCychtnZ2Snnk49u+Ps
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
uukmsXDu3Ll2xf/617/0sTcoKGjs2LE//vhjfHz8pUuX9uzZM2LEiCpVqsiC
ChUq7Nixw26QmJgYf39/LXenpKS4Y38BAHqEYgCAukpeOlNCCTvsx48fL1Wq
lPY28bVr1+zWin0UqyIjI/ULn376abFwyJAh+oVbtmzRwqxm2LBhGRkZxodL
T09/9tlnZVnt2rWNF+Bq27attvbzzz8vhj0EADhFKAYAqKuEpTNVlLDD3qNH
D2133nvvPePau+66S6yaOHGiXJKbm/vQQw+JhaNHj5YLRZrWPlKuCQkJcfKI
V69effjhh2VxRESEXcGyZcu0VVWqVDHmdABA8SIUAwBUlJOTk5mZOXnyZPkx
1Mw/ZWVlmdYnJSVt2LBBpLlNmzYlJyc7GVmMoA0ll4hUsn79erHtqlWr4uPj
7epFRDp06FBYWJgIMocPH3Z0Nx/jsAkJCUuWLJkxY8a2bducT8nlvZBHQ0x7
1qxZS5cutbuusn4vRM3mzZtDQ0OnT58eGRl59uxZY1m+h13upqNbF9lsNq3A
7u3Rwk644IfCObGbZcqU0XZH/ByNBV27dvX783LQ4oeb9+eB+uKLL7T6rVu3
yrL58+fLkNu2bdt8H/f777+X9Y0bN7ZbK47DHXfcoa0dP368y3sHACgIQjEA
QEXvvfeen5lKlSrpy0TyGjVqlMwXUs2aNUWMNR25cuXKWk1iYuKWLVuaNm1a
unRpuWFAQMCbb76pBToR4t59991q1arpR37ggQd+/PFHJ8OeOHFi0aJF2vuP
kshlb7/99rlz50yn5MJelC1bVqsR0btLly7yY73iL/qvxwpRUVEtWrSoWLGi
8WDWqVPH7kpQzg97dna29jlkYfHixaYT69ixo1bw2muvuTBhFw6Fc4MGDdJG
aN68uWnB0aNHtXsqlStXThwoeVnp559/Xl/Wrl07OZm9e/fm+7giXNevX19k
7U6dOn311VfGgsGDB2uj3XnnnS7sFwCg4AjFAAAV9e7d2zSdVahQQdacOXPm
ySefNC3TvPjii5cvX7YbWcbDKVOmiBxkuuEnn3wi/skTsch0rQiGMTExjobt
16+fTI52qlevfvDgQbsNXdsL+RCvvPKKXX2zZs20GhEw33nnHf3XYE3985//
LOBhz8rKkkscXTlZhseuXbsWdsKuHQrn6tatq207duxYRzVr1661i+Ht27fX
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
dk2/SsxffxHpQoXiohwKJ9q3b6/VO/pNRaFMnDhRTqBy5cqbNm0yLROJuFev
XrKybNmy58+fN62cNGmSVlO6dOnr168XfYYAAFOEYgCAusLDw2W4EGEqOztb
xqW+ffvKVU899VRcXJzcSvxr9f7778u1f/vb3/RjeiAUi8Sk/w6pyEQNGzaU
a/Xvcrq8F/mG4hYtWmgFAQEBW7Zs0a8S/9bbXZK6QYMG+gInh11EXbnqnXfe
EUNpy5OSkl555RX9mIUKxUU5FE58/fXX2ibi0Y13nS4scRwefvhhOQ2RZN98
882ff/5ZP8/ly5fL9+g1Tm7R1aVLF63m6aefLuLcAABOEIoBAOqKiorS5wt/
f3+RRK5evSpWpaSk3HbbbXLVTTfd9Pzzzw8cOLB37941atSQywMDA+3+2fJA
KNamKpLdgAEDOnXqJD92KzRr1kz/3qvLe5FvxpR50O/PXCzi26RJk4YMGdK8
efOyZcv6/dWtt96qn5WTw759+3b9qnLlyjVt2lSkVPlJbKmwodjlQ+HEsWPH
5IZr1qwp4FZOJCYmPvLII3Z7WrlyZbGwTp06ch+lESNGOBlNvu3u6EvfAIBi
QSgGAKgrIyPjwQcftAsau3fv1tYePny4UaNGfo6J9Ldu3Tq7Md0diitVquRo
Pi1atDDemse1vcg3Y4qQq/8ws1G9evVCQkLk/27evLmAh11/CS87Tz/99Lhx
47S/FzYUu3wonJO3nRo0aFChNnTkypUr8krUTtxyyy3jx493Ms7Ro0dlcWxs
bLHMDQBgilAMAFBaQkJC06ZN9W9Ezps3T67Nzs4WMbZmzZrG9NSnT5+zZ88a
BxRpRav59ttvjWvHjh2rra1Vq5Zxrfh3UF5SeOXKlfpV+qw9Z86cO++8Uz8f
MZpIoMavyrq8F+XKldNqxGM5OnQiwn/xxRc33XSTfkxxJOvWrTthwgSxLyL8
VqhQQVtud31m54d9/vz5d911l37YoKCgXr16iTHl95G7d+9e2Am7diic+/DD
D7UR6tWrV9htnYiKihI7aHzPXbj55ptFADe9MbGe/O2BiO3FODEAgBGhGABQ
AiQlJe3fv//gwYMpKSmmBWlpaTt37hSJTGRVUSa/6+oxxjegRYJbvHjxkiVL
xMxN78hj5I69uH79+q+//hoZGSnS6N69ews1pvPDLtauXbt2wYIFp06dKvo8
7RTXoRBzk7/H2LFjR/FOUrwuOnny5Pbt2+fNmyd+1j/++KM4JgXZMDc39777
7tNmNWXKlOKdFQDADqEYAAAPcP6pbHhR9+7dtR9N0W/MVFw2btyoTal69eri
xZW3pwMAJRyhGAAADyAUW9ahQ4e0z4GXL18+3081e0bnzp21bhk3bpy35wIA
JR+hGAAADyAUW5m8+dGwYcO8PZe8gwcPapcdu+OOO+zu9QwAcAdCMQAAHkAo
trLExMQqVaqIn474MYm/e3cybdq00Vpl+fLl3p0JAPgIQjEAAB5AKLa4hQsX
aj+gd955x4vT2LBhgzaNbt26eXEaAOBTCMUAAHhAhw4dnv7T6tWrvT0XmHvp
pZdEGg0ICDh37py35tCwYUMxh9tvv/3y5cvemgMA+BpCMQAAQN6fd6c69Seb
zeatOcTHx4sJJCcne2sCAOCDCMUAAAAAAJ9FKAYAAAAA+CxCMQAAAADAZxGK
AQAAAAA+i1AMAAAAAPBZhGIAAAAAgM8iFAMAAAAAfBahGAAAAADgswjFAAAA
AACfRSgGAAAAAPgsQjEAAAAAwGcRigEAAAAAPotQDAAAAADwWYRiAAAAAIDP
IhQDAAAAAHwWoRgAAAAA4LMIxQAAAAAAn0UoBgAAAAD4LEIxAAAAAMBnEYoB
AAAAAD6LUAwAAAAA8FmEYgAAAACAzyIUAwAAAAB8FqEYAAAAAOCzCMUAAAAA
AJ9FKAYAAAAA+CxCMQAAAADAZxGKAQAAAAA+i1AMAAAAAPBZhGIAAAAAgM8i
FAMAAAAAfBahGAAAAADgs9wUin8BAAAAAEAF7gjFAAAAAACoohhDMQAAAAAA
JQyhGAAAAADgswjFAAAAAACfpYXi9PT0q1ev3rhxw9vTAQAAAADAQ0QKFllY
JOKMjIy0tLTr1697e0YAAAAAAHiISMEiC4tEnJeXl5qaKtIxuRgAAAAA4AtE
/hUpWGTh3NxcEYozMzNFQOabxQAAAAAAXyDyr0jBIgvn/S/tjWOxnC8XAwAA
AABKKhF+tUQs/pL3V9py7XPURGMAAAAAQEkicq72qWntHeE8M9rnqIWrV6/+
DgAAAABASSFyrhZ49Z+aNpWRkSGy828AAAAAAJQU2t2XnMdhAAAAAAAAAAAA
AIAv+P9FqdXb
     "], {{0, 514.}, {643.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{643.5, 514.},
   PlotRange->{{0, 643.5}, {0, 514.}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`fob = 2, $CellContext`z = 
     0.6, $CellContext`temp = 92}},
 CellTags->"Snapshot",
 CellID->951852634,ExpressionUUID->"779ec233-3a93-4395-b210-325c54fc3510"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3Qd4FNXex/HQexEEBMsFvIJgFxW7qCjYUBS9dq/Xcu3ci1cRCxIgdAHp
vbdQpIiAxNCLQAKkQIDQAikkIQlJICGm+P7JkXmH3exmk2x2Zna/n2efPNnZ
M7NnZ87OnN9Oa/Gv7s+/X9HPz+/z6vLn+bd7Ptyjx9u9XqgvT1787PMP//3Z
e+8+8dn/3vv3ez3u/lclGVi5sp9ftSp+fhf+/9NOTk5OZmbmaQAAAAAAvIXk
XEm79hHYJg6nFUpPTz8LAAAAAIC3kJyrAq+jaHzu3Dl5NSMj41yhbAAAAAAA
vIWKupJ5JfnKP0UmYsnOWVlZRtcUAAAAAIByIZlXkq9NLlZHTZOIAQAAAABe
T8vF2nHUqamp6qhpo6sGAAAAAEC5U8dRSxaWRHz+/Hm149joSgEAAAAA4CHq
JGJJxJKO09PTOXAaAAAAAOA7JAVLFpZEfPr06bNnzxpdHQAAAAAAPEqysLqF
MaEYAAAAAOBrCMUAAAAAAJ9FKAYAAAAA+CxCMQAAAADAZxGKAQAAAAA+i1AM
AAAAAPBZhGIAAAAAgM8iFAMAAAAAfBahGAAAAADgswjFAAAAAACrOFpoZ6G1
l1IDVQHXJ0goBgAAAABYBaEYAAAAAOCD9hVa6RpV2JXJEooBAAAAAOZHKAYA
AAAA+CB1RLR98j1zKfsCrhxKTSgGAAAAAJgZoRgAAAAA4LPUFbRKEYrViM4n
TigGAAAAAJgZoRgAAAAA4LPUHZeKDMKOqMJqROcTJxQDAAAAAMyMUAwAAAAA
8FmEYgAAAACAzyIUAwAAAAB8FqEYAAAAAOCzuPo0AAAAAMBnEYoBAAAAAD7r
aKFShGI1ovOJE4oBAAAAAGZGKAYAAAAA+Lh9heyTb5FUYVcmSygGAAAAAJgf
oRgAAAAA4OPUEdHqClprL6UGunLItB6hGAAAAABgFYRiAAAAAADchVAMAAAA
APBZhGIAAAAAgM8iFAMAAAAAfBahGAAAAADgs8wQirMA76Vv4ecuOmsFWv0B
AAAAL3bW0FCckZGRm5t7qlB8fHwC4HWkncvf+EJxhWJjY0+cOHG80LGLjh49
esQ48u7HdGJiYk6ePJmTk5OWlkY0BgAAgHczKhSnp6fn5+enpqZKHE5KSpIK
pADeSFq7+opJO09MTJSwGVUoOjpaZWFFkulh4xy91MGDByMjI8PDw6W2ubm5
UnkJyJ5cPwAAAAAe4/lQLL1riQbS05a/KgtLNE4DvJS0eWnh0tSlwUvSlDi8
efPmPXv2yJCCgoI/zUe+oadOnQoLC9u0aVNERMTu3bul5jL8/PnznllFAAAA
AJ7k4VCcmZkpvWt5r6SkJJWFz9hJB7yINPuUlJSEhAQJwjt27JCWb3TqLQH5
hkqdd+7ceejQIXmaXXh+tAdWFAAAAIDHeDgUqyOlhT4R24SIDMCLSLNPTk6W
XCmh2OiMW0rh4eFbt249fPjwn4W/aHlgRQEAAAB4jMdCcVZWlgSEc+fOqUSs
srDReQUod9L4N2zYEBcXZ3S0LZP4+Pjg4OCjR4/KN1e+xewvBgAAgNfw/J5i
EjF8ijT7yMhIo0OtGxw4cGD//v2ZmZnqmHAAAADAO3gmFGdlZcn0T506JW+k
HTJtdFgBPEHaf25urtGJ1g3y8vJ+/fXXQ4cOZRQe8sHOYgAAAHgHj4XizMzM
xMTElJQUFYqNTiqAh0j7NzrOus3GjRujoqLk+yurC0IxAAAAvIPHQnFyIa85
dvp4IaNrAVNTjSTbi0JxbGzsvn374uPjMzMzCcUAAADwDh4LxequxF4Tig8d
OnTw4EGjawFTO1go24tCcW5uroRiicaEYgAAAHgNj4VidTMmdRsmQjF8gfeF
YhEZGXny5En5dIRiAAAAeAdCcekQilEsrwzF4eHhhGIAAAB4E0NCsdFhxQ3K
EoplDowfP/7999//9NNP3Vur0jly5Mhrr702ffp0oyvibUodipcuXfrll1+m
pKS4N8+6ZbJhYWGEYgAAAHgTs4XiDh06+Dn2888/eyrQFKMsofi9996Tz1Kx
YsXbbrvNvbUqnUmTJkl92rRpo57KMlq9evXOnTuNrZWx3NIOSx2KP/jgA3kX
aWOljq55eXkbN27ct2+feyf7Z2EoPnHiRAahGAAAAN7CbKH4s88+e/0i6cBX
qVLldR3VGzeDsoTiBg0a1K1b9/Dhw+6tUqnFxcV98803q1atUk+PHj0qc/7x
xx83tlbGcks7NDAUy9dNpvDkk0+6d7Ji7969MTExGYRiAAAAeAuzhWLNkSNH
pAPfrl27MmWbclPqUJyQkCCf67HHHnN7ldyFUKxXlnZIKAYAAADMz7SheOHC
hdKBf//9913PIMuXL2/dunWvXr20IWPHjpUhH374ofMRx40bJ8WCgoL0A595
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
StcVVNTdSTh0sNTS09O7du3qd1GrVq1CQkKcjyLz+aOPPqpcubIapVKlSt27
dzdbX042fLLq2717t9EVcT/7tbqHScj929/+5u/vL1msSZMmr7/+utSnd+/e
NWvWlJyrLykxuUWLFlrrql+//qeffqo1lQMHDlx++eWDBg0y4DOYAKtBX7Bn
z55bb721QoUK2gpWkq++gCyvzz77TL47qkCNGjXkm2VUbQFvRSguP24JxQ0b
Nqxbt65Myk2VKtr7778vVd28ebM2JCkp6bvvviu/3+d9MBTLRu3UqVOyKI9e
dAROHT58ODo6WrrEoaGh0q8uS29QRpeJyKRkgjJZoz9Z6WmNRxqSNCcnPduV
rvmlULGtt2fPnvKFvfHGGwMCArp06VKxYsUbbrhBkrKTUYYMGSKjXHXVVT16
9JD/27RpI0/ffvvt0nx5ys2JEyekVp06dTK6Iu5nv1b3JNmCtG7dWmasNNEp
U6a0bNlSa6uy8n/ppZe0kkFBQVWrVpUWde+990pk7t69u0RpqfkDDzyQkpKi
yixZskTyQmBgoJN39NYVLKtBTzJkBbt3795GjRpJm5fvxahRo+QLUqVKlcqV
K0tS1sqor3P79u1//PFHWQlfeeWV8nTgwIHFfhMBuI5QXH7KHoplucgUHn/8
cfdVqmie7z75YCiWLezRSxm9/Tc76bYdOnQoKipqx44dLt5/xBEZXSYik5IJ
Wro3aNOEEhMTHbU3N/bZtm3bJplFosqZM2fUkI8++ki+v5KUHY2yc+dO6ddd
c801qampakhaWtrf//536enJIijxl6fcEIrLg0SJLl26XH311eoEmeHDhz/y
yCPaq3379u3cubP6XwJagwYNpJ7z5s3TCkigfuyxx2SgBARtYI8ePWrXrq2P
CTa8dQXLatCTDFnBqgMC+/fvrw0JDAzU9/1kxVujRo22bdtqJ6FI30kK3HTT
Tc6nDKBE3B6KDx48+Mknn8hXVbZfHTt2HDJkiPZT2/3333/nnXfq32j37t1t
2rT57LPPtCGyru7evbsMvOyyy7p27bpo0SLtJVkJyPCAgADpibVo0UJ6XGp4
fHz8O++8I92tatWqyfv+97//1R+hV6JQLDWXt5AeoGyRa9WqJe8yadIkmdo3
33wjvbuaNWved99969at048yZcqUZ555pn79+lIBqYZ0BbWXigzF06dPf/rp
p+vUqXPLLbd8/vnnTk6q7dWr13XXXSdTkPeVWj355JNOZoKQeSXVq1evXqNG
jWTOr1+/Xj81mbEyn2X+yNTuvvtu7VA06UjIBGUseSP5jPK/+oBSXv7v3bu3
NgUnS1abdSEhIU899ZQsu8aNG7/00ktOdnCrBbFhw4Z//vOfUljq/Nprr23Z
ssWmzo4aQ7HvOH/+/DZFkc/ryrLQ5rPMKPnI0rRuuOGGGTNmuF49e/pdGN7U
Zys/qje4f//+7du35+bmlqU3KKPLRGRSVu8N2jQhJ18x++5Z+kX2Lzlvut99
9518W6dOnaoNiY2NlTWJk9MrZJ0poyxYsEA/UHqY8hEyMjKcv53H+Pv7y3pb
W8fq19VOVg4l3Uyo8pGRkbKCkgDYrFmzf/3rX/bhrth3lGk+/PDD0jfu06eP
Gu5o2+dorb5x40b5f8KECdqUU1JSZMjHH3+snjrZvri+5RLLli2Tt5ZthHoq
QaxSpUpr1qzJLkzB1157rbyFemno0KFSUj6gzRTkqyqjyFpXG5KamlqxYkUn
PxF76wqW1aAnGbKCbd26ddWqVbXfDxX5mshXIyYmRv4PDQ2VtcoPP/ygL3DV
VVdVrlyZw+ABN3JvKJZttHy75Yssae6JJ55QG2XZUqtXpScgT9WWUVEdJ9na
qqdJSUnSy1IH6T366KOy9ZeN4PLly9WrkjflJck+FSpUkG2ldA9U/Vu1aqVG
kU22xBObHFqiUNylSxd1vJ90MDp37iyrKfVjXfXq1Tt16iRZUp7WrVv35MmT
qvyoUaPUyR0SEm+++Wb5X8JdVFSUetU+FE+cOFGGSL9CpqYC7wMPPOCoi/jj
jz/KJ5IyTZo0kcylug1FzgQxbdo0VTeZ8u233y7/S52lK6JeTUhIUMcuympW
Po46LUXSaHbhzmiZuDpc7cEHH5T/1Vjqd0iZXa4sWW3WXX311S1btpS3kE6a
mmCRH01bEM2bN5d6ytxT1WvYsKFEb1caQ7HvKM2sq47MFnlV4rx2hp3zZaHm
s0xcqvfII4+oAmLt2rUuVs+et/bZyo/WG5QAUvbeoEzEC3qDhvTZXn75ZWnq
2ppNkfWMfOnOnTtX5CjdunWTdZR08wIDAyVzycp/5syZZruwnqwEZG2m1qiy
ltB2fDtfOZR0M6HKy7pX1j9SQPV1JavGxsbqa1LsO8qGoH79+rKKkwye7XTb
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
0aRJEycH1xW5vVbrDf0xzOosNg+EYllxyf/qmica6epUqFBBnSFlE4pHjx4t
T2fOnOnoA9pzMRSrft3f/vY3reZ79+7VQnF24V6bZs2a6UdJTU2VqKvtPC32
8Olil2zpQrHN3Lvxxhulm61+J3HeGFx5R9nuS19XFof9b63FLgvnodiV6sEt
ZCFmZmaq5lrqvSQyoowuE5FJ+U5v0I19tu+//94mzMrKrXr16k5uCKLCjs3p
n+roGpukbCz7UFzsyqF0odjmKnyyApGebanfMduFbZ/9Wn3NmjUy5L333tOG
qJ+pnYfiUmy5qlat2rJlS1dK/vDDDzJxyd02w2NjY2Vla3OEtrpWhv7q2T6C
1aAJuXEFGxUVFRISol8oMqJ8g2rVqqUvtm7dOlnryqrDp+5lCXiSe0PxU089
pU86km4efvhhv0tvQfjjjz+qvKbffCvqQqD6woMHD5b+gCpW5PZa9Ra000gP
HDigfjz3QCjevn27/H/99ddrFwmRLkfFihW16wHahOKtW7fK0zvvvFO78P7h
w4efe+65r7/+2tH8dDEUq4Ha6a5CCuhDsbqMg9Z9kuWi9uNoO2rVXUf1l3Sw
CcXFLtnSheJWrVrJZ1RDZFJ+hfemV0+dNwZX3lFdGku7fYlescui2FBcbPXg
Ftqhg6dOnTp48KAs7pJ2BWUUGVFGT/exgwbtz2uz6ae5fsrbrl27KleuLCFO
u9CTClzfffedVkY6dQsXLtSO/JH+m1/hMbTaV0xWzldccUWlSpVcPFbWM9QR
L/oEV+zKoXSh+K677tJ+hFQbQW3FXop3zHZh22e/VlcHNut/zVM3gHAeikux
5ZIVe506dVz5rsmkGjdubBO6pYm+8sor9mvv//3vf366U658B6tBE3LjClZd
ClV/7pXqzOh/vwoNDZUveL169WRNW14fCfB57g3FkqQaNmxYtWrVF198sWfP
nupMNNn06yceFxdXpUoVv8ITlGxGDw8Pb9CggUSPl19+2d/f/8knn5RikjH1
V5+22V6r3kXz5s179er13//+t0mTJurWPB4IxdkXr63Upk2bHj16vPnmm3Xr
1pV3184ytr8lk/pt/4Ybbvjyyy8///xz+86ADRdDsWzg5IPL8Jdeeql///6S
19RM0EJxVFSUvJd0a2WI9GTUTUMeeughbQqSl/0KT2ORKauDJG1CcbFLtnSh
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
VChWviYOuy/MMGSwUrn9P9uVQ4L2Kvv+nVxKEIUxhUmvJUU8GLHyuysTXkrI
DcttLpmCm321lrfmR+anvJ0iPd+Qe0I2Pb8pyyeru3Gc775FHMaYKj1NPUdj
jya+khhww/iTKElHy8F3B0s7S2VmpWHQ2g4FQOcGOgcOrTgkfQZZ/OL4Kj9p
Z2+rbNO6pwAAvRMxTbhOKJYO2j1mnZm00eN8j3GD4ejIaPj94fILKmUE+/Wq
Pqfe0kFI6jup5/KN2x7fPaoT4nhf4r1n/h4rWxZxGONcDPYMlqaUbv2HrZcJ
L75p8Za/bDm24VhfW5/WfQcwxeoO1yW+mih9Uqi/A0x3i3o0qmgjXxwDACwS
MU24Tiiuz60fO3H6riBb6vcu2CvXb3tvm5261FrWOv/L862kj/gX4idxq5OB
roGYX8ZYzzVZ87IsrS7iMMZEGYYM1VnVO9x2hN0X5nG+x7hB2PdLvuufXX84
+DDfEwGuYLB7MCckJ/juYEvvCQuuXLD939vbKnhDAACYEjFNuE4o7qztlF+g
4O8H21KfHZg9For/ZZdQLKXdpbcsVQ4w4p6LK99a3nSsSToOCbjx7JmrGR9m
THTLG3674eyXev+3OPPjzLrDdQ15Ddv/s1357lj6x8l9J1VXF3EYwxajo6ON
Rxr3+e9b8/iauZ+zcP2gUZMnUcryyZLGDxOYAq6pPrd+y1+3WJx/fLpbxEMR
R9cf5QIKAIBCxDThOqFYIs+m6nG+R1/r+Kd9rn92vfyCHg4+bI/OFKwrUI4r
TL6M7qrrCrw9cOwbust9hweGbd9sxfYKZbMhPwgZ6BwwfrQ0uVR5dPOfN6tu
QcRhDCvaKtukMRz3mzjrpyW4fXqZcNCdQenvp5dvKx/qYxIlAGcM9gzmhOaY
TN9g3KS3F+mDrKW0ReueAgC0J2KacKlQHP9CvPwaRT4caf20ZCkReF54ZuoZ
r9le416APDkrvrNC7sySm5eYd6a5uFmKJ3JBfkS+7Ztd94uxW2d7f967p6nH
SoHfVX6qVxaLOIxhQnrpC2MKE15OsOl+WZ8MwqTXkoo2FnGZMAArGvIbkl5P
8rnUx9KbyaoHVhWsK5jQ33IBAE5GxDThUqG4v71fOviXX6aoR6Ma8hrMa+R7
QSuTse5w22GPnkiZRTmE2Oun/uuSejj2he89ITZutq+1T7k+dPfc3ao1x+KO
Bd4RKB23rP/1+uF+leMWEYcxJP0d/SUJJanvpC7/1nJb7pfld7Xfpuc35a3O
66zp1LrvAEQy1DuUG54b8oMQS28vvl/yTft7WlNRk9Y9BQBoQMQ04ayhWEoH
CS8nmDflntJjF0M9GJH8RvIe3z37Fu7b5blry1+3+F/rf/Zj/XLfnJAckzOQ
p6Z7iSXKT2nIV8nmpz+5fbTSz8GeQVs2KwVeZbMd1R2T65uIw9hlSYem5dvK
0z9ID/5+sOrNxk2az6U+0U9GH1hygINVAOfuVOGplLdSrExlHnZfWH5EPtdi
AIBLETFNOGsoTn8/3ZazRm1p9Tn1U969jI8y5I27n+du6UTusrQypQ91h+ts
2Wzmx5ly/eKbFhsv723pbS1rtXGCJxGHsUsxDBpO7D6xw21H+I/C5VnGrDfP
CzxX/3T17rm7aw7UTOJm5gBg3XD/cH5k/mf+5mzy57gv+CS/mdxY0Kh1TwEA
jiBimiAUaxKKE15KkDcecEOApZqmoialD4UxhbZsNubpsZmY4n4TJ/1vdVZ1
0utJgXcEyifTel/iLcWoI1FHrG9ExGHs9KQwW5tdmzUvK/KRSK/ZXuOP2xln
ph5L/yC9Ir1C9SR5AJhy0sdW2t/TfL/ka+mtKeSekNywXBvPfQIACErENOGs
ofhw8OHQOaFT0uwxD6Nya+vQe0Mt1fS19SkHEjkhObZsVjrekOuTXks682cB
CxeWxj0X19/eb2kjIg5jp3RmBqWCxv0B+9c9sc7KbW2MW+AdgSlvpxRvLrby
+gKAXQ0PDBesK1j9k9WWPoO8P++95a9bKjMrte4pAMAuREwTzhqKdS7ykUh5
tEQ8FGGpZrh/WDmEOLD4gC2bXXbbMvUjkEtMp5iUDlcsbUTEYexMWkpbDq08
tP7X622aQemTqagTX00sjCnsOaVys3EA0Ir0brbtX9vmX2HxrWzu7Lkbf7+x
s457/QGAUxExTRCKNRHxYMRYOP2pxXA6OjqqHDlk+WTZsll5ImaleZzvsctz
V3fDmSml+lr7Di476HXR2TNv81bnqW5ExGEsuraKtpzQHOng0P8af0tHj8bN
/1r/TX88c+PojpOTvJ0aADiGYchwdP3RyIcjrdwVf/OLm0/uO9lR3UGj0Wg0
J2jye7v8b1FuaOOsofho7FH7zZN4YteJztpz+st22H1h8mhZ8/gaSzXSEFIO
GCxN22TiM98tznCr2lllUlCfW6/M2eR7ua/qr8h4GFtpUsqeyDOGqfYT7Xmr
8uL/FL/wuoXWI7DcpBd3/a/XH1pxqKW0Reu+A8CEtVW2bf/Pdr+r/Gx5x6PR
aDSac7Su+i6tP39s4qyheO7n5i66flFhdKGNt1y2UXNx87on1kmvrxS6z2U7
UY+NzUFs5Zviwe5BZTjZeE2x9JSVVVLeTlGt2fqPrUpN4xGVe4HaOMITX020
8clC0XGyIz8yf/OLmwNuCLDll+xzqY803vYv2i+9UlM7kgFAEyPDI0WbihZc
sUDz4zQajUajOaARirUlhWL5hQj+fnD51vJzDxRSHJZioPt5Y1PBnmMojn0m
dqx7dwdbqpGGkDKcbPxxy7+5XFnF0uQXp46eUmoKo1Vuai0/tPC6hdZb+gfp
Nj5ZF9dV11WwtiDh5YTFNy225a3Da7ZX5CORWT5ZtQdrRTnhBAAm6uS+k+E/
Cve8wFPzAzYajUaj2a8RirUlxT3jWSEW/9/ivX57J3HG73D/8JGoIybTLya8
lDDQNXAu3Ut+I1nelN9VfpZqarNrlZ9YllZmy2aN+2np7HFpuduMsZrMjzPN
C+SHbHwiUNXd2F0YU7jlL1uW3LzElrcLr4u8Vv909S7PXdVZ1YYhg9bdBwAH
GTGMHN9yfN0T68b9SyyNRqPRRGny8a38b1HuBOusoVgivQSxv4o1jh6eF3qu
eXxN1rysk/tOWoke0md03eG6ff77op+MNpkKx+9qv9Lk0nPvW3Zg9tg2p7sN
9Q2p1hyNPar83PYT7bZsNvGVRGUVSyNQenbK9907/rfDvIBQPDld9V2F0YVb
/rpl2a3q9wA3aZ4XeK768aodbjtO7DphGCQIAwAAwBmImCacOBTLjsUdW3rL
UpXv5mZ7Lf/W8tU/Wb3+2fVSkEl+MznuubiIByOWf3O5+QRGcqBOfiO5r21q
7i5VtaNK2XJlhvpcjSlvp8gFC65cYONmDy49qGy2JKFEtaa1vFWpyQlVuVRZ
xGGslc6aziNrjiS+kmjjN8IeszzC7w/P/G9mZWblcL+9bgQHAAAAaEXENOH0
oVgyOjIqReOV3105uTPh535u7rb3tskTG00VKRAp0Tv1b6nmBSOGEeUS1Ogn
o23cbFNRk9Jt1c1KDq08pNTUHKgxLxBxGDtSR3VHfkT+5j9vtvEaYY/zPULv
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
gz2DHdUd7SfUD7ArMyuXfmOp7+W+ynTVclv3i3Wq9WWpZaqhdfVPV6vWV2dV
q9YHfz9YtV7q59Z/bM3yyTocfLhoU9GJ3Seaipp6mnpGDCOTe/qAQN588005
3n7961+3fS1CMQDAZYmYJgjFMCHiMNaJkWH1kNhY0BjzdEz4j8ID7wj0u8pP
mX4o8uFI1fqqHVWqoTX03lDV+trsWtX6Fd9eoVrfWt4qbUqK2Jtf3Lz1n1uz
5mXlhORIabfukPq8wAAmilAMAHBZIqYJQjFMiDiMHayjumPbe9sSXkqQou6q
H69a/s3l/tf4e13kFX6/+unENftrVENr0J1BqvVSiFatX3rLUtX6too2j1ke
C65cEHh7oBS9pV4lvJyQ/n764aDDU/acAUwEoRgA4LJETBOEYpgQcRifo96W
3uzA7F1eu9LeTYt/IX7dE+vC7gtbdtuyNf9P/RrbhrwG1dAqZVLV+pbjLar1
i65fpFrfVXd2ymnvz3sH3BAQdFdQ1KNRSa8lTdlzBmBPhGIAgMsSMU0QimFC
xGFsYrBnsHhzcd6qvH3++zI+zJCyZNxzcZGPREr/Va1vLm5WDa2Lb1qsWt9R
3aFa73eVn2q9FLpNKj0v9PS/xt/S6dAjhpGmY03djd2GIcPkfgMAtEUoBgC4
LBHTBKEYJnQ4jA2DhpP7Th5POn4k6siBJQd2uu9M/Vvqpj9usjRPbntVu2po
lXKoan3PqR7V+nlfnKdaP9g9qFrvfYm3av3oyOixuGOVmZWNRxo7azqH+ph+
CHByhGIAgMvSYZoYF6EYJhwwjEcMI83FzVLOLU0uPbLmyMGlB3d67Ez7e1rq
O6mq9d2N3eqh9TL10DrQOaBa73WRl2q9YcigWu823U3Ks6qrZM3LOhx0+EzU
zahsyGvoONkx2DM4ud8GAOdDKAYAuCxCMaHYCUxiGI+OjnbVdZ06eqo6q/r4
luP5kfkHFh/Y4bZj+7+3q9b3d/Srh9bZFkLroHpodZ/pbmkOXPfz3FVXGe4f
Vq1PeStF6u3eBXtzQs/ch7lqZ1VjQWNnbeeEfg8AIFNCcUFBgdZ9AQDAoQjF
hGInIA/jvra+toq2+pz6iu0VxzYcywnJ2TN/T+bHmaqrWAmtqvVSkjWZgVdp
0qZUV5Hysmq9lK9V6zf8bsOmP25KfSd1p/vOg0sPFqwtKE0prTlQw9S6AAAA
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
xk962LO/QFA2huJJrMhO4TDCpQlCMcwJN4wFYnxGqEkLuCFgoGvApD7ykUj5
0YiHIixtc7h/WNnIgcUH7PwMgClQGF2oDNrEVxLNC/pa+4xvKJr0+tjd59gj
4HzGPYyf9LBnf4Gg7BeK2SkcRrg0QSiGOeGGsSj2Ltjr/XlvS6FYfg83maRY
mb/Y0j2rJaOjo8oWsnyy7P88gHPV39G/4MoFbp/eyWSv315pGCuP9jb3Kjf/
HAvOr44FZ/YIOJ9xD+MnPezZXyAo+4VidgqHES5NEIphTrhhLATjOWjcz3NP
ezetLLWsIa+hMKZw7c/WKg9Jqdk4FyuTC6x5fI2lLY8YRpTVLc0vAOhNwboC
49gbOid0l+eu3LDcrf/c6neVn8nfi7a9t01eiz0Czmfcw/hJD3v2FwjKfqGY
ncJhhEsThGKYE24Y619XXZfnhZ7yG+y8L86rzzH93eaE5ijvwCu/t1JZHvVY
1Lh/0hzsHlTW5eIXCGTDbzdYOXEi8ZXExf+3WP73Lq9d8irsEXA+4x7GT3rY
s79AUPYLxewUDiNcmiAUw5xww1j/Mj/OVN5g8yPzVWukCKDUVGZUyguVm/QG
3x1saeNd9V3Kikdjj9rlCQD2cWjlIa/ZXqaJeLrb1n9uHR0dVf6UdHDZQbme
PQLOZ9zD+EkPe/YXCMp+oZidwmGESxOEYpgTbhjrX+yvxt6E518x31JNe1W7
+ek6yW8ky0v8rvKztGJtdq2yovkMyIDOdZzsyFudl/J2SuTDket/vT7z48yW
0hZpeXdjtzKwlUkx2CPgfMY9jJ/0sGd/gaDsF4rZKRxGuDRBKIY54Yax/gXd
GSS/uwbdFWSlzPuSsdtwKffazQ7MVr47G+obUl3raOxR5d27/UT71Pce0ELF
9gplYLdVtskL2SPgfMY9jJ/0sGd/gaDsF4rZKRxGuDRBKIY54Yax/inXsFiZ
LH7EMOJ5wdjJomnvpskLq3ZUmZ9TbSLl7RS5YMGVC+zSe2CqSaO9q76rPre+
Ir3CUs2mP24a+3v+1Wf/ns8eAecz7mH8pIc9+wsEZb9QzE7hMMKlCUIxzAk3
jPUv/YN05U2442SHak19Tv3Zk0Wjx04WHe4fVr4+Tv1bqvlaUrhYfNPYzYii
n4y243MAps6JXSeU0X7q6Cnzgv6Ofq+Lxq41jnsuTlnOHgHnM+5h/KSHPfsL
BGW/UMxO4TDCpQlCMcwJN4z1z/hUnNhnYqW3XJOC0ZFRZZoA45NFJRt+N3aH
Xq/ZXm0VbSYrHlp5SFmraGOR3Z8JMBUGewaV8yLS3083L0h6PUkZ2DX7a4wf
Yo+Ak7Hl+H/Sw579BSKyXyg+zU7hKMKlCUIxzAk3jPXPMGhY/q3lytus9IZs
GDIoj/a29MY9F3c2Nf8q1njdmgM1btPHHvK/xr+5uFl5KG9VnvtMd/mhpd9Y
KiVrxz0l4NxEPBQhD11pDJcmlyrLpWGc/Gaysjus/flakxXZI+BkbDmMn/Sw
Z3+BiOwaitkpHEO4NEEohjnhhrEQGgsaPWZ5KIf6cy+eG/lI5LZ/bYv7TZzv
5b7Kcun9ua+1z2TdhJcSlAKv2V5rHl+T8lZK8N3Byru69B7ODRIhlrrDdcqX
xVKLeiwq/f30mKdj5n1xnrLQ72o/8z/jn2aPgHOx8fh/0sOe/QXCsWsoPs1O
4RDCpQlCseO9/PLLt99++89//nP7rTg6OhoTE/Paa689+OCD3/3ud1966aWw
sLCSkhIbf5Bww1gURZuKFnxlgfI+bN4Cbw+sz1H5tRsGDUmvJVlZkcnlIaIz
Z6lNtziq/a7yazneoroiewSciY2H8ZMe9uwvEI69QzE7hQMIlyYIxQ4mZdVp
n7jxxhvttGJOTo4UhKepeeedd6S8PO7PEm4YC6SvrS/xlUTlDkJK8/mCz+65
u43PqTaXG5678KsLTVYMnRNanVXtsP4DU6vmQE3ID0JMRrX3570zPsqQdhbr
67JHwDnscNvh9unpmuMWT3rYs79AIBPaKSa9IjuFXQmXJgjFjpSZmXnRRRdN
IhTbvmJZWdmXv/xl1UQse+GFFwwGa8nrtIDDWDijI6NtFW3Htxw/suZIRXpF
V12X7ev2NPWUpZZJK5ZvLW+vYvo8OIPO2s6K7RXSqD4Wd6whv8HS3JGq2CPg
giY97NlfABPsFHYiXJogFDtMXFzcxRdfrIRT20Ox7StKafeWW25RKp977rmt
W7ceO3YsJCREWktZ/uGHH1r/icINYwAAAAA6IVyaIBQ7QGNj469+9SuTb2xt
CcUTXXHdunVK2XvvvWf8UF1d3e233y4/dPnllw8MDFj5ucINYwAAAAA6IVya
IBTbW0RExGWXXWZ+GvO4oXgSK37nO9+Ra26++Wbzc6SLi4tnzJghF0gbt7SR
0dHTV14p2DAGAAAAoBOEYkKxsYCAAOM8e+2119533322hOJJrNjU1KTU+/n5
qdY8+uijcsE999xj6UcnJ5+eOfPEtGkfHzx4akJPFgAAAAAIxYRiY+7u7kpQ
feqpp1pbWz/88ENbQvEkVkxMTFRWyc/PV63x9fWVC6ZPny69lKo1X3V/bpr7
LdPe/Nm037z5f68G/C1sS3btsf7h/ok+dwAAAAAuiFBMKDYmZ9s5c+akpqbK
SyYUiie04kcffSQXnHfeeZbuL52WlqYEZ+mlNy9oazs9/eNvTQuaZtpWTr88
9Jr7E3704o4XvXK8osuiDzUdahtom8DvAgAAfRvsGWwpbZHayPCIaoFh0GDL
zIYmpFV6TvV0VHeMGNQ3a0wqkzrQ3dg90Z8CAPpBKCYUG8vKykpPTzdeYmMo
nsSKL730klxwww03WNpsUVGREopjYmLMC7ZuPT1tyedUQrGF9sVVX7x7093P
bX/uw+wPV5Ws2l2/u75XmMEPwJn0t3NCiwac7Nce+6tYt2lu7jPd2yo/81df
KSPv9t4deEeg9JDPpT6RD0fWZteOu7XqPdXxL8Qv+foSzws95SlQPc73kP53
7c/WliSWWFor6M4gqdL3cl8pR0/BUwIALRCKCcXW2RiKJ7His88+Kxfce++9
ljbS1tamhOKQkBDzgqa+JtsTsaU2O2z2t+K+9cutv3z/wPshxSE76nbU9tRO
4k/rAGCLwe7Brf/cKkUVrTviWpzv13409qgcXbf8ZYvx8hHDyKoHVskPKc39
PPfCmEJLm6raWbXs1mUmq5g0KfxWZlaar1uWWiYXxDyt8rdrABACoZhQbJ39
QvEjjzwiFzz00EOWNiK9QEooXrx4sWpNx2DH5d+9fNr3pv01/qPv+L16wQcP
Tpt7/bQVM88xKV8UetEd6+94autT7+1/L6goKLMu82T3SZIygHNUm13rf42/
lCC8Zntp3RcX4ny/9p6mHt/LfaVn5H2Jt8mpy3v99sopNe65uPJt5fmR+Yu+
tkj6X58v+Jif5Cx9rmX5ZLnPdLeeiJUvjktTSs07E/FghFxwJOqIHZ8zANgN
oZhQbJ39QvGDDz4oF/z0pz+1tBHpw1oJxT4+Fv+8bzyMR0ZOp6ef/t3zQxde
VzbttrRpPw6c9sy7015/Ytr/bp+29KJzTMoXhl54+/rbn0x78p/7/7ny2MqM
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
VaKfHyFm48Uvx5mO/MubNRSLLLgxp4ICMbMSfrmtdpOmvThBx4LIt073FfxS
usES73z8juV9Cty8BABgDAjFEIqpNWsoxlatWkVeDtbW1p4xY8aWLVtGjRpF
hmUcjSnGnSY0azfGv+k8fozWrEG6umLTcevW6I8/UGAgEjOhR2NxuJyM8oxH
WY8uxl3cGLJR30O/q0NXFXOVBg953cOxxzTPadufbr+WcC0oJyi/SsSkHgCA
5iAunZHjQZ1tf1bctjVlNeQYU9F20eRyMr2KDEqBRwPJnML/8O/Hff63NsE1
gX8VudvAI4Ei6+GwOMfU/h2syXu3dyOPgsyYOISK25ZCSUbJS5uXF3tdFLmT
Zg3FIgtuzKmgcOaLfx9GFrg/vL6eX3ou7suQxuC/mp8RmNFUuwUAgOYGoRhC
MbXmDsW1tbUbNmz4TDxLS0uJ7yWbblxdjVxc0M8/I3V1sem4Wze0bx+Kl/bh
sEb5UPfhZeFLpzSnoy+O/ub721DXoS2tWjb4grLedb3xbuPXBK85H3sep++s
CqmuWQAA6ktcOrv+w3UyTRh9aSTuRbbxP/hxfELq9Pr4xGNi7SndU8Jr66rq
Pobi26JDsbi0iJl0+3eepjvL7jTyKMiM6bnZU+JpLH5djKsNOhZ0d/ldyzGW
p9qeIvcp+1AssuDGnApxWDUssn0j5wLmf6Y40qohM0OJ9D7lPblb/ofQAQBA
zkEoZlAo5nK5MTExrq6upqam+/fvX7FixbJly7Zt23bmzJkbN24EBARUNu1d
vP84iv9l++8e5ubb0MbGplu3bgJxeOzYsSEhIdK8l4y7cX4+On8eDRtG9dAx
XmtignJlOyUFh8t5Xfba642XSYzJ2uC1E9wmtLdr3+CY3Mq61ai7o1YErjgd
ddo90z2tNA0eTwag8cSlM/5hiqV5uS5yJbcl06vI2WPJUGzcyVh4rTShOCMo
Q9zhWI21ItoQIxg35ijIjBl2QfCxaH6vfF7Z6dtJ3LMsQ7HIghtzKsQpySwh
27+0eSmxPYU3Tz5e0vXZ69OYXfGrKq4id/vM9FlT7RYAAJobhGL5D8WlpaU4
CP/555/Eh0WhRYsW06ZNu3Tp0uvXr+muuiEKCgoePnzo4ODg7e2dkZEh/YZ0
deO4OLRnD+rcWcJDxw4O6MMHyXtrJkXVRU9zn1olWe0O2z3z4czeTr3VLNQa
83jyIr9Fx14cc013TShOgGmhAKgvcemMf46ek61PSnyJDMUiY0jw38Hk9Urh
tZ+EYjG3T1PcB0uO4uX4s2Mjj4LMmJGWYi9cvjB/ITJRGmoaWo6xxOGuOW6f
vjH5BnUoFllwY06FOPyhuJGXd6tLqw01DIld4Q9Ryq0SbieYfWPmsc4jzjkO
51+Ru4VQDABgIgjF8hyKs7Ozd+zYoaOjQ52FRZo+ffqTJ0/oPgIZobcbczjI
xwctW4Z0dMSm41at0PLlvGaUA4bJSA27Jq4oDqfa45HHl/gvGX5nuI61TsNi
srqFen+X/nO95x4MP+iU5hRbFFvLhuFGAaAiLp1Z/s+SWO4w3aG++2zuUCyw
nB8Z/YjHmRtzFBJD8euA1+QjzPhlPsLc7y+/eJf4/Ph8cnIi8qZl+6n1DsVR
tqLn28NxuwGhuDGnQhz+26cbPxEwGfaPqhwtf1cuzSb4rJIFJLsnCzcoTi8m
G8Q5xTWyQgAAkBkIxfIZil+/fr1mzRpNTU1xmVdLS6tr1659+vT54osvVFVV
xTWbOHGin58f3UfT7OSkG3/4gOzt0ZQpvAvE4tJx585o924ULdV4KrJDzKHs
9cbLOMZ4VdCqsffGtrVt25iYPM9n3qGIQ86vnHH6hpgMAD9x6ezu73cpoisJ
xyLhhc0dip8ai/5Xsqb84yBdgUcDG3kUEkMxzt3k2z05I/pb38sDLxMN7H6y
418u7rRzWBxynxHXIkTu83yP8w0IxY05FRRO650mdvtoh4QhKCXiH2vLY52H
xPZl2WXklxLGnY3xqRNuk/08m9wnxV33AAAgb+QkTUhP4UMxjieXLl3S1tbm
z7YqKiqDBg3auHGji4tLampqWVkZ/yYcDqewsPDly5empqbz58/v2LGjQDRe
vHgxPhV0HZEMyFs3xoWcO4e+/VbCTMdnz6LsbLprFe9d5Tv/bP9LcZc2hmyc
5D6pwRMo45g8wGXAfJ/5RyKO3Eq/FV8UDzddA2X2MZ21/CSdkdEVv177i34E
Jj8u31DD8GTrk2bfmIWbfZw4uLlD8dVvr4qsJ/RcKLktMaNQY45CYig27WNK
NLjU/5LIBuXvysnBnG0n2fKvEnfa+d+XyPUCSt98nLKqXqG4MaeCAjk39J2l
d6RpT+FDwYdTuv8OUIbTbnY41T9I7Dq27URb8ogCDgeIbMY/ydT7VEX+xQMA
oGDkLU1IpNihODMz88cff+TPs8OGDbty5QrOvPXaT1RU1IYNG1q3bk3uByfl
u3fvNlPZtJPbbhwfjwwMUNeuYqOxqirS10fXr6Nyqe5co1lRdVFIbohFosX2
p9unek7t5tCtYTFZw1JjoMvABb4Ljr446prumlicyOLU71oJAMz10ublv6lB
9SiX83EWt9zoXDJk4dAnPC8wl8u9+cvNj5fh+J7zbe5QjF9J9wRn7an9UGvU
8d/Bk407GRMT9TbmKCSGYvIiKU5nwmtxPdbjrMk94z/zrxV32rGzHc4Sq873
OF9b8cmdLbh+/kGk6xWKG3MqKDjMcKD+pqJewi6EkQWcbHPylc8rkc1wInZf
4062NNQ0LM0qFdny2cVn/6Zs9WN1lfD9JwCAMeQ2TYij2KGYvMirqam5evXq
iAjRt3JJqaKi4tq1a/369SOj8YMHD5qqVLki592Yw0H+/mjlSt50xuLSsbY2
WrwYeXoiFqPSYXlteXh+uG2y7e6w3TO8ZvRw7NGw2ZNxTB7sOnix3+ITL0+4
Z7q/LnvNbaYpnwGgW5xzHBkucJjisDhkXHqw4QG5ymaCTUlGCbkVq5rlucmT
XHt16CeBSAahGCcm/mdIcSYyH2FOruW/ytngo5AYim0n2ZKXNdP90vlX4UQs
MCS12SAz/gYUpx1HXXKV22o3vCtieUVexa2Ft/j3Wa9Q3JhTQSHU5L+r86oi
Zp2uL3wergy+QpaBk+zd5XdzInL460y8m0heoydeFFN0ucx3+fd4v7dpZG0A
ACBLcp4mhCl2KG7VqpWKisqSJUvqNfYyNRaLZWZm1r59e/xBu7i4NNVu5QpT
unFVFXJyQjNmUM103K4d2rwZhVFNSCLXKuoqnuc/t0m22RW2a5rntAZfTdax
1hl9d/SfQX+ejz3v+9Y3t1K2s1sB0GyyQrP488VRFV4SqSmrwauqiqrOfPFx
yOITrU44THfw3u3tvtbduLMxufxv7b+znn4yk7gMQjFRKk52Xlu9nGY7kbfd
4pfVWCv+a68NPgqJGfNjHvwnF+P49uziM/8D/tbjrQ01DT8p9bOjpz8/zV8V
xWnPCMzgX3Vc67jl/yxxSiXvxG5wKG7wqaBQmFxIbpjikSLlVhTK35VfGXJF
4EhPtjmJF174+gJ5jOQr+Hgwxd7Iy+7iHvoGAAD5xJQ0QVLsULxq1Sp8gM2x
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
8uXC2eSsrCydK4aFhQkr3r+v49EAzHVjAAAQS1ISNxSVxvTihdhlmQ9NuCdP
klmzSLt2XPI1JiAXLUpatSI//ki/qYkYd1/JV0pWSkJmgsZE46fYdRnyXPF8
4+2NXSO6uga5GkjH5TaU8z3tezzpuFKFixKAAcylCXmGYl5kZGTTpk31xeGi
RYv6+/vry5WWplQqaS+6dOnSkSNH9LUZOHAgX2rFihWFmSdOnBB24dixYzpX
HDNmDN+gfPnyOhsw140BAEAsNWroSIX/P9CFrcnNJRcukAULyGefkVKljArI
Tk7E25sb12vXLu4pUWBRPvt9tOPkoBODxK7LKC9zXm69u7XPkT5vrXnLQDou
s77MsJPDjjw8kqvKFbtkAL2YSxNyDsXkn1PG586dW7du3bRp03r37t2mTZsh
Q4bMmzdv165d4o6WdvLkSSHbXrumY6z+58+fu7q68g369u0rzKdvgbu7Oz9/
7Nix2ivSuC2Mv/3FF1/ofHXmujEAAIilRQvi5aU5LVkidlmWl5dHYmLI0qWk
Vy9SrpxRAZl/FPKwYWTjRhIfL/YO2KL+x/p7hXhpTH5n/cSuq2Be577eFb/r
y2Nfuq91N5COS68r/e3Jbw89OJSjyhG7ZABNzKUJmYdiyaLHWRgNbMqUKdoN
RowYIaRmmuvVF3355Zf8fDc3t7t372qsuGrVKmHFHTt26Hx15roxAACAuG7d
IoGBZMAAUrWqsQG5cmXSrx9ZsYJcvYqBrEGHbGV2eHz4gOMDSgSXMJCOPdZ5
fH3i6wMJB5COQTqYSxMyD8VxcXGLFi3q1KlT/fr1y5UrV6ZMmXr16rVr127m
zJk6z89aU9u2bfno6ujouH//fmG+SqUaNWqUEGy7dOmiseL58+eF26UrVaoU
GxsrLAoODqZb4xfVrl2bbkrnSzPXjQEAAKQjIYFs2EC+/ZbUrm1sQC5Virsk
e948cvYsyUGygf9SKBX7EvYNPjG4VHApA+m4ZHDJgccH7r2/l6ZpsUsGuWMu
Tcg2FN+/f79Pnz76bijm0VgqPLbY+uhbI5wspjp06DBlypRu3bqVKlVKmFmx
YkXtc8HUkCFDhDZubm409Y8ePdrb21sIyzQa6xx3msdcNwYAAJCmJ0/Ijh1k
/HjSqBFxdDQqILu6ktatuXG6IiJsasgyKLwcVc7BBwe/+fMbj3UeBtJx8bXF
+x/rv+f+HqRjEAtzaUKeoTgmJsbT09NwIuYVLVpU/Sytla1atcrAENm0s926
dUvnigqFwtfX18B+BQYGGnhd5roxAACA9GVmck96ommXZl6afI0JyA4O5IMP
yKhRJDSUPHwo9g6AZOSqciMeRgw9OdRzvaeBdFwiuMTA4wP3JexTKBVilwzy
wlyakGEofvr0aZkyZdQTYp06dTp27Pjdd9/RIPnZZ581aNCAf94076233rp8
+bJY1Z4/f157iOzixYtPnz49LS3N8Lpr166tUqWKxrrNmjU7ffq04RWZ68YA
AABsycnhrpSeN4906WLsQNZ0qlqVfPUVWbkStyHDv5Qq5dHEo8NPDS+7vqzh
dDzoxKD9CfuRjsE6mEsTMgzFNE4KCfGTTz45efKkdpsbN27069dPOEvbpk0b
69epLjEx8ejRo5s2bdq2bRtN6AV6UNSTJ08OHjxI142IiIg3brBL5roxAAAA
u2i8pSF3xQpu3K3KlY0NyCVLkk6dyK+/klOnyOvXYu8DiE2VpzqRdGLE6RHl
N5Q3fN/x4BODMSoXWBpzaUKGoVi4cLp79+55Bv/MOnv2bCE+i3iy2PqY68YA
AAA2Iz6eG6dr2DBSty6xtzcqIBcpQpo1I5MmkfBwPA1Z7mg6PvnoZL7puFRw
qa9PfH3wwUGkY7AE5tKE3EJxSkoKH3LLlClD9yXf9p9++inffvny5VYoTyKY
68YAACCWpCRusGWNCcNDmUtaGtm7l0ydyj0P2sXF2JPIdepwY1+vW0fi4sTe
AetKyUpJyEzQmJ69fiZ2XeLgzx37nvYtt6Gc4XT8zZ/fHHpwKFeVK3bJYDuY
SxNyC8WRkZHCaWJj2v/22298+/Hjx1u6NulgrhsDAIBYatTQEcpmzRK7LFuU
nU3OnCFz53IPb/LwMDYgly1LunYl8+cT+uss29aHIvbZ76Md+gadGCR2XSKj
6fh40vF87zv2WOcx5M8hEQ8jkI6h8JhLE3ILxY8fP+ZDblf6DWGEwMBAvv2P
P/5o6dqkg7luDAAAYmnRgnh5aU5Llohdlq3LyyPXr5OAADJwoO6/S+icXFxI
8+bcVda7dpGUFLH3wQL6H+vvFeKlMfmd9RO7LqlQqpTHEo99d+q7MuvLGEjH
pdeVHnpy6NHEo7S92CUDq5hLE3ILxYT7m3YN+h6VLl06MzMz38aDBw/mQ3FE
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
0p38RmCuGwMAAACArGRlcSd/16whY8eSTz4x5VnJ/BjX9euTL78kc+aQvXvJ
/ftE4mM8x2fE//z3zzW31NQXjZ1WO3128LPtd7crlAoR62QuTcgzFOfl5Q0b
NowfccuwqlWr0kMkdr3Wxlw3BgAAAACZoz9dDx0iCxaQAQNIw4akaFFTYrK7
O/cMqaFDuSu3jx0jycli75Uepx+fHnpyaIngEvrSscc6j5GnR158clGU8phL
E/IMxbzIyMimTZvqi8NFixb19/fPysoSu0wRMNeNAQAAAADUKZXc4F3btpGf
fuIGqa5Vy5Qrrunk6UlatSIjRnCPXT55kjyT0jO+Xue+3hK3pcP+Do6rHfWl
43pb6y2MWZj8yqrxnrk0IedQTP45ZXzu3Ll169ZNmzatd+/ebdq0GTJkyLx5
83bt2pWYmCh2daJhrhsDAAAAABiWlUWiosi6dWTiRNK+PalUyZSMzI/f1aYN
98TkgABCc8/z52LvGCGPXj1acHkBzb8GLqvucrCL1S6rZi5NyDAUP3jwIDY2
9v79+8Y0jo6OXrNmzaRJkxISEixdmHQw140BAAAAAAoqLY17XPLy5cTXl3vA
XMmSJsZkmq9pyvbz4+5xvnCBZGaKtkdRT6PG/DXGc72nvnRcel3pUWdG/f3E
sveHMpcmZBiK69WrR9+jypUrG9O4fv36/NXU+/fvt3Rh0sFcNwYAALEkJZGE
BM3pxQuxywJZSslKSchM0JievZbS1a4geQ8fkoMHyfz5ZNAg0qgRcXMzJSPb
25OqVUmnTtwp6bVruZickWHVvchR5ey8t/PzQ587rXbSl47f3/b+bzG/Weiy
aubShGxDcaVKlYxpXKdOHT4Ur1q1ytKFSQdz3RgAAMRSo4aOH4SzZoldFsiS
z34f7V/+g04MErsuYFheHrl7l4SHk19/JV99RT74wMTxu+hUpQp3Nnn8eBIY
yF10nZ5ujfpTslIWxSyqv62+4dGqd9zbYd7LqplLEzYfiuPj42/+V7Vq1eh7
5OHhcdOgmJiYJUuWODg48KE4NDRU7F2xHua6sbaoqKiz/4iLi1Off+XKFX7+
jRs3xKpNXWHqof94+XXv0g9rAACRtGhBvLw0pyVLxC4LZKn/sf5eIV4ak99Z
P7HrApuiVJJbt7gnJv/yC+nTh9SrR5ydTYzJFSuStm25e5NXreKu4rboEF5R
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
0UknikqnEgDLyc7mnp68fTt3pXT//qRx44KPd132ll23KXbzK+hLx9+f03GH
oAQhFEvcxYsX7fSoXr16RkaGRnsfHx9+adu2bfVtk75Nwkb++OMP7QZyC8Xq
p2V9fX1TU1M1tvbw4UP1K5ktHYqvXbumXs/Tp081Nnj//n31ehCKAaCQpBBI
pVADiE46UVQ6lQBYWVISOXaMrFjBjb7VoQOpXp27fDqfaGyvtHt/n9133e1W
OGuE4pW7r4u9Q0ZBKJayBQsWFC9eXF8opmrUqKHxkGLh+cX6xqwm/wywLGxh
zpw52g3kFopDQ0OF9hs2bNC5wcDAQKuFYvV6Nm7cqHObK1euRCgGAHORQiCV
Qg0gOulEUelUAiC616/J1avcCeXZs7kHKDdtSkqV0pOO33pi12aRnX+9f0Px
lKZxcWJXbxyEYsmaPXu2EF2dnJz8/PwOHjwYHR1NE1Pnzp2FRTQ1q+fiFi1a
8PM7deqkb8tKpVJYXedjm8qW5W6Nj4yMTNBP+3SqpBQoFP/yyy9Ce7prOjf4
8OFDq4Vi9Wun1S/kVnfv3j2EYgAwFykEUinUAKKTThSVTiUAEpSZmXnp0sPt
2x/Pn//M1/eFj8+rd97JKVIk7006rhpp9+Vwh2Ybc9m4pRihWKKSkpKKFi3K
59ZSpUpFRUVpNAgKChKC7YcffijM79ChQ75nimk3NnxPsfCwJwNoFjPXzlpC
gULxxIkThfa0D+vcoEqlGj58uHVCsfotzLl6PkoUCgVCMQCYixQCqRRqANFJ
J4pKpxIACQoICNCVD2iCqG5nR8PIGDu7ZXZ2hz/6SPNOT8lCKJYmf39/oXvp
u6B36NChQptjx47xM3v27MnP8fb21rfxR48eCSuGhYVpN+BHva5UqZKXflOn
TjXLnlqI8aGYpl3h/tyxY8ca2Ob3339vhVCsVCqFxnSpgXrGjx+PUAwAZiGF
QCqFGkB00omi0qkEQIJCQkIMxASKP8V25coVsSs1FkKxNPXo0YMPrWXLltXX
Jj4+Xvsq6JEjR/JzKlSooG/FyMhIYUXtJyATmd1TrB5CaTo2sM1ff/3VtFCc
k5NjfCh+9eqV0Hj06NEG6hEez4RQDACFJIVAKoUaQHTSiaLSqQSARcylCYRi
aWrUqBEfWhs3bmygmbu7O99sxIgR/Jzly5fzc+zt7bOysnSuFRYWJoTi+/fv
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
trp160ZFRVll/4ANhQ/FUk4TCMU2bO3atVWqVNHobM2aNdP3jNfHjx8Lf6jp
2bOnWbYJcmOWXqf+9HYj7du3z4p7CdJiic86DdHR0cKW8VAwIJbpdSdOnGjc
uLH6+Tu7f54k++OPP77GMINggV6XlpY2dOhQV1dXjW2WLFly9uzZ6tdUA1Az
Zszge0jt2rX1tWE3TSAU27wnT54cPHhw06ZNERER8fHxkt0m2BL0ELA+9Dqw
Pkv0OoVCcfHixS1btoSGhp4/fz47O9ssmwWbYfZep1Kp7t69u3fvXrrNI0eO
JCUlFX6bAPmS2rc2QjEAAAAAAADIFkIxAAAAAAAAyBZCMQAAAAAAAMgWQjEA
AAAAAADIFkIxAAAAAAAAyBZCMQAAAAAAAMgWQjEAAAAAAADIFkIxAAAAAAAA
yBZCMQAAAAAAAMgWQjEAAEDh0W/A+Pj4x48fq1QqsWsBAACAAkAoBgAAW6JU
Kjt06ND2HydPnrTCKx46dKhRo0Z2/8/JyYkWYIXXNU16errGnJ49e/KHKzw8
XJSSjPH555/zRR48eFDsWgAAwNYgFAMAgC3JyckR8unGjRst/XKXLl1ydXW1
+68+ffpY+nVNkJmZOXHixBIlSmjM/7/27jw2qqr/4zjYIhTBlKUVKCBU0CKg
yFpksYLKEnYRCrEalQCiMSBQCIILSyJBREUBIVQgGiqLQiRIC0gQAqIPKrQQ
JbYVaCihP1oKP5qSls7vG06eby4zd4ZhLjP82nm//niC55x7z3Jn0vk8d5MS
M+yPP/74rgzMH/fee68Z5IoVK+72WAAA1Q2hGABQnYQyFFdWVrZu3bqGhwUL
FgS13wD8+uuvcXFxMra6deu6VRGKAQBhjlAMAKhOQhmKc3JytK/OnTtv3bq1
qKgoPz//0qVLQe03ACtXrjTj9AzF0dHRpmrZsmV3ZWz+IBQDAIKHUAwAqE5C
GYqPHDmife3cuTOofTnkIxQXFhaeu6GsrOyujM0fhGIAQPAQigEA1UkoQ/H+
/fu1r7/++iuofTnkIxRXCYRiAEDwEIoBAA5JDr12g5ZcuXLlxx9/lCC2ffv2
s2fPurWvrKzMyspas2bNli1bsrOzy8vLb9lFRUXFqVOntm3btmrVqr179xYW
FvoYjD+h+Pz587t27ZIRZmZmXrhwwY9Z3kTGLPPdvXu39vX333+bRdBXMpll
kf81/ynrkJaWtnnz5tzcXM8dyppIA9mhTHD16tVbt279999//RmJ/OU9fPhw
enq6zGXHjh2Szd3WU8Yjw/jss8/MOKOiosw4dWBmLkLG4K0X/9ffZfd5kEEe
PHhQts3IyPC9rTeeoTgvL2/jxo1yiGXKPkbuxv/jHtgsdDFvycfHPtiDdNIj
AFRLhGIAgEP333+/CSznzp3bs2dPYmJiZGSkpsWIiIiUlBRJVdJSfr1Pnjw5
JibG+liqhISEn3/+2dvOL1++PHPmzDp16tS4WbNmzT7//HPPNOQ7FMswFi1a
9MADD7jtLS4uTkK6/1O2fb6WMWPGDNNGc1x+fv7o0aNr1qxp/lP+MWrUKN3V
oUOHkpKS7rvvPs9dxcfH+7gqu6Cg4K233mrQoIHbVjK29evXazafMmWK7Tjr
169vGjRq1MiUSHB2vv4uy+fhzJkzR48e7dGjR61atazbtm3b1scRt2UNxbIm
5qFhKjo6euLEiaWlpd42D+C4BzYLKbRdbU+NGze+W4N00iMAVEuEYgCAQxro
JCXVrl3bNgLMmjVL/kYMGjTItvaee+6Rn/See87IyGjSpImPZNGvX7/Tp09b
N/ERinNzc3v16uVjbyNGjPDz5FrLli297WTq1KmmjUzKlIwZM8atTc+ePV03
IsmECRM0LHszbdo0zwEcPnxYYqmPrZKTk01ilbRo2yAqKsrsysfTpwNYf+vn
IS0tTVObm4iICNsM7o2G4jZt2ujCuunYseOpU6c8tw3suAc2Cx//b4kbCfJ3
a5BOegSAaolQDABwyPMsZ+PGjUeOHNm7d29rYXx8vPmH5KyhQ4cmJSVZE3Tf
vn3dditpy3oaVLYaPXr09OnTBw4cWK9ePS1PSEiwXj7qLRTL36/mzZtrVUxM
zPjx4+fMmTNq1CgZrZY/9dRT/kx58uTJw4YN6969u24o0xl2w/r1600bb9lN
rFq1ShpISy2RxoMHD545c+a8efNefvnlpk2bapWEGrcrrs+ePVu/fn3rykju
njt3rszIeqLwvffek8arV6+WUbVr107LzTilsdmbt1Ac2Prbfh7atm37/PPP
y+fBOry6desWFRX5s9ouSyhWiYmJU6dOffHFF60nOuPi4uSniHXDgI97YLOQ
Jepm58knn+zXr591b9YeQzxIJz0CQLVEKAYAOGT9ZR4ZGfn999/rtbvW3GdI
kNHYkp+fbz3daX2TUXl5ueQIrRo3btyVK1e0Nicnp3Pnzlq7aNEirfIWiiUz
anlycvLFixe1Sv66PfPMM1q7adMmPydufdCW5y3A1lAsqWThwoW//PLLmjVr
xo4dW1xcLA10Cg0bNszKyrJue/Xq1UmTJunms2fPttYOHz5cqyTFWNftxIkT
sbGxpioqKkoXzceDtmxDccDr77r58yCx2noUZOKdOnXSWv/fjGwNxfLvtWvX
apUcyv79+3vbZ8DH/Y7PQvagm8THx1tv3Q39IIPxdQCAqotQDABwyPrL3PNd
t9b09Oyzz7rVfvfdd1r7+++/a/kPP/yg5SNHjvTstLS0VK9hlvR35swZU24b
ivPy8vSu2F69emlmVxUVFV27djUNHnzwQbezjd74H4qXL1/uVnvgwAGtXbdu
nefOy8rK9ObrF154QculI93QXIbtZseOHdpgw4YNpvB2Q3HA6++6+fOQlpbm
tmF+fr6MwdSOHj3ac8+2rKHYnGe3koMuR83UxsbGym8VU+7kuN/ZWezbt0+n
EB0dffLkSa0K/SCD9HUAgKqLUAwAcEh/mbdr186zdvLkyfq7/eDBg261Eqa0
dtu2bVqemppqCiMiIqwJwkqypG771VdfmULbULxkyRItPHbsmO3erFny0KFD
/kzcz1AsscLzgVRHjx6dPXu2pN0+ffp4e0JU3759zR6GDBmihZKvtdPMzEzP
raSv1q1bt2rVasCAAd98840pvN1QHPD6u27+PNg+iUvn1b9/f9s9e9JEGR8f
b/vcZp2g2LNnjyl0ctzv4CxOnDghQdg0joyM1OHdrUEG6esAAFUXoRgA4JD+
Mp8wYYJn7fvvv6+/rs1lw1YlJSVau3nzZi3v2bOnKXz66ae99Xv9+nXtWi8w
tg3F+rCpmJgYb3uTkegzr/S+YN/8DMUDBw70Z29WeXl5aWlpDz30kOcexo4d
awpjY2P93+HthuKA199l+TwkJyfbbqhT6NOnj5/j11A8f/582wZXrlzRY6Gv
bXJy3O/ULAoKCvQstvB8qnPoBxmkrwMAVF2EYgCAQ/rL3DzZyc2iRYtMrYQv
z9rS0lLNC1u2bDGFFRUV+pgg26CtOnToYJqNGDHClNiGYkl2WtjEO20zd+5c
fybuZyh+8803fe8nNzdX5v7BBx+kpKT06NFDzyoqayhOSkoyhd26dfNnkMZt
hWIn6++yfB5mzZplu9Urr7xiGvTq1cvP8Wso/vrrr721adiwoWmjDwB3ctzv
yCzkV1OXLl10/6mpqZ5tQj/IIH0dAKDqIhQDABzSX+ZLly71rNVQ3LRpU89a
21Asf2s0Uc6bN89H10OGDDHNOnbsaEpsQ7H1Qbv+8HbezY2fofiTTz7xtofM
zEzrQ6K8sYZifY609WXHt3RbodjJ+rssnwdvE3/11VdNg969e/s5fg3FtleM
G4899phpM3z4cFPi5Lg7n0VFRYWujzletlc4h36QQfo6AEDVRSgGADikv8xt
X4e6cOFCU9ukSRPPWmso1suny8vLIyIiTOG7777ro+sBAwaYZl26dDEltqHY
+paZ+n64s6HY84pZ48svv7TNIBIAe/TokZqaanv5dPv27U1h8EKxk/V33erz
4HJ2ptjHbww9bf3SSy+ZEifH3fkspkyZor1369bN253joR9kkL4OAFB1EYoB
AA7d8VAs9DbM1157zUfXCQkJptmgQYNMiW0oTkxMdGt2RzgJxT/99JMGTxMq
58yZ8+2332ZnZ8sUTBu9zFWyp244bNgwU9i9e3f/h3q79xQHvP6uIIfi7du3
e2tT/7/vbtb7jp0cd4ezsD7MqmXLlgUFBd46Cv0gg/R1AICqi1AMAHAoGKFY
35SalJTkrd/y8vKoqCjTTE8O2oZiqfUxBlVWVubPfJWTUDxhwgTddvHixbb7
f/TRR00DWQ0tfPvtt285F4m3EnzGjRv34YcfmpLbDcUBr78ryKHY23XChYWF
up76zG0nx93JLDZt2qRPqZKofvz4cR+9h36QQfo6AEDVRSgGADgUjFD8+uuv
m0KJltnZ2bb9rl69Wrf94osvTKFtKNYxiL1799ruLSsrq1atWhJhOnTooHvz
zUkobtu2ralNSEiw3fm5c+c0WFmT6YoVK245F727Vt/lpKFYYqxbY9tQHPD6
u4Icir3dwLtgwQIdzJEjR0yhk+Me8CzkV5C+BTgiImLnzp2+pxb6QQbp6wAA
VRehGADgUDBCcUZGhpYPGzbMdsMWLVpocNPLU21D8Z9//qkRVULotWvX3PZW
WVmplyWLffv2+TNxJ6FYH5X81FNPedbKX1tJMbpza6L5559/NCHansbNzMzU
DdeuXWsK09LSdK2uX79ubW8bigNef1eQQ3HNmjV37NjhVltUVNSgQQPToGPH
jjpBJ8c9sFmcOnWqUaNGukN/4mToBxmkrwMAVF2EYgCAQ8EIxWLEiBFaNWbM
mMuXL2uVBMMnnnhCa60PArINxS7Lqc8aN97ZmpeXp1Xyx+uNN97Q2scff9zP
iTsJxfpmpYiIiD179lir5E+t2yOp27dvb20wffp0rRo/fry016rffvutWbNm
pkqOS2FhoSlPT0/XTWQ85eXlGoVsQ7Er0PV3BTkUizp16uzevVurcnJy9OFj
NTweTx3wcQ9gFrLabdq00R2+8847fs4ulIN02CMAVEuEYgCAQ0EKxbm5uXoZ
qoiNjR01atS0adOee+457bHGjacYFRcX61beQvHFixetp/Dq1as3aNCgGTNm
TJw4UVNkjRu33Pr/V8xJKJYEqttKLk5JSfn0008lRvXu3dsaAI0GDRpYT+9e
unQpJiZGa2X8Y8eOlbkMGTJEOxUbN27UTQ4dOmTdYc2aNSMjI0tKSlzeQ3Fg
6+8Kfig24+/UqdOUKVOGDh2qz9cSgwcPdtsw4OMewCzk8FkH2apVK1k06bGO
F3LEQz9Ihz0CQLVEKAYAOBSkUOy6cXum3ntrq3Pnzjk5OdZNvIVikZ2d3bVr
Vx97k+R1yztArZyEYgm5+nBpW4888shHH32k/2k9NyqOHz+uNw57kszodpqy
rKxMX3CsDh8+7PIeigNbf1eQQ3FKSoreau0mOTnZejpbBXbcA5jFrFmzfPTi
SR+DFspBOuwRAKolQjEAwKHo6GjzK3rlypWetYsXLza1LVq08KyVPxz6ZqJt
27Z5Nrh69erUqVOtb1Y1JKwtWbLE8wG51nfspqene9ZKSI+Li/P8/T9p0iTP
YOub9fRrfn6+W23t2rVN1bp162w3Ly0tnT9/fr169awjkcT38MMPL1u2TFZG
ZqePd542bZrb5teuXUtNTfVcme7du5u060ZGmJiYaE2UGzZscFneWrt8+XLP
rW53/V23+jyIiRMnmgY+Hm3tRtNfVlbW+vXr9XZmo3nz5t76MgI47gHMYu7c
uTVux9KlS0M/SIc9AkC1RCgGAFQJBQUFGRkZa9eu3blz58mTJx3urbi4+MCB
A2lpaZLEjx8/br0tN8QkdR47dmzr1q2SnY8cORLASM6dO7dr1y6Zy/79+y9c
uOC78fnz5//44w+Z8sWLF2+rlzu7/s6dPn06PT1dDp9M3/+t/v8cdx9CP8gq
sSwAEDyEYgAAAABA2CIUAwAAAADCFqEYAAAAABC2CMUAAAAAgLBFKAYAAAAA
hC1CMQAAAAAgbBGKAQAAAABhi1AMAAAAAAhbhGIAAAAAQNgiFAMAAAAAwhah
GAAAAAAQtgjFAAAAAICwRSgGAAAAAIQtQjEAAAAAIGwRigEAAAAAYYtQDAAA
AAAIW4RiAAAAAEDYIhQDAAAAAMIWoRgAAAAAELYIxQAAAACAsEUoBgAAAACE
LUIxAAAAACBsEYoBAAAAAGGLUAwAAAAACFuEYgAAAABA2CIUAwAAAADCFqEY
AAAAABC2CMUAAAAAgLBFKAYAAAAAhC1CMQAAAAAgbAUpFP8HAAAAAICqIBih
GAAAAACAquIOhmIAAAAAAKoZQjEAAAAAIGwRigEAAAAAYcuE4suXL5eUlJSW
lt7t4QAAAAAAECKSgiULSyIuKysrLi6+evXq3R4RAAAAAAAhIilYsrAkYpfL
VVRUJOmYXAwAAAAACAeSfyUFSxaurKyUUHzt2jUJyNxZDAAAAAAIB5J/JQVL
Fnb9lzlxLOXcXAwAAAAAqK4k/JpELP9w3cyUm+uoicYAAAAAgOpEcq65atqc
EXbZMddRi5KSkv8FAAAAAKC6kJxrAq/1qmlbZWVlkp3/BwAAAACA6sK8fcl3
HAYAAAAAAAAAAAAAhIP/A63Mx0w=
     "], {{0, 514.}, {643.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{643.5, 514.},
   PlotRange->{{0, 643.5}, {0, 514.}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`fob = 3, $CellContext`z = 
     0.6, $CellContext`temp = 92}},
 CellTags->"Snapshot",
 CellID->1181533135,ExpressionUUID->"370985b5-26e5-41b8-bb1b-2e00c4539843"]
}, Closed]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->"SourceInformationGroup",
 CellID->62407265,ExpressionUUID->"46e16c05-87aa-4924-807f-72e951327394"],

Cell[CellGroupData[{

Cell[TextData[{
 "Contributed By",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"AuthorNames", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "'John Smith' for single authors; 'John Smith, Robert Ford, and \
Jane Doe' for multiple authors. To credit people other than Demonstrations \
authors, please see the 'Details & Citations' section."}], "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNames"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "0f456574-a32d-493d-a64e-32680c27ade3"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "AuthorNames"},
 DefaultNewCellStyle->"Item",
 CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
 CellID->255368948,ExpressionUUID->"32662e70-46c2-4609-b359-0e939866caab"],

Cell["Garrison J. Vigil", "Text",
 TaggingRules->{},
 CellID->674391989,ExpressionUUID->"2f94dd10-e0ff-4774-9d24-067fcb231478"],

Cell["Rachael L. Baumann", "Text",
 TaggingRules->{},
 CellID->697349035,ExpressionUUID->"de530dc5-3e65-466f-9f76-852213e96b55"],

Cell["John L. Falconer", "Text",
 TaggingRules->{},
 CellID->305283414,ExpressionUUID->"cc6295cd-7c50-488f-a177-be4d611f6570"],

Cell["Nick Bongiardina", "Text",
 TaggingRules->{},
 CellID->966738182,ExpressionUUID->"a681c6aa-6e76-4cbd-9615-b15a496f533d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details & Citations",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"DetailCells", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "This optional section is for a more detailed description of the \
Demonstration than the caption, but it should still be as concise as \
possible. This section may also include numbered snapshot captions (e.g., \
Snapshot 1: phrase or sentence without an initial capital and without a \
period, unless more than one sentence is used) and explanations of the ", 
           StyleBox["Manipulate", "MRbig"], 
           " control labels. Define any symbols undefined so far. Include \
only text in this section \[LongDash] no code, graphics, etc. Do not change \
the cell style or copy cells from other sections. \n\nA book reference uses \
this format: \n   L. D. Schmidt, ", 
           StyleBox[
           "The Engineering of Chemical Reactions", FontSlant -> "Italic"], 
           ", New York: Oxford University Press, 1998. \n\nAn article \
reference uses this format: \n   D. Pearson, \"A Polynomial-Time Algorithm \
for the Change-Making Problem,\" ", 
           StyleBox["Operations Research Letters", FontSlant -> "Italic"], 
           ", ", 
           StyleBox["33", FontWeight -> "Bold"], 
           "(3), 2005 pp. 231\[Dash]234."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDetailCells"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "6f7cca5c-0315-4973-b997-9adc659dcf20"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "DetailCells"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
 CellID->441931514,ExpressionUUID->"388f8e3a-f0e4-434c-985f-61ec2c8a9932"],

Cell[TextData[{
 "The saturation pressures ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["P", "i", "sat"], TraditionalForm]], "InlineMath",
  ExpressionUUID->"32043478-1365-4e78-9b1b-0d7c55dd119f"],
 " were calculated using the Antoine equation:"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.6448612691090956`*^9, 3.6448613230051785`*^9}, 
   3.6452089720821033`*^9, 3.6452092093737063`*^9, {3.6466655647360477`*^9, 
   3.646665578353272*^9}, {3.6863261744410505`*^9, 3.686326195234167*^9}},
 CellID->211747867,ExpressionUUID->"0d765d39-5518-409b-bd44-0fa74954f890"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["P", "i", "sat"], "=", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["A", "i"], "-", 
       FractionBox[
        SubscriptBox["B", "i"], 
        RowBox[{"T", "+", 
         SubscriptBox["C", "i"]}]]}], ")"}]}]}], TraditionalForm]], 
  "InlineMath",ExpressionUUID->"6aba5865-11d2-4558-9b2b-f92d0e9dbcdc"],
 ","
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.6448612691090956`*^9, 3.6448613230051785`*^9}, 
   3.6452089720821033`*^9, 3.6452092093737063`*^9, {3.6466655647360477`*^9, 
   3.646665578353272*^9}, {3.6863261744410505`*^9, 3.686326191382551*^9}},
 CellID->101825244,ExpressionUUID->"058b6fa6-c23a-4b6f-b535-bd5a617530e8"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]], "InlineMath",ExpressionUUID->
  "2e07e857-fd2a-4e72-bd64-2e95c9f55444"],
 " represents either benzene or toluene (",
 Cell[BoxData[
  FormBox[
   StyleBox["B",
    FontSlant->"Plain"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "b27d06e9-6ac2-40f8-900a-58c14cc2cc7c"],
 " or ",
 Cell[BoxData[
  FormBox[
   StyleBox["T",
    FontSlant->"Plain"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "f84401f2-3d65-4011-916b-1e912711319d"],
 "), ",
 Cell[BoxData[
  FormBox["T", TraditionalForm]], "InlineMath",ExpressionUUID->
  "28c4a358-860e-452f-8642-eb345b4f2c2c"],
 " is temperature (\[Degree]C), and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "i"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "a3372c85-541a-4dad-93a8-b52b2abcccf6"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", "i"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "e659dfb5-ca01-497a-801f-bfd9969b5861"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["C", "i"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "a64f1690-85a4-4a2c-a43c-fadce6e9317f"],
 " are Antoine constants."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.6448612691090956`*^9, 3.644861385905776*^9}, {
   3.646680521459852*^9, 3.646680526283813*^9}, {3.647022095822089*^9, 
   3.647022116652914*^9}, 3.689613457580124*^9},
 CellID->1549812350,ExpressionUUID->"3089b5e8-4e58-4ed1-b933-09ab18e145c2"],

Cell[TextData[{
 "The fugacity ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["f", "i"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "80eeca87-7120-49ed-8de2-91acb4b20cae"],
 " of a component depends on temperature and molar composition."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.6448612691090956`*^9, 3.6448614719686985`*^9}, {
   3.644861509220829*^9, 3.644861546777978*^9}, {3.6448616032912097`*^9, 
   3.6448616044072733`*^9}, 3.6448622906455245`*^9, {3.645208996142702*^9, 
   3.6452090035360045`*^9}, {3.646665587887662*^9, 3.6466655908471613`*^9}},
 CellID->250155393,ExpressionUUID->"1242514b-e6c3-4150-ab9e-ccea83b64e6f"],

Cell["In the liquid region:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.6448612691090956`*^9, 3.6448614719686985`*^9}, {
  3.644861509220829*^9, 3.6448615611818013`*^9}, {3.6466656117828827`*^9, 
  3.646665612358779*^9}, {3.686326211749997*^9, 3.6863262132964*^9}},
 CellID->118267598,ExpressionUUID->"0447565d-7cc3-4446-8c93-6b62cd05a6ae"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", "i"], "=", 
    RowBox[{
     SubscriptBox["x", "i"], " ", 
     SubsuperscriptBox["P", "i", "sat"]}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"7bb37db0-ece9-41e5-b625-ec0c14ba0d35"],
 ","
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.6448612691090956`*^9, 3.6448614719686985`*^9}, {
   3.644861509220829*^9, 3.644861608240493*^9}, {3.645209044332387*^9, 
   3.6452090515225277`*^9}, 3.6452092064539795`*^9, 3.6452134973251286`*^9},
 CellID->61668353,ExpressionUUID->"e07c6b6f-7349-4da7-8fea-2d7b60c83ba2"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "7da4350c-1124-45f7-8b7c-122b9ef4659d"],
 " is the liquid mole fraction and both ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["P", "i", "sat"], TraditionalForm]], "InlineMath",
  ExpressionUUID->"99469c5a-21c3-47f2-941f-57ce595e9bc7"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["f", "i"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "43f17e6c-9e20-4b72-b930-b190f5eb9193"],
 " have units of bar."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.6448612691090956`*^9, 3.6448614719686985`*^9}, {
   3.644861509220829*^9, 3.644861644604573*^9}, 3.644862292389624*^9, {
   3.645209058406365*^9, 3.645209094825083*^9}, 3.6466804847707043`*^9, 
   3.678556759878099*^9},
 CellID->97501916,ExpressionUUID->"83f8a0ba-8277-4b57-a041-058a46eeea7e"],

Cell["In the vapor region:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.6448612691090956`*^9, 3.6448614719686985`*^9}, {
  3.644861509220829*^9, 3.6448616558092136`*^9}, {3.646665614550939*^9, 
  3.6466656156549177`*^9}, {3.686326215465804*^9, 3.686326215668604*^9}},
 CellID->359042034,ExpressionUUID->"b8228254-de71-4f8a-b743-f003f8468d76"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", "i"], "=", 
    RowBox[{
     SubscriptBox["y", "i"], " ", "P"}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"59dc72bc-a2ce-47bf-9789-5bfc15d5ad29"],
 ","
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.6448612691090956`*^9, 3.6448614719686985`*^9}, {
  3.644861509220829*^9, 3.6448616868389883`*^9}, {3.6452091039502363`*^9, 
  3.645209104565832*^9}},
 CellID->107577952,ExpressionUUID->"66d26907-8c3e-49a9-a2e7-382995bec41f"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "i"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "0bd323a6-3379-4a60-baea-071d59b0efa4"],
 " is the vapor molar composition and ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]], "InlineMath",ExpressionUUID->
  "1ce86ed0-ab07-4efb-8886-93f42409692b"],
 " is the total pressure (bar)."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.6448612691090956`*^9, 3.6448614719686985`*^9}, {
   3.644861509220829*^9, 3.6448617010027986`*^9}, {3.645209121544239*^9, 
   3.645209177178689*^9}, 3.6466804891146193`*^9, 3.6785567654881334`*^9},
 CellID->182100021,ExpressionUUID->"02858095-feb1-4976-ac65-3a6d8ab83642"],

Cell["When vapor and liquid are in equilibrium (VLE):", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.6448612691090956`*^9, 3.6448614719686985`*^9}, {
  3.644861509220829*^9, 3.644861740169039*^9}},
 CellID->106451190,ExpressionUUID->"ad73d95f-6aa7-4a1c-9fa9-5c8babfa2911"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", "i"], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["y", "i"], " ", "P"}], "=", 
     RowBox[{
      SubscriptBox["x", "i"], " ", 
      SubsuperscriptBox["P", "i", "sat"]}]}]}], TraditionalForm]], 
  "InlineMath",ExpressionUUID->"60034fe9-36d6-40e8-8ed6-fa729fc2c912"],
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.6448612691090956`*^9, 3.6448614719686985`*^9}, {
  3.644861509220829*^9, 3.6448617731199236`*^9}, {3.6452091669262643`*^9, 
  3.6452092233983107`*^9}, {3.6452135200874305`*^9, 3.645213542912736*^9}},
 CellID->22464714,ExpressionUUID->"5e8dd3ba-7596-4966-8324-56da84e2e119"],

Cell["\<\
The screencast video at[1] explains how to use this Demonstration.\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.6785621459821367`*^9, 3.6785621600111895`*^9}, 
   3.9273625817703743`*^9},
 CellID->761592986,ExpressionUUID->"b74412fd-58a9-4c04-9880-8bf77136e8f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "References",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ReferenceCells", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "This optional section is for a more detailed description of the \
Demonstration than the caption, but it should still be as concise as \
possible. This section may also include numbered snapshot captions (e.g., \
Snapshot 1: phrase or sentence without an initial capital and without a \
period, unless more than one sentence is used) and explanations of the ", 
           StyleBox["Manipulate", "MRbig"], 
           " control labels. Define any symbols undefined so far. Include \
only text in this section \[LongDash] no code, graphics, etc. Do not change \
the cell style or copy cells from other sections. \n\nA book reference uses \
this format: \n   L. D. Schmidt, ", 
           StyleBox[
           "The Engineering of Chemical Reactions", FontSlant -> "Italic"], 
           ", New York: Oxford University Press, 1998. \n\nAn article \
reference uses this format: \n   D. Pearson, \"A Polynomial-Time Algorithm \
for the Change-Making Problem,\" ", 
           StyleBox["Operations Research Letters", FontSlant -> "Italic"], 
           ", ", 
           StyleBox["33", FontWeight -> "Bold"], 
           "(3), 2005 pp. 231\[Dash]234."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoReferenceCells"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "fa2aa83a-de6a-4fa4-aa13-07abf78b5db7"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ReferenceCells"},
 DefaultNewCellStyle->"Text",
 CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
 CellID->592881655,ExpressionUUID->"62364e7a-2533-4cd2-bdbf-cd3bf71d410a"],

Cell[TextData[{
 "[1] ",
 StyleBox["Fugacities in an Ideal Binary Mixture",
  FontSlant->"Italic"],
 "[Video]. (Dec 1, 2016) ",
 ButtonBox["www.colorado.edu/learncheme/thermodynamics/\
FugacitiesIdealBinaryMixture.xhtml",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.colorado.edu/learncheme/thermodynamics/\
FugacitiesIdealBinaryMixture.xhtml"], None},
  ButtonNote->
   "http://www.colorado.edu/learncheme/thermodynamics/\
FugacitiesIdealBinaryMixture.xhtml"],
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.6785621459821367`*^9, 3.678562197230304*^9}, {
   3.689613552921629*^9, 3.689613575825665*^9}, 3.9273625818034773`*^9},
 CellID->68203499,ExpressionUUID->"29755686-bea0-462e-b85a-91758c8d8bbb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Submission Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SubmissionNotes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Enter any additional information that you would like to \
communicate to the reviewer here. This section will not be included in the \
published resource.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSubmissionNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "ea9431f3-a622-4ab0-a288-c064a7c0ddad"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SubmissionNotes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
 CellID->797097429,ExpressionUUID->"4c7418d1-6d32-4efb-87b8-57e52539ea22"],

Cell["Additional information for the reviewer.", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->820829112,ExpressionUUID->"ab49b19f-03a0-426e-a119-5e1d7b650486"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the demonstration in search \
results.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20,
         FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "a05ee1c4-60ef-40bd-9bac-01e3966f4e5c"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->938146184,ExpressionUUID->"dc0d42e8-890c-462c-920a-c63cda1ab4a5"],

Cell["chemical engineering", "Item",
 TaggingRules->{},
 CellID->483395095,ExpressionUUID->"ab84b447-f0d2-46a6-b9a8-28416e62867c"],

Cell["fugacity", "Item",
 TaggingRules->{},
 CellID->728885838,ExpressionUUID->"c0f71caa-6177-4b0b-9f29-c56e9e967861"],

Cell["thermodynamics", "Item",
 TaggingRules->{},
 CellID->615761891,ExpressionUUID->"f241ac02-5d52-480e-8372-65b6e1806533"],

Cell["separations", "Item",
 TaggingRules->{},
 CellID->947132799,ExpressionUUID->"cadf6198-57c7-461f-b2db-c2e7b7a5fdc5"],

Cell["vapor-liquid equilibrium", "Item",
 TaggingRules->{},
 CellID->637002287,ExpressionUUID->"d382ab78-d575-4f89-8190-a12a58604174"],

Cell["ideal solution", "Item",
 TaggingRules->{},
 CellID->876549171,ExpressionUUID->"fd2533b9-4654-452d-b4cb-65bc62394e3d"],

Cell["T-x-y diagram", "Item",
 TaggingRules->{},
 CellID->60167719,ExpressionUUID->"07d6ba4c-67f6-4086-9b98-4327883a3633"],

Cell["fugacity temperature dependence", "Item",
 TaggingRules->{},
 CellID->362731499,ExpressionUUID->"4483d70d-361a-4084-9e65-731d468b2e0a"],

Cell["Raoults law", "Item",
 TaggingRules->{},
 CellID->385153016,ExpressionUUID->"2f5cf6f0-0f03-467f-858b-94ba339e4e87"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Categories",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Categories", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose categories that best represent your demonstration. These \
choices determine which pages your demonstration will appear on when \
published to the repository.", "MoreInfoText"], Background -> GrayLevel[0.95],
         FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 
        5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCategories"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "632f9ce6-6c50-442f-a246-3ae80bf00d44"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
 CellID->845692503,ExpressionUUID->"e51fac23-8909-4279-a2c6-8517eb391dff"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Mathematics"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School K-2 Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Elementary School K-2 Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School 3-5 Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Elementary School 3-5 Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Middle School Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Middle School Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"High School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"High School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Algebra I"}], 
                    "\" \"", 
                    StyleBox["\"High School Algebra I\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Geometry"}], 
                    "\" \"", 
                    StyleBox["\"High School Geometry\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Algebra II and Trigonometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Algebra II and Trigonometry\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Precalculus"}], 
                    "\" \"", 
                    StyleBox["\"High School Precalculus\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Calculus and Analytic Geometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Calculus and Analytic Geometry\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Advanced Calculus and Linear Algebra"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Advanced Calculus and Linear Algebra\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Finite Mathematics"}], 
                    "\" \"", 
                    StyleBox["\"High School Finite Mathematics\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Statistics"}], 
                    "\" \"", 
                    StyleBox["\"High School Statistics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{
                    Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Area"}], "\" \"", 
                    StyleBox[
                    "\"Area\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Equations"}], "\" \"", 
                    StyleBox[
                    "\"Equations\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Exponential Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Exponential Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Exponents and Logarithms"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Exponents and Logarithms\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Hyperbolic Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Hyperbolic Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Identities"}], "\" \"", 
                    StyleBox[
                    "\"Identities\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Inequalities"}], "\" \"", 
                    StyleBox[
                    "\"Inequalities\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Integers"}], "\" \"", 
                    StyleBox[
                    "\"Integers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Irrational Numbers"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Irrational Numbers\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Number Bases"}], "\" \"", 
                    StyleBox[
                    "\"Number Bases\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Parametric Equations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Parametric Equations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Perimeter"}], "\" \"", 
                    StyleBox[
                    "\"Perimeter\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Pi"}], "\" \"", 
                    StyleBox[
                    "\"Pi\"", FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polynomials"}], "\" \"", 
                    StyleBox[
                    "\"Polynomials\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Pre-Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Pre-Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Prime Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Prime Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Rational Numbers"}], "\" \"", 
                    
                    StyleBox[
                    "\"Rational Numbers\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Real Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Real Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Trigonometric Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Trigonometric Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Volume"}], "\" \"", 
                    StyleBox[
                    "\"Volume\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebra"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Algebra\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Algebra\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Algebra I"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Algebra I\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Algebra II and Trigonometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Algebra II and Trigonometry\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Precalculus"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Precalculus\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Complex Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Complex Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linear Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Linear Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polynomials"}], "\" \"", 
                    StyleBox[
                    "\"Polynomials\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Quadratic Forms"}], "\" \"", 
                    StyleBox[
                    "\"Quadratic Forms\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Rational Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Rational Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Vector Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Vector Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Applied Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Applied Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Applied Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Approximation Methods"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Approximation Methods\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linear Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Linear Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Numerical Analysis"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Numerical Analysis\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Operations Research"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Operations Research\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Optimization"}], "\" \"", 
                    StyleBox[
                    "\"Optimization\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Special Functions"}], "\" \"", 
                    StyleBox[
                    "\"Special Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Wavelets"}], "\" \"", 
                    StyleBox[
                    "\"Wavelets\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Calculus & Analysis"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Calculus & Analysis\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Calculus & Analysis\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Calculus and Analytic Geometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Calculus and Analytic Geometry\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Advanced Calculus and Linear Algebra"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Advanced Calculus and Linear Algebra\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Calculus"}], "\" \"", 
                    StyleBox[
                    "\"Calculus\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Complex Analysis"}], "\" \"", 
                    
                    StyleBox[
                    "\"Complex Analysis\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Derivatives"}], "\" \"", 
                    StyleBox[
                    "\"Derivatives\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Differential Equations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Differential Equations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Harmonic Analysis"}], "\" \"", 
                    StyleBox[
                    "\"Harmonic Analysis\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Integrals"}], "\" \"", 
                    StyleBox[
                    "\"Integrals\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Multivariable Calculus"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Multivariable Calculus\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Real Analysis"}], "\" \"", 
                    StyleBox[
                    "\"Real Analysis\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Related Rates"}], "\" \"", 
                    StyleBox[
                    "\"Related Rates\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Riemann Surfaces"}], "\" \"", 
                    
                    StyleBox[
                    "\"Riemann Surfaces\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Series"}], "\" \"", 
                    StyleBox[
                    "\"Series\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Special Functions"}], "\" \"", 
                    StyleBox[
                    "\"Special Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Vector Fields"}], "\" \"", 
                    StyleBox[
                    "\"Vector Fields\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Discrete Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Discrete Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Discrete Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Finite Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Finite Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Coding Theory"}], "\" \"", 
                    StyleBox[
                    "\"Coding Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Combinatorics"}], "\" \"", 
                    StyleBox[
                    "\"Combinatorics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Graph Theory"}], "\" \"", 
                    StyleBox[
                    "\"Graph Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Networks"}], "\" \"", 
                    StyleBox[
                    "\"Networks\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Sequences"}], "\" \"", 
                    StyleBox[
                    "\"Sequences\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Tiling"}], "\" \"", 
                    StyleBox[
                    "\"Tiling\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Trees"}], "\" \"", 
                    StyleBox[
                    "\"Trees\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Experimental Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Experimental Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometry"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Geometry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Geometry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Curves"}], "\" \"", 
                    
                    StyleBox[
                    "\"Algebraic Curves\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Algebraic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Surfaces"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Algebraic Surfaces\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Analytic Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Analytic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Conic Sections"}], "\" \"", 
                    StyleBox[
                    "\"Conic Sections\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Curves"}], "\" \"", 
                    StyleBox[
                    "\"Curves\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Differential Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Differential Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Ellipses"}], "\" \"", 
                    StyleBox[
                    "\"Ellipses\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometric Transformations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Geometric Transformations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Higher-Dimensional Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Higher-Dimensional Geometry\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Hyperbolic Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Hyperbolic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Nested Patterns"}], "\" \"", 
                    StyleBox[
                    "\"Nested Patterns\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Plane Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Plane Geometry\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polygons"}], "\" \"", 
                    StyleBox[
                    "\"Polygons\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polyhedra"}], "\" \"", 
                    StyleBox[
                    "\"Polyhedra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Projective Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Projective Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Reflections"}], "\" \"", 
                    StyleBox[
                    "\"Reflections\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Solid Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Solid Geometry\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Surfaces"}], "\" \"", 
                    StyleBox[
                    "\"Surfaces\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Triangles"}], "\" \"", 
                    StyleBox[
                    "\"Triangles\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Historical Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Historical Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Historical Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Euclid's Elements"}], "\" \"", 
                    StyleBox[
                    "\"Euclid's Elements\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Foundations of Mathematics"}],
                     "\" \"", 
                    StyleBox[
                    "\"Foundations of Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Greek Mathematics"}], "\" \"", 
                    StyleBox[
                    "\"Greek Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Unsolved Problems"}], "\" \"", 
                    StyleBox[
                    "\"Unsolved Problems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Number Theory"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Number Theory\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Number Theory\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Number Bases"}], "\" \"", 
                    StyleBox[
                    "\"Number Bases\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Prime Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Prime Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Representations of Numbers"}],
                     "\" \"", 
                    StyleBox[
                    "\"Representations of Numbers\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Pure Mathematics"}], "\" \"", 
                    
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Pure Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Pure Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Algebraic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Complex Analysis"}], "\" \"", 
                    
                    StyleBox[
                    "\"Complex Analysis\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Differential Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Differential Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Dynamical Systems Theory"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Dynamical Systems Theory\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Group Theory"}], "\" \"", 
                    StyleBox[
                    "\"Group Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Knot Theory"}], "\" \"", 
                    StyleBox[
                    "\"Knot Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mathematical Logic"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Mathematical Logic\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Theorem Proving"}], "\" \"", 
                    StyleBox[
                    "\"Theorem Proving\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Topology"}], "\" \"", 
                    StyleBox[
                    "\"Topology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Recreational Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Recreational Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Recreational Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Golden Ratio"}], "\" \"", 
                    StyleBox[
                    "\"Golden Ratio\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mathematics Problems"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Mathematics Problems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Unsolved Problems"}], "\" \"", 
                    StyleBox[
                    "\"Unsolved Problems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Statistics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Statistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Statistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Statistics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Statistics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Data Analysis"}], "\" \"", 
                    StyleBox[
                    "\"Data Analysis\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Probability"}], "\" \"", 
                    StyleBox[
                    "\"Probability\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Random Processes"}], "\" \"", 
                    
                    StyleBox[
                    "\"Random Processes\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Life Sciences"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Life Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Life Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Biology"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Biology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Biology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Biology"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Biology\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Developmental Biology"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Developmental Biology\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Growth Processes"}], "\" \"", 
                    
                    StyleBox[
                    "\"Growth Processes\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Molecular Biology"}], "\" \"", 
                    StyleBox[
                    "\"Molecular Biology\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Natural Forms"}], "\" \"", 
                    StyleBox[
                    "\"Natural Forms\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Plant Biology"}], "\" \"", 
                    StyleBox[
                    "\"Plant Biology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Zoology"}], "\" \"", 
                    StyleBox[
                    "\"Zoology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cognitive Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Cognitive Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Cognitive Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Perception"}], "\" \"", 
                    StyleBox[
                    "\"Perception\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Psychology"}], "\" \"", 
                    StyleBox[
                    "\"Psychology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Psychophysics"}], "\" \"", 
                    StyleBox[
                    "\"Psychophysics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Ecology"}], "\" \"", 
                    StyleBox["\"Ecology\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Medicine"}], "\" \"", 
                    StyleBox[
                    "\"Medicine\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Engineering & Technology"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Engineering & Technology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Engineering & Technology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Applied Sciences"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Applied Sciences\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemical Engineering"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Chemical Engineering\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Civil Engineering"}], "\" \"", 
                    StyleBox[
                    "\"Civil Engineering\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Control Theory"}], "\" \"", 
                    StyleBox[
                    "\"Control Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Electrical Engineering"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Electrical Engineering\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Electrical Engineering\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Circuit Design"}], "\" \"", 
                    StyleBox[
                    "\"Circuit Design\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Signal Processing"}], "\" \"", 
                    StyleBox[
                    "\"Signal Processing\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fluid Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Fluid Mechanics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Image Processing"}], "\" \"", 
                    
                    StyleBox[
                    "\"Image Processing\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Machines"}], "\" \"", 
                    StyleBox[
                    "\"Machines\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mechanical Engineering"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Mechanical Engineering\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Nanotechnology"}], "\" \"", 
                    StyleBox[
                    "\"Nanotechnology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Robotics"}], "\" \"", 
                    StyleBox[
                    "\"Robotics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Signal Processing"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Signal Processing\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Signal Processing\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Audio"}], "\" \"", 
                    StyleBox[
                    "\"Audio\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Wavelets"}], "\" \"", 
                    StyleBox[
                    "\"Wavelets\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Kids & Fun"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Kids & Fun\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Kids & Fun\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "School Puzzles and Recreations"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"School Puzzles and Recreations\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"School Puzzles and Recreations\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Puzzles and Recreations: Elementary"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Puzzles and Recreations: Elementary\"", FontSize -> 12,
                     Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Puzzles and Recreations: Intermediate"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Puzzles and Recreations: Intermediate\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Puzzles and Recreations: Advanced"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Puzzles and Recreations: Advanced\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Everyday Life"}], "\" \"", 
                    StyleBox[
                    "\"Everyday Life\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "For Kids"}], "\" \"", 
                    StyleBox[
                    "\"For Kids\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Optical Illusions"}], "\" \"", 
                    StyleBox[
                    "\"Optical Illusions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Puzzles"}], "\" \"", 
                    StyleBox[
                    "\"Puzzles\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Recreation"}], "\" \"", 
                    StyleBox[
                    "\"Recreation\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Computation"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Computation\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Computation\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algorithms"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Algorithms\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Algorithms\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Automatic Reasoning"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Automatic Reasoning\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Coding Theory"}], "\" \"", 
                    StyleBox[
                    "\"Coding Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computational Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Computational Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Algebra"}], "\" \"", 
                    
                    StyleBox[
                    "\"Computer Algebra\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Graphics"}], "\" \"", 
                    StyleBox[
                    "\"Computer Graphics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cryptography"}], "\" \"", 
                    StyleBox[
                    "\"Cryptography\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Data Compression"}], "\" \"", 
                    
                    StyleBox[
                    "\"Data Compression\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Image Processing"}], "\" \"", 
                    
                    StyleBox[
                    "\"Image Processing\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Numerical Analysis"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Numerical Analysis\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Science"}], "\" \"", 
                    
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Computer Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Computer Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Computer Science"}], "\" \"", 
                    
                    StyleBox[
                    "\"High School Computer Science\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computational Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Computational Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Graphics"}], "\" \"", 
                    StyleBox[
                    "\"Computer Graphics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Data Structures"}], "\" \"", 
                    StyleBox[
                    "\"Data Structures\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Finite State Machines"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Finite State Machines\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Recursion"}], "\" \"", 
                    StyleBox[
                    "\"Recursion\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Theory of Computation"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Theory of Computation\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Systems"}], "\" \"", 
                    
                    StyleBox[
                    "\"Computer Systems\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "NKS / Wolfram Science"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"NKS / Wolfram Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"NKS / Wolfram Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cellular Automata"}], "\" \"", 
                    StyleBox[
                    "\"Cellular Automata\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fractals"}], "\" \"", 
                    StyleBox[
                    "\"Fractals\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Nested Patterns"}], "\" \"", 
                    StyleBox[
                    "\"Nested Patterns\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Simple Computational Systems"}], "\" \"", 
                    
                    StyleBox[
                    "\"Simple Computational Systems\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Substitution Systems"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Substitution Systems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Business & Social Systems"}], "\" \"", 
           
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Business & Social Systems\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Business & Social Systems\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Actuarial Science"}], "\" \"", 
                    StyleBox[
                    "\"Actuarial Science\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Business"}], "\" \"", 
                    StyleBox[
                    "\"Business\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Economics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Economics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Economics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Economics and Finance"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Economics and Finance\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Macroeconomics"}], "\" \"", 
                    StyleBox[
                    "\"Macroeconomics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Microeconomics"}], "\" \"", 
                    StyleBox["\"Microeconomics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Finance"}], "\" \"", 
                    StyleBox[
                    "\"Finance\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Law"}], "\" \"", 
                    StyleBox[
                    "\"Law\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Political Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Political Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Political Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "International Relations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"International Relations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Social Sciences"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Social Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Social Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Social Studies"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Social Studies\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linguistics"}], "\" \"", 
                    StyleBox[
                    "\"Linguistics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Our World"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Our World\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Our World\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School K-2 Science"}], "\" \"", 
                    StyleBox[
                    "\"Elementary School K-2 Science\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School 3-5 Science"}], "\" \"", 
                    StyleBox["\"Elementary School 3-5 Science\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Middle School Science"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Middle School Science\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Everyday Life"}], "\" \"", 
                    StyleBox[
                    "\"Everyday Life\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geography"}], "\" \"", 
                    StyleBox[
                    "\"Geography\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometric Models"}], "\" \"", 
                    
                    StyleBox[
                    "\"Geometric Models\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "History"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"History\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"History\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Classic Science Experiments"}], "\" \"", 
                    StyleBox[
                    "\"Classic Science Experiments\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Euclid's Elements"}], "\" \"", 
                    StyleBox[
                    "\"Euclid's Elements\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Greek Mathematics"}], "\" \"", 
                    StyleBox[
                    "\"Greek Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "International Relations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"International Relations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linguistics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Linguistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Linguistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Language Arts"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Language Arts\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Textual Analysis"}], "\" \"", 
                    
                    StyleBox[
                    "\"Textual Analysis\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Machines"}], "\" \"", 
                    StyleBox[
                    "\"Machines\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Natural Forms"}], "\" \"", 
                    StyleBox[
                    "\"Natural Forms\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Navigation"}], "\" \"", 
                    StyleBox[
                    "\"Navigation\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Solar System"}], "\" \"", 
                    StyleBox[
                    "\"Solar System\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Programming Functionality"}], "\" \"", 
           
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Programming Functionality\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Programming Functionality\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "3D Graphics"}], "\" \"", 
                    StyleBox[
                    "\"3D Graphics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Version 7 Features"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Version 7 Features\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Short Programs"}], "\" \"", 
                    StyleBox[
                    "\"Short Programs\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Physical Sciences"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Physical Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Physical Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Astronomy"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Astronomy\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Astronomy\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Astronomy"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Astronomy\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Solar System"}], "\" \"", 
                    StyleBox[
                    "\"Solar System\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox["Chemistry", {False, "Chemistry"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Chemistry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Chemistry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Chemistry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemical Kinetics"}], "\" \"", 
                    StyleBox[
                    "\"Chemical Kinetics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "General Chemistry"}], "\" \"", 
                    StyleBox[
                    "\"General Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Inorganic Chemistry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Inorganic Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Organic Chemistry"}], "\" \"", 
                    StyleBox[
                    "\"Organic Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Physical Chemistry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Physical Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Earth Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Earth Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Earth Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Earth and Environmental Sciences"}], "\" \"", 
                    StyleBox[
                    "\"High School Earth and Environmental Sciences\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Meteorology"}], "\" \"", 
                    StyleBox[
                    "\"Meteorology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "History of Science"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"History of Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"History of Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Classic Science Experiments"}], "\" \"", 
                    StyleBox[
                    "\"Classic Science Experiments\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Classic Scientific Images"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Classic Scientific Images\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Materials Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Materials Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Materials Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Crystallography"}], "\" \"", 
                    StyleBox[
                    "\"Crystallography\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Physics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Physics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Physics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Acoustics"}], "\" \"", 
                    StyleBox[
                    "\"Acoustics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Astrophysics"}], "\" \"", 
                    StyleBox[
                    "\"Astrophysics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "College Physics"}], "\" \"", 
                    StyleBox[
                    "\"College Physics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Electromagnetism"}], "\" \"", 
                    
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Electromagnetism\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Electromagnetism\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Electrostatics"}], "\" \"", 
                    StyleBox[
                    "\"Electrostatics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fluid Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Fluid Mechanics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Gravitation Theory"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Gravitation Theory\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Mechanics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Optics"}], "\" \"", 
                    StyleBox[
                    "\"Optics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Particle Physics"}], "\" \"", 
                    
                    StyleBox[
                    "\"Particle Physics\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Quantum Physics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Quantum Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Quantum Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Quantum Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Quantum Mechanics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Statistical Mechanics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Statistical Mechanics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Statistical Mechanics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemical Kinetics"}], "\" \"", 
                    StyleBox[
                    "\"Chemical Kinetics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox["Thermodynamics", {False, "Thermodynamics"}], 
                    "\" \"", 
                    StyleBox["\"Thermodynamics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Waves"}], "\" \"", 
                    StyleBox[
                    "\"Waves\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Systems, Models & Methods"}], "\" \"", 
           
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Systems, Models & Methods\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Systems, Models & Methods\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cellular Automata"}], "\" \"", 
                    StyleBox[
                    "\"Cellular Automata\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chaos Theory"}], "\" \"", 
                    StyleBox[
                    "\"Chaos Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Discrete Models"}], "\" \"", 
                    StyleBox[
                    "\"Discrete Models\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Experimental Methods"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Experimental Methods\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fractals"}], "\" \"", 
                    StyleBox[
                    "\"Fractals\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Game Theory"}], "\" \"", 
                    StyleBox[
                    "\"Game Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Generation of Form"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Generation of Form\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Multi-agent Modeling"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Multi-agent Modeling\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Networks"}], "\" \"", 
                    StyleBox[
                    "\"Networks\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Random Processes"}], "\" \"", 
                    
                    StyleBox[
                    "\"Random Processes\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Substitution Systems"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Substitution Systems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Trees"}], "\" \"", 
                    StyleBox[
                    "\"Trees\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Creative Arts"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Creative Arts\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Creative Arts\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Art and Design"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Art and Design\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Visual Patterns"}], "\" \"", 
                    StyleBox[
                    "\"Visual Patterns\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Architecture"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Architecture\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Architecture\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometric Models"}], "\" \"", 
                    
                    StyleBox[
                    "\"Geometric Models\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Art"}], "\" \"", 
                    StyleBox[
                    "\"Art\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Color"}], "\" \"", 
                    StyleBox[
                    "\"Color\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Generation of Form"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Generation of Form\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Graphic Design"}], "\" \"", 
                    StyleBox[
                    "\"Graphic Design\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Iconography & Typography"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Iconography & Typography\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Music"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Music\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Music\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Music"}], "\" \"", 
                    StyleBox[
                    "\"School Music\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Audio"}], "\" \"", 
                    StyleBox[
                    "\"Audio\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Music Theory"}], "\" \"", 
                    StyleBox[
                    "\"Music Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Patterns"}], "\" \"", 
                    StyleBox["\"Patterns\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJy9Wetz27gRb5PYkh+S33ncXW+Y6fRupnOednrT6Uy/MbKdaOKHavpyM/\
0Gk7CEBiRYkFSi/PXdBUlxQVBy+qH9ZAsLLBa7i9/+\
FvR3ToONIF9IHmzeFHla5KdBbzTj4UcePTzJnl2KLA+2YCCGf/QiGN7NuI5VtEhYLMIMFo9zHmc+\
qNm5YjnMYzmM+7unwWEQzpSSHh1+eRq8Ppc85knO9MKrZrw//Qud9fCbct/OuT+f/rV77qsrEUWSe+\
6uzZwX78R01jHD758GJ1Tmyym/\
18wbN2uPqfwtVzEHfzTiHzuXjz2WRN6dFlOVtFdYxkw0D5kMC1kQc/9IZ4wqsdHoJ0wuwPIOQ/\
5sGRLNWRLyyF59KRLOdG1ls/R7uvRCJCLn3X58TicGOUgze8IzX3OieOv83wVMUgmZcnL+\
OVUJBFcw2KxIwpb8ZS2vbFZTpkU+\
izMakkXK9b2S4IgODdvjCNXngpPB3XHCwRjZGu6Pk5xPuSZDh2OtjdFg33UR31vC3XLEe8MyquZ4wj\
TDgIBFHWfemnAtQMx1M/ZkIpofOxMlF5Ap4JOMjmp+\
6kRrMEFdrmn7t6utvuVdwy9Igna7cvODkkXMm4FeZY6/9fjN+\
V9cjb2RilPJP7uHGa7K7m7f7v2jYBHGGc6tNM2uw6UfOxwy/\
MDDXHXscuSnqRRw4yi89MBJMK7VZxEbpd4Vz2cq+hqzD+\
GEkDXggvLWZ4KsOrqBC1BmmXfLM1AQzki4b9JcxOKLmdAMHwQpD1fcuv6vbM4lz+keS+z4YWmBv/f/\
R6f+yMmC/ToLXM/snIHT5nDyOb2fz8/\
EwwPXFep03NCDdwzKWwK2uyq3DEZoK32eXxUS9gBoYvdQfFwTB+\
bKucpgXLIczg5Zxq3bKyBrksQLCv3AQiraDOBIdGBdIAdVgl4ILmmeHZ+JLNTcRnasf18N/\
oORikQy9YAJKBpaGI/vRcJgV2v+7lvN0pkzvX/N809Kf6QODgCaeWIf+\
k5I2K0Z2LjTnE7AOmFQFWjCirLfr/\
PQP3m0ju9XeQcZMCq0lTyHjchdR4Ru5A7W3IjhyKRbwB3Mbe9/YiWvq6l/\
LqVIrXr0qpoFG9xpBtoB4top/y06hOvTM/RhViKeq/yI1FpXunfNM0zmCcuhuFlAOZEs4V3WIhxPW+\
URhmY8svB0otW/0DfzLiU7t/xBOp4bBmBm1LWnG5otqEAsmUoLJd7BH1ViLr0lzyCS50UIun/\
MvIqakmXfXKgiiSo0Vg/duXjwFtL34wrZL0mm5Bz9qBXACa1Gg4pwlNfIf7qSgqyiBd/\
c8lRDiUjyxkKXO0wKbSPD1iN5vwaCH8vXl2dlFwHCYJFhG+\
GABGCHKlJneOd9onJn9LCxG1QCYRQhyVAzm8fo2rkFKP07lSqpptSyWw4YWZd/6g70+\
1slgVh6hh4QYCXTOuK3LrbbDYXGHHuUXQ/\
OWM66ah6qZvcAmDmN0C1UVWUODplv5coOBq8oEwJ33oZIq5JlY+CP/\
CJX5kRALlgGOEX9tqoOPCdKO+O+X07gHTX+\
YCkyRcOuIyO9SHM1RQHVZpyB6yC7M4vo7I9jNuX1wS3j17KqxsAgFFiPkMB9Z9Gd1oT/\
4vTrjrhnzhLkughzuIj0LlUVGdMBL2g4A5ZEYQwyttD28U/KyOBFJ0Z1HrO8fmTp9fvA+\
5P3q5IP0M8s3bCB5nMpC4kErUwOytAuNAtzm16vLAzfBQKBw7P95VhyHBT3kP55YWizIz6YzCB2BkJ\
KGzN/E7zhZ7nGtmLhP2n3J7WEJBaUC1Y7gbh0+eqBKi0lSwkNK46hIe8hMm3M5wnQ9M51R+\
NE6SlDCtCl9Wa17HB59A7h4JzpfLYMHHjhJ3qAUops+\
zyZC3BIRZ9qJxKIgE4FsqgFkIdlhTS5Rfb4diQZXLSwHvMabkZJiTUrFw/wr7mp1GWAprAScmmp/\
7fY9WkIEpPSQYFe6YzMHyBVod1jOU7C6oeqaAHqrsmKtD0VmkwpOSJIW7J/jqxDQ/\
5PMdhZjNYNq8Esb9X1vQtZAB+\
54uEMg0kpJWDAXJTZ7wDpVseCTWzpLEsmEEoRyg4jsbVN8iKuJWjjQT3WoftkWWuw6NVyjOu65G69C\
BKijq0krVqX4oE31xTKTe+NMHmF8GoFrRqnVIJDW6rSKk0d+T7whE+\
Q0R017uBKQVgMYjnLBtcMcBYbKLv1HyBpzd35vX+q1gig+\
RSAGdlpnadAEbYnXIc8teF2e5It4HgtC8pBJ/V652FrZv+\
KRyIE95OL9KbIsAxgZx4o0wlWAIkePfChiGBjKt0q1a9XkmyDHfF1pCQ5ry20qCUGMaASMUvZEMqRV\
ryeRAWiW9BzdDy9ZJ8oqit8oCOwjrn7AvtvndSlwjTQNvHfq71QJxmif02kKlFeRFYTvXMJxKBoU6x\
XlSN/8q5UxCV6uHqywaftdUVwdzRjymWye03fbRSSCmc3sO2HoY6iuvOWAcN36G9ZZQyUACxjSlN2i\
u8UpwCykNfGApsDu834Gtr4SE12O/RkCskGZwS2+\
IN3B8iSlPceXPmirsvVs5lbgY6X4EP00Bso5mKFDHtrAGTpctQSqttaMV+GI6HDQuTeGc/\
E1Ho2g59MdtLJ1Qi/\
hoP2XRr3vNaw6rTDawatz9KDRNmtulct2uEYjOfb8OECkL6l48Vv66bQwP20jDBCv+v+YONgSsc8/\
FjjzDuxP9Q48sH5nOtFxBYeFgxiFXBph/w37xvta9WrKAoWmq/jJet6+3Vt++\
O4RDEGY3Bcnf2SwTCmh6/pZvt3/DNAd1dr0pEzq4rY9jVQi2mL86/guoORaXfnpSX+\
dgOb8Nugfvs27H0QGZroEvtdX4OJkKPYwiBurwnSU1BPgAP4liKfRtYi2rBqnxzLXo6x4JSZgnCzSJ\
202biC8heaZr7+GIgDZELrkuwaufuG6Z5++72IsFpcFAm2Dd/XNLT48kXysoA2jwum1P5+\
hezvXnOhGv1/WDnbZGEMJAGYczP/9cr59ev74zevD5738Fy0MUnL+\
jyGQpjZ2d6rtiROaTYmJRZwCQITx1gW6hds/DBnXrd2fj7raJAPP3DT5Hp/8y44a/\
XIw2CmIFsrtfTSwBDc93wRbN6p1Hy27t0YdpZlW8s3DvzwjV+5WoND49cUSrexH/qHZIH1j+\
O9HkEnoeJxAh1stnEBRZo3g1gUs2fXKuHmw1umCuCEkI08GJzxGPbOy9SuPmZBIx5V+4+e/\
gfqo8Fu"},
 CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
 CellID->364069848,ExpressionUUID->"710c3e95-ecea-4415-be3e-c54e4bae98fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Demonstrations",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"RelatedDemonstrations", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Enter any additional information that you would like to \
communicate to the reviewer here.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedDemonstrations"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "4fbcb2cc-b926-454e-940e-a2ddb6b1c47c"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "RelatedDemonstrations"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
 CellID->1132753,ExpressionUUID->"eaa7714c-40bf-4fa4-a582-1b905b803900"],

Cell["Link to a related demonstration", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->964350505,ExpressionUUID->"d2ff3c65-d86b-4b92-aea0-be606c2fefae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "External Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExternalLinks", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Provide hyperlinks (not just bare URLs) to any relevant \
resources.wolfram.com pages, with the page title as the linked text. Links to \
", 
           ButtonBox[
           "NKS | Online", 
            BaseStyle -> {"Hyperlink", FontColor -> RGBColor[0.4, 0.45, 0.5]},
             ButtonData -> {
              URL["http://www.wolframscience.com/nks"], None}], 
           " should use the section title, not a page number. Links to \
non-Wolfram sites go in the Details section.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExternalLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "0fbec7b0-8276-4b67-8308-31bc03dd931a"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ExternalLinks"},
 DefaultNewCellStyle->"Item",
 CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
 CellID->843468725,ExpressionUUID->"a3c0bcf1-a7a2-461b-8bc6-b49eaad8c292"],

Cell["Link to external information", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->553908639,ExpressionUUID->"4bc1b551-cc4d-415f-8452-acb95090b8eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Symbols",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"RelatedSymbols", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "List the names of published resource objects from any Wolfram \
repository that are related to this function.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedSymbols"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "261b97f7-052c-4002-b371-903e67b81f23"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "RelatedSymbols"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
 CellID->899564547,ExpressionUUID->"5ab152ae-0940-4328-a90b-47fd761b4f6d"],

Cell["SymbolName (documented Wolfram Language symbol)", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->323240788,ExpressionUUID->"f45ee52e-445c-4709-acf1-a2095b18ec49"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Published Date",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"PublishedDate", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"If known, the date Demonstration was published."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoPublishedDate"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "9cf9413e-d74a-4713-ad79-af80714000b4"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PublishedDate"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
 CellID->364555554,ExpressionUUID->"4b47d778-b15c-42e3-b42a-a485aeef548e"],

Cell["2015-07-30", "Text",
 TaggingRules->{},
 CellID->308926907,ExpressionUUID->"3ff040b4-ac89-4702-8932-b2e6668018ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your demonstration to ensure \
it is discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "21216965-9af5-4bf0-84ca-9cafb4e197ff"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->618273920,ExpressionUUID->"50378636-2c89-4e21-81a7-888617046d3b"],

Cell[CellGroupData[{

Cell[TextData[{
 "AR Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityARSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your demonstration is expected to be supported \
through AR (Augmented Reality).", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityARSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e582ad1b-9875-4d7f-a6b8-c746d63c3eeb"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityARSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellID->811961892,ExpressionUUID->"63bda768-e866-4182-9add-2fd3cb0f84f6"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, False}], "\" \"", 
           StyleBox[
           "\"Supported in ARPublish (Augmented Reality)\"", FontSize -> 12, 
            Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJw9j8tOwzAQRSlKKOW1ZJ0lVPJHmCCkSIhWGX7ATSfUwvZYnvEif4/\
NazlH9zFXXyloQRaHcLHLErMoWPcnnD7xOJ9x82q5kHYQ9Dyvfu75nJsxF8cWcoyUBI+dDZ0e9/\
ngLJ+6B50/PIbKRzTOyvLI7YtxjAou94kiJlngvicfjdiDrQo9/oaV/l0US4F5o7OQL5KpPkUu+\
8D9SsHdULJTTCimCmH9ROTQBAXXfeZiGUIZ8l/5B+\
sGbt4oFHYzIlNOE74vEeH2GX0plPSd9wX8smDe"},
 CellTags->{
  "CheckboxCell", "CompatibilityARSupport", 
   "CompatibilityARSupport-Checkboxes"},
 CellID->860708008,ExpressionUUID->"5d7d5a4e-4eac-403b-a03c-8e69ef9759b6"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "df2a6bd8-6df7-4947-8d07-9109d62a9a9b"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellID->208833892,ExpressionUUID->"64dc7bd7-a157-4807-9079-e1242dc930dc"],

Cell["6", "Text",
 TaggingRules->{},
 CellTags->"ScrapeDefault",
 CellID->861854922,ExpressionUUID->"a78a7edb-5bf1-4b87-8dcc-d90268f67cab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your demonstration is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e775a265-1d0f-4989-a18d-71a45948449a"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellID->621854978,ExpressionUUID->"93b87fc4-57ba-4d56-95e4-655f9b234351"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[True, {False, True}], "\" \"", 
           StyleBox[
           "\"Supported in cloud\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxFjkuOwjAQRAUKf4bF7NhxgRwCjJAioQHRXCAkjbCw3Za7e5Hb4yDQbEvvVdV2XsIIpH\
MI45NKVClhYh7YPLG9D7g4WhYurkkxc5Wg5296H3Jx0ez9gsZISbDd2LBpHGn7NabnRBGTdLA25GMt\
9madlc700EfLe6colgLzbKtCPlNNf4Kc+sBmUMKqCoIpJpS6B2GyI3JYhxIWRjkrVcjHeXSoHeN/\
2L/l4o9CzpYXZNLU4LWLCD979HlQ0rvvBXKCW6E="},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->524115277,ExpressionUUID->"80621db8-e8ee-4c98-89e8-8fd9fac05051"]
}, Closed]]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
TaggingRules->{
 "ResourceType" -> "Demonstration", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> "2024.05.27", "CreationTimestamp" -> 
  3.927362576104464`16.346675986568034*^9, "UpdatedTimestamp" -> 
  3.92736257610453`16.346675986568044*^9, "CompatibilityTest" -> 
  HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWFtv2zYUri+\
5IPEyNECB9a0PeciCbR2GAduaXerJSeohSZPQ6XNo6UgRTJMqSaXxv98hJTm2I7mS7WCdHxJapL7z8\
dz40X5N7TpiGImYe0f3kQSlQsH9mlq7jEPQfj13uq7qXR//\
Ntrcw39rRx9jytTO3geQZv48HvZBSt9+9t+aFYQO4RIHLSeWErj+QFkM/\
jO1e3SHI6rNW0JDX4gBrmqehkqrVo8GQciDq5iBIq0rUCKWLvRGEZBmh2qKNJvvuQuFLNf+\
ZsIdmGUJ4J4juIZ7fUH1rd8o2vk5gKfIfmaPjJSGocNCpH3TAT/\
k4STdm4dXXhlS2Wt5S1XzPGYMif3weDI1cAUBUgWJTP0wiKV1zXi7f5UldQWRUKEWcpQAJjgqBWrY+\
NXU5jENWSwxMjX11QV1GeguV5oyRr4pYuivL+Lshdza6ompyGwRLTEf/hGhsdc4o5HdQ8xd86a/\
llgmLwuda8lRZdJ6O8EiEQu1eUyY0E6N1G5I/c0fEw/qh1uWPOavIt+WJX/\
gNwu81CBg7G11xCdui0Cp38qiZoP3scYwgmcKagsjzagLbcyrFcJum6LrAKMj8BB3+\
51gHgYSE5OrP8sCX8jwDgFv7pK2cCIBv0m1cc1V2g5yvNGpik6jCLh3zW8p9xh4DjCm5jpmVRbm+\
Ai/VvaSi7DY8VIE8rwHQ9yABmPuRIo4Wh4Ua7fVZmaE7eAOE/\
qFg4sCIUNQ3zu34A764h4f7zw8NtZJK5uz33bQHo2ZtvXNdQ5T8nX2iEBSm7mhLt3NxoFQg564jjwc\
p32/OMorAJ8KcAMfbGQlsHnCRJ+\
ym1tzpE16VP1S1uwJ6Heh5wFPGlH5cj2m3B05tyJ0oRNSJoJJYq2UmNR4SuL5ik2Z8kEedYqzz+\
2sOZMIfIwBd012Uw8wLzN4icfFeL/\
TBibAsiNlrSdjW9pLdokqh102yJIulSHqp6oUeL9KjaVSZtbqlIcyf57Dp7E/\
c32cFIg6q0p5L1ZwCgF1R92AC5l0pyzWqmmikV98h2Ut5eDOFN68MlzSzLweW1frp/\
imbYzHVf0WgM7a2LTFlZUSlsQ2Mgfsi1SBegq6hdWIEtqq5nWzutsxdWn5qY0u9uwAM3Wzy62x0Wec\
3BizLth4Cly672U7UuOT4RFs/8HbY/MTNmvqqPIxSLngoUvZhRQRoLesnluU8wTR/\
EtEPW2GrbZSwg2t9r5U7cq1HaVsyQjpj4YmhzbbVoz0xGrgbJqQHWKBzkBTz9wP0hsY2XRCnVxAXiY\
rXl+BD9Jk96ts6qG7rCYqE0ZnaCW3p/EdKrmCNk/R54+uns/s5+\
At3gmWuazMuUlU0PcHhSjVBH01nHkK/udCJLwEDmgAxMWAVNPt14WYyWmXlweJsYWF/JOZnK/\
sS3qvjJ5fCOoLU/EXy0ehgqx/CmuL6Pz9Qh6zwr64bP8nSn6hboEAP362X81KZ2fp4FoF/\
7oQ5ikkezHpKfcsLNS/K8RfTplXxS0rxX8v54//VoAvRfILkt2/\
Fu6DuJJG2H9mK2QZ3X1Y8rjKVdsLU11Qbnfn/Mae/TiO1RZHs2bny+6Vwq5Sfi8TnHKi+1+K4NOh"]\
]], "DefinitionNotebookFramework" -> "DefinitionNotebookClient", 
  "RuntimeConfiguration" -> {
   "Contexts" -> {
     "DemonstrationResource`", "DemonstrationResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Tagged", "HintPods" -> True, "LoadingMethod" -> 
    "Paclet", "PacletName" -> "DemonstrationResource"}, "ToolsOpen" -> True, 
  "SubmissionReviewData" -> {"Review" -> False}},
CreateCellID->True,
FrontEndVersion->"14.1 for Mac OS X x86 (64-bit) (June 13, 2024)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell[
       StyleData[StyleDefinitions -> "Default.nb"]], 
      Cell[
       StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
         Cell[
          BoxData[
           TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
          CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
          RGBColor[0.7508, 0.17868, 0.085283], CellTags -> {"MainDockedCell"},
           CacheGraphics -> False], 
         Cell[
          BoxData[
           TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
          TaggingRules -> {"Tools" -> True}, 
          CellTags -> {"ToolbarDockedCell"}, 
          CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}},
           CacheGraphics -> False, CellOpen -> Dynamic[
            CurrentValue[
             EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
       PrivateNotebookOptions -> {
        "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
       CellLabelAutoDelete -> False, 
       CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
       AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}]}, Open]], 
   Cell["Hint Styles", "Section"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell["Template Boxes", "Section"], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              StyleBox[
              "\"Add Snapshot\"", "Text", FontFamily -> "Source Sans Pro", 
               FontSize -> 11, StripOnInput -> False], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1953907064413444837; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "AddSnapshot"; (
                    Needs["DemonstrationResource`DefinitionNotebook`" -> 
                    None]; DemonstrationResource`DefinitionNotebook`\
AddManipulateSnapshot[
                    ButtonNotebook[]])]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1953907064413444837]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7071186616034202283; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7071186616034202283]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4937992391498864149; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4937992391498864149]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Subscripted Variable\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert subscripted variable placeholder\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    168721804526114855; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Subscripted Variable"; 
                    DefinitionNotebookClient`SubscriptInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    168721804526114855]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4246462567992284997; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4246462567992284997]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> GrayLevel[1], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> GrayLevel[0.9], 
               Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
               Automatic], FrameStyle -> Directive[
                GrayLevel[0.9], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert comment for reviewer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7544339529118446740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment for reviewer"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7544339529118446740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1923617830619908649; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1923617830619908649]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1439263868824766472; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1439263868824766472]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              GrayLevel[0.9]}}, 
          GridBoxFrame -> {
           "Columns" -> False, "RowsIndexed" -> {1 -> GrayLevel[0.9]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[
                 RasterBox[CompressedData["
1:eJztnXvQFlUdx0ktEbIsMsnKUWqaLkOYKWNNiHSbQUrtRdLUerm8L+AlbJBE
ur7gIFlmzeQ4iOIlanTGCyT4RzPZWDKKt1E0TSP6OcZomhI5mpFmnc/s7rTv
tufsue3zHHj44+Mg7HMu39095/wu5+xhs8/pm7vXiBEjzh2p/tM3a/GUhQtn
LZl+gPqfGQvOPWPegsGBqQsWDc4bXHj07L3VXw4oZir2Ucj7dmlOyel2O3qR
0YptOaMTaE+vsULxn5wLE2hPL/Fexc6S/jvzv+t2u3qFW0vaF2xIoF29wLQa
7QumJdC+3Zl9FVsM+m/Jr+l2O3dXlhi0Lzg/gXbujrxT8ZKF/i/l13a7vZ1m
kuKNLZZ/vYX2Bde12I79FZMT0LvKKsUOxQ8Vh0Yue7KD9gXHRG7DOMWPFC8o
Lk9A7yrLSn3/t+JmifOc7KPY7KH/5vy3ofVPUaxTvFYqeygBvavM1+jwgGKm
+K9LzvbQvuAszzpHKmYb7vu8BPSucnyDFs8qlirGOpR5oOJvAfpvV7zNob6D
FRco/tpQ7ucS0LvKREtN/qVYo/ioRZmrArQvsBmrafvP87bZlHlEAnpXeYeH
NhsVM6R+nD5Sho+5vrym0Ys6v6i406NMl3e4U+wt2bzro9GTivMUb83Lep3i
rgjaF9yVlzkirwMb7c+eZb2q2CsBvet4OlAnbKeVim9F1L6AMhmL/hFYzlMJ
6KzjvhZ0S417EtBZx4YE9GmbWxLQWcflCejTNisT0FnHUAL6tM13EtBZx9wu
acIak3nxMcWjir/I8PhkTAYS0FnHcR3S+znFz3Itxku9b4P15nsUp0tm7/09
Ut1TE9BZxxEtar4z1/yzktkarm0bpRhU/DGwHYcnoLOOsS3o/rxkfqO3R2oj
du85kvmRfdpzUAI668AufDWS7ujzbWkvpsPYdI9jm16R/9nRqfJUJP1/L1kc
63uKryg+rHh95La+QbIxzbZN2xLQt4m7I+lfx4uS5f4wfsSK8fI8f9+y/rsT
0LeJdS3qX4Y1568VJ4nffFzlEos61yWgb5U3KT6t+KZivcRb57nwJ8WXJcwv
yW9vaqiHvuFjwZfHOuzNHdaa52yCZPG31ZLZOjF89LHA/xeyPmSuf8yhPvrO
PHW1ZPHXj0icmHMB8bg+xUWK28Uu/6bbsEbBv++7TpmQl+FbPxrdofiBZGPj
uyzrxT4hh+frihslm+u7rWUIN+Z98rkHyyO3hTUh+SCLFcfK8DU1efTkKMRa
t8fiGcUmyfy9NyjWijn3sw7mZ5+9GfwmNJZkgjghuRWsrXnmX05Ab3xm+HbJ
oyjbuqzR50gWn/y84gDJ7GzyUh61KPdXeRmu9+CslvtLHO4TeV194h+7DeUh
yfZw1WlE+74rWWy/TiPWLP3SnC+y2kN/xq7nWuozWn+hUp8uf6otyFWcLfo1
I+vJGZZacX/uaKjvdI97cHFLfZ+rqW9ZS/VVuVfxbkO/eaY/6agV788thjrJ
43L1nR3eQt+HDPWxZlvdsvZotJ+hDeRbnuCoUwFxgI2Guq/yKPOJiH1fZVEf
Ntb6lrS/TcxzIbb0Ek/tC7BZdPMBazzXfXpXROr7WrH3kzD3+OSFmdgq2drF
VO+i/B6E6A/9hnZc5ljWnAh93yjutsgYyWzrGNoz3x/dUB+5tnV5xYwpX1Jc
I5lv4MW8THJreUbIl/1A5TeMow9o2vKCoxZHBfb9EcVbHLUvOETi2ME2ORus
t8u2EjngrPlt1oDMrdiRh5V+f5rh+j4HDcYE9BvtbP0POohvh/g0se1s1h2L
S3/mmXO1dZk3iO+enJcxSvR2pas94OMP4pn4UKD2Bezl+aen/jbjLXt7Tsr/
3G/oL/PnhlzrMyQ7d+B3+b8xLmE3f1yxIC9L509+3LH/Oxz7XLZtYzFd/Gxk
m1z5WZLNzfMM5RCrfX/pN325juVriv0uvLO8C18zlGdaA4foX2fbxuJMR+23
WpZb+HZ09xc/XHnO1I3t15auIT7yY0PbXMYGF//Y/Ja0L3CxkS+1LBNf+fOa
MtiTMq50LTEn3fNYjQ+eZ2jbpyzbNtqhv0tb1h5cbORTLcu831DGmsq1A4Zr
q/PqDMO1J1q2bbxlX6/sgPYFV1q2abxleQ8byqj64K4yXFvNzVwTQf9TLfvK
ve9EbtBSy/aAbezjQUMZiyvX6vIrGJPK8XDGLN1+OuaZKZZtu9Shv8ta1t7F
R/2yQ7mbDOUwh36mdO21mutOK10zylAmMXPWxOW1lImtDn2GM1vS3jVGs8Oh
7BsM5ZBrxVqyGMuqcanHZbg9i66mvELshq+KXS6dTz4xGk2PrL1PjNJF/xWG
cm7Kr+E+YFthYxU+IHwr2GC8l9hk2Ga6ODZjUX9e1iLLdl3moT9gq8Y6f4J1
ss8e9Fcc6phuKIf7XthK+BYGxe4coDL47SbmZeADrs4pdYyVsLg4Phvb9YcO
fEch/rcxlvVwRoApj6u8jsXHxvti80zguyMXaGTp98TVmnyxsDKg3wVod4in
9vhMHwms/yiH+kzxBnzJ1bUdPucL8t9tz68j94n54KeSvSsja+pZXlNWlY9J
vHwEfPi2z2EB6wdTHM+WOQ51mnw/0O/Yhzo+KMPXSXXgh3Jd8zRxp9jHHBgf
10aq9woHbYh7mfxcxBQPDtCeZ548SlOOLrHR2yJrX7Be7OKPMc4cKXjCUaOh
hvJ4J33PEWJdbvK5Mceb8idi0GQjN/XfB5d8ZOzlpnMx0Mg1nw3fqmlNTi7M
vS1rX6Czkdvau3uxo1ZN5zjBb8X+DBj2Lp2s+TfGIuYo1/hKKFUfNfGCtvIP
WQO6xDrgJxblMh/0i348Z38Sz1rdWpP3h5zHhzqsewFaFzY7cbLQM1macD2H
DX1+aVk2Objk4vI+sHZhrMHvPyjDxynsZvK6OKPimS7pXgbbDr8COdCbpd38
W3K5XfPAWQ/9xqOuP0i2fsOnxJpjUyJ6l8FHgk2zotRf9gQcK5ltzl6BWPtI
C5Y76g+smdtek3QC7GD2g7C3ZZLY2wL4H8hLID5IfnHI/iP8QRM87gHrNfZh
p7Y/RAca3S6ZrcEYH2KzVGFvGXvMmL+vlsy2dtl/hx/Mdz875/Hpctq6BX3H
R8O6Hvud5yvGXlgXiDmRa8CeTPy/Tbla+JN994nyu5mS7Tftht70jTnlG5Lt
uY2Rqxqbmy36cUlgHbyHvNv4Cjq5byfF/ddVbM8fYM9/jHg168r5+X1v2ocU
yq5w/oBLvICzL3z2xpkgv5/cBvz+rPV/If+fJ+dLymdPAs+za64qsdpxkeqv
wlzP2sn3rJ8qKZ+9Cgd59gt9yJmNtXefMYk8GV1OXQgpnj1cELpfjbPB8Bv4
7Ftn3cc6jDGtrbP3IMWztwumRuoj6zxy19gzSry3bp4mDkB8eyDXvK29ulWO
S0BnHabczBB4ntkfj68NG455sFvnruj27qZAG+dmp8ZQAjrriJGzkTopfnun
YHfwVTaR8ncmXc9z3BW5LwGddYTGDIjD8X639f0FxsfQM7yeTkDnOkLOXiXn
AX9B+fsjMfffV78/QnzySc+y8Pd12sdsg8/Zw2jMN3Dq7F7snFjf3zmypnzq
ZG+NT56f7jyibmKbK08eON96sskNjfE9B5szR/gW1hqx//7URIsyO03T2fP4
hsmXdYnHkRe9vaFcE+RIH+hQH+8wfqNnG8o9PgG9q+jyt8it4JyrulxkG0LO
YTvbs058GzNFH+9se4+vD0Ol9jHm4ne33eNmotvf35wsWWynHGdre5+dD4zV
+JH5Rmtsf/4xHvpPjtyGQyX7ti65ijZzSqehv/u3WP51Dtpf32I7iOlMSkDv
TkM+Z7HvzkSvfn+8E5xvoX/o+XF70MO6xHQu0xbx35+xBzumGfSflkD7eoG6
70zemkC7egVyfMox9p3ifq7nHsK4sKT/ii7U3+uwn2Nbjs8Z/3sI55ScbrfD
m/8Cm+a3ew==
                  "], {{0, 0}, {96, 100}}, {0, 255}, ColorFunction -> 
                  RGBColor], {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], PlotRange -> {{0, 96}, {0, 100}}, 
                  ImageSizeRaw -> {96., 100.}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Demonstration Resource\"", FontFamily -> 
                    "Source Sans Pro", FontWeight -> "SemiBold", StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"DEFINITION NOTEBOOK\"", FontFamily -> 
                    "Source Sans Pro", FontTracking -> "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {2 -> GrayLevel[1]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> GrayLevel[1], 
                 StripOnInput -> False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Demonstration Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> GrayLevel[1], 
               StripOnInput -> False], 
              "https://resources.wolframcloud.com/DemonstrationRepository"}, 
             "HyperlinkURL"]}, {
            TemplateBox[{
              
              TemplateBox[{
               "\"Open Sample\"", 
                "\"View a completed sample definition notebook\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 1953775238739395670; (
                DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                DefinitionNotebookClient`ViewExampleNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[1953775238739395670]]& , 
              "\"View a completed sample definition notebook\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Style Guidelines\"", 
                "\"View general guidelines for authoring resources\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 6116318327813659236; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                SystemOpen[
                 "https://demonstrations.wolfram.com/guidelines.php"]), 
               DefinitionNotebookClient`ButtonCodeID[6116318327813659236]]& , 
              "\"View general guidelines for authoring resources\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0.05]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 1908941340027841465; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[1908941340027841465]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[0.57555, 0.57556, 0.57554]], "Grid"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Check\"", "\"Check notebook for potential errors\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 3941141659801008137; (
                DefinitionNotebookClient`$ClickedButton = "Check"; 
                DefinitionNotebookClient`CheckDefinitionNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[3941141659801008137]]& , 
              "\"Check notebook for potential errors\"", False}, 
             "OrangeButtonTemplate"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 6058522267645278627; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[6058522267645278627]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"To my cloud account\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8267267753343341396; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "DeployCustom"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "To my cloud account"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource["Demonstration", 
                    ButtonNotebook[], "CloudPrivate"], "ShowProgress" -> 
                    True]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8267267753343341396]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1628664177886538591; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "DeployCustom"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource["Demonstration", 
                    ButtonNotebook[], "CloudPublic"], "ShowProgress" -> 
                    True]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1628664177886538591]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             Alignment -> Right, StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False]}, ImageSize -> 15, 
                    PlotRange -> {{0., 15.75}, {0., 16.5}}, AspectRatio -> 
                    1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your demonstration submission\
\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    2169377100431483360; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   2169377100431483360]]& , 
                  "\"Submit changes to update your demonstration \
submission\"", True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False]}, ImageSize -> 15, 
                    PlotRange -> {{0., 15.75}, {0., 16.5}}, AspectRatio -> 
                    1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your demonstration to the Wolfram Demonstration \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    850153740503147579; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   850153740503147579]]& , 
                  "\"Submit your demonstration to the Wolfram Demonstration \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.1511, 0.15112, 0.15108], 
              RGBColor[0.7508, 0.17868, 0.085283]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[0.1511, 0.15112, 0.15108], 2 -> 
              RGBColor[0.7508, 0.17868, 0.085283]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[0.1511, 0.15112, 0.15108]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[
              RasterBox[CompressedData["
1:eJztnXvQFlUdx0ktEbIsMsnKUWqaLkOYKWNNiHSbQUrtRdLUerm8L+AlbJBE
ur7gIFlmzeQ4iOIlanTGCyT4RzPZWDKKt1E0TSP6OcZomhI5mpFmnc/s7rTv
tufsue3zHHj44+Mg7HMu39095/wu5+xhs8/pm7vXiBEjzh2p/tM3a/GUhQtn
LZl+gPqfGQvOPWPegsGBqQsWDc4bXHj07L3VXw4oZir2Ucj7dmlOyel2O3qR
0YptOaMTaE+vsULxn5wLE2hPL/Fexc6S/jvzv+t2u3qFW0vaF2xIoF29wLQa
7QumJdC+3Zl9FVsM+m/Jr+l2O3dXlhi0Lzg/gXbujrxT8ZKF/i/l13a7vZ1m
kuKNLZZ/vYX2Bde12I79FZMT0LvKKsUOxQ8Vh0Yue7KD9gXHRG7DOMWPFC8o
Lk9A7yrLSn3/t+JmifOc7KPY7KH/5vy3ofVPUaxTvFYqeygBvavM1+jwgGKm
+K9LzvbQvuAszzpHKmYb7vu8BPSucnyDFs8qlirGOpR5oOJvAfpvV7zNob6D
FRco/tpQ7ucS0LvKREtN/qVYo/ioRZmrArQvsBmrafvP87bZlHlEAnpXeYeH
NhsVM6R+nD5Sho+5vrym0Ys6v6i406NMl3e4U+wt2bzro9GTivMUb83Lep3i
rgjaF9yVlzkirwMb7c+eZb2q2CsBvet4OlAnbKeVim9F1L6AMhmL/hFYzlMJ
6KzjvhZ0S417EtBZx4YE9GmbWxLQWcflCejTNisT0FnHUAL6tM13EtBZx9wu
acIak3nxMcWjir/I8PhkTAYS0FnHcR3S+znFz3Itxku9b4P15nsUp0tm7/09
Ut1TE9BZxxEtar4z1/yzktkarm0bpRhU/DGwHYcnoLOOsS3o/rxkfqO3R2oj
du85kvmRfdpzUAI668AufDWS7ujzbWkvpsPYdI9jm16R/9nRqfJUJP1/L1kc
63uKryg+rHh95La+QbIxzbZN2xLQt4m7I+lfx4uS5f4wfsSK8fI8f9+y/rsT
0LeJdS3qX4Y1568VJ4nffFzlEos61yWgb5U3KT6t+KZivcRb57nwJ8WXJcwv
yW9vaqiHvuFjwZfHOuzNHdaa52yCZPG31ZLZOjF89LHA/xeyPmSuf8yhPvrO
PHW1ZPHXj0icmHMB8bg+xUWK28Uu/6bbsEbBv++7TpmQl+FbPxrdofiBZGPj
uyzrxT4hh+frihslm+u7rWUIN+Z98rkHyyO3hTUh+SCLFcfK8DU1efTkKMRa
t8fiGcUmyfy9NyjWijn3sw7mZ5+9GfwmNJZkgjghuRWsrXnmX05Ab3xm+HbJ
oyjbuqzR50gWn/y84gDJ7GzyUh61KPdXeRmu9+CslvtLHO4TeV194h+7DeUh
yfZw1WlE+74rWWy/TiPWLP3SnC+y2kN/xq7nWuozWn+hUp8uf6otyFWcLfo1
I+vJGZZacX/uaKjvdI97cHFLfZ+rqW9ZS/VVuVfxbkO/eaY/6agV788thjrJ
43L1nR3eQt+HDPWxZlvdsvZotJ+hDeRbnuCoUwFxgI2Guq/yKPOJiH1fZVEf
Ntb6lrS/TcxzIbb0Ek/tC7BZdPMBazzXfXpXROr7WrH3kzD3+OSFmdgq2drF
VO+i/B6E6A/9hnZc5ljWnAh93yjutsgYyWzrGNoz3x/dUB+5tnV5xYwpX1Jc
I5lv4MW8THJreUbIl/1A5TeMow9o2vKCoxZHBfb9EcVbHLUvOETi2ME2ORus
t8u2EjngrPlt1oDMrdiRh5V+f5rh+j4HDcYE9BvtbP0POohvh/g0se1s1h2L
S3/mmXO1dZk3iO+enJcxSvR2pas94OMP4pn4UKD2Bezl+aen/jbjLXt7Tsr/
3G/oL/PnhlzrMyQ7d+B3+b8xLmE3f1yxIC9L509+3LH/Oxz7XLZtYzFd/Gxk
m1z5WZLNzfMM5RCrfX/pN325juVriv0uvLO8C18zlGdaA4foX2fbxuJMR+23
WpZb+HZ09xc/XHnO1I3t15auIT7yY0PbXMYGF//Y/Ja0L3CxkS+1LBNf+fOa
MtiTMq50LTEn3fNYjQ+eZ2jbpyzbNtqhv0tb1h5cbORTLcu831DGmsq1A4Zr
q/PqDMO1J1q2bbxlX6/sgPYFV1q2abxleQ8byqj64K4yXFvNzVwTQf9TLfvK
ve9EbtBSy/aAbezjQUMZiyvX6vIrGJPK8XDGLN1+OuaZKZZtu9Shv8ta1t7F
R/2yQ7mbDOUwh36mdO21mutOK10zylAmMXPWxOW1lImtDn2GM1vS3jVGs8Oh
7BsM5ZBrxVqyGMuqcanHZbg9i66mvELshq+KXS6dTz4xGk2PrL1PjNJF/xWG
cm7Kr+E+YFthYxU+IHwr2GC8l9hk2Ga6ODZjUX9e1iLLdl3moT9gq8Y6f4J1
ss8e9Fcc6phuKIf7XthK+BYGxe4coDL47SbmZeADrs4pdYyVsLg4Phvb9YcO
fEch/rcxlvVwRoApj6u8jsXHxvti80zguyMXaGTp98TVmnyxsDKg3wVod4in
9vhMHwms/yiH+kzxBnzJ1bUdPucL8t9tz68j94n54KeSvSsja+pZXlNWlY9J
vHwEfPi2z2EB6wdTHM+WOQ51mnw/0O/Yhzo+KMPXSXXgh3Jd8zRxp9jHHBgf
10aq9woHbYh7mfxcxBQPDtCeZ548SlOOLrHR2yJrX7Be7OKPMc4cKXjCUaOh
hvJ4J33PEWJdbvK5Mceb8idi0GQjN/XfB5d8ZOzlpnMx0Mg1nw3fqmlNTi7M
vS1rX6Czkdvau3uxo1ZN5zjBb8X+DBj2Lp2s+TfGIuYo1/hKKFUfNfGCtvIP
WQO6xDrgJxblMh/0i348Z38Sz1rdWpP3h5zHhzqsewFaFzY7cbLQM1macD2H
DX1+aVk2Objk4vI+sHZhrMHvPyjDxynsZvK6OKPimS7pXgbbDr8COdCbpd38
W3K5XfPAWQ/9xqOuP0i2fsOnxJpjUyJ6l8FHgk2zotRf9gQcK5ltzl6BWPtI
C5Y76g+smdtek3QC7GD2g7C3ZZLY2wL4H8hLID5IfnHI/iP8QRM87gHrNfZh
p7Y/RAca3S6ZrcEYH2KzVGFvGXvMmL+vlsy2dtl/hx/Mdz875/Hpctq6BX3H
R8O6Hvud5yvGXlgXiDmRa8CeTPy/Tbla+JN994nyu5mS7Tftht70jTnlG5Lt
uY2Rqxqbmy36cUlgHbyHvNv4Cjq5byfF/ddVbM8fYM9/jHg168r5+X1v2ocU
yq5w/oBLvICzL3z2xpkgv5/cBvz+rPV/If+fJ+dLymdPAs+za64qsdpxkeqv
wlzP2sn3rJ8qKZ+9Cgd59gt9yJmNtXefMYk8GV1OXQgpnj1cELpfjbPB8Bv4
7Ftn3cc6jDGtrbP3IMWztwumRuoj6zxy19gzSry3bp4mDkB8eyDXvK29ulWO
S0BnHabczBB4ntkfj68NG455sFvnruj27qZAG+dmp8ZQAjrriJGzkTopfnun
YHfwVTaR8ncmXc9z3BW5LwGddYTGDIjD8X639f0FxsfQM7yeTkDnOkLOXiXn
AX9B+fsjMfffV78/QnzySc+y8Pd12sdsg8/Zw2jMN3Dq7F7snFjf3zmypnzq
ZG+NT56f7jyibmKbK08eON96sskNjfE9B5szR/gW1hqx//7URIsyO03T2fP4
hsmXdYnHkRe9vaFcE+RIH+hQH+8wfqNnG8o9PgG9q+jyt8it4JyrulxkG0LO
YTvbs058GzNFH+9se4+vD0Ol9jHm4ne33eNmotvf35wsWWynHGdre5+dD4zV
+JH5Rmtsf/4xHvpPjtyGQyX7ti65ijZzSqehv/u3WP51Dtpf32I7iOlMSkDv
TkM+Z7HvzkSvfn+8E5xvoX/o+XF70MO6xHQu0xbx35+xBzumGfSflkD7eoG6
70zemkC7egVyfMox9p3ifq7nHsK4sKT/ii7U3+uwn2Nbjs8Z/3sI55ScbrfD
m/8Cm+a3ew==
               "], {{0, 0}, {96, 100}}, {0, 255}, ColorFunction -> 
               RGBColor], {
              ImageSize -> {Automatic, 12}, ImagePadding -> {{5, 0}, {0, 0}}, 
               BaselinePosition -> Scaled[0.25], 
               PlotRange -> {{0, 96}, {0, 100}}, 
               ImageSizeRaw -> {96., 100.}}], 
             "Wolfram Demonstration Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentReplyIcon"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.076923], 
         FaceForm[{#, 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{1.5, 7.5}, {6.5, 11.5}, {
          6.5, 3.5}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJw9U2tIVEEUvq5iVkttZmdfuo/ZbQukJGKVqPBLUTGJ0h9hVLIJRYhUVJj2
AjGRWCKiF0llZWRCSEnZExEJ06CotaiQyH7EIrthT3u6NXPn3jswnDlzzzlz
vu8711u9vWJzsqIoSXwv5tuk6IsgrQvOnLf+1CRC5ZKbg3WJAIJV90rNJoJF
XOR6sebI6W3pyXq8DxccIoGwa+uxj/v/McxNbTxZOJ3w4Rkb+ZVgWGk2ZbcQ
Yfm0V+07Jhm6St7vzVhI2JfBT78ZCkI8cj2hqe/xxaIJJm0PoWEssCgtzvCc
lzlYYwXP5iUYHpXlHV4xasXLeh4wyKCWX2fDqcJwbfQ+w4F83vGQDT1fJ1/U
dzJ842bsih1XB3hiI0NzrPyOq9mBPb1tjpyNDBXci5U7MVQnLhji4nMsE+9W
c6ARL3i3XSWbXNiiLi8EzPxbbqydsaD73LgHJ2wp/OiFoKVJ8Ui+Chha6M3T
H8NZUMPm+XB9p8h0QtATjvtxqUh0SBgV76QHZN+lszReA5pNQ66o1+8HV6O3
rdWCBIcTuKHxHJ4NQdO1sx4Nxxy4VYBug2dVt4lMnB/vGCi7TSgWz/504Etk
VbXlNSGkCmWHqFYbJXziYXlT7VKXEdLq2DDMwyvvksTZZ5W4OgiCjmCVFTUP
dh+3HSKJ8y9hqUogIfqn83PkCUndQoTLQsZ2gpperL3fQJLXIMEn5F5GaD3D
l50g2O3OIkhiCUf7v8/fMJOMuRPTmT2FjLlU+0ghY471+dV93epzr/sPPaJz
u3Ev65sNX/8//gP5Ei2u
          "]]}, AspectRatio -> Automatic, ImageSize -> {13., 13.}, 
        PlotRange -> {{0., 13.}, {0., 13.}}]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11], "\[SpanFromLeft]"}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9], 
            ItemBox[
             ButtonBox[
              TagBox[
               StyleBox[
                TemplateBox[{"\"Reply \[RightGuillemet]\"", 
                  StyleBox["\"Reply \[RightGuillemet]\"", "HyperlinkActive"], 
                  BaseStyle -> "Hyperlink"}, "MouseoverTemplate"], FontSize -> 
                9], 
               MouseAppearanceTag["LinkHand"]], BaseStyle -> "Hyperlink", 
              ButtonFunction :> (SelectionMove[
                 ParentCell[
                  EvaluationCell[]], After, Cell]; 
               DefinitionNotebookClient`CommentInsert[]), Evaluator -> 
              Automatic, Method -> "Queued"], Alignment -> Right]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.88722, 0.77308, 0.76696]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 2045406886999866622; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[2045406886999866622]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYI9uuJUYJobchmTZGFisJTpAUhCMgGihBvyC5t0Tly
Qj0SgpgIKA6UJWjIdi3RSVJYtMMRUBaoBo8hu3VEJ0vjMwGCgGqAKnEZMl8B
uy8wEVAlVkOAjiTSBAiCewrZkKXKwiQZAlSPach0GWL9AkFA9RCNkCQNYU/A
GymYCKgebggQUG4IVVxC3TChSuxQJZ1QJcVSK+9QJRdTqzyhVslGKqKiIfgB
MfUOAGAkpIY=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYI9uuJUYJobchOXaENOjyrtDkgCMgGihBvyB5dkXXa
3Mu12TARUBwoS9CQ3brCK7XZsZoAQUBZoBo8huzVFQW6HI8JEARUA1SJyxCg
xwmaAEFAlVgNATqSSBMgCO4pZEM26/CRZAhQPaYha7Q5STIEqB6iEZKkIWz8
kYI1muCGAAHlhlDFJdQNE6rEDlXSCVVSLLXyDlVyMbXKE2qVbKQiKhqCHxBT
7wAAuk3GZQ==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYI9uuJUYJobcjZGK8nK+Z9uXsTgoBsoAjxhhx11H61
ZwtWjwPFgbIEDTnha/n96SOg4K8vn67O6tgRag5BQDZQBCgOlAWqwWPIYWuV
b4/ug2w8e3S9nexybTZkBBQBigNlgWqAKnEZ8mz9MiD3zaXTKw150UyAIKA4
UBaoBqgSqyEnfMz//fnz59fPTe7qWE2AIKAsUA1QJVA9piH3pnUB2XfWzMNj
AgQB1QBVAtVjGvLhwikQO82HoCFANUCVQPUQjZAkDWH/eP0SyMYMT0wEVANU
CVQPNwQIKDeEKi6hbphQJXaokk6okmKplXeokoupVZ5Qq2QjFVHREPyAmHoH
AG0Lmsg=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.7508, 0.17868, 0.085283], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.7508, 0.17868, 0.085283], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[{
                Thickness[0.066667], 
                FaceForm[{
                  GrayLevel[0.75], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{7.5, 
                  5.6426}, {6.475, 5.6426}, {5.643, 6.4746}, {5.643, 
                  7.4996}, {5.643, 8.5256}, {6.475, 9.3576}, {7.5, 9.3576}, {
                  8.525, 9.3576}, {9.357, 8.5256}, {9.357, 7.4996}, {9.357, 
                  6.4746}, {8.525, 5.6426}, {7.5, 5.6426}}, {{7.5, 10.287}, {
                  5.962, 10.287}, {4.714, 9.0386}, {4.714, 7.4996}, {4.714, 
                  5.9616}, {5.962, 4.7136}, {7.5, 4.7136}, {9.038, 4.7136}, {
                  10.286, 5.9616}, {10.286, 7.4996}, {10.284, 9.0386}, {9.038,
                   10.285}, {7.5, 10.287}}, CompressedData["
1:eJxTTMoPSmViYGAwBGIQHdN/6KvGHQ2Hu1tbai4YCzn4mHc6JqSqOZhLHYhW
cBR2sNxyomxfvIrD+5OHndZm8jncPPc9+PFTFYfHx2fsnjaBxSENBNSUHRKN
Qg20VjI62JvG7fLsUXZYuveguFowk8PZMyCg6LCZp3BN9+1/9tb3/Xun5yk4
mDRsd2h6xO4AtO3pBSVpOB9sXpoEXH3jVOfunOcicPOMQWCzKNw+vySBCEsT
Ibh7gIYLNTsIw917Uen2z7osPrh/QN6N6WeB+9cFaPpvoDmH2paHn9ok6tAu
BvIhk4PAy+3rmYH2lu+bL6V/95/91523uv6mSjg8rBJZ5/6Q3cH4yEa9PGVp
OJ+Zs0s+GegvmHqlvtJC6bOKcPOmfGOLnwEMF5h9u9X5ubcCww3mHrC3n6nA
3QsLd5h/wOEOjBeYf2HxBgsP/bsqbI1TNR1g4QWMBR6mbE14eIKdpaIFD28P
kMPZNRxg8QHjw+ILph4WnyjmAd0Nsw+WHmDugbkb5l5YeoKJw9TB/AszBxYe
MHtg4WXIsUYmCugOWHjC3AkLbxgfFh8w9bD4gpkHi0+YfbD4Rk//AAQ8Rd0=

                  "], CompressedData["
1:eJxdVA1IU1EYHStG2VxrxByaa073dFtRkiYheW9/EmhkGaWW/WjaEs1ICxEJ
zX6sCCuzX7USSiLRKHEWESWSaVFWhpkWlaiZWk5Lnab19p7nCj0Yb/fx3e/n
nPMdj5jk9XFSiUSyg/853r/GGtO6ODO1z+yylme70ePLtrc3fDXSwkyu+qi3
Oztn8ceSJi1FvC72R9TyIB3Nyl9xMrHTTJcHfWsufaCjT+qvr6pcNI+evjbs
21HmQbfkVv/2aTVTF+tryadDevp2TYwy4r6ZDsm2XQx9p6fH1M0vh96aqER4
DDSpc/SW7axJvFdgoNNK50TtDDTRthtXanR7OSqXmo+pI40TdTlapT3SvS7N
hxb9LHkaYuVoe4O+xT7OiX3Gc9SzxX4w4Q9HjY6EFo7GC89knDJiScWzSo4G
Vw7wN3zEex2TdVD3vKNc4GRfIwcTHqbmmeiroXA+xIs+58ceGDPRsFMX9qiy
9eL3FjOtO/Doqmu5B8PlRwbx38rjpJh/t/Anj5twb+kEjt5m2v+GB+i9lrrw
sIS3GcU4ngecHVU1h91YvEHm+OfK8iWrsh/XX9ewetuFQdWsnxhhYBXrd/WX
9NlltUo2T4rlTG8GUbB5fQUC5AwPfpoFH72cGV4ingqG5/48zdSNCjnDW+h3
qpzxMZenq0orY3yJ+EkZn2L+cQLcC2p0d/ZZRglwrw0J4CVpJ9CL0K5/P4Ge
xPw2Ar0NO9LX9BDoUTz3EehVxGOQQM8OuTxMlTC944x9QDz2BfkqIn/f/3DC
ldXT5DdOtxRrWD9OFn1i2oia9et7yaTJ36Bm8+SGp3pd+DuLzWuLfREd8kzJ
8Hia5JdppQqG19ryc3E5sXKGZ2vwlLQZPC/A+7CzI0LB+EhffDto02YF4ysn
Npq/Imd8Lp3XeLnDXcb41o8N7v9cIGV6GOntfrzEc5xAL02q/mWv4kcJ9BT2
R5PSpBom0NvC0JtOwQYbgR5X7k7uO1LXQ6BXv+KKgOHqPgI9F201PlfWDhLo
3X5t173vKRK2DzhjXxCPfUI+7BvqYR/RD/YV/UJXmAe6w7zwA+ABvwBe8BPg
Cb8B3tgL8AG/Al/YK/AJvwPf8EPoAX4JvcBPoSf4LfQGH4Ae4dfQ6//+/w8B
rcVF
                  "]}]}, AspectRatio -> Automatic, ImageSize -> {15., 15.}, 
               PlotRange -> {{0., 15.}, {0., 15.}}], True -> GraphicsBox[{
                Thickness[0.066667], 
                FaceForm[{
                  GrayLevel[0.25], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{7.5, 
                  5.6426}, {6.475, 5.6426}, {5.643, 6.4746}, {5.643, 
                  7.4996}, {5.643, 8.5256}, {6.475, 9.3576}, {7.5, 9.3576}, {
                  8.525, 9.3576}, {9.357, 8.5256}, {9.357, 7.4996}, {9.357, 
                  6.4746}, {8.525, 5.6426}, {7.5, 5.6426}}, {{7.5, 10.287}, {
                  5.962, 10.287}, {4.714, 9.0386}, {4.714, 7.4996}, {4.714, 
                  5.9616}, {5.962, 4.7136}, {7.5, 4.7136}, {9.038, 4.7136}, {
                  10.286, 5.9616}, {10.286, 7.4996}, {10.284, 9.0386}, {9.038,
                   10.285}, {7.5, 10.287}}, CompressedData["
1:eJxTTMoPSmViYGAwBGIQHdN/6KvGHQ2Hu1tbai4YCzn4mHc6JqSqOZhLHYhW
cBR2sNxyomxfvIrD+5OHndZm8jncPPc9+PFTFYfHx2fsnjaBxSENBNSUHRKN
Qg20VjI62JvG7fLsUXZYuveguFowk8PZMyCg6LCZp3BN9+1/9tb3/Xun5yk4
mDRsd2h6xO4AtO3pBSVpOB9sXpoEXH3jVOfunOcicPOMQWCzKNw+vySBCEsT
Ibh7gIYLNTsIw917Uen2z7osPrh/QN6N6WeB+9cFaPpvoDmH2paHn9ok6tAu
BvIhk4PAy+3rmYH2lu+bL6V/95/91523uv6mSjg8rBJZ5/6Q3cH4yEa9PGVp
OJ+Zs0s+GegvmHqlvtJC6bOKcPOmfGOLnwEMF5h9u9X5ubcCww3mHrC3n6nA
3QsLd5h/wOEOjBeYf2HxBgsP/bsqbI1TNR1g4QWMBR6mbE14eIKdpaIFD28P
kMPZNRxg8QHjw+ILph4WnyjmAd0Nsw+WHmDugbkb5l5YeoKJw9TB/AszBxYe
MHtg4WXIsUYmCugOWHjC3AkLbxgfFh8w9bD4gpkHi0+YfbD4Rk//AAQ8Rd0=

                  "], CompressedData["
1:eJxdVA1IU1EYHStG2VxrxByaa073dFtRkiYheW9/EmhkGaWW/WjaEs1ICxEJ
zX6sCCuzX7USSiLRKHEWESWSaVFWhpkWlaiZWk5Lnab19p7nCj0Yb/fx3e/n
nPMdj5jk9XFSiUSyg/853r/GGtO6ODO1z+yylme70ePLtrc3fDXSwkyu+qi3
Oztn8ceSJi1FvC72R9TyIB3Nyl9xMrHTTJcHfWsufaCjT+qvr6pcNI+evjbs
21HmQbfkVv/2aTVTF+tryadDevp2TYwy4r6ZDsm2XQx9p6fH1M0vh96aqER4
DDSpc/SW7axJvFdgoNNK50TtDDTRthtXanR7OSqXmo+pI40TdTlapT3SvS7N
hxb9LHkaYuVoe4O+xT7OiX3Gc9SzxX4w4Q9HjY6EFo7GC89knDJiScWzSo4G
Vw7wN3zEex2TdVD3vKNc4GRfIwcTHqbmmeiroXA+xIs+58ceGDPRsFMX9qiy
9eL3FjOtO/Doqmu5B8PlRwbx38rjpJh/t/Anj5twb+kEjt5m2v+GB+i9lrrw
sIS3GcU4ngecHVU1h91YvEHm+OfK8iWrsh/XX9ewetuFQdWsnxhhYBXrd/WX
9NlltUo2T4rlTG8GUbB5fQUC5AwPfpoFH72cGV4ingqG5/48zdSNCjnDW+h3
qpzxMZenq0orY3yJ+EkZn2L+cQLcC2p0d/ZZRglwrw0J4CVpJ9CL0K5/P4Ge
xPw2Ar0NO9LX9BDoUTz3EehVxGOQQM8OuTxMlTC944x9QDz2BfkqIn/f/3DC
ldXT5DdOtxRrWD9OFn1i2oia9et7yaTJ36Bm8+SGp3pd+DuLzWuLfREd8kzJ
8Hia5JdppQqG19ryc3E5sXKGZ2vwlLQZPC/A+7CzI0LB+EhffDto02YF4ysn
Npq/Imd8Lp3XeLnDXcb41o8N7v9cIGV6GOntfrzEc5xAL02q/mWv4kcJ9BT2
R5PSpBom0NvC0JtOwQYbgR5X7k7uO1LXQ6BXv+KKgOHqPgI9F201PlfWDhLo
3X5t173vKRK2DzhjXxCPfUI+7BvqYR/RD/YV/UJXmAe6w7zwA+ABvwBe8BPg
Cb8B3tgL8AG/Al/YK/AJvwPf8EPoAX4JvcBPoSf4LfQGH4Ae4dfQ6//+/w8B
rcVF
                  "]}]}, AspectRatio -> Automatic, ImageSize -> {15., 15.}, 
               PlotRange -> {{0., 15.}, {0., 15.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell[
    StyleData["HintPodTitleBar"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{
            Offset[{0, -3}, {1, 1}], 
            Offset[{0, -1.3443}, {1, 1}], 
            Offset[{-1.3443, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{1.3443, 0}, {-1, 1}], 
            Offset[{0, -1.3443}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], {-1, -1}, {-1, -1}, {-1, -1}, {1, -1}, {
            1, -1}}]], 
         InsetBox[
          FormBox[
           StyleBox[
           "\"Notebook Analysis\"", FontColor -> GrayLevel[0.4], FontColor -> 
            GrayLevel[0.4], FontFamily -> "Source Sans Pro", FontWeight -> 
            Plain, FontSize -> 13, StripOnInput -> False], TraditionalForm], 
          Offset[{8, 0}, {-1, 0}], 
          NCache[
           ImageScaled[{0, 1/2}], 
           ImageScaled[{0, 0.5}]]], 
         TagBox[
          TagBox[
           TooltipBox[{
             GrayLevel[0.6], 
             DiskBox[
              Offset[{-13, -10}, {1, 1}], 
              Offset[6]], 
             GrayLevel[0.97], 
             AbsoluteThickness[1.5], 
             CapForm["Round"], 
             LineBox[{{
                Offset[{-15, -8}, {1, 1}], 
                Offset[{-11, -12}, {1, 1}]}, {
                Offset[{-15, -12}, {1, 1}], 
                Offset[{-11, -8}, {1, 1}]}}]}, 
            FrameBox[
             StyleBox[
             "\"Close analysis pod\"", "Text", FontColor -> 
              RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
              "Plain", FontTracking -> "Plain", StripOnInput -> False], 
             Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
             RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
             StripOnInput -> False], TooltipDelay -> 0.1, 
            TooltipStyle -> {Background -> None, CellFrame -> 0}], 
           Annotation[#, "Close analysis pod", "Tooltip"]& ], 
          EventHandlerTag[{"MouseClicked" :> NotebookDelete[
              EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
            Automatic, PassEventsUp -> True}]]}, AspectRatio -> Full, 
        ImageSize -> {Full, 20}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 0}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterTop"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {4, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterBottom"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {0, 4}}]& )}], 
   Cell[
    StyleData["HintPodFooter"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{{-1, 1}, {-1, 1}, 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 1.3443}, {-1, -1}], 
            Offset[{1.3443, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-1.3443, 0}, {1, -1}], 
            Offset[{0, 1.3443}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], {1, 1}, {1, 1}}]], 
         InsetBox[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{3}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False], 
              
              StyleBox[#, FontColor -> GrayLevel[0.4], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 12, 
               StripOnInput -> False], 
              StyleBox[
               TemplateBox[{5}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False]}, "RowDefault"], TraditionalForm]], 
          
          Offset[{5, 2.5}, {-1, 0}], {-1, 0}]}, AspectRatio -> Full, 
        ImageSize -> {Full, 21}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 3}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodMenuItems"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       TemplateBox[{#, FrameMargins -> 3, Background -> GrayLevel[1], 
         RoundingRadius -> 0, FrameStyle -> Directive[
           AbsoluteThickness[1], 
           RGBColor[0.75686, 0.82745, 0.88235]], ImageMargins -> #2}, 
        "Highlighted"]& )}], 
   Cell[
    StyleData["HintPodActionMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], #2}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          Dynamic[
            If[
             CurrentValue["MouseOver"], 
             GrayLevel[0.96], 
             GrayLevel[1.]]]}, "Highlighted"], ButtonFunction :> 
        ReleaseHold[#3], 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["HintPodDisabledMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], 
              StyleBox[#2, FontOpacity -> 0.4]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          GrayLevel[1.]}, "Highlighted"], ButtonFunction :> Null, 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic, Enabled -> False]& )}], 
   Cell[
    StyleData["HintPodActionLabel"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[#, FontColor -> GrayLevel[0.2], FontFamily -> 
         "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, LineIndent -> 
         0, StripOnInput -> False], FrameMargins -> 0, ImageMargins -> 0, 
        BaselinePosition -> Baseline, ImageSize -> Full]& )}], 
   Cell[
    StyleData["HintPodMenuDelimiter"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[
         GraphicsBox[{
           CapForm["Round"], 
           GrayLevel[0.9], 
           AbsoluteThickness[1], 
           LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
          PlotRange -> {{-1, 1}, {-1, 1}}, ImageMargins -> {{0, 0}, {2, 2}}, 
          ImagePadding -> {{5, 5}, {0, 0}}, ImageSize -> {Full, 2}], 
         LineIndent -> 0, StripOnInput -> False], FrameMargins -> 0, 
        ImageMargins -> 0, BaselinePosition -> Baseline, ImageSize -> 
        Full]& )}], 
   Cell[
    StyleData["HintPodIconChevron"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.2], 
         AbsoluteThickness[1.8], 
         CapForm["Round"], 
         JoinForm["Miter"], 
         LineBox[{{-0.5, 1}, {0.5, 0}, {-0.5, -1}}]}, AspectRatio -> Full, 
        BaselinePosition -> Bottom, ImageMargins -> {{0, 4}, {0, 0}}, 
        ImageSize -> {5.6, 7.7}]& )}], 
   Cell[
    StyleData["HintPodIconPopOut"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4h1yra8Dd6g4rHN/WCWip+KwRiYqxXq+isNk
CZYwvlwEDROHqYPpKwUrUHFgAIEDKg5nzwDBG2VU/hlluPogMEMCzm9kOdpv
aC6OJi/mINR84NRCVwQfIq8M519wufHhi5Yymn4lNPOVHNLAQBHO/6YR03/o
K5eDB9Ab69wFHJoeHZ+xexqng8r0/xPqfvM5cG9dVnl8JacD0FO6m+byOPxL
/f4kUZHbQZr3ge4EBW6HD2IeAX9m8Dhkzyqfs2gxp8ONxmK3Kd/4HOYsUt75
p50Tbi6YesgF9b8ShJ+oCOfD3Anjw/zx9JP8pXx7hD9h4QfjqxtyAKNCBU0e
EY4wPqr5iHh4/nvlx0tnVRyYObvkk98pOwA9+X75MRUHWWD03udHxCssngGf
XO7X
          "]]}, AspectRatio -> Automatic, ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconWrench"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.4], 
         AbsoluteThickness[1], 
         Opacity[1.], 
         JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGYCYmWv6mZ9n3/2cmJZvp/5BBzci37yv9wu6/Au
ysnuhaQynG8at8uT55AGXJwBDHQdPl3yTRKIUIfzo1Ks7/vzajiosjVOdfbW
ccjaUzJZokUFrv8ySLmlqoPbts9/r1iowsVh6mD6zp4BAh4NnPbA3AHTr+ss
8/rRNoS7YXyYv2D+7H/ySf5SPrdD7D/nX29ff7H/6hXZZnGNGc6HqYPRMPED
b+bZ6FxBqAPpOprL7YAefgCtVISU
          "], CurveClosed -> {1}]}, AspectRatio -> Automatic, 
        BaselinePosition -> Scaled[0.2], ImagePadding -> 0.5, 
        ImageSize -> {16., 16.}, PlotRange -> {{0., 16.}, {0., 16.}}]& )}], 
   Cell[
    StyleData["HintPodIconInfo"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{6.81, 13.}, {
           3.3914, 13.}, {0.62, 10.229}, {0.62, 6.81}, {0.62, 3.3914}, {
           3.3914, 0.62}, {6.81, 0.62}, {10.229, 0.62}, {13., 3.3914}, {13., 
           6.81}, {13., 10.229}, {10.229, 13.}, {6.81, 13.}}, CompressedData["

1:eJxTTMoPSmViYGCQB2IQbct1fXGBrbRD6+vAHXKtvA7r3B9WiayTdoCI8zgc
/qoR039IHkoLOjCAgYKDB0iZu4CDPFijgsOsmSDAC1UnCzWPE0rLQMXZHV6x
mAia1Ug56E1Y8MMwjdXh685bXX9VJRx4Jq9sCvRkcTh7BgREHfoPgTSwOAQB
db8OFHYAO4eLFeo+IQcRMIMLzoe4h9dBW2LqFc4MYYd4zdMCx38JOviYdzom
pIo4PJgjuHSvo6jDkgKQz0QdCsEelHDQjAHZJAa1VxIqLwH3Jzofok8S4i9W
RQews67LQsJhnoKDMRjIQ9Q3wMJJwQFMJULDSRJmrhzUPKh6Blmof+QcwM6K
kXb4Bgq2rzJQcXFovMhA5UUdciqqluo0SztsKMqY+NZG2OHV1E08hTrSDquA
oTmXQdABPX4BaWq/EA==
           "], {{8.81, 9.79}, {8.8101, 9.5122}, {8.5878, 9.2854}, {8.31, 
           9.28}, {7.51, 9.28}, {7.2283, 9.28}, {7., 9.5083}, {7., 9.79}, {7.,
            10.62}, {7.0054, 10.898}, {7.2322, 11.12}, {7.51, 11.12}, {8.35, 
           11.12}, {8.6239, 11.115}, {8.8447, 10.894}, {8.85, 10.62}}}]}, 
        AspectRatio -> Automatic, ImagePadding -> 0.5, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconNone"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       GraphicsBox[{}, AspectRatio -> Automatic, ImageSize -> {16., 16.}, 
        PlotRange -> {{0., 16.}, {0., 16.}}, BaselinePosition -> Scaled[0.2], 
        ImagePadding -> 0.5]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreAlways"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYCYpF17g+rROQcbLmuLy6wlXaoBguoOvQf+qoR
w6/i8CZwh1zralWH4oyJb2vsVRx0N819v/yYqoO0/l0VtkYEv/U1UOFRBP/D
8mPe5pyqcP0z8oSaD3ipws2H0famcbs8fVQd2BqnOnevUXUAa+dWdUgSiLDc
ckLVwQPounXHVeB8kK1TmxH8gN7peULOKnD9EP+owM2H+QvmzyUFIBEeuHxC
mb+c2CtuuP75NjpXZj3jgpsP0s11nRPO5+feuqzyOAec73dxYsy/w+xw/WDr
uNjh5n9MPhPr7cEG93+V2Wq78Nus8PCB8WHhB+PDwhemHxb+MPNh8ZMGBhJw
f8Lkv2nEAJXwOGyu/rQh4DWrwwrTs9Z+F7kdvHiYtNunsTrYgrwpy+XQteHh
y6lGbA6HxNWCWRdzOJwKObhiyTk2B3fmCm4VDXaouRwOEaeMjmzUY4OHhybI
eA02eHgt/GH4bJ0qm4PT+bSrz4Hh+Z0tfobPVDZ4eIOVx7DD3QlzNwMYIPx1
smzffCl9FUg4u7M5hPEBU1S+isPs0Pmr195gdTAGgc0qUHewOswDJhfv7yoO
/g7CiYcvszoAU9vrQAtVh6V+QAFnNqg9iHj5dMk3SWAGIt78wBGJiFcYH+ZP
GB/mT5h+WLqBmQ/zJwC4F0s3
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInCell"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
            0}}}, {{{11.69, 13.37}, {7.57, 13.37}, {7.57, 12.37}, {7.76, 
           12.37}, {11.19, 8.93}, {11.19, 1.25}, {7.57, 1.25}, {7.57, 0.25}, {
           12.19, 0.25}, {12.19, 13.37}}, {{9.17, 12.37}, {11.17, 12.37}, {
           11.17, 10.37}}}], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIjIGYCYo+HVSLr3EUdbLmuLy6wlXZYUgBiyTlAxJUc
kt9FOdllyDuU6yrKf1mD4LM879F466sMV28MApuVHX7yv9y+3lkOQj9WdngU
Ib794gFZh/Dojfvf/FN22CHX+jrQAsHvf/JJ/tJ6GTgfbI+ODFz/2TMgIA03
vxroqodVQg5gSkQO6m4mVPubGR1E7I/d2fpE2cHy2tFckwYGB2n9uypsjCoO
YG89/GcP4wd5zm1QO/QHzr9wNeyN/u5f9jD9kHD4aQ8zX+z36XcnD3+3v8fE
2SXfrOygvqBzw8OX3+yDQAxHBB/srr9KcL7mW959BjuV4PrnCi7de7BcCW4+
LLwhND88PmDyEHcLOjg2PTo+Y/d3+/21shbpLYIOTglPLyjd/mZ//wH35JVM
CD4knATgfL0JC34YPuOH688Nq1237REf3HzNmP5DXzX4HLhVNOp6dv6yP3xZ
O1UyiRcePrlH/22q/sQDD79vGiANPA5yy1946NUzOOy61fU39TuPw5GNenmL
GxkdwPal8cLjB2Y+LP7SwEDCgQEMZODyf7+VPpgTKOOw9ldM7tE6XgfmCqCL
9sk43PfvnZ4nxAuJZ2NZB5j9UV933uraK+swf/XaG/HfeCDudZJzuA1yTgov
PH3CzBcAJg/mdHmHVElQyuSH851lXj8ykxKEq4eFNwCKHGBr
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInNotebook"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYC4qAdcq2vAwUcbLmuLy6wFXdYUgBiSTp4PKwS
Weeu4GCgtVL4AouUw1zBpXsPlis4vDlgqexlLeWg+ZZ3n8FOBB+s/y+CH6S+
oHODoyJc/z0mzi75ZkW4+cYgsFnRoanYbco3N0kHEftjd7Y+UXRYeM3kvcVR
CYeQx0tnH2FQgroLwb9pWxmxYqs4nP9zQfrmV8bicP0g1VzXxeDmf9OI6T/0
lcsB6Bmgj6QcGMDggz1MvoTnRNz7f2/sf/K/3L7+saLDzmCriP/PX9iHR2/c
/+YfzL1P4Pz+Xoc96+IfwPkrVqZm1068AdcPtAxo4yW4+ccenln/jOGkPcz/
MjWJRqEGh+xh4QPjw8IPxoeFL0w/LPxh5sPiB0KzwuNPHhibO+Su2h8GKTvE
7aAYeYAl7+5Z+/rfVgXnOLgdPu6qO5h345j9voPiasGsXHA+JJw44Hy9CQt+
GD5jh+vPDatdt+0RG9x8TZByDTYH/uky5V7st+21JaZe4cxgdZgp5PnFqOuh
vQY/99ZlP1kcIO54CjWfxeFeX0HUh0Uv7bdEft15i4vVoa2/Q3Oiy1t77Xax
m+fKWeHxAzMfFn9pYCACj1+YfMeX29cbgfF/+LJ2qmQSKzx95B79t6n6Ews8
/cDsB3O5JB1Upv+fUPebxeHIRr28xQeB6e+Cy40PX1gdnjTPO7uKX8qh/8kn
+Uv57A4sYXy6m2KlHDjBCY3DwV9OLMvXGJjeda7MejaXC56eYeENAPSkchE=

          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
          3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJdIGYC4qAdcq2vL6o52HJdX1ywVwtC24rB+YdTViWE
XBKE86tF1rk/rOJxMAaBzxpwPkReDY2vCDVPCMpXhvPB+jerwfnPf6/8eOms
ukPDdoemR+wiUHkNuHtgfJh7YXy2xqnO3W/U0eQ14ObB+DD7YHzNmP5DXzWY
4PzY3KP/NlX/toeZBxYP/GIPsw/GBzuHSxrOX7TF/MchFSkH9g9iHgF/Ptmb
vrdwdTeSdNjZywYU+WQPcb8E1B+f7H8EP146m0XcYeE1E6DKT/Z9IGUXRB02
V3/aEJD92R5s7A4Rh1kzQeCr/YQFPwyfvRN2+Put9MEcwe/2894vP+ZtLuxw
3793ep7QT3uIOiEHkC651t/2YH8a80LtY3NA5TPB+RPrflsVnPtkL/8lJ6xW
T8jhTSDYo1DzxOB8BjBQh/O/aQADzlQTTV4bbh6MD7MPxoeFfwDI2czaDmfP
gAA0nCdqOTglPL2gdFvDweNhlci645oO8iAPzdOEmPNXw+EPMDp9k7Qc4nZ5
8jC9VncAG39KywE9/QIAH6UuJw==
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{
          5.63, 11.05}, {5.63, 10.44}, {6.0569, 10.539}, {6.5048, 10.49}, {
          6.9, 10.3}, {9.53, 10.3}, {9.53, 11.05}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{7.92, 3.73}, {
          8.0396, 3.4994}, {8.0784, 3.2353}, {8.03, 2.98}, {9.41, 2.98}, {
          9.41, 3.73}}}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}}}, {{{6.73, 6.21}, {6.2, 5.82}, {6.67, 5.46}, {11.22, 5.46}, {
          11.22, 6.21}, {6.73, 6.21}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{8., 8.7}, {
          8.0514, 8.4458}, {8.0162, 8.1818}, {7.9, 7.95}, {10.25, 7.95}, {
          10.25, 8.7}}}]}, AspectRatio -> Automatic, ImagePadding -> 0.75, 
        ImageSize -> {15., 15.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconHint"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[#], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}}, {{{9.015, 17.37}, {4.4559, 17.37}, {0.76, 
           13.645}, {0.76, 9.05}, {0.76, 4.455}, {4.4559, 0.73}, {9.015, 
           0.73}, {13.574, 0.73}, {17.27, 4.455}, {17.27, 9.05}, {17.27, 
           13.645}, {13.574, 17.37}, {9.015, 17.37}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQbcixRiYqRcVh3bak+pu23A5rf8XkHt2n7OC/fkpq
x2MOB8+5DWqHnik5nP8e/HjpbHYHj4dVIuvYlRyAiisjVrA78Bau6b6toegQ
ApQ9soDdQepAtIJjoILDJ8fzaVefczgs6Nzw8GWoPNx84yMb9fIeyzr831T9
acMFXod1N+LL/OVkHV5uX8/8/IyAw7Fck4btDrIOZQ/mCC7dK+TAXMGtomEn
6/DP+dfb1w0iDkIi9sfufJV1ePRy6iYeQzGHac7dOc+t5R3SwEDcwe7FzTW/
bBQc9kybwF+1TcLh7TwbnStSig7Hd+3oZSuQdDjab1iuy6jk0MIL8qGkg8f+
WlmL50oO9uHRG/fnSDr4fu4LLjmi7HDw1ELXbZslHGDhAzO//9BXjRh+VQeG
iXW/rQzEHKzv+/dOz1N1uFfY1fekSMRhzhGFDUUZqhB/LhaCmFOs6sC0h1VI
ZL+Ag8g6d2AIqjqYCJrZ7L3E64Ae/gDrrapT
           "], CompressedData["
1:eJxTTMoPSmViYGBQBGIQ/emSb5KAhJoDAwg0aDhYbjlRtu++isNudX7urWpK
DrX2pnG7Tqo4TFPsKy2sVnRQvv2zLqtGBULfUXAI6J2eJ8Ss4mDSsN2hKUnB
Ia0jOfZOmrKD/l0Vtsar8g5Gz9apPlms5GDgs4zLLVXeweLHoZRVDxQdnNdm
3ivskneQW/7CQ09e0aHEbco3tnh5h+jLex6LxCo4FErzPtC9IO+wVfT36Xed
8nDzH5tJHYheIOeQBxJ4pOCgu2nu++Vscg75Qs0HTjUqOjDkN7IcPS/rcObd
ycNOukoObqqlTLM4ZOD+O7JRL2/xQWkHHibtdrFITYeb8WX+ctOkHQ6eWui6
zVjLQfD4rh29bdIO/Ye+asTwazuAnJswRdohaIdc6+uL2g6qbI1TnbtlHGy5
ri8uqNVxEIgAhtg3WYj5B3QcgKEkzcsAdOfS2UcUDHQdEp5eULotqehw89z3
4Mepug63pGsSjUyVHMr3zZfSj9V1uKKdKvkoQtmhOGPi25p6XQeQ8p91KhB9
lroOIGH7UlWH+qw9JZNn6EDs54bGF4OOA9AVtlzhag6KG4oyJupqO4CCYaGr
mgM4XiO0HK5WvFQz9FBzuAzi7tR0cNv2+e8VCzUHJ5AF0poO6PEPAFdvzZk=

           "]}]}, AspectRatio -> Automatic, BaselinePosition -> Scaled[0.1], 
        ImagePadding -> 0.5, ImageSize -> {14., 14.778}, 
        PlotRange -> {{0.76, 17.27}, {0.73, 17.37}}]& )}], 
   Cell["Documentation", "Section"], 
   Cell["Usage", "Subsection"], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell["Details & Options", "Subsection"], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    PasteAutoQuoteCharacters -> {}, StyleMenuListing -> None], 
   Cell["Examples", "Subsection"], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell["Links", "Section"], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell["Annotation", "Section"], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["HiddenMaterial"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.3, 0.7, 0.6], "Thickness" -> 2}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"hidden\"", "HiddenMaterialCellLabel", StripOnInput -> False], 
           "\"Hidden input cells will be closed on the published web page but \
will remain open in the downloadable example notebook\""}, 
          "PrettyTooltipTemplate"]], "HiddenMaterialCellLabel"]}, {
      None, None}}, StyleMenuListing -> None, Background -> 
    RGBColor[0.8, 1., 0.9]], 
   Cell[
    StyleData[
    "HiddenMaterialCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.3, 0.7, 0.6, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", 
    PrivateFontOptions -> {"OperatorSubstitution" -> False}, FontColor -> 
    GrayLevel[0.5]], 
   Cell["Special Input", "Section"], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 8263526385974082686; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog[
                    "Demonstration", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[8263526385974082686]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 5263076252613204070; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog[
                    "Demonstration", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[5263076252613204070]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell["Misc", "Section"], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["RelatedSymbol", StyleDefinitions -> StyleData["Item"]], 
    DefaultNewCellStyle -> {"RelatedSymbol", FontFamily -> "Source Sans Pro"},
     DefaultFormatType -> DefaultInputFormatType, FormatType -> InputForm], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[0.9]]}, Visible -> False, FrontEndVersion -> 
  "14.1 for Mac OS X x86 (64-bit) (June 13, 2024)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"6c136672-65f8-4813-9ad9-426c8b5e06bb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Name"->{
  Cell[580, 22, 220, 4, 70, "Title",ExpressionUUID->"4e6b307d-1328-4ed8-ab12-4b74ad926e1f",
   CellTags->{"Name", "Title"},
   CellID->506550020]},
 "Title"->{
  Cell[580, 22, 220, 4, 70, "Title",ExpressionUUID->"4e6b307d-1328-4ed8-ab12-4b74ad926e1f",
   CellTags->{"Name", "Title"},
   CellID->506550020]},
 "Caption"->{
  Cell[825, 30, 1495, 33, 70, "Section",ExpressionUUID->"70908813-5ca9-47e8-ac97-f13cb0dc6105",
   CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
   CellID->138150581]},
 "CaptionCells"->{
  Cell[825, 30, 1495, 33, 70, "Section",ExpressionUUID->"70908813-5ca9-47e8-ac97-f13cb0dc6105",
   CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
   CellID->138150581]},
 "TemplateCellGroup"->{
  Cell[825, 30, 1495, 33, 70, "Section",ExpressionUUID->"70908813-5ca9-47e8-ac97-f13cb0dc6105",
   CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
   CellID->138150581],
  Cell[3799, 105, 2246, 48, 70, "Section",ExpressionUUID->"3be5ae5e-713b-473c-91d6-c5b125911151",
   CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
   CellID->447669593],
  Cell[6836, 176, 1944, 40, 70, "Section",ExpressionUUID->"870ab159-d6ff-4905-96eb-2d2eeef666e1",
   CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
   CellID->791025314],
  Cell[66571, 1594, 1302, 31, 70, "Section",ExpressionUUID->"5f1f1995-7f11-4483-b01f-c9a3f2a1c9cf",
   CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
   CellID->98938448],
  Cell[381717, 6803, 1221, 29, 70, "Subsection",ExpressionUUID->"32662e70-46c2-4609-b359-0e939866caab",
   CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
   CellID->255368948],
  Cell[383494, 6853, 2197, 46, 70, "Subsection",ExpressionUUID->"388f8e3a-f0e4-434c-985f-61ec2c8a9932",
   CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
   CellID->441931514],
  Cell[393852, 7123, 2173, 45, 70, "Subsection",ExpressionUUID->"62364e7a-2533-4cd2-bdbf-cd3bf71d410a",
   CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
   CellID->592881655],
  Cell[396795, 7194, 1242, 30, 70, "Subsection",ExpressionUUID->"4c7418d1-6d32-4efb-87b8-57e52539ea22",
   CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
   CellID->797097429],
  Cell[398666, 7240, 1106, 27, 70, "Subsection",ExpressionUUID->"dc0d42e8-890c-462c-920a-c63cda1ab4a5",
   CellTags->{"Keywords", "TemplateCellGroup"},
   CellID->938146184],
  Cell[400971, 7308, 1128, 27, 70, "Subsection",ExpressionUUID->"e51fac23-8909-4279-a2c6-8517eb391dff",
   CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
   CellID->845692503],
  Cell[587718, 10774, 1216, 30, 70, "Subsection",ExpressionUUID->"eaa7714c-40bf-4fa4-a582-1b905b803900",
   CellTags->{"Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
   CellID->1132753],
  Cell[589554, 10820, 1558, 37, 70, "Subsection",ExpressionUUID->"a3c0bcf1-a7a2-461b-8bc6-b49eaad8c292",
   CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
   CellID->843468725],
  Cell[591729, 10873, 1191, 29, 70, "Subsection",ExpressionUUID->"5ab152ae-0940-4328-a90b-47fd761b4f6d",
   CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
   CellID->899564547],
  Cell[593556, 10918, 1070, 26, 70, "Subsection",ExpressionUUID->"4b47d778-b15c-42e3-b42a-a485aeef548e",
   CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
   CellID->364555554],
  Cell[594786, 10953, 1073, 26, 70, "Subsection",ExpressionUUID->"50378636-2c89-4e21-81a7-888617046d3b",
   CellTags->{"Compatibility", "TemplateCellGroup"},
   CellID->618273920]},
 "Initialization Code"->{
  Cell[3799, 105, 2246, 48, 70, "Section",ExpressionUUID->"3be5ae5e-713b-473c-91d6-c5b125911151",
   CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
   CellID->447669593]},
 "InitializationCode"->{
  Cell[3799, 105, 2246, 48, 70, "Section",ExpressionUUID->"3be5ae5e-713b-473c-91d6-c5b125911151",
   CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
   CellID->447669593]},
 "DefaultContent"->{
  Cell[6048, 155, 751, 16, 70, "CodeText",ExpressionUUID->"d16b521a-d388-4f82-93b8-c19934a33bc8",
   CellTags->{"DefaultContent", "samplecell", "TabNext"},
   CellID->687519280],
  Cell[398040, 7226, 589, 9, 70, "Text",ExpressionUUID->"ab49b19f-03a0-426e-a119-5e1d7b650486",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->820829112],
  Cell[588937, 10806, 580, 9, 70, "Item",ExpressionUUID->"d2ff3c65-d86b-4b92-aea0-be606c2fefae",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->964350505],
  Cell[591115, 10859, 577, 9, 70, "Item",ExpressionUUID->"4bc1b551-cc4d-415f-8452-acb95090b8eb",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->553908639],
  Cell[592923, 10904, 596, 9, 70, "Item",ExpressionUUID->"f45ee52e-445c-4709-acf1-a2095b18ec49",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->323240788]},
 "samplecell"->{
  Cell[6048, 155, 751, 16, 70, "CodeText",ExpressionUUID->"d16b521a-d388-4f82-93b8-c19934a33bc8",
   CellTags->{"DefaultContent", "samplecell", "TabNext"},
   CellID->687519280]},
 "TabNext"->{
  Cell[6048, 155, 751, 16, 70, "CodeText",ExpressionUUID->"d16b521a-d388-4f82-93b8-c19934a33bc8",
   CellTags->{"DefaultContent", "samplecell", "TabNext"},
   CellID->687519280],
  Cell[398040, 7226, 589, 9, 70, "Text",ExpressionUUID->"ab49b19f-03a0-426e-a119-5e1d7b650486",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->820829112],
  Cell[588937, 10806, 580, 9, 70, "Item",ExpressionUUID->"d2ff3c65-d86b-4b92-aea0-be606c2fefae",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->964350505],
  Cell[591115, 10859, 577, 9, 70, "Item",ExpressionUUID->"4bc1b551-cc4d-415f-8452-acb95090b8eb",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->553908639],
  Cell[592923, 10904, 596, 9, 70, "Item",ExpressionUUID->"f45ee52e-445c-4709-acf1-a2095b18ec49",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->323240788]},
 "Manipulate"->{
  Cell[6836, 176, 1944, 40, 70, "Section",ExpressionUUID->"870ab159-d6ff-4905-96eb-2d2eeef666e1",
   CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
   CellID->791025314]},
 "ManipulateGroup"->{
  Cell[6836, 176, 1944, 40, 70, "Section",ExpressionUUID->"870ab159-d6ff-4905-96eb-2d2eeef666e1",
   CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
   CellID->791025314]},
 "SnapshotGroup"->{
  Cell[66571, 1594, 1302, 31, 70, "Section",ExpressionUUID->"5f1f1995-7f11-4483-b01f-c9a3f2a1c9cf",
   CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
   CellID->98938448]},
 "Snapshots"->{
  Cell[66571, 1594, 1302, 31, 70, "Section",ExpressionUUID->"5f1f1995-7f11-4483-b01f-c9a3f2a1c9cf",
   CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
   CellID->98938448]},
 "Snapshot"->{
  Cell[174540, 3383, 81085, 1336, 70, "Output",ExpressionUUID->"779ec233-3a93-4395-b210-325c54fc3510",
   CellTags->"Snapshot",
   CellID->951852634],
  Cell[255628, 4721, 125754, 2068, 70, "Output",ExpressionUUID->"370985b5-26e5-41b8-bb1b-2e00c4539843",
   CellTags->"Snapshot",
   CellID->1181533135]},
 "SourceInformationGroup"->{
  Cell[381419, 6794, 273, 5, 70, "Section",ExpressionUUID->"46e16c05-87aa-4924-807f-72e951327394",
   CellTags->"SourceInformationGroup",
   CellID->62407265]},
 "AuthorNames"->{
  Cell[381717, 6803, 1221, 29, 70, "Subsection",ExpressionUUID->"32662e70-46c2-4609-b359-0e939866caab",
   CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
   CellID->255368948]},
 "Contributed By"->{
  Cell[381717, 6803, 1221, 29, 70, "Subsection",ExpressionUUID->"32662e70-46c2-4609-b359-0e939866caab",
   CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
   CellID->255368948]},
 "AuthorNotes"->{
  Cell[383494, 6853, 2197, 46, 70, "Subsection",ExpressionUUID->"388f8e3a-f0e4-434c-985f-61ec2c8a9932",
   CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
   CellID->441931514]},
 "DetailCells"->{
  Cell[383494, 6853, 2197, 46, 70, "Subsection",ExpressionUUID->"388f8e3a-f0e4-434c-985f-61ec2c8a9932",
   CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
   CellID->441931514]},
 "Details & Citations"->{
  Cell[383494, 6853, 2197, 46, 70, "Subsection",ExpressionUUID->"388f8e3a-f0e4-434c-985f-61ec2c8a9932",
   CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
   CellID->441931514]},
 "ReferenceCells"->{
  Cell[393852, 7123, 2173, 45, 70, "Subsection",ExpressionUUID->"62364e7a-2533-4cd2-bdbf-cd3bf71d410a",
   CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
   CellID->592881655]},
 "References"->{
  Cell[393852, 7123, 2173, 45, 70, "Subsection",ExpressionUUID->"62364e7a-2533-4cd2-bdbf-cd3bf71d410a",
   CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
   CellID->592881655]},
 "Submission Notes"->{
  Cell[396795, 7194, 1242, 30, 70, "Subsection",ExpressionUUID->"4c7418d1-6d32-4efb-87b8-57e52539ea22",
   CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
   CellID->797097429]},
 "SubmissionNotes"->{
  Cell[396795, 7194, 1242, 30, 70, "Subsection",ExpressionUUID->"4c7418d1-6d32-4efb-87b8-57e52539ea22",
   CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
   CellID->797097429]},
 "Keywords"->{
  Cell[398666, 7240, 1106, 27, 70, "Subsection",ExpressionUUID->"dc0d42e8-890c-462c-920a-c63cda1ab4a5",
   CellTags->{"Keywords", "TemplateCellGroup"},
   CellID->938146184]},
 "Categories"->{
  Cell[400971, 7308, 1128, 27, 70, "Subsection",ExpressionUUID->"e51fac23-8909-4279-a2c6-8517eb391dff",
   CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
   CellID->845692503]},
 "DemoCategories"->{
  Cell[400971, 7308, 1128, 27, 70, "Subsection",ExpressionUUID->"e51fac23-8909-4279-a2c6-8517eb391dff",
   CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
   CellID->845692503]},
 "CheckboxCell"->{
  Cell[402102, 7337, 185579, 3432, 70, "Output",ExpressionUUID->"710c3e95-ecea-4415-be3e-c54e4bae98fc",
   CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
   CellID->364069848],
  Cell[597012, 11013, 1370, 35, 70, "Output",ExpressionUUID->"5d7d5a4e-4eac-403b-a03c-8e69ef9759b6",
   CellTags->{"CheckboxCell", "CompatibilityARSupport", "CompatibilityARSupport-Checkboxes"},
   CellID->860708008],
  Cell[600881, 11121, 1328, 34, 70, "Output",ExpressionUUID->"80621db8-e8ee-4c98-89e8-8fd9fac05051",
   CellTags->{"CheckboxCell", "CompatibilityCloudSupport", "CompatibilityCloudSupport-Checkboxes"},
   CellID->524115277]},
 "Topics"->{
  Cell[402102, 7337, 185579, 3432, 70, "Output",ExpressionUUID->"710c3e95-ecea-4415-be3e-c54e4bae98fc",
   CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
   CellID->364069848]},
 "Topics-Checkboxes"->{
  Cell[402102, 7337, 185579, 3432, 70, "Output",ExpressionUUID->"710c3e95-ecea-4415-be3e-c54e4bae98fc",
   CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
   CellID->364069848]},
 "Related Demonstrations"->{
  Cell[587718, 10774, 1216, 30, 70, "Subsection",ExpressionUUID->"eaa7714c-40bf-4fa4-a582-1b905b803900",
   CellTags->{"Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
   CellID->1132753]},
 "RelatedDemonstrations"->{
  Cell[587718, 10774, 1216, 30, 70, "Subsection",ExpressionUUID->"eaa7714c-40bf-4fa4-a582-1b905b803900",
   CellTags->{"Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
   CellID->1132753]},
 "External Links"->{
  Cell[589554, 10820, 1558, 37, 70, "Subsection",ExpressionUUID->"a3c0bcf1-a7a2-461b-8bc6-b49eaad8c292",
   CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
   CellID->843468725]},
 "ExternalLinks"->{
  Cell[589554, 10820, 1558, 37, 70, "Subsection",ExpressionUUID->"a3c0bcf1-a7a2-461b-8bc6-b49eaad8c292",
   CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
   CellID->843468725]},
 "Related Symbols"->{
  Cell[591729, 10873, 1191, 29, 70, "Subsection",ExpressionUUID->"5ab152ae-0940-4328-a90b-47fd761b4f6d",
   CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
   CellID->899564547]},
 "RelatedSymbols"->{
  Cell[591729, 10873, 1191, 29, 70, "Subsection",ExpressionUUID->"5ab152ae-0940-4328-a90b-47fd761b4f6d",
   CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
   CellID->899564547]},
 "Published Date"->{
  Cell[593556, 10918, 1070, 26, 70, "Subsection",ExpressionUUID->"4b47d778-b15c-42e3-b42a-a485aeef548e",
   CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
   CellID->364555554]},
 "PublishedDate"->{
  Cell[593556, 10918, 1070, 26, 70, "Subsection",ExpressionUUID->"4b47d778-b15c-42e3-b42a-a485aeef548e",
   CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
   CellID->364555554]},
 "Compatibility"->{
  Cell[594786, 10953, 1073, 26, 70, "Subsection",ExpressionUUID->"50378636-2c89-4e21-81a7-888617046d3b",
   CellTags->{"Compatibility", "TemplateCellGroup"},
   CellID->618273920]},
 "CompatibilityARSupport"->{
  Cell[597012, 11013, 1370, 35, 70, "Output",ExpressionUUID->"5d7d5a4e-4eac-403b-a03c-8e69ef9759b6",
   CellTags->{"CheckboxCell", "CompatibilityARSupport", "CompatibilityARSupport-Checkboxes"},
   CellID->860708008]},
 "CompatibilityARSupport-Checkboxes"->{
  Cell[597012, 11013, 1370, 35, 70, "Output",ExpressionUUID->"5d7d5a4e-4eac-403b-a03c-8e69ef9759b6",
   CellTags->{"CheckboxCell", "CompatibilityARSupport", "CompatibilityARSupport-Checkboxes"},
   CellID->860708008]},
 "ScrapeDefault"->{
  Cell[599593, 11084, 139, 3, 70, "Text",ExpressionUUID->"a78a7edb-5bf1-4b87-8dcc-d90268f67cab",
   CellTags->"ScrapeDefault",
   CellID->861854922]},
 "CompatibilityCloudSupport"->{
  Cell[600881, 11121, 1328, 34, 70, "Output",ExpressionUUID->"80621db8-e8ee-4c98-89e8-8fd9fac05051",
   CellTags->{"CheckboxCell", "CompatibilityCloudSupport", "CompatibilityCloudSupport-Checkboxes"},
   CellID->524115277]},
 "CompatibilityCloudSupport-Checkboxes"->{
  Cell[600881, 11121, 1328, 34, 70, "Output",ExpressionUUID->"80621db8-e8ee-4c98-89e8-8fd9fac05051",
   CellTags->{"CheckboxCell", "CompatibilityCloudSupport", "CompatibilityCloudSupport-Checkboxes"},
   CellID->524115277]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Name", 743209, 13825},
 {"Title", 743369, 13829},
 {"Caption", 743531, 13833},
 {"CaptionCells", 743733, 13837},
 {"TemplateCellGroup", 743940, 13841},
 {"Initialization Code", 746901, 13887},
 {"InitializationCode", 747129, 13891},
 {"DefaultContent", 747353, 13895},
 {"samplecell", 748205, 13911},
 {"TabNext", 748399, 13915},
 {"Manipulate", 749251, 13931},
 {"ManipulateGroup", 749464, 13935},
 {"SnapshotGroup", 749675, 13939},
 {"Snapshots", 749880, 13943},
 {"Snapshot", 750084, 13947},
 {"SourceInformationGroup", 750418, 13954},
 {"AuthorNames", 750597, 13958},
 {"Contributed By", 750815, 13962},
 {"AuthorNotes", 751030, 13966},
 {"DetailCells", 751265, 13970},
 {"Details & Citations", 751508, 13974},
 {"ReferenceCells", 751746, 13978},
 {"References", 751959, 13982},
 {"Submission Notes", 752178, 13986},
 {"SubmissionNotes", 752403, 13990},
 {"Keywords", 752621, 13994},
 {"Categories", 752814, 13998},
 {"DemoCategories", 753031, 14002},
 {"CheckboxCell", 753246, 14006},
 {"Topics", 753891, 14016},
 {"Topics-Checkboxes", 754105, 14020},
 {"Related Demonstrations", 754324, 14024},
 {"RelatedDemonstrations", 754566, 14028},
 {"External Links", 754801, 14032},
 {"ExternalLinks", 755021, 14036},
 {"Related Symbols", 755243, 14040},
 {"RelatedSymbols", 755466, 14044},
 {"Published Date", 755689, 14048},
 {"PublishedDate", 755909, 14052},
 {"Compatibility", 756129, 14056},
 {"CompatibilityARSupport", 756340, 14060},
 {"CompatibilityARSupport-Checkboxes", 756599, 14064},
 {"ScrapeDefault", 756838, 14068},
 {"CompatibilityCloudSupport", 757021, 14072},
 {"CompatibilityCloudSupport-Checkboxes", 757289, 14076}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 220, 4, 70, "Title",ExpressionUUID->"4e6b307d-1328-4ed8-ab12-4b74ad926e1f",
 CellTags->{"Name", "Title"},
 CellID->506550020],
Cell[CellGroupData[{
Cell[825, 30, 1495, 33, 70, "Section",ExpressionUUID->"70908813-5ca9-47e8-ac97-f13cb0dc6105",
 CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
 CellID->138150581],
Cell[2323, 65, 1439, 35, 70, "Text",ExpressionUUID->"6765a598-ceb1-44a6-86fc-e7cc0fc3f635",
 CellID->987809950]
}, Closed]],
Cell[CellGroupData[{
Cell[3799, 105, 2246, 48, 70, "Section",ExpressionUUID->"3be5ae5e-713b-473c-91d6-c5b125911151",
 CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
 CellID->447669593],
Cell[6048, 155, 751, 16, 70, "CodeText",ExpressionUUID->"d16b521a-d388-4f82-93b8-c19934a33bc8",
 CellTags->{"DefaultContent", "samplecell", "TabNext"},
 CellID->687519280]
}, Closed]],
Cell[CellGroupData[{
Cell[6836, 176, 1944, 40, 70, "Section",ExpressionUUID->"870ab159-d6ff-4905-96eb-2d2eeef666e1",
 CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
 CellID->791025314],
Cell[CellGroupData[{
Cell[8805, 220, 41388, 1002, 70, "Input",ExpressionUUID->"90cb350d-c5a3-4878-9133-f940cb9f2aac",
 CellID->79696319],
Cell[50196, 1224, 16326, 364, 70, "Output",ExpressionUUID->"305e3528-4ff7-4b71-ba42-51b4608f2711",
 CellID->64237867]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[66571, 1594, 1302, 31, 70, "Section",ExpressionUUID->"5f1f1995-7f11-4483-b01f-c9a3f2a1c9cf",
 CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
 CellID->98938448],
Cell[67876, 1627, 106661, 1754, 70, "Output",ExpressionUUID->"f63e0ff5-c497-4691-a00b-483618ab28b4",
 CellID->178628381],
Cell[174540, 3383, 81085, 1336, 70, "Output",ExpressionUUID->"779ec233-3a93-4395-b210-325c54fc3510",
 CellTags->"Snapshot",
 CellID->951852634],
Cell[255628, 4721, 125754, 2068, 70, "Output",ExpressionUUID->"370985b5-26e5-41b8-bb1b-2e00c4539843",
 CellTags->"Snapshot",
 CellID->1181533135]
}, Closed]],
Cell[CellGroupData[{
Cell[381419, 6794, 273, 5, 70, "Section",ExpressionUUID->"46e16c05-87aa-4924-807f-72e951327394",
 CellTags->"SourceInformationGroup",
 CellID->62407265],
Cell[CellGroupData[{
Cell[381717, 6803, 1221, 29, 70, "Subsection",ExpressionUUID->"32662e70-46c2-4609-b359-0e939866caab",
 CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
 CellID->255368948],
Cell[382941, 6834, 127, 2, 70, "Text",ExpressionUUID->"2f94dd10-e0ff-4774-9d24-067fcb231478",
 CellID->674391989],
Cell[383071, 6838, 128, 2, 70, "Text",ExpressionUUID->"de530dc5-3e65-466f-9f76-852213e96b55",
 CellID->697349035],
Cell[383202, 6842, 126, 2, 70, "Text",ExpressionUUID->"cc6295cd-7c50-488f-a177-be4d611f6570",
 CellID->305283414],
Cell[383331, 6846, 126, 2, 70, "Text",ExpressionUUID->"a681c6aa-6e76-4cbd-9615-b15a496f533d",
 CellID->966738182]
}, Open  ]],
Cell[CellGroupData[{
Cell[383494, 6853, 2197, 46, 70, "Subsection",ExpressionUUID->"388f8e3a-f0e4-434c-985f-61ec2c8a9932",
 CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
 CellID->441931514],
Cell[385694, 6901, 578, 12, 70, "Text",ExpressionUUID->"0d765d39-5518-409b-bd44-0fa74954f890",
 CellID->211747867],
Cell[386275, 6915, 748, 20, 70, "Text",ExpressionUUID->"058b6fa6-c23a-4b6f-b535-bd5a617530e8",
 CellID->101825244],
Cell[387026, 6937, 1466, 42, 70, "Text",ExpressionUUID->"3089b5e8-4e58-4ed1-b933-09ab18e145c2",
 CellID->1549812350],
Cell[388495, 6981, 647, 13, 70, "Text",ExpressionUUID->"1242514b-e6c3-4150-ab9e-ccea83b64e6f",
 CellID->250155393],
Cell[389145, 6996, 347, 5, 70, "Text",ExpressionUUID->"0447565d-7cc3-4446-8c93-6b62cd05a6ae",
 CellID->118267598],
Cell[389495, 7003, 602, 15, 70, "Text",ExpressionUUID->"e07c6b6f-7349-4da7-8fea-2d7b60c83ba2",
 CellID->61668353],
Cell[390100, 7020, 896, 23, 70, "Text",ExpressionUUID->"83f8a0ba-8277-4b57-a041-058a46eeea7e",
 CellID->97501916],
Cell[390999, 7045, 348, 5, 70, "Text",ExpressionUUID->"b8228254-de71-4f8a-b743-f003f8468d76",
 CellID->359042034],
Cell[391350, 7052, 518, 14, 70, "Text",ExpressionUUID->"66d26907-8c3e-49a9-a2e7-382995bec41f",
 CellID->107577952],
Cell[391871, 7068, 693, 16, 70, "Text",ExpressionUUID->"02858095-feb1-4976-ac65-3a6d8ab83642",
 CellID->182100021],
Cell[392567, 7086, 276, 4, 70, "Text",ExpressionUUID->"ad73d95f-6aa7-4a1c-9fa9-5c8babfa2911",
 CellID->106451190],
Cell[392846, 7092, 684, 18, 70, "Text",ExpressionUUID->"5e8dd3ba-7596-4966-8324-56da84e2e119",
 CellID->22464714],
Cell[393533, 7112, 282, 6, 70, "Text",ExpressionUUID->"b74412fd-58a9-4c04-9880-8bf77136e8f2",
 CellID->761592986]
}, Open  ]],
Cell[CellGroupData[{
Cell[393852, 7123, 2173, 45, 70, "Subsection",ExpressionUUID->"62364e7a-2533-4cd2-bdbf-cd3bf71d410a",
 CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
 CellID->592881655],
Cell[396028, 7170, 730, 19, 70, "Text",ExpressionUUID->"29755686-bea0-462e-b85a-91758c8d8bbb",
 CellID->68203499]
}, Open  ]],
Cell[CellGroupData[{
Cell[396795, 7194, 1242, 30, 70, "Subsection",ExpressionUUID->"4c7418d1-6d32-4efb-87b8-57e52539ea22",
 CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
 CellID->797097429],
Cell[398040, 7226, 589, 9, 70, "Text",ExpressionUUID->"ab49b19f-03a0-426e-a119-5e1d7b650486",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->820829112]
}, Open  ]],
Cell[CellGroupData[{
Cell[398666, 7240, 1106, 27, 70, "Subsection",ExpressionUUID->"dc0d42e8-890c-462c-920a-c63cda1ab4a5",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->938146184],
Cell[399775, 7269, 130, 2, 70, "Item",ExpressionUUID->"ab84b447-f0d2-46a6-b9a8-28416e62867c",
 CellID->483395095],
Cell[399908, 7273, 118, 2, 70, "Item",ExpressionUUID->"c0f71caa-6177-4b0b-9f29-c56e9e967861",
 CellID->728885838],
Cell[400029, 7277, 124, 2, 70, "Item",ExpressionUUID->"f241ac02-5d52-480e-8372-65b6e1806533",
 CellID->615761891],
Cell[400156, 7281, 121, 2, 70, "Item",ExpressionUUID->"cadf6198-57c7-461f-b2db-c2e7b7a5fdc5",
 CellID->947132799],
Cell[400280, 7285, 134, 2, 70, "Item",ExpressionUUID->"d382ab78-d575-4f89-8190-a12a58604174",
 CellID->637002287],
Cell[400417, 7289, 124, 2, 70, "Item",ExpressionUUID->"fd2533b9-4654-452d-b4cb-65bc62394e3d",
 CellID->876549171],
Cell[400544, 7293, 122, 2, 70, "Item",ExpressionUUID->"07d6ba4c-67f6-4086-9b98-4327883a3633",
 CellID->60167719],
Cell[400669, 7297, 141, 2, 70, "Item",ExpressionUUID->"4483d70d-361a-4084-9e65-731d468b2e0a",
 CellID->362731499],
Cell[400813, 7301, 121, 2, 70, "Item",ExpressionUUID->"2f5cf6f0-0f03-467f-858b-94ba339e4e87",
 CellID->385153016]
}, Open  ]],
Cell[CellGroupData[{
Cell[400971, 7308, 1128, 27, 70, "Subsection",ExpressionUUID->"e51fac23-8909-4279-a2c6-8517eb391dff",
 CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
 CellID->845692503],
Cell[402102, 7337, 185579, 3432, 70, "Output",ExpressionUUID->"710c3e95-ecea-4415-be3e-c54e4bae98fc",
 CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
 CellID->364069848]
}, Open  ]],
Cell[CellGroupData[{
Cell[587718, 10774, 1216, 30, 70, "Subsection",ExpressionUUID->"eaa7714c-40bf-4fa4-a582-1b905b803900",
 CellTags->{"Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
 CellID->1132753],
Cell[588937, 10806, 580, 9, 70, "Item",ExpressionUUID->"d2ff3c65-d86b-4b92-aea0-be606c2fefae",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->964350505]
}, Open  ]],
Cell[CellGroupData[{
Cell[589554, 10820, 1558, 37, 70, "Subsection",ExpressionUUID->"a3c0bcf1-a7a2-461b-8bc6-b49eaad8c292",
 CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
 CellID->843468725],
Cell[591115, 10859, 577, 9, 70, "Item",ExpressionUUID->"4bc1b551-cc4d-415f-8452-acb95090b8eb",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->553908639]
}, Open  ]],
Cell[CellGroupData[{
Cell[591729, 10873, 1191, 29, 70, "Subsection",ExpressionUUID->"5ab152ae-0940-4328-a90b-47fd761b4f6d",
 CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
 CellID->899564547],
Cell[592923, 10904, 596, 9, 70, "Item",ExpressionUUID->"f45ee52e-445c-4709-acf1-a2095b18ec49",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->323240788]
}, Open  ]],
Cell[CellGroupData[{
Cell[593556, 10918, 1070, 26, 70, "Subsection",ExpressionUUID->"4b47d778-b15c-42e3-b42a-a485aeef548e",
 CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
 CellID->364555554],
Cell[594629, 10946, 120, 2, 70, "Text",ExpressionUUID->"3ff040b4-ac89-4702-8932-b2e6668018ce",
 CellID->308926907]
}, Open  ]],
Cell[CellGroupData[{
Cell[594786, 10953, 1073, 26, 70, "Subsection",ExpressionUUID->"50378636-2c89-4e21-81a7-888617046d3b",
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->618273920],
Cell[CellGroupData[{
Cell[595884, 10983, 1125, 28, 70, "Subsubsection",ExpressionUUID->"63bda768-e866-4182-9add-2fd3cb0f84f6",
 CellID->811961892],
Cell[597012, 11013, 1370, 35, 70, "Output",ExpressionUUID->"5d7d5a4e-4eac-403b-a03c-8e69ef9759b6",
 CellTags->{"CheckboxCell", "CompatibilityARSupport", "CompatibilityARSupport-Checkboxes"},
 CellID->860708008]
}, Closed]],
Cell[CellGroupData[{
Cell[598419, 11053, 1171, 29, 70, "Subsubsection",ExpressionUUID->"64dc7bd7-a157-4807-9079-e1242dc930dc",
 CellID->208833892],
Cell[599593, 11084, 139, 3, 70, "Text",ExpressionUUID->"a78a7edb-5bf1-4b87-8dcc-d90268f67cab",
 CellTags->"ScrapeDefault",
 CellID->861854922]
}, Open  ]],
Cell[CellGroupData[{
Cell[599769, 11092, 1109, 27, 70, "Subsubsection",ExpressionUUID->"93b87fc4-57ba-4d56-95e4-655f9b234351",
 CellID->621854978],
Cell[600881, 11121, 1328, 34, 70, "Output",ExpressionUUID->"80621db8-e8ee-4c98-89e8-8fd9fac05051",
 CellTags->{"CheckboxCell", "CompatibilityCloudSupport", "CompatibilityCloudSupport-Checkboxes"},
 CellID->524115277]
}, Closed]]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
