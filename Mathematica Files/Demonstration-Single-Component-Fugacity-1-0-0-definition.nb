(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    835007,      15149]
NotebookOptionsPosition[    667809,      11973]
NotebookOutlinePosition[    825394,      14955]
CellTagsIndexPosition[    823714,      14906]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Single-Component Fugacity", "Title",
 TaggingRules->{},
 CellChangeTimes->{
  3.6448610549188447`*^9, {3.6452101462730227`*^9, 3.6452101466434593`*^9}, {
   3.7435131811692104`*^9, 3.7435132177032585`*^9}, {3.743716858275238*^9, 
   3.743716875320784*^9}, {3.743874531296687*^9, 3.7438745484096637`*^9}},
 CellTags->{"Name", "Title"},
 CellID->344714230,ExpressionUUID->"80b166c7-6de8-4856-b160-53671ea8f3ed"],

Cell[CellGroupData[{

Cell[TextData[{
 "Caption",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CaptionCells", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "The caption provides all the information needed to understand the \
Demonstration. It should be between three and five sentences long, but \
clarity is more important than length. Include only text in this section \
\[LongDash] no code, graphics, etc. Do not change the cell style or copy \
cells from other sections. Do not copy text from books or the web. Write your \
ideas in your own words. If you want to refer to something on the web, link \
to it in the Details.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCaptionCells"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "01189644-5a00-4942-a360-8a737d5f037c"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "CaptionCells"},
 CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
 CellID->138150581,ExpressionUUID->"508930fb-ebe2-4394-ac55-e4bc403452fa"],

Cell["\<\
This Demonstration plots fugacity of a hypothetical single component as a \
function of temperature or pressure. Use the dropdown menu to select the plot.\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.743716767961258*^9, 3.74371684177022*^9}, {
   3.7437168901712956`*^9, 3.743717010425186*^9}, {3.743812861021776*^9, 
   3.74381315242421*^9}, {3.7438131836343927`*^9, 3.743813245316947*^9}, {
   3.7438132770840054`*^9, 3.743813291778841*^9}, {3.743931689436353*^9, 
   3.7439317229433928`*^9}, 3.744394095138429*^9, {3.745074454905322*^9, 
   3.745074461249888*^9}, 3.745074812426105*^9, 3.745074844625348*^9, {
   3.745077902948197*^9, 3.745077910010724*^9}, {3.745077942436789*^9, 
   3.745077951679068*^9}, {3.745078041139545*^9, 3.745078047936895*^9}, {
   3.745154374637301*^9, 3.745154403457852*^9}, 3.7451673180844383`*^9},
 CellID->291355424,ExpressionUUID->"26b5f88e-13ef-4328-b31f-d08ed404df37"],

Cell["\<\
The saturation point is where liquid and vapor have equal fugacities. Above \
or below the saturation point, the phase with the lower fugacity is the \
stable phase. The fugacity-versus-pressure plot is for low pressure, where \
the vapor phase is ideal and the fugacity versus pressure for the gas phase \
is linear.\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.743716767961258*^9, 3.74371684177022*^9}, {
   3.7437168901712956`*^9, 3.743717010425186*^9}, {3.743812861021776*^9, 
   3.74381315242421*^9}, {3.7438131836343927`*^9, 3.743813245316947*^9}, {
   3.7438132770840054`*^9, 3.743813291778841*^9}, {3.743931689436353*^9, 
   3.7439317229433928`*^9}, 3.744394095138429*^9, {3.745074454905322*^9, 
   3.745074461249888*^9}, 3.745074812426105*^9, 3.745074844625348*^9, {
   3.745077902948197*^9, 3.745077910010724*^9}, {3.745077942436789*^9, 
   3.745077951679068*^9}, {3.745078041139545*^9, 3.745078047936895*^9}, {
   3.745154374637301*^9, 3.745154432040546*^9}, {3.7451673402824383`*^9, 
   3.745167349682438*^9}, {3.745168209100438*^9, 3.745168213836438*^9}},
 CellID->294064757,ExpressionUUID->"2ceda9a5-cd47-419f-a462-e4f87ac87fa4"],

Cell["\<\
When the \"high pressure\" box is checked, the vapor is assumed to be a real \
gas and the fugacity versus pressure for the vapor phase is not linear.\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.743716767961258*^9, 3.74371684177022*^9}, {
   3.7437168901712956`*^9, 3.743717010425186*^9}, {3.743812861021776*^9, 
   3.74381315242421*^9}, {3.7438131836343927`*^9, 3.743813245316947*^9}, {
   3.7438132770840054`*^9, 3.743813291778841*^9}, {3.743931689436353*^9, 
   3.7439317229433928`*^9}, 3.744394095138429*^9, {3.745074454905322*^9, 
   3.745074461249888*^9}, 3.745074812426105*^9, 3.745074844625348*^9, {
   3.745077902948197*^9, 3.745077910010724*^9}, {3.745077942436789*^9, 
   3.745077951679068*^9}, {3.745078041139545*^9, 3.745078047936895*^9}, {
   3.745154374637301*^9, 3.745154432033168*^9}, 3.745167383136438*^9},
 CellID->1271497273,ExpressionUUID->"02e68e18-0d34-4e8b-be8e-de08a2ce3ce1"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialization Code",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"InitializationCode", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Provide any code that must be evaluated before the ", 
           StyleBox["Manipulate", "MRbig"], 
           ". This will automatically be built into the ", 
           StyleBox["Manipulate", "MRbig"], 
           " in the final notebook version. Never use a package that is not \
included in the default distribution of ", 
           StyleBox["Mathematica", FontSlant -> "Italic"], 
           ". To use a package, use the ", 
           StyleBox["Initialization", "MRbig"], " option (with ", 
           StyleBox["Get", "MRbig"], ", not ", 
           StyleBox["Needs", "MRbig"], ") in the ", 
           StyleBox["Manipulate", "MRbig"], 
           " itself, and use the full name of the function from the package. \
For example:\n", 
           StyleBox[
           "  Manipulate[\n  \[Ellipsis]\n  ComputationalGeometry`ConvexHull[\
\[Ellipsis]]\[Ellipsis]\n  \[Ellipsis]\n  Initialization :> \
Get[\"ComputationalGeometry`\"],\n  \[Ellipsis]\n  ]", "MR"], 
           "\nIf you provide initialization code, include a ", 
           StyleBox["SaveDefinitions->True", "MRbig"], " option in the ", 
           StyleBox["Manipulate", "MRbig"], ".", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoInitializationCode"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "85ec56be-e4a4-4e93-89ec-62d49daf3a0f"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "InitializationCode"},
 DefaultNewCellStyle->"Input",
 CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
 
 CellID->447669593,ExpressionUUID->"16857b55-e3a9-4653-a127-a1b31cf4f147"],

Cell[TextData[{
 "If you provide initialization code, include a ",
 StyleBox["SaveDefinitions->True", "MRbig"],
 " option in the ",
 StyleBox["Manipulate", "MRbig"],
 "."
}], "CodeText",
 Editable->False,
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "samplecell", "TabNext"},
 CellID->687519280,ExpressionUUID->"0a97b23e-1347-438f-ad73-f509963dd897"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Manipulate",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ManipulateGroup", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"This section contains the ", 
           StyleBox["Manipulate", "MRbig"], 
           " input cell and its evaluated output cell. Make all control \
labels or labels in the output as descriptive as possible, with only proper \
nouns and proper adjectives capitalized. More description of the controls can \
be provided in the Details section below, if necessary. If you change this ", 
           
           StyleBox["Manipulate", "MRbig"], 
           " after creating screenshots and/or thumbnails, use ", 
           StyleBox["Update Thumbnail & Snapshots", FontWeight -> "Bold"], 
           " in the toolbar to update any copies in later sections. You can \
control the Flash preview for the Demonstration with the ", 
           StyleBox["AutorunSequencing", "MRbig"], " option. Use ", 
           StyleBox["SaveDefinitions->True", "MRbig"], 
           " if you provided initialization code in the previous section."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoManipulateGroup"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "8c5ea37c-a6c0-4fce-adf4-35006ce33186"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ManipulateGroup"},
 DefaultNewCellStyle->"Input",
 CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
 CellID->791025314,ExpressionUUID->"122bd488-c28a-4c28-b559-d6fcd66c8bee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "fugRealvap", ",", "fugRealliq", ",", "clausius", ",", "invclausius", 
       ",", "fugliq", ",", "fugvap", ",", "PTPlot", ",", "fTPlot", ",", 
       "fPPlot", ",", "bp", ",", "bp2"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"clausius", "[", "T_", "]"}], ":=", 
       RowBox[{"0.101325", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "5268.134"}], "*", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["1", "T"], "-", 
            FractionBox["1", "373"]}], ")"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"invclausius", "[", "p_", "]"}], ":=", 
       FractionBox["1", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Log", "[", 
            FractionBox["p", "0.101325"], "]"}], "/", 
           RowBox[{"-", "5268.134"}]}], ")"}], "+", 
         FractionBox["1", "373"]}]]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fugliq", "[", 
        RowBox[{"pres_", ",", "temp_"}], "]"}], ":=", 
       RowBox[{"clausius", "[", "temp", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fugvap", "[", 
        RowBox[{"pres_", ",", "temp_"}], "]"}], ":=", 
       RowBox[{"pres", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"fTfP", "-", "1"}], ")"}], "*", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"highpressure", "\[Equal]", "True"}], ",", "0.8", ",", 
           "0"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"pres", "-", 
           RowBox[{"Log", "[", 
            RowBox[{"pres", "+", "1"}], "]"}]}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"bp", "=", 
       RowBox[{"Tb", "/.", 
        RowBox[{
         RowBox[{"FindRoot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"fugvap", "[", 
             RowBox[{"pres", ",", "Tb"}], "]"}], "\[Equal]", 
            RowBox[{"fugliq", "[", 
             RowBox[{"pres", ",", "Tb"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"Tb", ",", "280", ",", "400"}], "}"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"boiling", " ", "point"}], ",", " ", "K"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"bp2", "=", 
       RowBox[{"P", "/.", 
        RowBox[{
         RowBox[{"FindRoot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"fugvap", "[", 
             RowBox[{"P", ",", "temp"}], "]"}], "\[Equal]", 
            RowBox[{
             RowBox[{"fugliq", "[", 
              RowBox[{"P", ",", "temp"}], "]"}], "*", "10"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"P", ",", "0.00001", ",", "100"}], "}"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"boiling", " ", "point"}], ",", " ", "MPa"}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"fTPlot", "=", 
       RowBox[{"Show", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"Piecewise", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"fugliq", "[", 
                  RowBox[{"pres", ",", "T"}], "]"}], ",", 
                 RowBox[{"T", "<", "bp"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"fugvap", "[", 
                  RowBox[{"pres", ",", "T"}], "]"}], ",", 
                 RowBox[{"T", "\[GreaterEqual]", "bp"}]}], "}"}]}], "}"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"T", ",", "280", ",", "400"}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Darker", ",", "Blue"}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Axes", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<temperature (\[Degree]C)\>\"", ",", "18"}], 
                "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<fugacity (bar)\>\"", ",", "18"}], "]"}]}], 
              "}"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"12", ",", "Black"}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"280", ",", "400"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0.2"}], "}"}]}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"590", ",", "415"}], "}"}]}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"Piecewise", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"fugvap", "[", 
                  RowBox[{"pres", ",", "T"}], "]"}], ",", 
                 RowBox[{"T", "<", "bp"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"fugliq", "[", 
                  RowBox[{"pres", ",", "T"}], "]"}], ",", 
                 RowBox[{"T", "\[GreaterEqual]", "bp"}]}], "}"}]}], "}"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"T", ",", "280", ",", "500"}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Dashed", ",", "Blue", ",", 
               RowBox[{"Opacity", "[", "0.3", "]"}]}], "}"}]}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Graphics", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"Text", "[", 
                RowBox[{"\"\<liquid\>\"", ",", 
                 RowBox[{"{", 
                  RowBox[{"315", ",", 
                   RowBox[{
                    RowBox[{"clausius", "[", "315", "]"}], "+", "0.01"}]}], 
                  "}"}], ",", "Automatic", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0.15"}], "}"}]}], "]"}], ",", "18"}], 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"Text", "[", 
                RowBox[{"\"\<vapor\>\"", ",", 
                 RowBox[{"{", 
                  RowBox[{"390", ",", 
                   RowBox[{
                    RowBox[{"fugvap", "[", 
                    RowBox[{"pres", ",", "390"}], "]"}], "+", "0.013"}]}], 
                  "}"}]}], "]"}], ",", "18"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"PointSize", "@", "0.015"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{"bp", ",", 
                RowBox[{"clausius", "[", "bp", "]"}]}], "}"}], "]"}], ",", 
             "Dashed", ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"bp", ",", 
                  RowBox[{"clausius", "[", "bp", "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"bp", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Superscript", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<T\>\"", ",", "Italic"}], "]"}], ",", 
                   "\"\<sat\>\""}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"bp", "-", "4"}], ",", 
                   RowBox[{
                    RowBox[{"clausius", "[", "bp", "]"}], "+", "0.017"}]}], 
                  "}"}], ",", 
                 RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
               "18"}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], "}"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"fPPlot", "=", 
       RowBox[{"Show", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"Piecewise", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"fugvap", "[", 
                  RowBox[{"P", ",", "temp"}], "]"}], ",", 
                 RowBox[{"P", "<", "bp2"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"fugliq", "[", 
                   RowBox[{"P", ",", "temp"}], "]"}], "*", "10"}], ",", 
                 RowBox[{"P", "\[GreaterEqual]", "bp2"}]}], "}"}]}], "}"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"P", ",", "0", ",", "8"}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Darker", ",", "Blue"}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Axes", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"highpressure", "\[Equal]", "True"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<pressure (MPa)\>\"", ",", "18"}], "]"}], ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<fugacity (MPa)\>\"", ",", "18"}], "]"}]}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<pressure (bar)\>\"", ",", "18"}], "]"}], ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<fugacity (bar)\>\"", ",", "18"}], "]"}]}], 
                "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"12", ",", "Black"}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "3"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "3"}], "}"}]}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"590", ",", "415"}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ImagePadding", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"60", ",", "10"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"50", ",", "5"}], "}"}]}], "}"}]}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"Piecewise", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"fugliq", "[", 
                   RowBox[{"P", ",", "temp"}], "]"}], "*", "10"}], ",", 
                 RowBox[{"P", "<", "bp2"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"fugvap", "[", 
                  RowBox[{"P", ",", "temp"}], "]"}], ",", 
                 RowBox[{"P", "\[GreaterEqual]", "bp2"}]}], "}"}]}], "}"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"P", ",", "0", ",", "3"}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Dashed", ",", "Blue", ",", 
               RowBox[{"Opacity", "[", "0.3", "]"}]}], "}"}]}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Graphics", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"PointSize", "@", "0.015"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{"bp2", ",", 
                RowBox[{"fugvap", "[", 
                 RowBox[{"bp2", ",", "temp"}], "]"}]}], "}"}], "]"}], ",", 
             "Dashed", ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"bp2", ",", 
                  RowBox[{"fugvap", "[", 
                   RowBox[{"bp2", ",", "temp"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"bp2", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Superscript", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<P\>\"", ",", "Italic"}], "]"}], ",", 
                   "\"\<sat\>\""}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"bp2", "-", "0.1"}], ",", 
                   RowBox[{
                    RowBox[{"fugvap", "[", 
                    RowBox[{"bp2", ",", "temp"}], "]"}], "+", "0.13"}]}], 
                  "}"}], ",", 
                 RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
               "18"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"Text", "[", 
                RowBox[{"\"\<liquid\>\"", ",", 
                 RowBox[{"{", 
                  RowBox[{"2.7", ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"fugliq", "[", 
                    RowBox[{"2.7", ",", "temp"}], "]"}], "*", "10"}], "+", 
                    "0.12"}]}], "}"}]}], "]"}], ",", "18"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"Text", "[", 
                RowBox[{"\"\<vapor\>\"", ",", 
                 RowBox[{"{", 
                  RowBox[{"0.3", ",", 
                   RowBox[{
                    RowBox[{"fugvap", "[", 
                    RowBox[{"0.3", ",", "temp"}], "]"}], "+", "0.15"}]}], 
                  "}"}], ",", "Automatic", ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"highpressure", "\[Equal]", "True"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0.5"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0.7"}], "}"}]}], "]"}]}], "]"}], ",", 
               "18"}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], "}"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Which", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"fTfP", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", "fTPlot", "]"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"fTfP", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", "fPPlot", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"PaneSelector", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"1", "\[Rule]", 
           RowBox[{"Row", "@", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Dynamic", "@", 
               RowBox[{"Text", "[", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"fTfP", "\[Equal]", "1"}], "||", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"fTfP", "\[Equal]", "2"}], "&&", 
                    RowBox[{"highpressure", "\[Equal]", "False"}]}], ")"}]}], 
                  ",", "\"\<pressure (bar)\>\"", ",", 
                  "\"\<pressure (MPa)\>\""}], "]"}], "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"pres", ",", "0.08", ",", "\"\<\>\""}], "}"}], ",", 
                 "0.02", ",", "0.15", ",", "0.0001"}], "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Dynamic", "@", 
               RowBox[{"Text", "[", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"fTfP", "\[Equal]", "1"}], ",", 
                  RowBox[{"Row", "@", 
                   RowBox[{"{", 
                    RowBox[{"\"\< \>\"", ",", "pres"}], "}"}]}], ",", 
                  RowBox[{"Row", "@", 
                   RowBox[{"{", 
                    RowBox[{"\"\< \>\"", ",", 
                    RowBox[{"pres", "*", "10"}]}], "}"}]}]}], "]"}], 
                "]"}]}]}], "}"}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"2", "\[Rule]", 
           RowBox[{"Row", "@", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"PaneSelector", "[", 
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"True", "\[Rule]", 
                   RowBox[{"Control", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "temp", ",", "375", ",", "\"\<temperature (K)\>\""}], 
                    "}"}], ",", "358", ",", "383", ",", "2"}], "}"}], "]"}]}],
                   ",", "\[IndentingNewLine]", 
                  RowBox[{"False", "\[Rule]", 
                   RowBox[{"Control", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "temp", ",", "375", ",", "\"\<temperature (K)\>\""}], 
                    "}"}], ",", "358", ",", "395", ",", "2"}], "}"}], 
                    "]"}]}]}], "}"}], ",", 
                RowBox[{"Dynamic", "@", "highpressure"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Dynamic", "@", 
               RowBox[{"Text", "[", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"highpressure", "\[Equal]", "True"}], ",", 
                  RowBox[{"Row", "@", 
                   RowBox[{"{", 
                    RowBox[{"\"\< \>\"", ",", 
                    RowBox[{"temp", "+", "100"}]}], "}"}]}], ",", 
                  RowBox[{"Row", "@", 
                   RowBox[{"{", 
                    RowBox[{"\"\< \>\"", ",", "temp"}], "}"}]}]}], "]"}], 
                "]"}]}]}], "}"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Dynamic", "@", "fTfP"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fTfP", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "1", "\[RuleDelayed]", "\"\<fugacity versus temperature\>\""}], 
           ",", 
           RowBox[{
           "2", "\[RuleDelayed]", "\"\<fugacity versus pressure\>\""}]}], 
          "}"}], ",", "PopupMenu"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Spacer", "[", 
       RowBox[{"{", 
        RowBox[{"5", ",", "0"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PaneSelector", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"Control", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "highpressure", ",", "True", ",", "\"\<high pressure\>\""}], 
              "}"}], ",", "Checkbox"}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"Dynamic", "@", "fTfP"}]}], "]"}]}], "\[IndentingNewLine]", 
     "}"}], "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.6447636300550995`*^9, 3.6447637207822886`*^9}, {
   3.644763759533505*^9, 3.644763778816608*^9}, {3.644763833632743*^9, 
   3.64476394092188*^9}, {3.644764001309334*^9, 3.6447640552234173`*^9}, {
   3.644764088701332*^9, 3.6447640970338087`*^9}, {3.644764129468664*^9, 
   3.644764205120991*^9}, {3.644764255261859*^9, 3.6447642946431117`*^9}, {
   3.6448419157491465`*^9, 3.6448419454988484`*^9}, {3.644841981408902*^9, 
   3.644842452356839*^9}, {3.64484248716383*^9, 3.6448426432997603`*^9}, {
   3.644842686710243*^9, 3.644842700950058*^9}, {3.6448427487917943`*^9, 
   3.6448428604681816`*^9}, {3.6448429028256044`*^9, 3.644842982383155*^9}, {
   3.6448430318889866`*^9, 3.644843094003539*^9}, {3.6448431282965007`*^9, 
   3.644843258235933*^9}, {3.6448432886846743`*^9, 3.644843372580473*^9}, {
   3.644843415735941*^9, 3.644843796558723*^9}, {3.6448438343268833`*^9, 
   3.644843915629534*^9}, {3.644843996572163*^9, 3.6448440859052725`*^9}, {
   3.644844143684578*^9, 3.644844173751297*^9}, {3.6448442731139803`*^9, 
   3.6448442941191816`*^9}, {3.6448444575465293`*^9, 3.644844513455727*^9}, {
   3.6448445603664103`*^9, 3.644844586496905*^9}, {3.6448448800926976`*^9, 
   3.6448449184728928`*^9}, {3.6448451017783775`*^9, 3.644845112109968*^9}, {
   3.64484547037346*^9, 3.64484558000073*^9}, {3.6448456119485574`*^9, 
   3.6448457842724133`*^9}, {3.644845828338934*^9, 3.6448459052003307`*^9}, {
   3.6448459739872646`*^9, 3.6448460142145653`*^9}, {3.6448460559639535`*^9, 
   3.644846093419096*^9}, {3.644846135156483*^9, 3.644846287404191*^9}, {
   3.6448463532769585`*^9, 3.6448463907511024`*^9}, {3.644846436946745*^9, 
   3.64484684860529*^9}, {3.6448469381984143`*^9, 3.64484710001867*^9}, {
   3.644847226156885*^9, 3.6448472406597147`*^9}, {3.6448473011541743`*^9, 
   3.6448473215043383`*^9}, {3.6448473941894956`*^9, 
   3.6448474055271444`*^9}, {3.6448474522808185`*^9, 3.644847481523491*^9}, {
   3.644847577758995*^9, 3.644847601282341*^9}, {3.644847635731311*^9, 
   3.644847637215396*^9}, {3.6448476674001226`*^9, 3.6448476680881615`*^9}, 
   3.6448477072103996`*^9, {3.6448597578076544`*^9, 3.644859766561155*^9}, {
   3.6452070622910657`*^9, 3.645207080112085*^9}, {3.645207111756895*^9, 
   3.6452071670290565`*^9}, {3.7419825729953985`*^9, 
   3.7419826986518884`*^9}, {3.7419827374925723`*^9, 
   3.7419827755858545`*^9}, {3.7419828318108144`*^9, 3.741982879447791*^9}, {
   3.7419829346850924`*^9, 3.741982935755066*^9}, {3.7419829829800577`*^9, 
   3.7419830366568613`*^9}, {3.741983135704584*^9, 3.7419832124239244`*^9}, {
   3.741983276230318*^9, 3.741983359483762*^9}, {3.741983392771799*^9, 
   3.74198342133346*^9}, 3.74198345162613*^9, {3.7419834823621254`*^9, 
   3.741983578833761*^9}, {3.741983656155903*^9, 3.741983754569372*^9}, {
   3.741983841560726*^9, 3.741983898265773*^9}, {3.7419841938944187`*^9, 
   3.7419842258540506`*^9}, {3.741984360727871*^9, 3.741984493943205*^9}, {
   3.7419845388283353`*^9, 3.7419845911661825`*^9}, {3.741984623948846*^9, 
   3.741984683595764*^9}, {3.7419847939384604`*^9, 3.7419848716664796`*^9}, {
   3.7419849345111866`*^9, 3.7419849449597073`*^9}, {3.741985015766557*^9, 
   3.7419850872562065`*^9}, {3.741985240884882*^9, 3.7419852573248453`*^9}, {
   3.7419853048981347`*^9, 3.741985455019866*^9}, {3.7419854874884176`*^9, 
   3.741985520198763*^9}, {3.74198555826315*^9, 3.741985655781975*^9}, {
   3.7419857204731293`*^9, 3.74198581487153*^9}, {3.741985850631044*^9, 
   3.7419859678443003`*^9}, {3.741986019112319*^9, 3.7419860192694616`*^9}, {
   3.7419861559264245`*^9, 3.741986203670786*^9}, {3.7419862371932964`*^9, 
   3.741986329255208*^9}, {3.7419866126351275`*^9, 3.7419866550117025`*^9}, {
   3.741986687096865*^9, 3.7419867726564064`*^9}, {3.7419868439438906`*^9, 
   3.7419868700145245`*^9}, {3.741986947261837*^9, 3.741987076412276*^9}, {
   3.741987112810213*^9, 3.7419871665726323`*^9}, {3.7419872231449122`*^9, 
   3.7419872416199417`*^9}, {3.7419873146867733`*^9, 3.741987389380268*^9}, {
   3.741987608327285*^9, 3.7419876600069485`*^9}, {3.741988038161723*^9, 
   3.741988056604578*^9}, {3.741988115504592*^9, 3.7419882686376476`*^9}, {
   3.741988321840544*^9, 3.7419883449833803`*^9}, {3.741988396467412*^9, 
   3.741988405909651*^9}, {3.741988438565793*^9, 3.7419884463099623`*^9}, {
   3.741988536530774*^9, 3.7419885877093935`*^9}, {3.741988636034558*^9, 
   3.741988641746475*^9}, {3.741988716579152*^9, 3.7419888360353727`*^9}, {
   3.74198887149649*^9, 3.741989073365348*^9}, {3.741989113708516*^9, 
   3.741989164513485*^9}, {3.7419892135872126`*^9, 3.741989234131618*^9}, {
   3.7419894037033834`*^9, 3.741989451476322*^9}, {3.741989489478952*^9, 
   3.7419895493982086`*^9}, {3.74198959206221*^9, 3.7419895977533426`*^9}, {
   3.7420682160982804`*^9, 3.742068567356742*^9}, {3.7420686052714577`*^9, 
   3.742068643036111*^9}, {3.7420686875160055`*^9, 3.742068736281932*^9}, {
   3.742068808600169*^9, 3.742068868093638*^9}, {3.74206891854939*^9, 
   3.742068946365075*^9}, {3.7420689797318687`*^9, 3.742069032029511*^9}, {
   3.742069080194013*^9, 3.7420693290233574`*^9}, {3.7420693629212356`*^9, 
   3.7420694025308*^9}, {3.7421389478159266`*^9, 3.742138987113782*^9}, 
   3.742139097655356*^9, {3.7422169648522453`*^9, 3.742217190060631*^9}, {
   3.742217236457067*^9, 3.7422172527875967`*^9}, {3.742217296992145*^9, 
   3.742217664625338*^9}, {3.7422177413601933`*^9, 3.742217772655427*^9}, {
   3.7422178610122223`*^9, 3.742217911163857*^9}, {3.742218117305705*^9, 
   3.742218117467778*^9}, {3.742218173683496*^9, 3.742218175919818*^9}, {
   3.742218295888708*^9, 3.742218299042547*^9}, {3.742218354826239*^9, 
   3.742218358313645*^9}, {3.742218411446306*^9, 3.742218411785057*^9}, {
   3.7422201783039227`*^9, 3.7422201867899427`*^9}, 3.742220274152298*^9, {
   3.74222032104278*^9, 3.742220446438683*^9}, {3.742220489528154*^9, 
   3.74222055628598*^9}, {3.74222059650387*^9, 3.74222063119081*^9}, {
   3.7422207712466*^9, 3.742220807336855*^9}, {3.7422208394453*^9, 
   3.742220943898535*^9}, {3.74222112638064*^9, 3.7422211603714247`*^9}, {
   3.7422212155752697`*^9, 3.7422212160890827`*^9}, {3.742221256030066*^9, 
   3.7422213470607023`*^9}, {3.742221382490944*^9, 3.742221382907259*^9}, 
   3.742221415685994*^9, {3.742221586733344*^9, 3.742221589779443*^9}, 
   3.742222043538463*^9, {3.742222087262637*^9, 3.742222120120529*^9}, {
   3.742222993535178*^9, 3.742223088024314*^9}, {3.7422231573876047`*^9, 
   3.742223244573018*^9}, {3.7422232765135202`*^9, 3.7422233286427717`*^9}, {
   3.7422233643925962`*^9, 3.742223471007568*^9}, {3.742223505906074*^9, 
   3.742223511439571*^9}, {3.742223541851345*^9, 3.742223552356453*^9}, {
   3.742223592125432*^9, 3.742223701108778*^9}, {3.7422238200649633`*^9, 
   3.742223834572977*^9}, {3.742223883751505*^9, 3.7422239005098763`*^9}, {
   3.7422239875155983`*^9, 3.7422240016943502`*^9}, {3.742224074886628*^9, 
   3.74222428829119*^9}, {3.742224333408597*^9, 3.742224346022338*^9}, {
   3.7422243911157427`*^9, 3.742224395199349*^9}, {3.7422246111726503`*^9, 
   3.742224616377943*^9}, {3.742224693764654*^9, 3.7422246976390142`*^9}, {
   3.742225252530163*^9, 3.742225255629201*^9}, {3.742225619378993*^9, 
   3.7422257314043007`*^9}, {3.7422257840978203`*^9, 3.742225847471837*^9}, {
   3.7422258984073763`*^9, 3.742225898856306*^9}, {3.7422260412949657`*^9, 
   3.7422260971372766`*^9}, {3.742226154265081*^9, 3.742226189639286*^9}, {
   3.742226463545697*^9, 3.742226471395082*^9}, {3.742226535948271*^9, 
   3.742226579426736*^9}, {3.742226619187932*^9, 3.742226632507147*^9}, {
   3.742226669664048*^9, 3.742226687648122*^9}, {3.742240650847128*^9, 
   3.7422408141079884`*^9}, {3.7422408494817*^9, 3.7422410445321627`*^9}, {
   3.742241175934718*^9, 3.742241190778777*^9}, {3.7422412424475503`*^9, 
   3.7422412834458675`*^9}, {3.7422419006423388`*^9, 
   3.7422419028003035`*^9}, {3.742241941469578*^9, 3.74224199681298*^9}, {
   3.7422420360044785`*^9, 3.742242040939836*^9}, {3.742242181356848*^9, 
   3.74224226210984*^9}, {3.7422423416195297`*^9, 3.7422423586515117`*^9}, {
   3.742242423918686*^9, 3.7422425499536295`*^9}, {3.7422433920041466`*^9, 
   3.7422434255111375`*^9}, {3.7422436930281105`*^9, 
   3.7422436937998133`*^9}, {3.7422437402360897`*^9, 3.742243753848482*^9}, {
   3.7422437980283856`*^9, 3.7422438123123894`*^9}, {3.74224386259717*^9, 
   3.7422438997288055`*^9}, {3.742243952627282*^9, 3.7422439532298317`*^9}, {
   3.74224400301149*^9, 3.742244105448138*^9}, {3.7422441468770714`*^9, 
   3.742244170097541*^9}, {3.7422442064572535`*^9, 3.742244213693841*^9}, {
   3.7422442455203457`*^9, 3.7422443121849513`*^9}, {3.7422447857029*^9, 
   3.7422447889598646`*^9}, {3.7422448354017725`*^9, 
   3.7422448610240993`*^9}, {3.7422449814330807`*^9, 3.742244993680231*^9}, {
   3.7422452124886236`*^9, 3.7422452640440674`*^9}, {3.7422453358556123`*^9, 
   3.7422454304658117`*^9}, {3.7422455219403934`*^9, 3.742245561640385*^9}, {
   3.7422456269878683`*^9, 3.7422456300276365`*^9}, {3.7422456762624187`*^9, 
   3.742245760839595*^9}, {3.7422457952665186`*^9, 3.742245942676263*^9}, {
   3.742245998641303*^9, 3.7422460245884247`*^9}, {3.742246058309264*^9, 
   3.7422460673174653`*^9}, {3.742246346816081*^9, 3.7422463906916847`*^9}, {
   3.7422464596861567`*^9, 3.7422464688464966`*^9}, {3.742316020952908*^9, 
   3.742316079656056*^9}, {3.7423161103478394`*^9, 3.7423163282024083`*^9}, {
   3.742316368685073*^9, 3.7423164292067404`*^9}, {3.742316472936841*^9, 
   3.742316565610738*^9}, {3.7423166155374784`*^9, 3.7423166351142254`*^9}, {
   3.7423166790149417`*^9, 3.742316720887824*^9}, {3.742316802942953*^9, 
   3.742317004657621*^9}, {3.742317048216092*^9, 3.7423171543602304`*^9}, {
   3.742317198573328*^9, 3.7423172020935144`*^9}, {3.7423172356024575`*^9, 
   3.742317243317437*^9}, {3.7423172815579967`*^9, 3.7423172854284916`*^9}, {
   3.7423173970182853`*^9, 3.7423174088065114`*^9}, {3.7423174694783993`*^9, 
   3.7423175187010255`*^9}, {3.742317600991469*^9, 3.7423176011606226`*^9}, {
   3.7423176511418076`*^9, 3.742317835930021*^9}, {3.74231788239503*^9, 
   3.7423178841436157`*^9}, {3.7423179190462575`*^9, 3.742317921084113*^9}, {
   3.742318416157259*^9, 3.7423185321871195`*^9}, {3.7423185754923716`*^9, 
   3.7423186073391905`*^9}, {3.7423187194647675`*^9, 3.7423187203976107`*^9}, 
   3.742318752750541*^9, {3.742318830474109*^9, 3.742318843988346*^9}, {
   3.7423192057385683`*^9, 3.742319206216014*^9}, {3.742319260471094*^9, 
   3.742319354820556*^9}, {3.742319482532118*^9, 3.742319493832016*^9}, {
   3.7423195338647842`*^9, 3.7423196254300427`*^9}, {3.7425761961771655`*^9, 
   3.7425762006364737`*^9}, {3.7425789448335342`*^9, 
   3.7425789638330917`*^9}, {3.7425790505383825`*^9, 3.742579160583378*^9}, {
   3.742579293160342*^9, 3.7425794532133627`*^9}, {3.742579581956526*^9, 
   3.7425796068722086`*^9}, {3.742579645171432*^9, 3.7425796489533834`*^9}, {
   3.7425796886701794`*^9, 3.7425798234730625`*^9}, {3.742579916971017*^9, 
   3.742580162426256*^9}, {3.742580216576382*^9, 3.7425803264712954`*^9}, {
   3.7425803596012335`*^9, 3.7425805424064565`*^9}, {3.742580578927057*^9, 
   3.7425806571356735`*^9}, {3.742580728649389*^9, 3.7425807333204365`*^9}, {
   3.7425807845259542`*^9, 3.742580827735115*^9}, {3.742580869401699*^9, 
   3.7425809744871006`*^9}, {3.7425810049937277`*^9, 
   3.7425811264569073`*^9}, {3.7425811593864927`*^9, 3.742581230460859*^9}, {
   3.7425812964466853`*^9, 3.742581328713873*^9}, {3.742581421807523*^9, 
   3.7425820010560856`*^9}, {3.7425820451888742`*^9, 
   3.7425821456176887`*^9}, {3.7425822702796535`*^9, 
   3.7425822871124835`*^9}, {3.742582414683753*^9, 3.7425824149109592`*^9}, {
   3.7425827854437866`*^9, 3.742582789519498*^9}, {3.7425838632639914`*^9, 
   3.742583869366289*^9}, {3.74258392851486*^9, 3.742584010200205*^9}, {
   3.74258407752057*^9, 3.742584095597483*^9}, {3.7425841492928863`*^9, 
   3.742584149742296*^9}, {3.7425842655265355`*^9, 3.7425842790319815`*^9}, {
   3.742584345077259*^9, 3.7425845066062636`*^9}, {3.7425845571271486`*^9, 
   3.7425845606242514`*^9}, {3.742584633066202*^9, 3.7425846385982385`*^9}, {
   3.7425846816665297`*^9, 3.742584682000835*^9}, {3.742584766794486*^9, 
   3.7425847889967747`*^9}, {3.7425849331403685`*^9, 
   3.7425850538097153`*^9}, {3.742585114767782*^9, 3.742585201313916*^9}, {
   3.74258526205157*^9, 3.7425852671039762`*^9}, {3.742670428248265*^9, 
   3.742670680534813*^9}, {3.742736263889698*^9, 3.742736264835559*^9}, {
   3.7427363467089963`*^9, 3.742736369538948*^9}, {3.742736421431384*^9, 
   3.742736758314901*^9}, {3.7427368822310047`*^9, 3.742736886033386*^9}, {
   3.7427369441580477`*^9, 3.7427369716065035`*^9}, {3.742737030509203*^9, 
   3.742737095556471*^9}, {3.742737164671591*^9, 3.742737277526265*^9}, {
   3.7427373296758747`*^9, 3.7427373404852495`*^9}, {3.742737374865811*^9, 
   3.7427374560530243`*^9}, {3.7427375171807966`*^9, 
   3.7427375377166386`*^9}, {3.7427376029121003`*^9, 3.742737622678955*^9}, {
   3.742737682906356*^9, 3.742737794503997*^9}, {3.7427378320619016`*^9, 
   3.7427378355425777`*^9}, {3.742737902262449*^9, 3.7427379777756844`*^9}, {
   3.7427380518819957`*^9, 3.742738174377589*^9}, {3.742738213927314*^9, 
   3.742738216310789*^9}, {3.7427444137216597`*^9, 3.7427444146989183`*^9}, {
   3.7429280347106943`*^9, 3.742928179778778*^9}, {3.742928243698017*^9, 
   3.7429282796276503`*^9}, {3.7429283205413136`*^9, 
   3.7429283291461473`*^9}, {3.7429283781604805`*^9, 3.74292857511849*^9}, {
   3.74292868080647*^9, 3.7429286973527308`*^9}, {3.742928736558642*^9, 
   3.7429287366577454`*^9}, {3.7429287936467466`*^9, 3.742928801128559*^9}, {
   3.7429288376228733`*^9, 3.742928857701314*^9}, {3.742929063046566*^9, 
   3.742929064590973*^9}, {3.742929110635454*^9, 3.7429291425670795`*^9}, {
   3.7429291800049286`*^9, 3.7429292232165313`*^9}, 3.742929318633302*^9, {
   3.742929356723708*^9, 3.7429294315287066`*^9}, {3.742929467219822*^9, 
   3.742929498253645*^9}, {3.7429295528531466`*^9, 3.7429295665797615`*^9}, {
   3.7429296364136133`*^9, 3.742929724944414*^9}, {3.742929756130627*^9, 
   3.742929805141429*^9}, {3.742929852607648*^9, 3.742929885868046*^9}, {
   3.742929928054797*^9, 3.7429299574241233`*^9}, {3.7429299882456465`*^9, 
   3.742930001153398*^9}, {3.7429300529617643`*^9, 3.7429300582585864`*^9}, {
   3.7429301105725117`*^9, 3.7429301559919777`*^9}, {3.742930224031559*^9, 
   3.742930244013149*^9}, {3.7429302981415014`*^9, 3.742930302362172*^9}, {
   3.742930355144711*^9, 3.7429303873686438`*^9}, {3.74293042486462*^9, 
   3.742930445227157*^9}, {3.742930485749448*^9, 3.742930558085653*^9}, {
   3.7429306269642367`*^9, 3.7429306275647836`*^9}, {3.7429306856558003`*^9, 
   3.74293068606217*^9}, {3.7429307724750643`*^9, 3.7429308235941124`*^9}, {
   3.74293088790729*^9, 3.7429308883296747`*^9}, {3.7429310607634935`*^9, 
   3.742931096297884*^9}, {3.742931180851753*^9, 3.742931182459216*^9}, {
   3.7429312456051598`*^9, 3.742931330335088*^9}, {3.742931383823948*^9, 
   3.742931484562785*^9}, {3.7429315259574733`*^9, 3.742931557048817*^9}, {
   3.742931602120202*^9, 3.7429316027217493`*^9}, {3.7429316546566267`*^9, 
   3.7429316667208004`*^9}, {3.7429317324983807`*^9, 
   3.7429318479263167`*^9}, {3.742931902426412*^9, 3.7429319250056534`*^9}, {
   3.7433401678261414`*^9, 3.7433406095937014`*^9}, {3.743340655947833*^9, 
   3.74334069875599*^9}, {3.743340744516013*^9, 3.7433407651443872`*^9}, {
   3.743340827977154*^9, 3.7433412112839117`*^9}, {3.743341251461343*^9, 
   3.74334126352028*^9}, {3.74334136048549*^9, 3.743341391265326*^9}, {
   3.743341500700391*^9, 3.74334153382582*^9}, {3.74334158689505*^9, 
   3.7433417273531103`*^9}, {3.743341757596452*^9, 3.743341790823537*^9}, {
   3.743341846769352*^9, 3.743341915656721*^9}, {3.743341966194502*^9, 
   3.743342322745533*^9}, {3.743342358900392*^9, 3.743342517424552*^9}, {
   3.743342565099828*^9, 3.743342734363469*^9}, {3.7433427921319327`*^9, 
   3.7433428144994392`*^9}, {3.743342851829206*^9, 3.7433428825129585`*^9}, {
   3.7433429176647654`*^9, 3.7433430686754494`*^9}, {3.7433431050323887`*^9, 
   3.743343215878787*^9}, {3.7433432502810087`*^9, 3.743343267645749*^9}, {
   3.743343298030017*^9, 3.7433433118761272`*^9}, {3.7433433427641563`*^9, 
   3.7433434739749165`*^9}, {3.7433435058760138`*^9, 3.743343509577363*^9}, {
   3.7433479088091726`*^9, 3.743347980794284*^9}, {3.7435133707038918`*^9, 
   3.743513572860235*^9}, {3.743513607728286*^9, 3.7435136125889177`*^9}, {
   3.7435136816595955`*^9, 3.7435136823792505`*^9}, {3.7435137206958437`*^9, 
   3.7435137837066793`*^9}, {3.743513835165404*^9, 3.7435138825183153`*^9}, {
   3.7435139666397047`*^9, 3.743513971522147*^9}, {3.7435140253083253`*^9, 
   3.743514080515935*^9}, {3.743514133420744*^9, 3.74351413472393*^9}, {
   3.743514181642375*^9, 3.7435141864197216`*^9}, {3.743514219853424*^9, 
   3.743514335411105*^9}, {3.743514371000512*^9, 3.743514445583126*^9}, {
   3.743514484656349*^9, 3.7435145277464533`*^9}, {3.74351459608139*^9, 
   3.743514713223468*^9}, {3.743514748857103*^9, 3.743514749003235*^9}, {
   3.743514782507721*^9, 3.7435148537751884`*^9}, {3.743514890385151*^9, 
   3.743514912626411*^9}, {3.7435149706437645`*^9, 3.7435149707598705`*^9}, {
   3.7435150076789427`*^9, 3.743515014752341*^9}, {3.743515093002804*^9, 
   3.7435151172631617`*^9}, {3.743515153060766*^9, 3.743515245871564*^9}, {
   3.743515282319439*^9, 3.7435152881817727`*^9}, {3.7435153191815343`*^9, 
   3.743515334642516*^9}, {3.7435154703015103`*^9, 3.7435154752790365`*^9}, {
   3.743515565759121*^9, 3.743515616780776*^9}, {3.7435156555852156`*^9, 
   3.7435157759072933`*^9}, {3.7435158486435013`*^9, 
   3.7435159217575073`*^9}, {3.74351595463956*^9, 3.743515977226763*^9}, {
   3.743516024463948*^9, 3.743516051829847*^9}, {3.743516091432512*^9, 
   3.743516112855682*^9}, {3.7435161758443384`*^9, 3.7435163396105433`*^9}, {
   3.743516405790183*^9, 3.743516482628342*^9}, {3.7435165279066086`*^9, 
   3.743516553751128*^9}, 3.7439519475233583`*^9, {3.745074296213058*^9, 
   3.745074375785236*^9}, {3.7450748086053247`*^9, 3.745074811281144*^9}, {
   3.7450751891318817`*^9, 3.745075218820056*^9}, {3.7451543197402477`*^9, 
   3.745154319969954*^9}},
 CellID->948876044,ExpressionUUID->"43c371ed-6862-469c-8b02-a44c466deafc"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`fTfP$$ = 1, $CellContext`highpressure$$ = 
    True, $CellContext`pres$$ = 0.08, $CellContext`temp$$ = 375, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`pres$$], 0.08, ""}, 0.02, 0.15, 0.0001}, {{
       Hold[$CellContext`temp$$], 375, "temperature (K)"}, 358, 383, 2}, {{
       Hold[$CellContext`temp$$], 375, "temperature (K)"}, 358, 395, 2}, {{
       Hold[$CellContext`fTfP$$], 1, ""}, {
      1 :> "fugacity versus temperature", 2 :> "fugacity versus pressure"}}, {{
       Hold[$CellContext`highpressure$$], True, "high pressure"}, {
      True, False}}, {
      Hold[
       Row[{
         PaneSelector[{1 -> Row[{
              Dynamic[
               Text[
                If[
                 Or[$CellContext`fTfP$$ == 1, 
                  
                  And[$CellContext`fTfP$$ == 2, $CellContext`highpressure$$ == 
                   False]], "pressure (bar)", "pressure (MPa)"]]], 
              Manipulate`Place[1], 
              Dynamic[
               Text[
                If[$CellContext`fTfP$$ == 1, 
                 Row[{" ", $CellContext`pres$$}], 
                 Row[{" ", $CellContext`pres$$ 10}]]]]}], 2 -> Row[{
              
              PaneSelector[{
               True -> Manipulate`Place[2], False -> Manipulate`Place[3]}, 
               Dynamic[$CellContext`highpressure$$]], 
              Dynamic[
               Text[
                If[$CellContext`highpressure$$ == True, 
                 Row[{" ", $CellContext`temp$$ + 100}], 
                 Row[{" ", $CellContext`temp$$}]]]]}]}, 
          Dynamic[$CellContext`fTfP$$]], 
         Manipulate`Place[4], 
         Spacer[{5, 0}], 
         PaneSelector[{2 -> Manipulate`Place[5]}, 
          Dynamic[$CellContext`fTfP$$]]}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    590., {205., 210.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`pres$20177$$ = 
    0, $CellContext`temp$20178$$ = 0, $CellContext`fTfP$20179$$ = 
    False, $CellContext`highpressure$20180$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`fTfP$$ = 1, $CellContext`highpressure$$ = 
        True, $CellContext`pres$$ = 0.08, $CellContext`temp$$ = 375}, 
      "ControllerVariables" :> {
        Hold[$CellContext`pres$$, $CellContext`pres$20177$$, 0], 
        Hold[$CellContext`temp$$, $CellContext`temp$20178$$, 0], 
        Hold[$CellContext`fTfP$$, $CellContext`fTfP$20179$$, False], 
        Hold[$CellContext`highpressure$$, $CellContext`highpressure$20180$$, 
         False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`fugRealvap$, $CellContext`fugRealliq$, \
$CellContext`clausius$, $CellContext`invclausius$, $CellContext`fugliq$, \
$CellContext`fugvap$, $CellContext`PTPlot$, $CellContext`fTPlot$, \
$CellContext`fPPlot$, $CellContext`bp$, $CellContext`bp2$}, \
$CellContext`clausius$[
           Pattern[$CellContext`T, 
            Blank[]]] := 
         0.101325 
          Exp[(-5268.134) (1/$CellContext`T - 1/
             373)]; $CellContext`invclausius$[
           Pattern[$CellContext`p, 
            Blank[]]] := 
         1/(Log[$CellContext`p/0.101325]/(-5268.134) + 
          1/373); $CellContext`fugliq$[
           Pattern[$CellContext`pres$, 
            Blank[]], 
           Pattern[$CellContext`temp$, 
            
            Blank[]]] := $CellContext`clausius$[$CellContext`temp$]; \
$CellContext`fugvap$[
           Pattern[$CellContext`pres$, 
            Blank[]], 
           Pattern[$CellContext`temp$, 
            Blank[]]] := $CellContext`pres$ - (($CellContext`fTfP$$ - 1) 
           If[$CellContext`highpressure$$ == True, 0.8, 
             0]) ($CellContext`pres$ - 
           Log[$CellContext`pres$ + 1]); $CellContext`bp$ = 
         ReplaceAll[$CellContext`Tb, 
           Part[
            
            FindRoot[$CellContext`fugvap$[$CellContext`pres$$, \
$CellContext`Tb] == $CellContext`fugliq$[$CellContext`pres$$, \
$CellContext`Tb], {$CellContext`Tb, 280, 400}], 1]]; $CellContext`bp2$ = 
         ReplaceAll[$CellContext`P, 
           Part[
            
            FindRoot[$CellContext`fugvap$[$CellContext`P, \
$CellContext`temp$$] == $CellContext`fugliq$[$CellContext`P, \
$CellContext`temp$$] 10, {$CellContext`P, 0.00001, 100}], 
            1]]; $CellContext`fTPlot$ = Show[{
            Plot[
             Piecewise[{{
                $CellContext`fugliq$[$CellContext`pres$$, $CellContext`T], \
$CellContext`T < $CellContext`bp$}, {
                $CellContext`fugvap$[$CellContext`pres$$, $CellContext`T], \
$CellContext`T >= $CellContext`bp$}}], {$CellContext`T, 280, 400}, 
             PlotStyle -> {Thick, Darker, Blue}, Axes -> True, Frame -> True, 
             FrameLabel -> {
               Style["temperature (\[Degree]C)", 18], 
               Style["fugacity (bar)", 18]}, LabelStyle -> {12, Black}, 
             PlotRange -> {{280, 400}, {0, 0.2}}, ImageSize -> {590, 415}], 
            Plot[
             Piecewise[{{
                $CellContext`fugvap$[$CellContext`pres$$, $CellContext`T], \
$CellContext`T < $CellContext`bp$}, {
                $CellContext`fugliq$[$CellContext`pres$$, $CellContext`T], \
$CellContext`T >= $CellContext`bp$}}], {$CellContext`T, 280, 500}, 
             PlotStyle -> {Dashed, Blue, 
               Opacity[0.3]}], 
            Graphics[{
              Style[
               Text[
               "liquid", {315, $CellContext`clausius$[315] + 0.01}, 
                Automatic, {1, 0.15}], 18], 
              Style[
               Text[
               "vapor", {
                390, $CellContext`fugvap$[$CellContext`pres$$, 390] + 0.013}],
                18], 
              PointSize[0.015], 
              Point[{$CellContext`bp$, 
                $CellContext`clausius$[$CellContext`bp$]}], Dashed, 
              Line[{{$CellContext`bp$, 
                 $CellContext`clausius$[$CellContext`bp$]}, {$CellContext`bp$,
                  0}}], 
              Style[
               Text[
                Superscript[
                 Style["T", Italic], "sat"], {$CellContext`bp$ - 
                 4, $CellContext`clausius$[$CellContext`bp$] + 0.017}, 
                Background -> White], 18]}]}]; $CellContext`fPPlot$ = Show[{
            Plot[
             Piecewise[{{
                $CellContext`fugvap$[$CellContext`P, $CellContext`temp$$], \
$CellContext`P < $CellContext`bp2$}, {$CellContext`fugliq$[$CellContext`P, \
$CellContext`temp$$] 
                10, $CellContext`P >= $CellContext`bp2$}}], {$CellContext`P, 
              0, 8}, PlotStyle -> {Thick, Darker, Blue}, Axes -> False, Frame -> 
             True, FrameLabel -> If[$CellContext`highpressure$$ == True, {
                Style["pressure (MPa)", 18], 
                Style["fugacity (MPa)", 18]}, {
                Style["pressure (bar)", 18], 
                Style["fugacity (bar)", 18]}], LabelStyle -> {12, Black}, 
             PlotRange -> {{0, 3}, {0, 3}}, ImageSize -> {590, 415}, 
             ImagePadding -> {{60, 10}, {50, 5}}], 
            Plot[
             
             Piecewise[{{$CellContext`fugliq$[$CellContext`P, \
$CellContext`temp$$] 10, $CellContext`P < $CellContext`bp2$}, {
                $CellContext`fugvap$[$CellContext`P, $CellContext`temp$$], \
$CellContext`P >= $CellContext`bp2$}}], {$CellContext`P, 0, 3}, 
             PlotStyle -> {Dashed, Blue, 
               Opacity[0.3]}], 
            Graphics[{
              PointSize[0.015], 
              Point[{$CellContext`bp2$, 
                $CellContext`fugvap$[$CellContext`bp2$, \
$CellContext`temp$$]}], Dashed, 
              Line[{{$CellContext`bp2$, 
                 $CellContext`fugvap$[$CellContext`bp2$, \
$CellContext`temp$$]}, {$CellContext`bp2$, 0}}], 
              Style[
               Text[
                Superscript[
                 Style["P", Italic], "sat"], {$CellContext`bp2$ - 
                 
                 0.1, $CellContext`fugvap$[$CellContext`bp2$, \
$CellContext`temp$$] + 0.13}, Background -> White], 18], 
              Style[
               Text[
               "liquid", {
                2.7, $CellContext`fugliq$[2.7, $CellContext`temp$$] 10 + 
                 0.12}], 18], 
              Style[
               Text[
               "vapor", {
                0.3, $CellContext`fugvap$[0.3, $CellContext`temp$$] + 0.15}, 
                Automatic, 
                If[$CellContext`highpressure$$ == True, {1, 0.5}, {1, 0.7}]], 
               18]}]}]; Which[$CellContext`fTfP$$ == 1, 
          Graphics[$CellContext`fTPlot$], $CellContext`fTfP$$ == 2, 
          Graphics[$CellContext`fPPlot$]]], 
      "Specifications" :> {{{$CellContext`pres$$, 0.08, ""}, 0.02, 0.15, 
         0.0001, ControlPlacement -> 
         1}, {{$CellContext`temp$$, 375, "temperature (K)"}, 358, 383, 2, 
         ControlPlacement -> 
         2}, {{$CellContext`temp$$, 375, "temperature (K)"}, 358, 395, 2, 
         ControlPlacement -> 3}, {{$CellContext`fTfP$$, 1, ""}, {
         1 :> "fugacity versus temperature", 2 :> "fugacity versus pressure"},
          ControlType -> PopupMenu, ControlPlacement -> 
         4}, {{$CellContext`highpressure$$, True, "high pressure"}, {
         True, False}, ControlType -> Checkbox, ControlPlacement -> 5}, 
        Row[{
          PaneSelector[{1 -> Row[{
               Dynamic[
                Text[
                 If[
                  Or[$CellContext`fTfP$$ == 1, 
                   
                   And[$CellContext`fTfP$$ == 2, $CellContext`highpressure$$ == 
                    False]], "pressure (bar)", "pressure (MPa)"]]], 
               Manipulate`Place[1], 
               Dynamic[
                Text[
                 If[$CellContext`fTfP$$ == 1, 
                  Row[{" ", $CellContext`pres$$}], 
                  Row[{" ", $CellContext`pres$$ 10}]]]]}], 2 -> Row[{
               
               PaneSelector[{
                True -> Manipulate`Place[2], False -> Manipulate`Place[3]}, 
                Dynamic[$CellContext`highpressure$$]], 
               Dynamic[
                Text[
                 If[$CellContext`highpressure$$ == True, 
                  Row[{" ", $CellContext`temp$$ + 100}], 
                  Row[{" ", $CellContext`temp$$}]]]]}]}, 
           Dynamic[$CellContext`fTfP$$]], 
          Manipulate`Place[4], 
          Spacer[{5, 0}], 
          PaneSelector[{2 -> Manipulate`Place[5]}, 
           Dynamic[$CellContext`fTfP$$]]}]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{35.919000000000004`, {6., 9.256}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 TaggingRules->{},
 CellID->101659201,ExpressionUUID->"45084640-34e9-4f94-a1de-55c9d6324215"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Snapshots",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SnapshotGroup", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "To create snapshots, click 'Add Snapshot' in the toolbar at least \
three times, and adjust the controls of each copy to show a range of \
interesting settings. Optional captions for the screenshots may be included \
in the Details section.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSnapshotGroup"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "44271503-f3f2-4709-967a-a71d6a4bcb7c"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SnapshotGroup"},
 DefaultNewCellStyle->"Text",
 CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
 CellID->98938448,ExpressionUUID->"a2966795-4073-4a65-81eb-36a1ea65908f"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
LQg4jrr6WUQmlo20aK8EzWC7fv368H+eBQUFU6ZMeemll55++umff/45Ur/6
GFu1atXf//739957z+5CgPihjkMurTRy9xgnj63jccPBqdb6t4yqc3Z5CXkh
dTSyLMEIttAWwbYBPvjgg6ZNmy5dulT+PuaYY0499dRItXzttdeed955sriI
VIOIG+a9QmSFkpWVJX9EauUoTUmD5nqKVRX0N2fOnL/+9a9HH330EUcc0bt3
7zVr1jR44u+///7ss89u1qzZIYcccvHFF8+YMSNKNavfr6xtww+2W7du7dy5
c8IBgwcPjtSvPsYuuOAC9RZmzZpldy1AnLAG286vhXpc/8VBSfaJqQcNkT/k
aegWfIKtLMcIttATwba+5BfdunXrQYMGqaeysXTyySdHqvFly5bJ9tWIESMi
1SDihnV3bW5ubmTXj9IgO20RS5PCM9nLZ15ZCLdp06ZVq1YDBw688847ZZnZ
vn37devWBXyh0BNPmDBB0laLFi3++Mc/9u3bt2nTps2bN5fwFY23rILtrl27
1q5dG+YP8/LLL1d58Nhjjx0wYMDXX38d2R9+zPy///f/1BuZPXu2OfDzzz9/
5pln3njjDRsLi2+ZmZnPeK1atcruWhzAcR3SDLY7io2OrwV9nPX2Qan28an7
h/c9ONvK0xCNyEuYwVaWYLIcI9hCTwTb+vrLX/5y6KGHyvpCPY1ssBV33323
tL958+YItok4YF5SVfqe/BHZ9aM0KM1ynUPETGOC7RVXXCERafr06erpF198
IU8ltAZ8odATX3nllfL0+++/V0/fe+89eXrLLbdE/g3XP9hWVVUddthhUo8U
WV1dHdmffIytXr36gQceeP/9960Dr732Wnl3p512ml1Vxb358+er/0/473//
a3ctDuC4DmleEjm72DhpTNDHGst/hA+ZctCoPuMOyraX/DtoI/IS5oWRCbbQ
WWSDbe/evR966KGxY8eeffbZbdu2vfXWWydMmGCOvfrqq4cMGfLoo4/KqJ49
e6pDeWXB26dPnw4dOhx33HHXXXfdr7/+ak4vv51+/fodf/zxRxxxxPnnnz9i
xAjzGN0Qo2QboH///taqLr/88jvuuKNhNfhYtWpV06ZNrZs9Kti+88478paP
PPJIea2JEydaZ/noo49ky0pKlbHnnnvus88+W1xcHKKY5ORkWbQ++OCDwWqQ
JUlOTk56evqWAzYj3m3y2rhx48qVK8Pf3VMv0qw0Li+hXsvudwxHMhdKsoCS
xVSIzR7/DFt0gP8o64zbtm2TJWT37t3NIaWlpSeeeKIsmQsLC31epc6JVexd
sGCBGiv5V55ef/31wcpujPoG23Xr1qlU4qBdSPXiuBzhOATbenFch1TBtqTC
c/ueE0YHfZgemxxgbO/Pa7Ot/B2sEXmJEoItnCCywfaYY45RS1GJbH/7299a
t27drFmzmTNnqrGS7OSpjG3SpIn8kZGRIbG3efPmMkRS4R/+8IdDDz1UnqrN
GEl/p556qkx54YUX3n777e3bt5fJ7r333tCjRKtWrU4//XRrVdLsWWed1YAa
/I0ZM0am/Oqrr8whEmzVW77kkkska8vs8vcXX3yhxg4dOlSeyjQ33njjxRdf
rKaUbBusmDLvxo9sd3Xu3DnYhyybi1sOZvfGLKJOkmZaWtr69euXLVu2devW
aKwipVlpXF5CXohgi4bxWTTl5uYGW441ONhOmzZNlpl33XWXdaDaIpUO7PMq
dU6sFukSb2fNmiWrKrWU/uCDD4KV3Rj1DbYrV65Uq4zvvvsuIr9xKUBeevny
5fJHONPLd7FkyZJwrlO3b9++rKys3377befOneHXo1uOkE0L+cxXrFhRWFgY
zvSVlZVLly5NTU31Hy7tyFK0RjJA5MiqX74OKTL8WcIJtvLdybbH4sWL09PT
wzkwoKqqSrrQ9u3bfYZLp5Lh27ZtC6cweRfyXjZu3CifVegp61tesC/FCKM/
R6lDyk9j0aJF/p2qvv3NnzXYHv9q0Ifk2V8zPP8Gm+DazzwTfJQSqhGCLZwi
GsF28ODB6unChQubNm0qMU09lRwnYx955BH5FctvWRYyp5xyijUnyqaFPO3W
rZsUM2fOHPn7T3/6kxqVmZkpMblt27byUwoxqiyMYBt+Df5vUOKzjJWNf3OI
CrbSoHr6888/S0o9+eST1QbMEUcc0bJlS1nBqbETJ06UiSWPByzGbFNSsAzP
y8sL+CFb99USbF1C7a5dt25dfTcdwyfNSuPyEmqnrd3vGI7ks2gKcY13a26d
4hVmsP3mm2+saxlFVgfq/E2fVwln4uHDhydYvPTSS8FqbqTwg+1bb72l/s/T
1MzrnXfekbHyO1VPp0+f7jOjBBk1yucaTbm5uXfffXeLFi1Ua7Jevu222yQv
PP744zLxsccea51YosHIkSM7depkvnqHDh1uv/32gHfNlqwxatQomcCcWGa8
6667fBZTw4YNkxdq06aNenrqqada36CqWVbThvegZfX06aef9n+5zz77TI2d
PHlysE/PbOG5557zH/vuu++qsTNnzjQHpqSkXHfdddYPvFevXhJGfOb9xz/+
ITPKJo18FDfccMPhhx+u3q85gWwAXHzxxer/t4VM0Lt3b5/bFt90003SyGWX
XeZfm9Qgo+SlrQNLS0sffPDBk046SbWpNjBef/310Kl53LhxAbuQ/CLMaSSi
vvjii/Ltm9PIJtyIESNkeMB3Lb1XuoF8iWriLl26qDOmt27d2q9fP+lUavgJ
J5zg88lLZ1Cv/u9//1s2dXr27Gm+omwjDR06NGC8rW95wb6UcPpziA5p1PMX
Z32zH330UdeuXVWb0nXNucLsb3WyBtvjXonug2ALp4h4sJUcl5OTYw754x//
mHAgCaocl52drUbJIjHBu5/U2oL6D3NZ9K1atUr+OP7442X5rP7bX51aWOY9
HjjYqLLwgm2YNfi/wUsvvVRGmccSl3mDrbyiLMrMIX379pVpZMFVUFAgm2RT
p041R6kjmc3yfIoxDRo0KMFydJwPgq0LqWAra5OFCxfKdk59V3/hkGalcXkJ
gi0aLAbB9r///a8sHiX1WAf+z//8jwxMTk72eZU6J/7222/VlvOFF1545pln
qk1iiSfBym6M8IPt2LFjEwJ58803Zaz8TtVT/3Cn/tdXWFObvHSPHj38W+vY
seOf//xn+UPWRNblwPnnnx/w1WUTXb5Qn1dUayt/8jEuX77cnOzJJ5+UgYcd
dph6asY0KwlKaqysIuXpKaec4v/JqNXrUUcdJW8qxAeoWpB//UddddVVMqpd
u3ZmmFq3bp006F+PDPT5pu6///4E7yFY11xzjfWdqrH/+te/zHBkpjzRunVr
632a+vTpIwMvuugi/9ok3cioyy+/3Bwimwfdu3c3m7I2e+ONN4b4BD755JOA
38v48ePNaR544IGA08h36v+uZetObc5ZycbVL7/8EvDbHD58uNnCjh071MCH
HnpIPo06X7EB5QX7UsLsz6E7ZL1+ceabvfXWW61h2Qy24fe3OlmDbfv/je6D
YAuniHiw9QmJ6j/DZeOhzJvjZOFjjvr0008TvAvq4y3UUcHqNNXbb79d/d5l
4XDFFVfIOl2iopo3xKg6g229avAh8x533HE+Q8455xzrELUGV7uA5Vcv710W
vFKkOmQ6wXugS8BiTKNGjZLJpLaAHzKHIruQGWwXLFgQpcvISLPSOMEWjVHf
Q5GL6uIfbKdOnSqLx3/84x/Wgf369UsI9J+BoSeWtV7btm3lbzPJfvfdd2qr
OFjZjRF+sC0uLk5LS/vxxx/VKkNWcGle6jDUem1m19TUqD3U4rLLLhs3bpz8
wGXtpiKtYg228lpqoOQv+eTlO/3mm2/UJyYeffRR68upVVWC9yzmDz/8ULbY
5QMcMGCAGnjmmWeaU/oE223btsnbueSSS2SgZAr17jIzM9XYl19+WbWQkpJi
fbn8/Hy10zlgDrIyW/C5GrCEDpUNH3nkETVk586dp556aoL3ytgjR46Uz3bR
okUvvPCC2gyQcG3d9awylCLr9Pfff3+Bl+E9EFftK5RZJOtJas7IyHj33XfV
y8nEZiP1CrbmJzxkyBBZ9ZeXl8+ePVtd8Uz122CfgPRt+Uglxqopx4wZoz5k
8/9FX3/9dTXq0ksvlcnWr18vGy3qv+7Fa6+9FvBdy+e2ZMmS5cuX//3vf1dD
mjRpIv/+9a9/nT9//oYNG9555x310bVs2dLctWpmPUW+Pvlhrl69+q233lIf
foL3+H9r/Q0rz+dLMcLuz6E7ZMOCrfoQnnnmmaSkJPlw1CHQ9epvdbIG23Yv
R/dBsIVTRDzYmsfZKs8++2yC9z8Jy7w5znrL13/961/qh3y7H3UnQVkCf/75
5zfeeKNaXyR4/1NdBdgQoyTYdu3a1XwVmVIdUqKe1rcGK/kJS1OSfK0DJZn6
vOVhw4YleIOtvPTNN9+sypNFpfyt1rbWYBvwHrj//Oc/E7wbMwE/ZC4e5UIq
2Kampv7666/RC7bSuLwEwRYNVt+LRzUg2K5YsUIWj5KerANVIvC/40/oiSWA
yB89e/a0jj333HMTAp2u23iROse2XpvZ6hNI8B6Y5HPzazOBWoPtww8/LJ+P
ZGHrkSEVFRXt2rWTKc877zxzYHZ2tpr9hBNOkO/a2vI999yjRsknrIb4BFsl
2CmNEglVXBo6dKh1+GeffaaalZgQ9FPzkpyiEqXPMbHqqtdC0pn5ftUQifzW
KT/66CM1/PnnnzcHmhnqtttu8zl69qefflKjrMf6irfffls+z6uvvtq8lH29
gq3a23jGGWdYJ5NP+4YbbpCJ5e2E/hyCnWMrLajPp3v37taTdgsLC9VxCxK7
JET7vGv5rKyNmAfT9u/f33pctHxiari5y96a9Xz+b0R+C2ofrjUIN6w8/y/F
qE9/NoJ3yIYFW9kWnTdvnn894fe3OlmDbduXo/sg2MIpIh5sfXLfXXfdJT9V
2Vou88txSUlJMqpHjx7W6desWSNrc1mU5eXlyTJZVk8yUDZvfvzxxxNPPFGm
l42cEKNkyBFHHGG9/8769etlVLBgG7oG/zco706ml1+0OUSCrXkSsaL+e3zx
4sVqZ8Hpp58uDapRsr0nQ8wCggVbtVWg/jcAKDtwr5/8/HzJDmFe+KW+pFlp
XF6CO/4gBhocbHNzcyX1yKa+OUS2r2TVI0t+/34beuKvv/46wXLhQeWmm24y
1yaRZUuwNQ9JNfdhmSQaqEMircE2mH/84x8J3qOb9u3bp4aYUU7+8Jm4oKBg
5MiRsok+d+5cNaRewVZIEkzwOxr5+uuvl4G/+93v6qzWbKFbt27WgersTvPc
SXHhhRfKkGuuuca/BRUqJUKaQ8wMtWLFCp+J1bZEwsGH4AZUr2Cr7v/bvn37
rKys0M0GFCzYSvdWw/2Tl/m1/vbbb2qI+a5la8o65WuvvRawH86YMUMNNzO+
mfVkg8fnDFnDsnN29erVjSnP/0sJwb8/G5EOtrfccov/69arv9WJYAv4i8bF
o2QtrJ5u3bq1ZcuWsupUnd8nx2VkZKhrLMjSTA1JT0+XnCjrvnXr1qmTjCTi
mdOrjCybIiFGyd8dO3Zs0aLFhg0b1Ci19zNYsA1dg/8bVAsl6wFv6uJRP/zw
g3q6ceNGafDYY4+VNbs6Bua+++4zJ37hhRcSLMe5BQu26ngb/wuhwLVUsC0s
LJTfVF5eXvgrvvBJs9K4vATBFjHQ4Ksilx24vJ5sUqqnX331VYLl0scqP5aW
ltY5sbqfjqwyzPuSb9u2TR3sGuLs4AazJdiqzf7mzZube7is1GmJAYOtVLtq
1SpJpomJif/5z3/Ma/iYwUQdjpXgvc5hne+lvsFW3W44wXI0snkcsqxG63w5
awtmXDL3A44ZM0YNqaioUNNccMEF0/2o/zA/7rjjzDbVh3nEEUf4X7hJPoRD
DjlEtSbJ9L333pNvOeD1neoVbNXnluA9h/Thhx+eOnWq/EDCeftKsGCrNkXU
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
PcS7bkCwHThwoHwa/q947733+jTe+PKUevXnEB0y/F9c6GBr1Ke/1UkF27Iq
Y1epcfqbxqHP1/34/YdGviXbPpQY1lxnvmXsLvW8kAq2sgQj2EJbBFvAQdS2
cUFBQXZ2tgTSRp5sK7NLI9KUNMhKCogqddMuCSObNm0KZ/N1zZo1anN34sSJ
/mOTk5MvuugidW2cBG84HTt2rLoERIL3wvv+s+Tk5Pz666+zZ882L7uqYunR
Rx9tnUzaOemkk8yNbXmVBQsWqGtNN23a1CddytNRo0ZJ6jSnb9++fb9+/Xyu
7KpONZVo4FPSN998Y57t2LVrV/+azQN0H3/88To/sYDU2bUJIW+AKx+LOlbZ
1LlzZwkmPl+T+riCXQhafRTqrF7zS7nmmmvke/SZUpq97777rB+aTLZu3Tp1
0Lh8INaJV69eLRlWspiaUr4CCVzyQtZLIYWQlZX12GOPmVdUtl47q7Kyctiw
YealqBK8wbl///4+BQd71+ZR1vIS1uHmfvZvv/1WDbFmvSVLllxxxRXmK0qX
GDJkSMCfQyPLM9WrP4fokGH+4sy95B9++GGwksLsb3WSjLmvxqio9pw2e99E
45Dnwnpc8sH+bPvQT+HOcu8Ez0vIC8nLVVZWpaWlyXKMOwNCTwRbwFnMA5Iz
MzNTU1M3b95cr1WhSWaU2aURDkIGYsAMtvLTKy4ubtjP1oe0uXz5cmkw2N5M
ecUFXvJL9x+r9of26tXLf1R2dvayZctkKz2cMuTVMzIyJLP4ZJwwyaeRl5fn
c20rZeTIkWrLf8WKFQ1ouV4KCwtXejXyCgZFRUVS7ZYtWwLuILaSaeTlwrki
lsTYTZs2SbPyhTagpKqqKnlT8iH7j5LvLj09Xb47ad//yk4R4b8TU96y9FvJ
8gG/9GiUV6/+HKJD1vmLC19E+pt0scpqz414Zm4yDnneaP5c5B/SrDQuLyEv
JC8nn4B8FwRbaItgCziO/FrVmlc2VletWrV27dqAWyzByMQyi8wos8vf0hQ/
fyDaVLCVrVnJgGFuYDdeQUFB69atJVMcf/zxPqnzzTffVHFj9OjRsSmmviSM
qIM2fS7aA2ep8+hcNJi6ftTeSmPnHuOub41mz0b+Ic3u9J5gq64cJcsuWYLJ
coxgCz0RbAEnUtk2Pz9ftv3WrVu3YsWKDRs21PkfvzKBTCYTyywyozwl1QKx
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
BaZsrLBbsNVlZ2d//fXXLp8xJTVr1uyrr74yu0ZPUrYDAQAArur//u//5De0
kJAQswvxvISEnBV/AH+hbKywYbA9dOjQpEmTWrRoERgY6DLV6tq3b//bb79d
w1scPHhw1qxZEyZMiI2N/fXXX6+tzo8++uhf//qX/JG63JqRkbFkyZKpU6dO
mTLlxx9/dDdNp2wHAgAAXNXzzz9v1WAL+BdlY4V9gu3p06fff//9li1busyw
xYsXHzBgwLBhw8qWLet06jY9Pb3g7+JwOJ599lmnRzH36dNH5tBCVfvJJ59o
+7q8l2T79u21a9c2vkXp0qU35fsoPWU7EAAA4KoItoAilI0Vlg+2aWlpX331
VefOneVvwrx5Vnts1GeffSY/lzZfxtiYmBiZE/U5K1asKPjbjRkzRturUaNG
Q4cObdGihfZXWUDBD7J27Vq92rzB9tdff9VuEC5WrFiPHj1kai5Tpoz21x9/
/NHdMZXtQAAAYEk7d+4cOXJk+/btGzRo0LFjR5lMlyxZ4nLmmjVrxo0b98gj
jzRu3Fh+g3rwwQdff/311NRUbWtSUpLc97bbbpPfdooUKSL/PHr06Gu7pg7A
9VM2Vlg12GZnZ69evXrAgAElS5Z0eYq2SpUq48ePP3TokMvd5UfQZ44aNaqA
b3r48GHtXG2vXr0yMzO1QfmLWjvO+vXrr3oE+QMcO3as8YRv3mA7aNAg7RTz
1q1btRH5KapWrSoH77vvPndHVrYDAQCA9cydO9flPV+9e/fWE6uUkpIycOBA
d1/Vdu/eLef8/PPPebdu3LjRvA8H2JqyscKSwfbf//53pUqVXP6SDAsL69On
z8qVK2Xyzf8gWlSUWrduXcD3lZk04PJZ4MTERH3Q4XBoh+rRo0f+u2/fvr1O
nTpOBTsF23Pnzmknc5944gnj+KeffqrN37Nnj8uDK9uBAADAYo4ePVq0aFH5
tUR+H5s0aZIMuSNHjqxevbr2XeXdd9/VZz711FPaYMuWLeV4bGzs5MmT9a9D
Xbp0kXOSk5PlV7u7775bG/z3ZcbvWv7i2DGxY4f4+9QH4K+UjRWWDLZ6JjVq
0aLFjBkzUlJSCniQJk2aaDv27du3gLu0atVKzm/btq3T+Isvvhhw+a6Q/O+0
/de//qW9Y//+/eX/BLgMtqtWrdLGN2zYYByXnys0NFSOv/zyyy4PrmwHAgAA
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
ffpo48HBwflcqykuJ9xdu3Z9/fXXr7zySt++fWvWrBlg0KlTJ+NkPdg6vZ2R
DJ767o8//rg2+I9//KMg/yIki9H37dGjhz6uB9uIiIh8djeLsrHCesF21apV
Wic0bty4gLtMnDhR2yWfSwX8nbIdCAAAoL7UVLF8+ZVUu3atYO0j39MDbFBQ
0IkTJ7TB8+fP64tSPfzwwy533LlzZ//+/atUqRKQL3fBdsiQIe5Kcjgc+uOR
77//fm2wUqVK2kjz5s3z/0TaZdJOyUUPtk2aNCnIj8XHlI0V1gu269ev1zqh
QoUKBdxl9OjR2i4FuXTZTynbgQAAAIqTGXbduiupdtkyYd3nsiht9erVegh9
6623tME5c+bog3nvSJXxpEuXLvmE2RtvvPGqwfb555/Pp6qyZctq0+666y5t
JCIiQhtp3bp1/p+obt262kwZuvVBPdg+8MADBfzJ+JKyscJ6wfbIkSN6cx4+
fLggu+iLTDmtCmQlynYgAACA4s6dEytWXAm2Zq8jal8Oh6Nq1ara9/bbbrtN
G9Sv+y1XrpzTYrJZWVndunVzSrLh4eG33377oEGD3n77bRlbsrOzy5Qpk3+w
HT58uLuS0tPT9Qcj67fo6mdsmzZtmv8n0m/vNZ7b1YPtgw8+WKifj28oGyus
F2wzMzP1Dmnfvr3Lx3obzZ8/X+/zn617s4SyHQgAAKC+9HSxaVNOqt250+xS
7E2/hTDg8pO6jx8/rj/TOO9Sy1988YUx0j733HO7d+92eoqUDMv6ER566CHj
Jj3YOj1UykjWoB9fv2L5vvvu00ZKly6dz2c5e/asvm/Hjh31cYLttbFesJWG
Dx+uN8ngwYNPnz7tcpps44ULF+qP+5ONly5/Z1mUsh0IAADgFxyOnCV+uLXW
XIcPH9bPkE6dOvXdd9/Vv/bL0Oo0eeDAgfrWd955x+UB9QfP5g2SerCtVauW
DA4udzeeI9OvjpYJVx885H5dqJUrV+rTBg0apI8TbK+NJYPtnj179Ju4JRld
R48e/eWXX27atEm27o4dO5YsWSJ7u2HDhsZ/w7H2suPKdiAAAABQcG3bttW+
vd911136HYUuH9NUu3ZtbavMwu5WS4mOjtbjQPv27Y2bjOvYultP1rjWswwa
2uAbb7yhD/7zn/9090Fat26tT/v666/1cYLttbFksBW5F7oqiMcee8zskr3r
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
1Sp9/HpW2BGX82beK4r79OmjvVGRIkXS3Vxg+sILL+j1/Prrr/p4UlKSy3C6
evXqq4bWX375JTAwUJvz0EMPFfaz4NpkZ4sNG8Szz+Y89CmfPFupkvyPLnbu
NLtcwBIItoAPKBsrCLY2oWwHAuZav369Hgzff//9azjCgQMHXnvttW7dunXq
1GncuHGLFy+WvwnlH/JeUTxx4kT9vWTYdHm0Tz75RJ+zYsUKfdzhcERERGjj
Dz74oMv569atc1dks2bNtDm1a9e+hs+IgsvIEPK/m/yNW758fnm2ZEkxcKBY
s4ZHQgGeRLAFfEDZWEGwtQllOxAwV3Jysh4Mn3322ULtK8PpXXfdFZCHDLMv
vvhi3iuKv/zyS33Ot99+6/KYxqD93nvvGTc1bdpUG69Vq5Y+GBUVpc/fv3+/
u1LHjBmjzQkODs6Q0QuedvGiWLxY9O8vypTJL8+GhYkuXcTXX+fMB+BxBFvA
B5SNFQRbm1C2AwHTlShRQgt98huRcTz/FXY2b94cHh6eN9XmpV9RLH/f6oOT
J092WcyJEyf0Oc8884xxU8+ePbXxoKAgPZy+/vrr+vwdO3a4+4wrV64sSP5F
YaWmivnzhWyQ4sXzy7MREaJHD/HVVznzAXhPbGxsdHT0Ndw/AqDglI0VBFub
ULYDAdPpz1aqXr26cTyfFXaOHj1qXGGncePGH3zwwbZt22bNmiX/7BRs9SuK
z58/rw8OHDjQXT36w6A6dOhgHB8/fry++759+7RB49OSjZcuOzl06JA+bfHi
xYX9EcHJ2bMiJibn3GtYWH55tnRp8c9/iu++4/wsAMA6lI0VBFubULYDAdP1
7t1bS3xOz3TKZ4WdZ555Rt/04IMPZmZm6psyMjJGjBhhDLbGK4pvuukmbbBV
q1bu6rn99tu1OdWqVTOOf/HFF3nDqfHy5tdee83dMY3PnnrjjTcK/LNBLklJ
YsYMERkpQkLyy7PlyokhQ8QPPwgu+gYAWI+ysYJgaxPKdiBgOnfPdHK3wk5q
aqp+UrVKlSryt6LTAbOysoz33hqvKG7Tpo02eOONN7qrx/jw5IuGU33btm3T
jzl16lRt8ODBg/rgfffd5+6YiYmJ+rQhMnShwLKyxKZN4qWXRJMm+YVZ7fnG
8j/1unU5uwAAYFXKxgqCrU0o24GA6dw908ndCjsbNmzQx0eOHOnymDJvBgcH
a3OMVxTL/0/U9/3jjz9c7vvyyy/rc/73v//p42fPntXHBw8erI/ffPPN2mDR
okVTUlJcHtO4qtG9995bsB+Mrf3+u5g7V/TpI8qWvUqerVFDjBkjtmzJWa8W
AADLUzZWEGxtQtkOBEzn7plO7lbYmTlzpj7f6RJlo9atW2tzjFcUT5s2Td93
69atLnc0XnJsXAZXKl++fN5warzyecCAAS6P2a5dO31OxYoVr/Yjsa+dO8Vr
r4m77xZFilwlz9avL6KiWH8WAGA7ysYKgq1NKNuBgOnyeaaTyxV2jGdUd+/e
7e6w0dHR2hzjFcVLlizR942JiXG5o/EJxq+//rpxkx6WK1SooA8mJSWFhobq
u8ydO9fpgMYnJ2vOnTtXsJ+NLaSm5jzfafDgnGuJ8w+zQUGiVSv58xR/P7sL
AADbUTZWEGxtQtkOBFTg7plOLlfYMZ513bJli7tjbt26VZ+mX1F84MABfXDM
mDEudzTeS+t0BvaJJ55wGU71ZXOlwMDAIUOG7NmzJzs7W/6Gl38OyGP79u3X
9oOykoMHxfTpon17UbToVfLsDTeIxx8XX34pzpwxu2gAAMymbKwg2NqEsh0I
qMDdM51crrBjvBTZeE+uE+OKtPoVxTIdh4SEaINOy+bqYmNj9R3vvvtu46Yp
U6a4DKcyw3bu3Nkpvcowbvzr0KFD9T/Lt7i2H5S/u3RJrFwpnntO1K59lTAr
X02binHjhPwftOxss+sGUDAxMTFRUVHx8fFmFwJYmbKxgmBrE8p2IKACd890
crnCzqJFi/TBcTL5uGF81pPxiuKGDRtqg8WLFzeuLqQ5d+5c5cqV9R1vuOEG
49bvvvtO3+R0yfGFCxdcnpzV9OjRQ2bqO++886GHHho1atSOHTuu+WfldxyO
nDthp00TDzwgIiKuEmaLFxddu4qZM8Xx42bXDaDwIiMj5W+8uLg4swsBrEzZ
WEGwtQllOxBQgbtnOrlcYUdmT/2s6x133OHumKdPn9b3NV5R3L9/f328T58+
DsOzdLOzs40XG2vOGK5/3bt3rz4+YcKEvG+6fv36oUOHNmrUqEiR/2/vPuCj
KB7//yf0pgjSpApSpatIVYpAUEBEqhAFAiqKCCiiUqSJgSB8QCx06U0RQaUr
RR8C8qGEIiWABKR/IRTDBwLJ/Gczv8/893N3OS65S2737vV85MEj2Z3dzN4O
k3vf7s5kkmVkPRs0aCCTuDcvjk3FxBhzznboYNxIfM+Ls+XKif79xYYNxiVd
APZFsAUygGVjBcE2SFi2BQJWkNKYTinNsNO0aVO1UObHc+fOudyn3I/e1nxH
8fLly825tXfv3n/99ZdMwZMmTSpTpoxaqEdjDvnfx3hv376tbzDu3LmzmyO6
fv366dOnna8IB7azZ405enr0ECVL3jvMZs9uPGA7aZLgpkUgYBBsgQxg2VhB
sA0Slm2BgBWYx3RyuLvY5Qw7kydP1uVfeOEFl/t89tlndRmHO4qfeuqpkJTJ
VLt3716dbefMmWPetn///h999NGCBQsOMTJvsrg48f33om9fY/6de4ZZ+VW8
uHj1VWOTf/7xd9UB+BrBFsgAlo0VBNsgYdkWCFhBQkJClixZVJDs0KGDeZXL
GXbOnDmTN29eHUW//PJLhx1OmDDBIa6a7yjet29f/vz5XabarFmzLlu2TJZp
166deh5W9tLpeei29J//iI0bxYcfiiefNKbguWeYzZdPtG0rPv+caXqAAEew
BTKAZWMFwTZIWLYFAhZRvnx5FS2rVatmXp7SDDs//PBDaGioXtWlS5e9e/fe
uXNH/vvGG2+YVykOEwPFxcV98MEHuXLl0gXKlCkTGRl5/vz5DDpgu7l7V2zf
LsaMEU2aiBw57h1mc+Y07jQeO1bs3MmwxkCwINgCGcCysYJgGyQs2wIBi2jV
qpUKmDJsmgd0SmmGHWn48OEO6dUhzz722GP6e4c7ipXExMTY2NgdO3YcPnzY
/Euh/POP+PlnMXKkEVHz5Ll3mM2SRdStK4YOFZs2iSB7vBiAgWALZADLxgqC
bZCwbAsELOKdd97RIVSGTb3czQw7MoqOGjUqZ86cLm8qjoiIOHr0qP5x8ODB
GX5MtnThgvjuO3k6jNuMZVC9Z5gNDRVVqxpjGv/wg7h+3d+1B+BXCxculN3y
8ePH/V0RIJBZNlYQbIOEZVsgYBHTpk3TIXTDhg16+T1n2Dl58qTMsJUqVVLj
FWfLlq1t27bfffedjL137tzREwO1a9cuA4/GZmJixNdfi549RfnyHg0AJb9K
lxa9eonFi40gDAAAMoxlYwXBNkhYtgUCFrFp0yYdYL/44gu93PMZdm7evHn2
7Nnb/zsTaoUKFdS2VatWTa+q29Ddu/KvjzHVjoz7hQt7GmaLFBHyDMyYIU6c
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
AKlCsAUA+FHAhykbCexzER8fr+77lWbPnu2wtly5cnJ5v379zAv379+vyu/c
udO8XP6YNWtW/VqFhYU532asvfXWW+Zsu3HjRocCEyZMUKvy5ct348YN744S
AIIXwRYA4EeBHabsJbDPxaRJk3R+VDcbmzVv3lyuatSokXnhokWL1CaxsbF6
YVJSkr6fWWrRooX7MY0TExPbtGljLu9Q4NKlS9mzZ1dro6KivDtKAAheBFsA
gF/IcHHx4sVly5bp9/yzZ8++mCylpCD/DP38888TJ04cP378+vXrZUk3+792
7ZraW0JCgloSExMzd+7cjz/+WMaHxYsXX7hwwWGTU6dOzZ8/f8yYMRMmTPjp
p5/+/vtv93u+ffu2WhIXF7d69Wq55ylTpshvrly54uGLkKojunr1qvmIZDXk
UchfunTpUhmOXG5y+vTpjRs3fv755yNGjPjXv/41b968Q4cOORfz5FzIY1RL
3Fyd1GUcHhdNQ81T9crckzxTxYsXV4fWv39/5wLDhw9XayMjI2V0lUv27t1b
tGhRuaRYsWLmklu3btWvUo4cOc6cOXPP33748OHQ0FC91YEDBxwKvPTSS2pV
kSJF5FspLw4UAIIXwRYA4Bdvv/12SApk5HEoLNOifhTRTC5ct26dy/1XrlxZ
lZk6dapMms8995w5XIQkD347ZMgQVfjy5cudOnVS4+VqWbJk+eCDD5yv7uk9
y4AcGxv75JNPOuw5d+7cAwYMcHji0vsj0uVnJpP111vlzJlThnFdcteuXS+8
8EKePHlcvrxVqlTZtm1bas/FQw89pJa0b98+pYPKnz+/KhMeHp62mqftlbkn
fe1VkjHTuYDM2iVLltS/qFatWvpm42+//dZcsnfv3npXLjOyS61bt5ano2nT
piNHjjx16pTDWvO18nnz5qXtGAEgyBFsAQB+4fDsodmoUaN0MZkr+/Tpk1JJ
SYbKfv36OV/n0rO3DB8+vFq1ailtLnOEDBo61Dh76aWXUtpz9+7d9XVAZ7KY
y2u+aT6i0qVLqwKvvPKKQ5SWxowZo4rJIJ8pUyY3+w9Jnl/GfNerJ+eiSJEi
akm7du1SOqd67psuXbqkoeZpfmXuqXPnzmoP5cuXT6nM3r179ZlVcuTIMXHi
RHOZu3fvPvjgg7rAnj17PKxAfHy83DaltYmJiWoEZqljx44e7hMAYEawBQD4
xaRJk2rVqqUjj1SqVKlaycwXrVq3bm3OGjKYdE6mRvvRunXr5rB/h5CiFC1a
tH79+jpEhCRfMSxRooT6PmvWrDIC16xZ0yEYOvxdc95zvnz5OnXqNHTo0Fat
WpkvR1aqVEnfCO39EZlfKweywuo64L59+xwq1rZt2969e8ukKV9Y86rcuXPr
a8qenAufBFs3NffmlXFPJko9L22vXr3clLx169bixYvfeeedHj16TJ48OSYm
xqHA6dOnza+tw9DK3mjZsqXarXwN3URgAEBKCLYAAD9yP2DRmjVr9FqZRmfO
nGle+8033+i7bUNDQ7dv325e6xA/ZZ7du3evWiUDXaNGjRwSVosWLWRsUQXk
37snnnhCr+rbt6+bPdeoUUNvKP3++++FCxfWa8ePH++rI3KIh9WrV584ceLs
2bM7duwo058q07NnT13gjTfecHjWVf6BLlu2rC7gMFSR+3Phw2DrsubevDLu
mZ+K9fJG3x07duhdNW/e3JtdOdAT6Uq//vqrD/cMAEGCYAsA8CM3YSohIaFi
xYo6yzjPkyLt2bMnS5Ysqkzt2rXVsD+KOX4WK1bs/Pnz5g0PHDhgjlrVqlVz
uPp25swZPVZty5YtzavMe5aRzXkwpejoaH3Dbf78+fUFOC+PyBwPS5Qoce3a
NYdt5Z/pHDly6G1dXk/8+eef9U5eeeUV86qMCbYua+7lK+Pehx9+qH/7X3/9
5eFWLq1YsSKlV89L5sisH/0GAHiOYAsA8CM3YcocIl599dWU9vDaa6/pYrt2
7dLLzfFzzZo1zhuaH491WeDxxx9XaytVqmRebt6zw4VFrX379rrMli1bfHJE
5nj43XffOW/466+/1q1bt1ChQrLAnDlzXO789u3b+kbrF1980bwqY4Kty5p7
+cq4p89Frly5PNwkJVOnTtUV8HzkKE/IaK8/DOExWwBIA4ItAMCP3ISpyMhI
vWrt2rUp7eGnn37SxRYvXqyX6/iZLVs2l/MH1a5dW294/fp15wJhYWFqbalS
pczL9Z6LFi16584dl7WSYVbvfPDgwT45InM8PHv2bEqbS/KPdUrPacbGxupH
jFu3bm1elTHB1mXNvXxl3KtXr57apGTJkh5ukpL58+frCrz++ute7s2BHpaq
QYMGvt0zAAQDgi0AwI/chKmIiAi9qlevXgNTEB4erouZh1PW8TOlgXAbN26s
CshA4bJAmzZt3AdbN09Zyvima9W1a1efHJGOh7lz577Hy/pf8q/23r17ly1b
Nnr0aLnbRx55JMSkVatW5sIZEGxTqrmXr4x7+rfXrFnTw01SsnHjRl0BN69D
2uibseVp8u2eASAYEGwBAH7kJkw99dRTIan08ssv6811/KxVq5bLX62DrcOd
xtoLL7ygCqQUbN3cNJuUlKSHR27atKlPjkgHtOrVq7t/Vffs2dOtWzc3cxgp
GR9sU6q5l6+Me/q542bNmnm4SUrMj2bXq1fPy705ePrpp9Wevb9lGgCCEMEW
AOBHbsKUjJOpDTs6QgpT/GzUqJHLX+19sH3nnXfcHFr+/PlVsTp16vjkiHQ8
fPbZZ1P6pfIPsb7Q7FKBAgX09xkfbFOquZevjBs3b97Um7Rt29aTTdy4du2a
fkI5e/bscueebzh//nyZi92Uef755/WemfEHAFKLYAsA8CM3Yco87+onnlmy
ZIneXMdPGWBd/mrvg22fPn1SOq5bt27psYD0o6xeHpGOh88995zLXyrTkMxu
DgEwZ86cTzzxRERExKRJk+Qf6MTERD2pa9qCrZt4qMeRTinYplRzL18Z9/QV
25Q+4kiV+vXr66q6eRzYwcyZM9UmhQoVev/9912W0VNQ5cmTx/t6AkCwIdgC
APzITZjq2rWrXiX/AKV2zxkQbB0GXzKLiYnRldd3LHt5RPeMh+ahjaR+/fpF
R0c7XPtLSkrS1xwdpjHyMNg6bKXJ9wB689QGWy9fGff0b5cnzvu9jRs3Tlc1
PDzcw610Y5OGDRvmskyVKlVUgXLlynlfTwAINgRbAIAfuQlTI0eO1KvcXBq7
cuWKDHSrV68+ePBgfHy8Xp4BwbZs2bIpzaa6dOlSXfmJEyf65IjuGQ979Oih
9z958mSXZY4fP67LOOzHfbDVsyOldN1z7969aQ62Xr4y7ulRkQsWLOjhJm4c
PnxYVzU0NPSPP/645ya7d+/Wl+8zZcp06tQpl8X0RwcNGzb0vp4AEGwItgAA
P9q0aZOOCQ4znC5ZskSveuqpp1Law9ChQ3Ux80OvGRBsneus1axZU5eRWdIn
R3TPeFiuXDkduFxOYCSNGjVK79xhMCU350KSKV6tKlGiRGJiovOeR4wYkeZg
6+Ur456ex1aGypSmZ0qVTp066WrUqFHj0qVLbgpfvHjR/ASxw+3fWlJSUtas
WVWZzp07e19JAAg2BFsAgB9t375dv+efPXu2edXNmzfNiWD69OnOmx88ePD+
++/Xae7w4cN6VcYE22rVqjmPIGS+Jfixxx7z1RHdMx7qe1mlc+fOORdYsGCB
vg/ZOUK6ORdSw4YN9Vp9DVpbtWpV5syZdYHUBlsvXxn3hgwZovcsj9HDrdw4
ffp07ty59T5l5E+pMjExMXXq1NEl5Yu/adMmlyXl0eliI0aM8L6SABBsCLYA
AD/av3+/fj9fuXLlX375ZdeuXRcvXlRrly9frtfKLNO/f3/5h0Zvu3HjxmLF
iukCLVq0MO85Y4JtSPLsqCdPnlSrkpKSxo0bZw6P8ojM23pzRPeMh6+88ore
VpYxX7S9cePGrFmzsmTJYq65w+Q77s+FDLN6ba5cuZYtW6b2f+bMmRkzZsgl
5j2nNth6+cq499tvv+kNo6KiPN/QjU8//dR8vPKF7dSpk3zFLl++LNfGxcVt
27ZtwIABesonZdKkSSnt8KuvvtLFPLm9GQDggGALAPAj+WfFfKVP6dmzpy7Q
vHlz86rcuXPXrVtXRk6ZvMzLixcvHhsba95zhgVbSR6CjLfNmjXTU/wovXr1
ct5tmo/onvFw3bp1+lnOkORHSrt37/7WW289+eSTDpFWue+++27fvu3hubhy
5YpDepWpTVfJQRqCrTevjHt3797V5yWlka/SYNy4ceZXW9NDQzvo16+fm729
9NJLqljhwoVTenAbAOAGwRYA4F/dunVziAAyzui18fHxMhG4TBCazAKHDh1y
2G0GBFsZYeSvTqlWffv2dfksapqPyJN4OGDAADe7lV555ZUxY8boH1esWGHe
3P25WLBggUO2Nfvkk09effVV9X3agm2aX5l76ty5s9o8b968Lk9K2sydO1ff
He1Gvnz5oqKi3P9efT26e/fuvqoeAAQVgi0AwL/u3LkTERFRqFAhHQScR6/d
unVrrVq1HG7slAoUKBAZGXnjxg3n3VavXl2Vad68ucvfGxYWpgo43JGrdejQ
QRVwmH7FHJlPnTrVtGlTPeyPUqdOHYfA6CwNR1S+fHlVpk2bNm72vGTJkocf
fthht7lz55avw5YtW2QBGQz18tdff9287T3PxcGDB+vVq2e+/quuVn/99ddy
bZ8+fVymMw9rnuZX5p4WLVqk97Nx48Y07CElsj5ffvml80V8RUbaDz74IC4u
zv1O5Jsxvck9Ww4AwCWCLQDAImRI/O23344fP26+P9ZMxq4///xz2bJl06ZN
W7t27dGjRxMSEjK4ksLVteCbN29u3rz5q6+++uGHH2StPN9VOh2R3O2RI0dW
r149depUGZSOHTuW2rtb3Z8L+ed+27Zt06dPl3W+du2a9xV25ttXRm5bokQJ
ddY6derkw3pqly5d2r1798qVK2XOnT17tnz19OPJ99SzZ09Vt7JlyzrMOwwA
8BDBFgCAVLnnTc6woMmTJ6uzli1bNvcT9GSwq1ev6hu8Z86c6e/qAIBdEWwB
AEgVgq0dxcfHFyxYUJ24Tz/91N/V+f999tlnqlYlSpTwyx0IABAYCLYAAKQK
wdamIiMj1YkrXbp0Sre7ZzBZjTJlyqhaTZkyxd/VAQAbI9gCAJAqBFubunXr
VpUqVdS5mzhxor+rY9CzAz/xxBM8XQsA3iDYAgCQKgRb+9q1a5ca0jl//vz3
HKw4vV25ckVNsJstW7YDBw74tzIAYHcEWwAAUoVga2vDhw9Xp2/gwIH+rck7
77yjajJmzBj/1gQAAgDBFgCAVPn7778PJzt37py/64JUS0hI+PDDDwcMGDB5
8mT/1iQqKkpWY/DgwXfu3PFvTQAgABBsAQAAAAC2RrAFAAAAANgawRYAAAAA
YGsEWwAAAACArRFsAQAAAAC2RrAFAAAAANgawRYAAAAAYGsEWwAAAACArRFs
AQAAAAC2RrAFAAAAANgawRYAAAAAYGsEWwAAAACArRFsAQAAAAC2RrAFAAAA
ANgawRYAAAAAYGsEWwAAAACArRFsAQAAAAC2RrAFAAAAANgawRYAAAAAYGsE
WwAAAACArRFsAQAAAAC2RrAFAAAAANgawRYAAAAAYGsEWwAAAACArRFsAQAA
AAC2RrAFAAAAANgawRYAAAAAYGsEWwAAAACArRFsAQAAAAC2RrAFAAAAANga
wRYAAAAAYGsEWwAAAACArRFsAQAAAAC2RrAFAAAAANgawRYAAAAAYGsEWwAA
AACArRFsAQAAAAC2RrAFAAAAANgawRYAAAAAYGsEWwAAAACArRFsAQAAAAC2
RrAFAAAAANgawRYAAAAAYGsEWwAAAACArRFsAQAAAAC2RrAFAAAAANgawRYA
AAAAYGsEWwAAAACArRFsAQAAAAC2RrAFAAAAANgawRYAAAAAYGsEWwAAAACA
rRFsAQAAAAC2RrAFAAAAANgawRYAAAAAYGsEWwAAAACArRFsAQAAAAC2RrAF
AAAAANgawRYAAAAAYGsEWwAAAACArRFsAQAAAAC2RrAFAAAAANgawRYAAAAA
YGsEWwAAAACArRFsAQAAAAC2RrAFAAAAANhaOgXbfwMAAAAAkFHSI9gCAAAA
AJCRfBhsAQAAAACwIIItAAAAAMDWCLYAAAAAAFtTwfb69evXrl27efOmv6sD
AAAAAEAqyCQr86xMtbdu3YqLi4uPj/d3jQAAAAAASAWZZGWelalWCHHlyhWZ
cMm2AAAAAAC7kBlWJlmZZ5OSkmSwvX37tgy5PGkLAAAAALALmWFlkpV5VvyX
uoArl/OwLQAAAADAymSAValWfiP+l1qu7kkm3gIAAAAArEZmVXUHsroyK1xR
9yRL165d+wcAAAAAACuRWVWFVvMdyC7dunVL5t//AwAAAADAStTMPu4jLQAA
AAAAAAAAAAAgI/1/fxG7cA==
     "], {{0, 502.}, {633.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{633.5, 502.},
   PlotRange->{{0, 633.5}, {0, 502.}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`pres = 0.08, $CellContext`temp = 
     375, $CellContext`temp = 375, $CellContext`fTfP = 
     1, $CellContext`highpressure = True}},
 CellID->129445914,ExpressionUUID->"03981ebf-0f30-40c4-a5d9-7a86907c961a"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3Qd8FGX+x/ENRSCCAgIiKggKKAgWzoJYwEKxcIeCBTi8A+Uspx6cDdA/
IngCCmLBeuoJByeKqNj1VJoUQQQB6SUCIRDTCUlIYP+/7CNzw87uZjZl9zfh
837tK6/sM888M7P77Ox8d1rzgfddP7iKz+f7e035c/2fH+oydOifh91QV570
uffvd/7l3ttv63Hv/bf/5fahFw6sKoWp8ienms9X/L/foaCgICcn51cAAAAA
ADSRrCqJ1RljgyJtRkBWVtZeAAAAAAA0kaxqQmu4eJubmytDs7OzcwPyAAAA
AADQxMRVya2SXuWfkKlW8u++ffviPacAAAAAAIQluVXSa1C2NUcgk2oBAAAA
AJ5gZVvrmOT09HRzBHK8Zw0AAAAAAFfMMcmSZyXV5ufnmx248Z4pAAAAAACi
YE6qlVQrCTcrK4uDkAEAAAAA3iJJVvKspNpff/1179698Z4dAAAAAACiJnnW
3OKWYAsAAAAA8CKCLQAAAADA0wi2AAAAAABPI9gCAAAAADyNYAsAAAAA8DSC
LQAAAADA0wi2AAAAAABPI9gCAAAAADyNYAsAAAAA8DSCLQAAAAAglrYEfB/w
5eFMoangvkGCLQAAAAAglgi2AAAAAACPWhPwsTumsptmCbYAAAAAgNgg2AIA
AAAAPMocXexMr5mHc1Zwc1gywRYAAAAAUNEItgAAAAAATzNXhSpFsDUjRm6c
YAsAAAAAqGgEWwAAAACAp5m7+YQMs+GYymbEyI0TbAEAAAAAFY1gCwAAAADw
NIItAAAAAMDTCLYAAAAAAE8j2AIAAAAAPI2rIgMAAAAAPI1gCwAAAADwtC0B
pQi2ZsTIjRNsAQAAAAAVjWALAAAAAKgE1gQ402tIprKbZgm2AAAAAIDYINgC
AAAAACoBc3SxuSrUl4czhW4OP7Yj2AIAAAAAYolgCwAAAACAHcEWAAAAAOBp
BFsAAAAAgKcRbAEAAAAAnkawBQAAAAB4GsEWAAAAAOBpBFsAAGJsX0Bubm5O
Tk5mZmZaWlpKSsrOnTu3b9+edMi2bdu2AkDFS7KRtVBycrKskWS9JGsnWUfJ
msqssuK94gRKQLAFACCWzCaifO1mZWWlpqbKNuSuXbtkAzI/P7+oqMgPAGVw
8GCZHgUF+yXJyhpJ1kuydpJ1lKypZH1FtoV+BFsAAGLG7KiV71zZbkxJSZHt
Rsmz8d4QBuB59nB6IPAoOhDdw4xlb0fWTmbvrayvZK1ldt3GeyUKhEWwBYB9
EcV77lB5WPtqZStRNhf37NkT721hAJVBUJ7dX+QvKPLnF/72yIv4sKrJKDJi
UMIVsqaS9ZXJtnwtQjOCLYAjlj295oZBwkU5Mj0tKysrJSWFVAugXFip1uTZ
ffv9ewv82fn+rHx/Zp4/I8+fvq/4keZ4mHKpINWksowiI8roJuEGZVtZa8m6
i522XifvXqkf+hFsARyBgvKsrACzA7JsTIk5+MqecOM97/Aq62pRqampO3fu
jPe2MIDK4OChvbQm0q7c5R/5jf+qt/ztXvCf/mx0Dxml61vFo0sjJt6avbcm
28paS9Zd1rWk4r1CRdSsfJp76LE3t+SHVdkT8ZZgC+BIY0Vak2czMzPly3r3
7t27du0yl6UV8o88lUIZJBWshEu2RamZg5AzMjKkgxUUFMR7cxiA55k9qoWB
VJuR5x/+pf+MZ/2tJ5X1IY08+IX/19ziZqXxQxeVKvjll19kDWYOSI73ChVR
sEdayarZe/OyAo/MnOJHRpiHGWpqyigm5CqPtwRbAEcUe6RNT0+X6Lpjx47k
5GRZDUpJfn7+gQD5R55KoQySClJNKtvjbbyXAx5jfhLJyckxZ6vFe3MYgOdZ
RyBL/Ezf5+/3TjlEWvuj7zvFzRbYjkk2VwaQ9Ri/8XqIFWlzApFWEmtadl5q
Vt7uzLyUjLyUzHx57MrIT7Y95KkplwpSTSrLKDKijJ5ji7cKEWwBHDnsF6SV
rGpuZCCFkTcepIK5J4uMwpUhUTqm72VnZ0tHSk9Pj812L4BKzDqvdm+B/+Ev
/a0mlf9j2JfFjVvn28q6S9Zgsh7jS9ArrFRrIu2mPfmPf13YY8rBqI5Ul8pX
Tz34j28LZXQTb9VmW4ItgCOEdYZjRkaGuX+BPHW/CSGVzc1ZZHROMkK0rOOQ
t23bJk8rblsXwBHiYODU2vxC/w87/adP8rd8pvwf0qw0LpMoChyQLOsuWYNx
NLKHWKk2PTtvxor9HV4s0078c1/0SyPSlJVttSHYAjgSWKk2LS3NXAGjdBsS
5rI/0gjZFlGxgu2WLVsKCwvLd/sWwJHGOrt2b4F/+Ff+0ya6elw31b8jq/gC
yA9+4XYUaVwmYc603b+/UNZgBFuvMDtVc3KL99VKIG1dHjvxpRFpShqUZhXu
tCXYAqj0rFSbnp6+Y8cOWeOVZXNCRpdGpCmyLdwzJ9impaVt3LixvLZsARyx
rLNrJaVe9oa/xcSSH9dOLa5seeALV2NJ4zKWdaatrMHMT7t89+m3L3CpqKy9
eetT8s+eXG778aWpdSn5WYHLSWnrBQRbAJWbucaFOa+2LPtq7cx+W+5WD/es
YLt+/fqy90AARzhzHHJeYfHtaCVrNJ9QwuOaKYelWuOBz0seURqXSeQdOhpZ
1mAEW0+wdtemZeeN+rrwtGf85fgY+d8iaVbhTluCrVekpKT84x//cFn5s88+
++KLLyp0fgCvsC7aIx+iXbt2lddGhTQlDXINDbhkBdt169a572YZGRmffvrp
6NGjH3rooa+//rq8em+M/fTTT7fffvvkyZPjPSNA5WGOQ87d79+913/K0yU8
rj481dr/l0Elji6TkAmZo5FlDUaw9QRzdm3W3rw9mXlX/evgqRP9pXj8fpr/
0/X+VSn+EV8dVn7lmwel2Sx9Z9qWb7CVRr788svly5eXvSlt1qxZI4smL1Rc
pi5bBc2aNRs1apR5OnLkSJ/P995771kVZPVy4403SmHPnj3lqax2GjRoMHbs
2LjMLaCHdY8V+SLesWOH/FNeGxXSlDRofb/zFe91b7zxhqxCR4wYYZ4uWLDg
9DDku8DUueSSS9oc7uabbw7XvumH8iXiPthu3bpV1vy+Q+69997y6r0xdu65
55pF+Pbbb+M9L0AlYQ+2zZ6K9Ojx1mFJ9u+fHVYi/8jTyC0EBVtZjxFs9TPH
IWfk5CVn5LeaVPKu+ZAPibSW6/592H58aVYa13Y0cvkG219++UW+ubp161b2
prQZPHiwLNr8+fNjP+k9e/a0bt1aXlVrHfJ///d/MjMzZ8606txzzz1ScvHF
F2dkZJgSib0JCQkzZsyI/QwDeth31+7evbt8tyukQXbaxt3H7nwSEK6Rn3/+
uU6dOrIWHT58uCmZM2fOCYerX7++SWfffPONVEhKSpL/a9asaa/To0ePcJMw
wTY1NVWm5bKDySrdTLFhw4b9+/d/++23y7cDx0yHDh3MgsirahW++eabDz/8
8MSJE+M4Y4B3WcF2V7b/5KfCPto+d1iqHfrZb+XdD8+28jRCIzIJK9jKGkzW
Yy6DrWyFDh06dOfOnSGHylpU1mxTpkwpsR2XDcLOCrbb0/JL3Ckf8jF23mFd
rt+7hw2VZgm23hWvYCvrjZ49e5588sn2T3FQsH3iiSfkafv27WUb2z6ufPZr
1679448/xnSOAU2sS9Fu375d/inf7QppUJrl+pDxVfZgK1to559/vkleVrAN
Iu9v7969pcLjjz9uSj788EN5KtHM5XxGG2wLCwslNcskLr300qKiovLtujG2
atWqO+6448UXX7QXXnnllbJ0p512WrzmCvA065LIydn+k8aHfay2/aA75NPD
BnX712HZ9sJXwjYik7AujBxVsL3tttvkYy5rgJBDX3/9dRnapk0bl2vREhuE
nXWC7S9p+U2f8kf7uPhVf6btxnRJmcEVpFnrNFs9yjHYjho1Sr6hpL8lJiae
ccYZN910kzXozTffvPbaa+vUqXPWWWf9/e9/t2e0v/71r1J54cKFV1111dFH
H928efNXX31VPi8jRoxo2rSpNNWpUyfz87i9/urVq2+88cb69es3adJk4MCB
zuxW4hSlzS5dutSqVeuxxx4z5cnJyYMGDZJFqFGjRrt27YYMGSKzkRc4uVXq
H3vssbJoMktmXCmfO3eu/P/yyy9bLaelpUnJ3XffbZ7K506eSup86KGHZLmq
V6/uZvaCfPDBBzLd8ePH2wvtwdasFk499dSkpKSgcdPT06tUqdK1a9dwjecF
trVkAbdt27blkM1AZbEpYMOGDStXrnS/mywq0qw0LpMw04r3Elcq1kpJVlCy
mgq3EeXMsFmHOAeFbEFW0bIWveuuuyIE24kTJ8pQ+w5Z+e6QklmzZkVYwQat
bKMKtmvXrjVZu7Lu0yTYAmVhgm1OQfHte5qMC/uw/O2TEEOvevN/2Vb+D9eI
TCKnAoLtnj17Hn300aiuCUOwdc8KtttS808e74/2MX/bYf3tlhnBFaTZyh1s
X3nlFfnSl/7WqFGjXr16yaaCVS6FEuK6devWsmVL+f+SSy7Jzs42Q3v27Ckl
J510kmTJ7t27H3XUUfJUsljNmjWl/oUXXihPjznmmO3bt9vrS46rXbu2VJB/
TN7csWOHfU5KnOLxxx9ft27dSy+9VHK0eR1atWol5WeeeaZEznr16sn/JpvL
iyOLY050kvry/5IlS6T8k08+sf96L3bv3i0l1113nXn6/fffm1cjISGhbdu2
kqPdzF4Qc+Zs0I4GK9jOnj27WrVqku7XrVsXcnTZZqhataoz81pkc3HL4eK9
MQuUG0maGzdulE/H8uXLt27dWhGbFtKsNC6TkAkRbMtX0KpJVrAhV2JlDLay
TSWr6MGDB5tfEUMGW3mXZY0tXzryLluFf/jDH6T+gAEDWrRoId8mshr/8MMP
w61p86IPtitXrjTB9t133y2XviozIJP+8ccf5R839eUFXLZsmZvrrR04cEC+
guUrTzZT3c+PtmAr38Lymq9YsSIzM9NN/f379//www9r1qxxlks7sjY4KBmg
/MiXtbwdMpOlbkHGlRY2bNggc1hi5XBLJ++1bFHIVtC2bdtKPJDA/UtR9qUL
R3rm4sWLne9ptG+3QvZge8LYsA/Js98lFf8NV+HKN4orvLo0UiMVFGxLgWDr
ngm2v2blbU3NP3GcP6rHg58f1tkmLw5RR5qVxitxsM0LdSiybO9Vr15dcqts
GJiSW2+9Veo8+eST5qmJmf379zdPp02bJk9lM+Orr74yJX379rVfKMnUlyRr
7eX861//KiV//OMfo5qiZHBZm1nzOX/+/HPOOefee+81T+ULvWHDhjVq1JB/
TInzUGSXwVYa+fTTT92/IEFkNmSofIPYC02wHTZsmDQu/3z99dchxxW///3v
pYK8quEq2PfVEmxRyZjdtWvXro12k9s9aVYal0mYnbbxXuJKJWjVFLQatNhz
66cB7oOtfI+ceOKJkq3S0tIiBNtHHnlEBt1xxx32QuuyTu3atWvTpo35334M
TxD3wXbSpElVq1b12VQNeP7552Wo9DfzVCJ50IgLFiwwg4Ku0STfTRLA5avH
tFalSpUbbrhB4snQoUOlsnzL2CtLGBk5cqR8yVpTb9y4ce/evUPe/VmijXwJ
SgWrsozYr1+/oI+bfFvJhI455hjztEWLFvYFNPPctm1bf+CgZfP0oYceck7u
jTfeMEPl+zfcq2e18OijjzqHvvDCC2bof//7X6tw6dKlXbt2tb/gXbp0kTQU
NK5sbMiI0mHkpbj66quPPvpos7xWBfkuPv/88833spAKV111VdBti6+99lpp
pFOnTs55k3mQQTJpe2Fubu6dd94p2wymTdk6OuWUUyZMmFBiVJS3wCzpK6+8
IvGtc+fO1tLVqVPnwQcfDIq3JS5dYWHhqFGjzDaJcdxxx40YMULKnVN381K4
XLqoOrx9qV999VWzw0JIz7HGcvl262cPtsc/WbGPMgZb6Q/XX3+9dJ4mTZr0
6dNHwoIZKt+bZ5xxhmzTWvWlS/zjH/+QD0jNmjVlvTplyhQZKnXWr1/vpkGn
Eo/zDHcYZ15JR1f+85//7NixY2Ji4sknnyxrVNkAsAbJ2lXCi3xHyNAOHTpM
njzZGlTi0Z6lnh8nK9hu2ZMf4VcL5+P0SYcdhLwto7jEWU2aTT3ygq28C1Ji
f0+Tk5OlRAKXeWpiptkHKiRs+gK7TYNakBWdvf7UqVOtCtnZ2fJ12bJly6im
+N1330Velj/96U9STb4OzNNSB9uga4mUOHt2smFmvjuCyk2wtUg/D7cUspEm
FZ566qlwFQi2qMRMsJVv4UWLFsnXZUVsWkiz0rhMgmBb7mIQbGXFK9vAZsUe
LtjKxpvJsD/88INVmJGRIXFYtpHk3TclsqEidY499tigax3Y23EZbJ9++mlf
KM8884wMlSmap85wJ5tMZpA9tcmkL7jgAmdrsjF20003mXm29+dzzjkn5NQl
I8hbEDRF883oJIFINh2tavfff78vcKEt89QKMnbyJW6Gtm7dWp42b97c+cp0
795dBtWtW1cWKsILaFqQv85Bl112mQxq0KCBFevWrl0rDTrnRwqD3qm//OUv
Ul6vXr0rrrjCvqRm6LPPPmul9SpVqlgVateubb9Pk2wgSeF5553nnDfZjvUF
LgJplcjmQfv27a2m7M1ec801EV4Bf+B+ZKbmXXfdJfPgXEB579wvnbjjjjtC
vtdB7bh/KVwuXVQd3lrqXr162X88sYKt+7dbP3uwbfSPin2UMdieHCCfXwl6
8lRWMmbcVatWyVOpY9WXvOYL/BIinxTzg+Epp5wif3/66Sc3DTqVeJxnyMM4
80o6uvK5554zsyHzI5/chIQEaSE9PT0vEGSk3BfYOB8wYMCJJ57os51RWGJ2
KN38hPnSKU6dkj0378lv/KTf/mj9jP/G/xT/DSo3j9lrD+tpUjNktc1HZLC9
9957zUrjbBtf4BqPpoJ5B+3HmMnTzp07W0/fffddKZEvenv91atX26fbsWNH
6VRpaWmlm6Kxbt26ESNGdO3atUOHDuZkYWHduqjUwfaee+6xT6XE2bOTTTsZ
JEsXVG4F29mzZ59++unyT7g7+/zrX//yBfbthhyax6HIqNSsYLtw4cIKuvyO
NCuNE2wrQlSHImeVxBlsJ0+e7LPd3ydcsP3ss8+k/KKLLgq3FjUkEp5wwglS
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
jvbt1s8ebOuNCfv403v+fy33/2Fa2ApdXi+u8LdPIjVSjldFjhBszQm2H330
kb0F84tWULAN16BTicd5hgwFbo6ulLWTbOGb3zN9gV/MrCOTZX316quvyodd
PlBm6PPPP28GlS7YRnW0p8UKtlv25Ncd7bc/vt1yWF/6Mbm48A//Pqzwme/8
QWMFPY6Ei0flBX7c9gV+9XrxxRdNidkZKu/4gw8+KJ22UaNGPtsuy9IF22OO
Oebss89+4IEHevfuLV920nPsv95EO8W8Q+n4lFNOGTZs2JAhQ2TlZq7mZwVb
cxPDJk2aSDdes2aNKTSnb5955pnyFX/TTTeZUSIH2xJnL8h9993ns11cy3AG
W1mc5s2bS+GoUaPsNS+66CJ5rSKfXQ5UVlawla+bnTt3VsSmhTQrjRNs46hC
g+2XX34phbfccouzvjlEWVa8I0eOHDdunFmTT5o0KVz7cQm25ozFcHs5zSF8
QcFWXodLLrnEyiZBrGBrruMkccDNskQbbOWFMudpWkcjmyPxEhIStmzZ4qzv
JJ9Hc7StdXCpObSpatWq1qrghx9+CLmMQawbHpnoF3QRaYv0LusiwIZsSMjm
hJWsjaiCrfSZq666yt6muWyybDCUeAiKFfHGjBnjHCpbBWaozGGJSydbNSW+
SjJ6tC+Fy6UrXbB1Hqcd7dutnz3YHjs67CPj0IXW7vskxNDL/vm/CvJ/uEZ2
xiTYmhuj2I+E3Lp1q9nNVMZgG+E4z5ChIKqjK2VdbQ4Rsa4QZZGvIUm40rFl
KXJzc/NcHO1Z9vmx2IPtsY/77Y9m44vDrN2bPxxWsjW9uE7QWEGPIyTYTp8+
3VxAQ9bbpkTeSklnJnb5Amdw2/d7mlsB2n/ilqfSQ6ynEt98toOEzTv+2Wef
STD0Bb7mLrjggqCfd6KdojVKrVq1fIGDB6TLmWOPrbyclpYm0dV811sfEEm4
7dq1M1Np3Ljx1KlTfbYj3pctWyZPrVsIuZy9IGYP7xNPPGEvlO0on+0WSFZN
yfgy87KqNyXyuZBP06233hqucaByk69d+bjJN0tycrLL7eFoSbPSuExCJkSw
jYvyCrazZ8/22a4lZbz00ku+w39dt8j35h133GFdeVWCbeTzcOMSbP/85z/7
AnedC3nrUhNO7cHWfsl9GUsS8e9+9zuTQA0r2F577bXmi8/NskQbbMWAAQN8
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
262fZMwDB/0FRcWnzQ6a5T/qUVePC1/6Ldve9aHbUQa+VzwJmZBMbv/+wo0b
N8p6rOLucCctS1f54IMPvv76a+f1WqN1JB/nmRfIttl7837Nyvt+W/Edf6o9
Uj4PaUoalGalcW0vLcEWwJHAOiB5+/bta9as2bx5c+m2JWREGV0a4SBkRMUK
ttKFsrOzy2XLVtqUbTZpMNzeTJniwgDpsc6hZn9oly5dnIOSk5OXL18uMcHN
bMjUk5KSJD3t2LEjqvk35NVIS0sLuraVYe5t5wvceq8ULUclMzNzZUAZz8TP
ysqSud2yZUvIHcR2Ukcm5+aKWBL0ZPtcmpU31OVsOPddyoSkt0iCDvlSuyTv
9bZt2+S9lvlxXpMqiMuXwv3Sldjh3Suvtzu+5HXdX1R8I57/bvIf9X/+ao+W
/0OalcZlEjIhmZy8BfJmVWiwRTkyRyNnBI5GnjR/v7yhVR8p60MakaakwQx9
xyHnEWwBHDFkLWc2oWUj/6effvr555/lf/ebEFJZRpERZXT5X5pitQn3TLCV
zWnJgC4DY9llZGTUrl1b0s0JJ5wQlDqfeeYZE3zGjRsXm5mJloRrc9Ro0FWD
4EaJB+WiEjDXj9q3379nr7/fO+WQWZwPaXZP4ARbc+UoWXfJGkzWYwRbr8g9
tNN2W2r+U3MLaz/mrzKi9A8Z/am5+6Ups7s2V18XINgCOHKYbJueni7bzGvX
rl2xYsX69etL/MVeKkg1qSyjyIjylFSLaFnnekviKJcTvV0aMmSICTh169bt
3r378OHDhw4dam6Z6gucU1nqoxcqzvvvvz969Gjrmlfz58+P9xx5D8H2SGCO
Rt5f5M/KL75LS8eXypRZnI8LXixuVhrfHzgOWSYn6y7pWlxcwkPMTtusvXl7
Mouz7dxNBQNmFDUff7D6I/6E4W4ftf7P3/Lpg39+t2j+5gJpJDWruEGFu2vz
CLYAjjCyrjPHJO/evVu+o9esWbN06dKVK1du3LgxJSVFEmtRgPwjT6VQBkkF
qSaVZRRzBDIrTJSCdSvb9evXB91QteLIFO+88077laMs7du337ZtW2xmIyr2
808feOCBeM+OJxFsjxDWJaTS9/k3/uq/6W1/FQksI8r6kEZ6T/evSy1u1rps
lKzE1q1b5/4mtlDCyra/ZuXtTM/fvCd/1c78ZUn5S7bmL9xSsGDzb4/5todV
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
AEAJhXmBYAsnhR0VAAAAgBIK8wLBFk4KOyoAAAAAJRTmBYKtV6Snp8+ePXvC
hAmjRo2aPn362rVr3Y+7f/9+GXf8+PHjxo2bN2+evE2R6yvsqAAAAACUUJgX
CLaeMGnSpHr16vlsEhISBg4cKGm3xHGXLl3asmVL+7h169ZdsGBBhFEUdlQA
AAAASijMCwRb/V577TUTSBs0aDBgwIC77rqrbdu2pqR79+6Rx922bVvDhg2l
ZmJiYp8+ffr27WsCsjydN29euLEUdlQAAAAASijMCwTbssjJydmwYcOPP/64
cuXKPXv2HDx4sCImISFUomiHDh1SU1NNYVFR0Z133mmy7cyZMyOMPnDgQKlT
u3btxYsXm5JNmzY1a9ZMCjt37hxuLIUdFQAAAIASCvMCwTYqO3fufP3113v3
7t2yZUtJi77DVa9evWnTppdddtkTTzyxYsWKcpni559/bhoPelULCgrq1q0r
5UOHDg03blZWlsyS1Bk0aJC9XBbBtLlmzZqQIyrsqAAAAACUUJgXCLZu7Nmz
57HHHjv77LMTEhJ8rp100kl/+ctfVq5cWZZJT506tV27do0bN96/f3/QoDZt
2shUJGWHG/err74yczJ37lx7eWZmZo0aNaRcFirkiAo7KgAAAAAlFOYFgm1k
v/zyy7333msOBi616667btGiReU7YykpKWZv7KhRo8LVGTt2rJmBPMdlkCUs
S3mfPn1CjqiwowIAAABQQmFeINiGk56eLu+XCY9BqlSp0qZNmyuvvPKWW265
7777Hn/88eHDh0vl66+//tJLL23cuHHIeHv55ZeXce+tnTl5VkS4BtT999/v
C1wnyjnosssuk0EXX3xxyBEVdlQAAAAASijMCwTbkD799NMmTZrYY2lCQsJ5
550nUXH27NkZGRmRR1+/fv1rr732xz/+8YQTTrA3IjF51KhRhYWFZZy9Z599
1jTYv3//CNWkv0mdpk2bOgf16tVLBp1zzjnhRizjHAIAAACorBTmBYJtkOzs
7Ntuu82eRhs3bjxs2LDNmzeXorWioqL333+/a9eu9pNzzz777LJcWurll182
rUlijXwf20GDBkm1li1bOgdJIpZBbdu2DTni4DBKPc8AAAAAPCdcLlAYDQi2
QSZPnmwl0AsuuOC9995zXrWpFDZt2nTPPfdYBzZ36tSpFI0cPHhw+PDhpoWT
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
5I4aNapu3brae9/777+vDTt9+nRQUFDAlWt2Ro8e/dlnn82aNWvQoEHaRmnX
rl1y2JkzZ1555ZW7775b2/jKFSdkKIK/MV45u3y5sJpf5OBBsXu3/Omz5izg
9xTMCwTbgsnIyFi7du2MGTMmTpw4YsSI8ePHz507d8uWLeespvbzKwo2KgDA
XvPmzdNC6Pr16/WNp06dKlu2rNx42223aVtefPFFbdiGDRucd//888+17ZMm
TdI3co2tv5MpddUqlpoFSiIF8wLBFkYKNioAoPDS09N3X8vBgwd/+eWXnJwc
l30//PBDLZl+8sknztuXLFny3//+Ny4uTvvf11577W9/+1uvXr1cdk9LS9N2
l2FW30iw9Xc7dphfNvu//9ldGQAfUzAvEGxhpGCjAgAKTw+n1xQWFvbAAw+s
XbtW3/fQoUP6vXfcccfEiRNlmM3Ly3P/jJmZmfv371+wYIG+at4zzzyj30uw
9QuZmY6LZ01pS83qN/3K2fT0oi0RxYL8JaP9eS0hIcF5+9GjR7Xtx48ft6s2
Z4Wp5+eff9b2PXv2rC9qK0oK5gWCrS/k5OTInn/77bfvvPPOAwcO2F1OvinY
qACAwhs0aJCHwVY3ZcoUfffXX3/dZfKoatWqycf84YcfnJ8lKytr3rx5Dz30
UL169UqXLu3ygARbf5GS4rgkdvNmxzWzbpaalfeuW8eVs/CCGjVqaL8lHnnk
EeftLVq00La3adPGrtqcFaae8PBwbd8BAwb4oLQipWBeINjmy8GDB4cNGyb7
uVatWtdff311J/LNvWrVqpUrVw4LC3N+B9+2bZvdVeebgo0KACi8Zs2a5TfY
yiS7Zs0a/RHk1zKxlitXznlMUFDQe++9pw1ITExs3Lixy4PI53322WcJturL
yREJCWLnTrF2radLzTrNhw0UCsHWvyiYFwi2nps2bVqpUqXy+5GAYAsAUEF6
err+Lnb99ddnGly6dOmXX37Zt2/fjBkznCf/b926tctDaTMojho1qn79+nr+
lfvKu+69915tyx133PHhhx/GxsamXVnQJSEhQds+cuRI/XEItqqxWmpW3giw
8DWCrX9RMC8QbD20f/9+bZmDfAkJCfnR6vQdhSnYqACAQoqOjtbfnrp37+5+
8O7du0NDQ/Xxp06d+v7776dOnfraa685D8vLy+vXr5825quvvkpNTdWy8513
3pmVleU8MioqShs2fPhwfSPBVkH6UrP6bflysWmTSE62uzIUd1bB9qGHHqp7
hfxtY1dtzgpTD8HWpwi2HurSpYv+/h4UFNS0adNOnTrpWzp37nz33XfXqlXL
OdX+61//unz5st2FF4SCjQoAKKRp06bp71DOV85aadeunT5ehuK//e1v2tf6
BMia999/X9u+ePHiHTt2aF8/9thjzmNkyNV3Hzp0qL593Lhx2sbfrCYngrdd
vCiOHhWxsZZLzf700+95ds0ax6THp045LqQFioBVsC1OCLY+RbD1REZGhv6H
63r16ukHYRs2bKht3L59u7Zl7969jRo10jbKf57aeVl+R8FGBQAUUq9evfSg
6jzdsZV//vOf+vilS5fq69jedtttMsNeuHAhLS3tu+++0/6oK98lL16hHbEN
Dg5et25d9pW5hPbt29ezZ0/9oZwz7+TJk7WNkyZNioqKSk1N9eHrL8Hy8kRS
kvyIIjZs+PM47MmT5oPPnxcHDjj+CxQxgq1/UTAvEGw9IZOs/o68aNEifbv8
gWob5VuzvvHcuXM333yztn306NF21FtYCjYqAKCQateurb+XJXtwXqn8bKmP
j4+Pz8nJcT5VyVlgYODUqVO1vYYPH65vlx/hqlatqn1drVq16667Tn7RqFEj
/SlkLnZ+nM8++8xXL74EO3JErFrFUrPwA1bBNi0t7Zcr0q3XkTpz5oz8ffL2
229PmzZt8+bNGX+ckXD58mVt30uXLjmPT0lJ0bbLaGP1mPoYl309qef06dNL
lix56623/v3vf2/ZsiXzj/MeCLY+RbD1RExMjNaE5cqVc97+ySefaNt79Ojh
vD0pKSk4OFhuL1u2rMu/Bb+gYKMCAAojMTFRz48NGjS45nj5jq9PfSw/iWkb
5ce55557Tr616Q9VunTpZs2arVy5Ut9RfhIYO3ZsSEiIPiYsLEy+rcgoPXHi
RG3Lvn379PGjRo3Sp7B48cUXvf7C4bLUrH5bvVpcaxVioEhZBdtbb71V296u
XTvjXseOHevfv7/2wVsnfwX17t1bptrBgwdrW+QY572uv/56bfujjz5qVU9E
RITpvu7riY+P79evX1BQkHM9oaGhgwYNknGbYOtTBFtPyLdsrQnl27fzdj3w
1q9f32WXu+++W7uLWZEBALZbsWKF/hGrb9++7gfn5OT8/e9/18fff//9zvdm
ZWXJZLpq1arY2FirP95euHBh165da9asOXz4cG5urvunk4PlA545cyaPoFVQ
WVnC6jxubalZPc+uXOm4wPboUeGHf3dHMVeAWZF/+OGHatWqBVho27atfh2E
y+89T0571kOoy75u6pEf+7VTU0zJ8frXBFtfINh6Qj8V+ZZbbnHefvbsWW17
YGDghavnwX/hhRe0u+bMmVO0xXqBgo0KACiMCRMm6B+o3n33XTcj5duZPtGT
JsrNIqawlfzoER8v5McuGV3d/JQ2bxbr14s9e8S5c46VagE15TfYys/hlSpV
0n9Tya8fffRR+Qn8gQcecJ7UvciC7enTpytUqKA/Y3Bw8F133dWvXz853rhg
KMHWFwi2npCvS2vIKlWquNxVsWJFrT9jY2Odt3/55Zfa9lGjRhVhpd6hYKMC
AApDftLTP1Bt2bLFdExSUtL8+fNbtmzp/Omrd+/eRVwqrumXXxxzFxvX5bG6
4I9pjeEX8htsZd7Uf1M1b9782LFj+l07duyoWbNmEQdbfe2zgCsnc+7du1e/
a9OmTfqEA5onnngiH98aJSmYFwi2Hqpbt67Why4zSd52223a9rfeest5u/xf
bbuCP/Rr8seaAQBuOJ8d17Rp09ud3HrrrXXq1JEf4QIDA12OKdSqVSshIcHu
2uHKGGm1W3y83ZUBhZCvYHvy5En9N5X89ZWSkuLyaCdOnHCeEMDXwfbIkSPO
9cjQ5PJocoDzcWSCrS8QbD2k/61bJtwDBw7o22VbatsbNmyor1OQnZ2tL/qj
TxTpRxRsVABAgR09ejQg/9q3b++ni9YVe/pSs8636GjLFXwAv5CvYPvBBx/o
v6xeeukl0wccNWpUkQVbfUVv6eWXXzZ9QOdJ4wm2vkCw9dDcuXP1VgwJCXns
scdOnDghty9YsEDf3q5du2XLlkVHR3fo0EHfuHDhQrtrzzcFGxUAUGDz58/3
PM8GBQV16dLl66+/1lahRdHLyRFnz4rdu8WZM+YDfvnlz5mgfvhBHD8uLl8u
2hIBH8hXsH3ooYf031pWJ5acOXNGPxHF18H2wQcf1Oux+pPgsWPHCLY+RbD1
kHx/b968ufNbv/Yyc3Jy9LOUjSIiIjxZK1A1CjYqAKDAxowZo78xde/efazB
m2+++dVXX23ZsuXkyZM5zC5kk0uXHJMVx8aKFSuusdRsbq7joG1iorjWhNOA
P8lXsG3VqpW2MSwszM1j6sv6+DrY6jGhcuXKburRJ+ch2PoCwdZz8u1eP8FY
OnfunLb9m2++KV26tGmwnT59ur01F8xTTuyuBQBQWG3bttXfmPbs2WN3OXCV
mio2bmSpWZR0+Qq2+txQ8sO5m8eMjIwsmmCrrzp08803u6mnadOm/htsnzKw
uyJXBNt8yc3NXbJkSYcOHcqXL++8XW50vj494Mqa9RMnTvTTv3sr2KgAgIKR
70TlypXTD2346RtT8eay1KzzzTADDVBs5SvYVqlSRdvYrFkzN4/Zo0ePogm2
ISEh2sbbb7/dTT333Xef/wZbFwrmBYJtwZw9e9Zly5kzZ7744ouhQ4f26dPn
zTff3Llzpy2FeYWCjQoAKBh9KfYAw+IUKGKXLlnetXnzVXn2++/Fvn2OVMsR
W5Qc+Qq2Mj9qG2+88UY3j3nvvfe6D7Yy+Vrtq2dVT4Ktfs7zTTfd5KaeO++8
k2DrOwRbGCnYqACAgpk9e7YebEePHm13OSWOTKYyn8qUKrOqTKwXLpgPO3TI
cWnt1q3iyBFx8WLRlgioIV/Btk+fPvpJkm5muqtfv777YNu1a1fTHWWo0X9z
ehJs9RXA3V/zW716dYKt7xBsYaRgowIACuYf//iH/vHs66+/truckkJ+0E5I
EDt2iDVrPFpqNitLMAs1Srh8BdsJEybov9m2b99u+oAXLlwoU6aMaTi94YYb
tO333HOP6b67d+/OV7Dt1auXPv7gwYOmj5mcnKzP0kyw9QWCrYeysrIy8snu
kgtOwUYFABSMfhxBireKVfC2H380v2a2OH5EArwjX8F24cKF+m+2hx9+2PQB
X3/9datw2qBBA237jTfemGs2vfikSZPyFWy/+OILfbxVaH355ZevOcaPKJgX
CLYe0s9k8FxQUFCVKlXkjrLtZSdv3rzZ7hfhKQUbFQBQAJcvX5ZvRtq7UkRE
hN3llCCJiSapdsUKERdnd2WAqvIVbHNycvQVdgIDA6Ojo10e7dy5c/KXnlU4
bd++vX7XO++847LvsmXLnFc88STYpqamhoaGatvlvv8zLNaVkJCgr/VDsPUR
gq2Hateund9ga/TQQw8lJSXZ/VKuTcFGBQAUwNatW/X3oM6dO9tdTrGSnS3O
nBHHjpnfm5srVq36Pc+uXSt27XIMZkZqwI18BVtp/fr1+u+3kJCQuXPn6ndt
3779xhtvdP4Q7hJOZZjV7woLC1uwYEF6erq4Ej9nzZolt7jZ16qe1157Td+l
XLlyCxcu1O+S4egvf/mL82MSbH2BYOshrwTbgCuLW8nvkt2v5hoUbFQAQAG8
9957+hvQSy+9ZHc5xcHly44wGxvrOPzqfqnZffvEgQMiOblo6wP8Vn6DrdSz
Z0/nj9nVq1fv0qVLkyZN9EtZrcJpcnKyS3otU6ZM3bp1TT+9exhss7KynC/9
kGrWrPnAAw80atTI+JgEW18g2HooJiZmypQpzg0pu3rw4MGvvvrqzJkzJ0+e
PGTIkFtvvdV5QKdOneQ/BPnvS58AXDN8+HC7X801KNioAIACGDFihP7us3Tp
UrvL8W8//yyio1lqFvCVAgRbmSVHjx5tmkYDriwpaxVOxZWrYl2yrbPXX399
6NChpvu6qUfm5bZt21o9ZocOHe6++27t6wEDBnjnu2YfBfMCwdZDSUlJderU
0VqxUaNGixYtMh0mPzY0bdpUG/bXv/41MzNTXLnEacyYMaVKldK2h4SEpKSk
FG35+aNgowIAYK9Nm8zng9q71+7KgGJBP3n48ccfd96u59N7773XdMfFixc3
btzY+ShthQoVnnzySfkJPDw83CrYCsdpFftk0tQnIgi4cnlsy5YttbOa9T8M
Dhw40PN6MjIy3nrrrZo1azpHWllP//79ZVB68MEHtS1Dhgwp8DdKEQrmBYKt
h2Q3an0oGzUxMdHNSHmvfhb9+PHj9e1btmzR/+F8/PHHvi+54BRsVAAA7HXw
oGuk3bhR7N8vUlPtrgzAlaOla9eu/eSTT2S6yfnjgnb3wVYj80tsbKzccc2a
NWlpaV4pJjMzc8eOHfPnz589e/bu3btziuMF9grmBYKth/Q/vERFRV1z8LJl
y7TBt956q/P2xx9/XNs+bNgwn1XqBQo2KgAAPpWeLg4fFps3iyNHzAfID7wy
zC5fLrZudYy5eLFo6wOQf54EWxSMgnmBYOuJU6dOaf8oypcv78mfXOR3SZsk
PCgo6NKlS/r2mTNnao/TvXt3X9ZbWAo2KgAAXpeX57hCdu9eERX153FYmVut
nDkjsrKKsD4AhUOw9R0F8wLB1hOrV6/W/lE0aNDAw130lap27dqlb1yyZIl+
+a1vKvUOBRsVAADvSk11zGlsvGZ2+XLSK1BMEGx9R8G8QLD1hPwuaf8oSpUq
pa1y5d7Ro0e18YGBgc7zRH366afa9gcffNCX9RaWgo0KAIB35eSIlSvNg63b
uTQA+A2Cre8omBcItp5ITk7WpzXzZB3A4cOHmx7h1acN/+c//+mzYr1AwUYF
AKBg3EwGs23bn3lWhtwffhAnToiMjCIsDoAvEWx9R8G8QLD10B133KEfhP3i
iy/cjPz444/1FOw8XfmuXbtCQ0O17W+//bbvSy44BRsVAFByyA8bs2fPfvTR
R5s3b16zZk35X/m13HLR4wmb8vJEUpL46affL549f9582MmTYu1asXu3OHdO
FMdZS4GSjmDrOwrmBYKthxYuXOi0GlVA27Zt165d+8svv2j35ubmJiQkLFmy
xHkl6NKlS2/YsEHeK79vffr00dexDQ4OPnHihK2v5hoUbFQAQAmxdOnSZs2a
VTUjt8t73eybnS0SEsSOHa4Xz+7bZz5e5l8Axdjx48d/viIpKcnuWoobBfMC
wdZDMro+9thjAQZhYWHh4eEyqxrvevfdd7V9Fy1a5LzdZZVnBSnYqACAkmD6
9OmmkdaZHGO1+88/m1wzK29X/swMAPAaBfMCwdZzmZmZ3bt3NwZYUyNGjNB3
fOONN/TtLVq0OH36tI2vwhMKNioAoNhbunTpNVOtxuq4bWqqSapdtUps386Z
xgDgTQrmBYJtfi1cuLBu3bpuIu39998fFxfnvMs//vEPub1GjRqDBg26cOGC
XZV7TsFGBQAUb/IDhtUZyC6qVKnasGEzq+tt16//Pc/qF8/m5hbxSwGA4k/B
vECwLYC8vLzt27dPmDChV69ebdu2lW/EMsw+/fTT77zzzlazZd1PnDiRkJBQ
9HUW2FNO7K4FAFAizJ49202Yve46R56tXLlqpUpVK1Z03D7+eLbp4xw+LPbv
F8nJRVw+ABRzTxnYXZErgi2MZKOmpYmUFJOb1TwbjGc84xnPeMYXZvwjjzxq
zLPh4VXDwqpWqFC1XDnX2913PxoXJ7hx48aNmy03gi38gmzUdevM59+wWt2P
8YxnPOMZz/jCjG/atLmeZyMiHNE1OLhqQICbW/OAAMGNGzdu3Gy5EWzhFwi2
jGc84xnP+CIe/5e/1Kxc2XF8NijIOb1WDggIDwioYhZsa9r+uY4bN27cSuyN
YOu/Onbs2LBADhw4YHft+UawZTzjGc94xhfN+CVLxNSp4uGHRXBwc7P0WubK
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
6ojXXxeJiXYXCsB7xo0bFxkZGR0dbXchAICrKJgXCLaKS0tLCw4Olilm8ODB
ztvnzJmjpZt9+/a52X3p0qXaMPmz8/xJFWzUkun8+fMvvPBC+fLlGzRo8O67
7+qRtkOHDhMmTHD/oy9O0tLEO+84cqtpni1VSnTtKlasEBZ/pwEAAICXKZgX
CLaKW79+vZZlYq4+tzI1NTUkJERunzRpkpvdX3nlFTmmjowE+aFgo5ZMa9as
0cNsjRo1tC/kz9TuuorOkSPi2WdFhQrmkbZaNfHCC+L4cburBAAAKGEUzAsE
W8VNnTpVizO/GaZBvvnmm+X2Xr16udlduzrpkUceiYqKevHFF/v27Tt+/Pjv
vvvO6iRkjYKNWmLdfvvtzqcfR0ZG2l1REYmJEQ8/7Dgaaxpp27UTX38tMjPt
rhIAAKBEUjAvEGwV969//UubJ8p4V/v27eVdbdq0cbN7nTp1TKeNknsdOXLE
ai8FG7XEWrFihfMP7u9//7vdFfmWzKqffy5uu808z4aGiiFDxN69dlcJAABQ
simYFwi2ipM9I+NMrVq1jHdpR2NbtmxptW9KSooeiG688cYnnnhi2LBhjRo1
0rY0btzYeBRYf1JTXntVyA/ng7adOnWyuxxfSUoSr74qrr/ePNLK7fJeOQYA
AABFxioXKBgNCLaKGzx4sIwzDRs2NN7Vv39/eVezZs2s9t2+fbt2He7jjz+e
lZWlbczMzBwyZIiWkiZOnGi6o4KNWixlZGR88803/fr1u+uuu+SPuEuXLmPH
jt24caPLsOXLl+vBNigo6Pz583YU60N794qhQx1HY00j7W23OY7hctYxAACA
OhTMCwRbxWmnItesWdN4V7du3a550WVeXl5CQoLLFbXyx6StFmS1r4KNWvzM
mzevSpUqpieKy6ibePWiNc4HbWfPnm1Xzd6VlydWrxadOlnOdfzwwyxHCwAA
oCIF8wLBVnHvvPOOzDJly5Y13tW6desCn5s6YMCAgCtr48rka7xXwUYtTlJT
U7U/SrhRuXLl9evX67s4H7Tt0KGDjcV7xeXLYuZMcdNN5pG2QgXHTMjWl4AD
KEEOHToUFxeXnJxsdyEAgKsomBcItoqbP3++FmcuyzBwtcaNG8vtMqIW4GGf
ffZZuW9oaCjBtojl5uY++OCDekqtVq3aoEGD5syZ8/777/fu3TswMND5Lufj
ts4Hbbdu3WrjSyiM06cdC/RERJhH2jp1HOvVpqXZXSUAZWizSSxevNjuQgAA
V1EwLxBsFRcbG6tlmaVLlzpvP3HihBaCZsyYYbXv1KlTa9euLfNRRkaGy11d
unSR+7Zo0cJ0RwUbtdiYNGmS87HXX375xfneDRs21KxZUx/QtWtX/S7ng7b+
OIXU9u2ib18RHGweadu0Ed9+K3Jy7K4SgGIItgCgJgXzAsFWcXl5edqRWZf1
at944w0t4xw4cMBq33nz5mljvvnmG+ftu3fvLl26tNw+YsQI0x0VbNTiITU1
tWzZstoP5fbbb88xC3IJCQkRERF6hp05c6Z+lz8etJUvUSZWmVtN86zMuTLt
yswLAKYItgCgJgXzAsFWfR9//LGWZd566y1ty4oVK0JDQ12O6En9+vWTnwGm
TJmi/W9iYmKlSpXksOuuu07/oezcubNBgwZyY7ly5c6cOWP6jAo2avGwdu1a
PZkuX77catgXX3yhD6tVq5Y+95d/HbRNSxNvv+04u9g00lap4jgnOSHB7ioB
qI1gCwBqUjAvEGzVJ7+rLVq00OJM9erV69atq1+DeeTqGXbCwsLk9s6dO+tb
5IcBbXBgYGDTpk0bNWqkncAsR3777bdWz6hgoxYPY8eO1X4c8vvvfqTzdbgr
V67Ut/vFQVvZlc8+65gDyjTSNmnimDnKcMk4AJgg2AKAmhTMCwRbvyC/7f37
9y9Tpoweau655569e/e6DCtfvry864EHHnDeGBMT07JlS33HoKCgO+64Y8+e
PW6eTsFG9SMuiys5e+KJJ7SfQuXKld0/yJo1a/Qfmfxcp29X/KBtTIxjjZ5S
pcwjrax39WphNl0ZAJgj2AKAmhTMCwRbP5KZmSl/Xhs3bjx9+nR+901KStqy
ZUtsbKxxdmUjBRtVcenp6TNmzGjTpo22NG1ERMRjjz02f/58l0mn+/fvrx+x
Nc7o5SwnJ6d69eraYJdVjBU8aJuZKT7/XLRsaZ5ny5YVQ4eKffvsrhKAHyLY
AoCaFMwLBFsYKdioKlu5cqXzVMbOOnTo4Hy6+Kuvvqrf9d1337l/2OHDh+uD
L1y4oG9X6qBtUpJ8UeL6680jrdw+ZYpjDAAUzLhx4yIjI6Ojo+0uBABwFQXz
AsEWRgo2qrJkzAwKCjJNtZpq1aodPHhQG+w8edSjjz7q/pFffvllfXB8fLzz
Xa1atdK233zzzZ4cgveFvXvFkCEiNNQ80t52m+MYblaWLaUBAADAtxTMCwRb
GCnYqKqR/xbi4uLkF9oU01L9+vXnzJmzd+/e9evXjxs3Ljg4WI+ltWrVSrgy
/292drbMudrG0NDQ48ePu3mKF154QRspg3PW1RFRpulbbrll4cKFeUV+wap8
wlWrHFfLmubZUqUc19jGxBRxUQAAAChSCuYFgi2MFGxUdSQnJ8vIWb58+erV
q+tHYCMjI5OuPuNWxt7atWvr2VafAGrMmDH6xvvuu8/qWWRildFVG9akSRPf
viTPXLokPvpI3HSTeaStUMExE/LVs3QDAACgeFIwLxBsYaRgo6ojJiZGT6b6
Ydlt27YZRx45cqRcuXL6YG3h2sTERP2grTRz5kzTZ1myZIk+Ztq0ab59Sddy
+rRjzdmICPNIW7eueOcdx6q1AAAAKCEUzAsEWxgp2KhKadu2rfNVtHfeeafV
yOnTp+vD7rrrLm3j0qVLnaPx1KlTXVYIkqm2YsWK2oCqVavKf3S+fT3WZF7v
21cEB5tH2jZtxKJFIifHruoAAABgDwXzAsEWRgo2qlI2bNjgHGyHDx9uNVIm
Vhl79ZH7/ljzZvDgwc6P0K5du48++igmJkb+95FHHgkMDNS2lylTZuPGjUX0
qpzIrPrtt6J1a/M8K3Nuv35i+/airwsAAABKUDAvEGxhpGCj2iI5OXnz5s2y
n1NTU13ucj5o+8QTT7h5kHnz5ukjx48fr228cOHCHXfcEeBWWFjYtzJeFi35
Qt9+W9SpYx5pq1QRL74orsyDBQAAgJJLwbxAsIWRgo1alNLT02fMmHHLLbfo
R06l/v37Oy+s43zQVj/H2JTMsDKiaiO7deumb8/JyZk2bVrZsmVNU2379u1d
lvjxNRlXn3vOMQeUaaRt0kTMnClsWlkIQMl16NChuLi45ORkuwsBAFxFwbxA
sIWRgo1aNHJzc2fOnFmlShXTsHnbbbfJzKsP1g/ali5d+tSpU24etnfv3trI
Bg0auNx1+PDhkSNHyhgrn7Ry5cryKZ5++ukffvjBJy/PggzQ8gdepox5pO3U
SaxeLYp8WSEAcOjRo4f85bl48WK7CwEAXEXBvECwhZGCjVoEkpKS2rRp4/70
4GeeeUYf73zQdvLkyW4eedSoUdowGV19/zry4ccfHXNDlS5tkmfLlhVDh4o/
rgkGAHsQbAFATQrmBYItjJ5yYnctRSQhIaF+/fp6UK1WrdrAgQO/+uqrXbt2
yTCrn5McHBx8xGmtVv2gbdWqVV3WsXU2evRobVjTpk2L5NVc29atols3ERho
Emmvv15MmSKsXw0AFB2CLQAo4ikDuytyRbCFkYKN6lM5OTnt2rXTsmepUqVk
DnVZYee5557TM++AAQP07c4Hbfv06WP1+C1bttTGdO3a1XevwkPr1ol77jE/
67h+fceFtBkZdpcIAH8g2AKAmhTMCwRbGCnYqD713Xff6fl0+vTpxgGyscuX
L69fUXv48GH9LufpkRcuXGjcd/369fqATz/91Icvw628PMeas61amUfam28W
X37JirQAlEOwBQA1KZgXCLYwUrBRvUX28AsvvDBx4kTnjf3799eCZ/369Y27
ZGdny2+I85W2VgdtZeadPHlybm6ufm9UVFRERIR2b/Xq1TPsOBqanS0++0zc
dJN5pP3rX8WyZcwNBUBRBFsAUJOCeYFgCyMFG9UrPvjgA+3Aa8+ePZ23d+7c
WcuevXr1ctnl9OnT9957r8sUUm4O2ko333zzM888M2nSpE6dOgUFBWkb5Rcy
AhfFi3Ry+bJ8yaJ2bfNI27Gj+P77Iq4IAPKHYAsAalIwLxBsYaRgo3rFgAED
tJjpsvJshw4dtO3333+/8/YFCxbox1ulO++8U//673//uz7M+aCtqZCQkCI+
CTktTUydKqpVM8mzgYHyg6LYvr0oywGAAho3blxkZGR0dLTdhQAArqJgXiDY
wkjBRvWKl156SUuatWrVct4uX29oaGjPnj1XrFihbUlNTX3iiSf+v707D6+i
SPQ+HhIIqwSQVVYdgsqiIDJRUUGuLIooQWDYBGURBdwYjbKM7CCgiDg4IoKO
CwI6cUBGRNnlgSDjwgiCAZUIKsI1EDCZbKTeIvXeeprTfU6Sk7NUn3w/f/CE
7qru6u5Kd//Sm/US7eLFi2X31p+4lUMOHjyop+Bx0dYaaWVY/vrrr0O2jCdO
iEmTRFycQ6QtX14MHSq++SZkbQEAAEBkMjAvEGxhZ2BHDYhXXnlF5c0KFSoU
WB4r/fHHH8+cOaP/+8UXXzRr1kyH0wYNGuiLBUlJSXr43XffratYL9p27Njx
22+/XbFixebNm+VvRMiW7scfxcMPiypVHCJtpUpi7Fhx5EjI2gIAAIBIZmBe
INjCzsCOGhDr16/X8fPEiROOZX744Qd9WVbq1q3br7/+qsdu27bNekF2165d
epT1ou3GjRuDvjAWBw+K4cNFhQoOkbZ6dfHkk+L48VA2BwAAABHOwLxAsIWd
gR21OGT/nDhx4l//+ldvBfbv36+z55dffmkvIDvw1VdfrctMnz694ML3BX/9
9dfWYNu2bducnBw1ynrR9sYbbwzsonnzxReiXz8RHe0QaevUETNnitOnQ9MQ
AAAAlCEG5gWCLewM7Ki+yXQ5YcIE/anZGTNmOBY7c+aMzp7/+te/7AXWrl1r
TbX2AitWrPB4irZ79+5ZWVlqbCgv2m7fLnr0cH7dcePGYuFCkZkZ1PkDAACg
7DIwLxBsYWdgR/UtPz9/8ODB1rz51FNPOZaMi4tTBZYuXWofO27cODW2cuXK
1qdulYKCgg4dOqgCFStW1PN6/PHHVYHQXLSVibxjR+dI26KFWLZM5OYGac4A
AADAeQbmBYIt7AzsqEWSqfOhhx6yZlv5X48biaU2bdqosdOmTbNPpGvXrmps
bGxs7oX5UPbt/v37q7EjR47ctm2bzLatW7d+9913rXMJ3kXbc+fEqlWibVvn
SNuunVi9+nwZAAAAINgMzAsEW9gZ2FGLafr06dZsO2LEiHMXhr3bb79djRo9
erS9uvWlx9ZndY8fP56QkKCG16hR4+jRo3LgkSNH7ME5GBdtc3LEq6+K+Hjn
SHvTTeLDDwMyHwAwTmpqakpKSnp6ergbAgC4gIF5gWALOwM7avG99NJL0dHR
Ol0OHDgwLy9Pj5V5Vg3v1auXve7777+vK8bExAwZMmThwoV9+/bVNzDLKcsy
vhtgvWgrz8dKsyyZmeeflm3UyDnS3nab+PTT0kweAEyXmJgo96XJycnhbggA
4AIG5gWCLewM7KglsnLlytjYWJ0ue/furd9dPGvWLDWwffv29orZ2dlyeJQX
9evX37RpU5FzVxdt27Rp43GXcomcOiVmzBC1azvk2eho0b+/cHqpMwBEGoIt
AJjJwLxAsIWdgR21pDZs2FC1alWdSfW7i9944w01pEGDBo4Vf/jhh4YNG9pT
rccHbX3btm2b35H2l19EUpK46CKHSBsbe/57tamp/k0YANyHYAsAZjIwLxBs
YWdgR/VDSkrKxRdfrJNpp06dZO/dsWOHvqk4Pz/fsaKMwPPnz7/uuuuaNGmS
kJAwevTonTt3hqDBP/wgxowRlSo5RNoqVcQjj4jCR3sBoAwh2AKAmQzMCwRb
2BnYUf2zf//+Ro0a6WzbpUuXI0eO6P8eO3Ys3A38//bvF/fcI8qXd4i0NWqI
yZPFyZPhbiIAhAPBFgDMZGBeINjCzsCO6re0tLTLL7/cek+y/gTtZ599Fu7W
CdmE3r1FuXIOkbZePfHMM8L2NV0AKEMItgBgJgPzAsEWdgZ21NI4ceKE4yuh
/vnPf4axVZs3i1tvdX7dcbNmYvFi8d//hrF1AGAEgi0AmMnAvECwhd39FuFu
S2CcOXOmS5cuHsH2pZdeCn1LCgrEmjUiIcE50rZsKd54Q1g+TwQAZVpSUlJC
QsLWrVvD3RAAKOvutwl3izwRbGFnYEctvezs7D59+liD7eTJk0PZgPx88dZb
onVr50jboYNIThb+vkoZAAAACB0D8wLBFnYGdtSAyM/PHzlypEq1rVu3Dtkl
gLw8sXSpuOwy50h7yy3ik09C0xAAAAAgAAzMCwRb2BnYUQNo/vz57777rt/f
mS0ROZMVK0Tz5g55tlw5ceedYteuELQCAAAACCQD8wLBFnYGdlQ3WrNGtGnj
EGljYsSgQeLrr8PdPgAAAMAvBuYFgi3sDOyo7rJpk/ProSpWFKNHi+++C3f7
AAAAgFIwMC8QbGFnYEd1i127RJcuDpG2QoXzkfann8LdPgAAAKDUDMwLBFvY
GdhRzbd37/lnZu2RNjpaDBnCVVoAAABEDgPzAsEWdgZ2VJOlpoqBA8+/DMqe
ahMTxb594W4fALhWampqSkpKenp6uBsCALiAgXmBYAs7AzuqmX78UYwcKcqX
d4i0XbuKPXvC3T4AcLnExMSoqKjk5ORwNwQAcAED8wLBFnYGdlTT/PqrePTR
8y+Dskfajh1FqD6QCwARjmALAGYyMC8QbGFnYEc1x6lTYtIkUbWqQ6Rt21as
Wxfu9gFABCHYAoCZDMwLBFvYGdhRTfD772L2bFGzpkOkvfxysWqVKCgIdxMB
ILIQbAHATAbmBYIt7AzsqOGVkyMWLRL16jlE2qZNxbJlIj8/3E0EgEhEsAUA
MxmYFwi2sDOwo4aLTKwytzZp4hBp69c/n3Zl5gUABAnBFgDMZGBeINjCzsCO
GnoFBefvLm7RwiHS1qwp5swRmZnhbiIARDqCLQCYycC8QLCFnYEdNcTWrTv/
Jih7pK1W7fybo06fDnf7AKBsSEpKSkhI2Mq75gHAMAbmBYIt7AzsqCGzZYu4
4QaHSFux4vnv+5w4Ee72AQAAAOFmYF4g2MLOwI4aAp99Jrp2dYi05cuLUaPE
0aPhbh8AAABgBgPzAsEWdgZ21KDat0/07u0QaaOjxcCB4tChcLcPAAAAMImB
eYFgCzsDO2qQHD4shgw5H2DtqfbOO8V//hPu9gEAAADmMTAvEGxhZ2BHDbhj
x8To0aJCBYdI26WLSEkJd/sAAAAAUxmYFwi2sLvfItxtCbyTJ8Wf/ywqVXKI
tNddJzZtCnf7AAAAAMPcbxPuFnki2MLOwI4aEBkZ4umnxUUXOUTaq64Sa9aE
u30AAACAGxiYFwi2sDOwo5ZSVpaYO1fUquUQaePjxYoVoqAg3E0EANikpqam
pKSkp6eHuyEAgAsYmBcItrAzsKP6LSdHLF4sGjRwiLSNG4ulS0VeXribCADw
IjExMSoqKjk5OdwNAQBcwMC8QLCFnYEd1Q/5+eL110WzZg6Rtm5d8fzzIjs7
3E0EAPhEsAUAMxmYFwi2sDOwo5ZIQYF4911x5ZUOkbZGDTFzpvj993A3EQBQ
DARbADCTgXmBYAs7Aztq8a1fL665xiHSVq0qnnpK8JwWALgIwRYAzGRgXiDY
ws7Ajloc27eLm25yiLSxseKhh8Tx4+FuHwCghAi2AGAmA/MCwRZ2BnZU3/79
b9Gjh0OkjYkRw4eLtLRwtw8A4BeCLQCYycC8QLCFnYEd1ZtvvhF33y3KlfOM
tHJI//7i4MFwtw8AUAoEWwAwk4F5gWALOwM7qt3334thw0R0tMOF2p49xZdf
hrt9AIBSS0pKSkhI2Lp1a7gbAgC4gIF5gWALOwM7qtX//q8YN05UqOAQaTt3
FvQ+AAAAIKgMzAsEW9gZ2FGVnByxYMH5T/bYI22HDuLjj8PdPgAAAKAMMDAv
EGxhZ2BHlf75T9G8uUOkbdVKvP9+uBsHAAAAlBkG5gWCLexM66hffHH+HmN7
pL3sMvHmm+LcuXC3DwAAAChLTMsLgmALJ+Z01J9/Pv+9HvsbouLixPz55+9M
BgAAABBi5uQFjWALOxM6alaWmDlTVKvmGWnLlxcPPihOngx3+wAAAICyyoS8
4IFgC7vwdtSCArFihWjSxOHe4x49xP79YWwaAAAAAIIt3CGMHXXnTpGQ4BBp
W7YU69eHq1EAgPBITU1NSUlJT08Pd0MAABcg2MIVwtJRjxwRAwc6RNratcXi
xSI/P/QtAgCEWWJiYlRUVHJycrgbAgC4AMEWrhDijnr2rJg4UVSq5BlpY2PF
n/8sTp8OZVsAAAYh2AKAmQi2cIX7LYI6o3PnxKuvivr1HS7UJiaKw4eDOnMA
gOkItgBgiPttwt0iTwRb2IWmo27aJK6+2iHSXnON2LYtBPMHAJiOYAsAZiLY
whWC3VFTU8VddzlE2ksuEa+9dv6tyAAACIItAJiKYAtXCF5HTU8Xjz4qKlTw
jLSVK4u//EX8/nuQZgsAcCWCLQCYiWALVwhGR83LE4sWiVq1PCNtuXJi8GBx
9GjAZwgAcD2CLQCYiWALVwh4R123TlxxhcO9xx07it27AzsrAEDkSEpKSkhI
2Lp1a7gbAgC4AMEWrhDAjnrokLj9dodI26yZWLUqUDMBAAAAEDoEW7hCQDrq
77+LCRPOf4vWI9JedJGYM0dkZ5d+DgAAAADCgGALVyh9R33nHdGwoWekjY4W
o0aJ48cD0kYAAAAA4UGwhSuUpqP+5z/i5psd7j3u1Ens3RvANgIAAAAID4It
XMG/jnrqlHjoIRET4xlpGzY8fwEXAAAAQGQg2MIVStpRz50TS5eKOnU8I21s
7PnHbPk6LQAAABBJCLZwhRJ11JQUce21Dvce3377+VciAwAAAIgwBFv4LTc3
d+3atfPmzZs7d+727dvlqg5e3WJ21OPHxb33inLlPCPtH/4gPvig+K0DAMBZ
ampqSkpKenp6uBsCALgAwRb+2bNnT3x8fJRFjRo1duzYEaS6RXbU/Hzx4osi
Ls4z0lapImbN4lM+EcLA/RVCj24AJVw9ITExUR62kpOTwzJ3eGCHAEE3wP8x
sCcQbM135MiROnXqyCN7lSpV+vXrN2jQoJo1a6r/bt++PRh1fXfUnTtFu3YO
9x737y+OHvVzGWEgA/dXCD26ARSCLQQ7BBSiG0AxsCcQbM03fPhweVivVq1a
SkqKGnL48OGmTZvKgZ07dw5GXW8d9eRJMWKEw73HrVuLLVv8WTSYzMD9FUKP
bgCFYAvBDgGF6AZQDOwJBFvDZWRkVKhQQR7WR8hIabFs2TJ1X/H+/fsDXtfe
Uc+dEy+/LGrV8oy01auLhQtFXp6/iweDGbi/QujRDaAQbCHYIaAQ3QCKgT2B
YGu4Tz75RIXQbdu2WYefPn26YsWKcvjUqVMDXtejo/7736JDB4d7jwcNEr/8
4v+ihezXIcJmFGGLE7IZRdjihGxGEbY4IZtRhC1OyGZkn0uQgm3ErzdmZM5c
Im9GEbY4IZtRhC1OKGdUfARbwz3zzDMqnP7X9irjNm3ayOH9+vULeF3dUU+f
FuPGiehoz0jbsmUA7j2OvN87dowmzyjCFidkM4qwxQnZjCJscUI2I4KtyXOJ
vBlF2OKEbEYRtjghm1GELU4oZ1R8BFvDPf744+pdT/ZRnTp1kqNuvPHGgNdV
HfXtt0X9+p6Rtlo1MX++yM31d3lscwmBCJtRhC1OyGYUYYsTshlF2OKEbEYR
tjghmxHB1uS5RN6MImxxQjajCFuckM0owhYnlDMqPoKt4WSfkcf0Jk2a2Eep
w327du0CXvd+AAAAAPDO74ATJARbw40YMUIm0Pj4ePuoIUOGyFGtWrUKeN2K
FT0v1DZvLj76yO+FAAAAAIAgItgaTt1O3LBhQ/uoXr16yVEJCQnBqAsAAAAA
bkGwNdyCBQtkAq1cubJ9VMeOHeWobt26BaMuAAAAALgFwdZwK1euVG82zsrK
8hh1+eWXy+HDhg0LRl0AAAAAcAuCreF27dqlwumaNWusw9PS0sqVKyeHL168
OBh1AQAAAMAtCLaGKygoUFdXPb45O2fOHBVaDxw4EIy6AAAAAOAWBFvzLVmy
ROXQZ599Vg1Zt25dpUqV5JCePXtaSw4ePDgxMXHmzJl+1AUAAAAAlyLYmk+u
1auuukrl03r16l166aXq57p163733XfWklWqVJHDu3fv7kddAAAAAHApgq0r
yNU+ZMiQ2NjYqP/TuXPnffv2eRSrVq2aHHXbbbf5URcAAAAAXIpg6yI5OTly
e23ZsuXYsWOhrAsAAAAAJiPYlimpqamvvvrq008//fbbbx85ciRkdWGU3Nzc
tWvXzps3b+7cudu3b5e/tsWsePjw4Z1eZGZmBrXNCKq//e1vEyZMKH5PEOwQ
IlGJukF2dra3vcG3334b7KYi4NLT0+Vx4bnnnps2bdqKFStK9G5Jv48pMJDM
Ba+//vqUKVMWLVr08ccfF/Pgzg4hwsgo99JLL02dOlX+av/2228lqhve0wOC
bRlRUFDw8MMPx8TERFkMGjRIHo+CWhem2bNnT3x8vHVT1qhRY8eOHcWp26VL
lygvUlJSgt1yBMkrr7yiNuLJkyeLU54dQkQqaTeQ+cXb3qBHjx7Bbi0Ca+HC
hTVr1rRuxHLlyg0fPlym3SLrluaYAqMcOnSoa9euHr/OTZs2ldGmyLrsECJG
Wlqax8me3Bs89NBD586dK7KuCacHBNsy4oknnlAdrE2bNqNHj05ISFD/7dWr
V1DrwihHjhypU6eO3HZVqlTp16+f3Nuokxn5X3lUKrJ6rVq1vB25CLYutXnz
5goVKqiNWMxEww4h8vjRDRYtWsR5bGRYunSp2nC1a9ceOnTomDFjWrVqVcxN
WcpjCswhT+9btGihtvvNN98s44ncoOr1LDKnFPmXCnYIkSEzM/Pqq69WG65J
kyZDhgxRv+DSwIEDi6xuwukBwbYs+P7779XfTwYMGJCXl6cGTpo0SfW3rVu3
BqkuTDN8+HC51apVq6Zz6OHDh5s2bRpV+Eox33XT0tLURk9OTv7Npjh/yoNR
5O46KSnJ+pfV4iQadggRxr9uIN13332ysDxvse8N5HlCsJuNQDl79qz6nkL7
9u31ps/Pz3/wwQdVf3jvvfd8VC/NMQVG+ctf/qK2+PLly/XAffv2qb9UtG7d
2nd1dgiRYcGCBaobzJo1S53X5ebm3nvvvWpgamqqj7qGnB4QbMsCed4SVXgv
gcwmemBBQYE6+vTr1y9IdWGUjIwMdVFmxIgR1uHLli1Tu539+/f7qL5mzRpV
TO4HgtxSBN2ePXv0H+dLlGjYIUQSv7uB1K5dO1l43LhxwW4kguqjjz5S293j
zC0nJ6dGjRpy+Pjx473VLeUxBUa57rrr5Cbr2rWrx/C5c+eqff7p06d9VGeH
EBmuv/76qMKbN7KysvTAffv2qd/oRYsW+ahryOkBwbYs6Nixo+xUt9xyi8fw
J598Ug6XByYfd7+Xpi6M8sknn6hd07Zt26zD5dGqYsWKcvjUqVN9VJ82bZos
06xZsyA3E6EwYcIE1RmGDRv21ltvFT/RsEOIJH53A7mV1T2Kr7/+egjaieB5
880327RpU79+fftvbsuWLeUm7tu3r7e6pTymwBwyfXTq1Eke32fNmuUxavXq
1Wor+/hMJDuEiLFx48b58+evXLnSOlCG3OjoaLl9586d66OuIacHBNuyoHLl
yrJTya7lMfwf//hHkX9WLU1dGOWZZ55Rm+y/tldWyhObIv+elpiYKMvcfffd
cr83ceLEQYMGTZo06f333+cmZDeSieZ//ud/1OmovhZfnETDDiGS+N0N9u7d
qwpv3br1hRdeGDVq1MiRI1988cXvvvsu+K1GKBw/flxdjZ02bZq3MqU8psAV
Hn74YbkpK1as6COVsEOIbLNnz1bb9+uvv/ZRzJDTA4JtxJObTPWoefPmeYza
smWLGiWjSsDrwjSPP/54VOE7PeyjOnXqJEfdeOONPqo3a9YsyomsxcHLdayn
KMVPNOwQIox/3UB6/fXXVWH1eKYmT2wWLlwYzCYjRNTDs5KPd0CV8pgC8x06
dEhdfO/SpYuPYuwQItLu3bunTp3aoUMHtTXlPsFHYXNODwi2Ee/nn39WPcr6
QgBF/5FNntIEvC5Mc//990cVvubOPkpdjW3Xrp23uqdOndKHqsaNGw8dOvSB
Bx7QT+ddfvnl9r/Ywy2Kn2jYIUSwEgXbRx99VBWuUKHCzTffLP/bu3fv8uXL
q4GvvfZa8NuLIHrhhRfUphwyZIiPYqU5psB8J06cUEd5mW19X2tjhxCR1MMI
SqdOnQoKCnwUNuf0gGAb8Y4ePap61Ntvv+0x6vDhw2rUu+++G/C6MM2IESPk
9oqPj7ePkmcvclSrVq281d2zZ4/6s+2AAQP0VZ6cnJyRI0eqbjBlypQgNRvB
VvxEww4hgpUo2KrYEhcX9+mnn+qB8nRCvUBV/luc75/CTC+//HK5cuVUYvW9
HUtzTIHhjh8/rt4HJT377LO+C7NDiEi33HJLz54927Ztq7pBx44dffx9w5zT
A4JtxNO3ByxdutRj1Oeff65GrV+/PuB1YRp121jDhg3to3r16hVV+KJ+H9UL
Cgp++uknjydq5a+8et+d77owmR+3IrNDiDwlCraisDP89ttvHgNfeukluoF7
yZ38xIkT1RZs1KhRkc+YlPKYAmMdPHjw0ksvVT1BdoniVGGHEMHWrVtXqVIl
9Ves/Px8xzLmnB4QbMuC6tWrRzm9zUy/0nDnzp3BqAujqM+TVa5c2T5Kvcuu
W7dufkx22LBhUYXfMfR9mwqMVaJEww4hUpU02Dr64Ycf1ETmz58fwLYhBHJy
cgYPHqw2X8uWLa0f7PAmSMcUhNf27dtr1aoVVfjdllL+IrNDiBgzZsxQm9J6
Ud6DIacHBNuy4IorrpA9KikpyWP4O++8ozqb3PkEoy6MsnLlSrXJrJ8nUy6/
/PKowk9++DHZRx55RNatVKkSwdalSpRo2CFEqoAEW/0w/uzZswPYNgTb6dOn
O3furLad/EFux+LUCtIxBWG0atUq9diR/Nfjmy9+YIfgRvLXOScnx2Pg7t27
1ab8+9//7q2iIacHBNuyoHv37lFOr3FQrz2sW7dukOrCKLt27VL7Fo/n99PS
0tQTVYsXL/ZW95lnnmnatKnc3NnZ2R6jevToIeteddVVQWk0gq9EiYYdQqQq
fjeQIahly5Z16tSZM2eOx6iUlBQ1keTk5KC1FAF29uzZ66+/Xm24oUOH2s9p
vSnNMQUGkqk2JiZGbrjatWvv2LGjmLXYIUQMuSu45JJL5C/vc8895zFKX3X1
cTuxIacHBNuy4O2331Yd0vrct9xYcXFxUYWvAwpSXRiloKBA/RXd49uC8mCk
NvGBAwe81dUv85cHPuvwr776Sh0Hx44dG6x2I8hKFGzZIUSqEnUD9fGvNm3a
5OXlWYf37dtXDo+NjT127FjQWooAUy83lp544okSVSzNMQWm+e6779RzlI0a
NTp48GCJ6rJDiBjqPdht27b1eJZ24MCB6pf6119/9VbXkNMDgm1ZIHc1jRs3
lv3qiiuuOHr0qCh8yltdaJP27NmjS65duzax0KFDh0paF+ZbsmSJ2nD6JYf6
nQA9e/a0lhw8eLDsBjNnzlT/lbsytWuqXbu2/gX/4osvmjdvLgdWrVr1559/
DuWCIIB8JBqPbiDYIUQuH93Aflx46qmnVOGRI0dmZmaKwo6RlJSkBo4fPz7U
rYe/du/era6uXnLJJWucyAK6sH2HUPxjCgwnt5falFOmTHHsCRkZGaqkvRuw
Q4gY06dPV1vtvvvuO3z4sCj83PmkSZPUwHvuuUeXNDYvEGzLiDfeeCM6Olp2
rZiYmFatWlWuXFn1tD//+c/WYvPmzVPDd+3aVdK6MJ/8Db3qqqvU5qtXr55+
7WHdunU9XoCpPrPevXt3PSQ5OVkVlmdBLVu2bNGihTodkiXfe++9kC8KAsZH
orF3A8EOIUL56Ab240JOTk6HDh3UwJo1a1577bXqtSFS165d9QkwzHfnnXdG
+WT99bfvEIp/TIHJ9HtrfdC//vZuwA4hYuTn59988816o8tDfI0aNdTPMq5a
N6WxeYFgW3Z8/PHHTZo00d01Li5uzpw5Hi/8efbZZ9VY6x9pi1kXriB/hYcM
GRIbG6u3ZufOnfft2+dRrFq1anLUbbfdZh24bds2/WE7qXz58vJYtnfv3hA2
H4H3wQcfqA1q/1iDYzcQ7BAikY9u4HhcOHv27JNPPqneM6PUqVPnqaee8vYx
CJhJ3Xnog/XX33GHUMxjCky2fPly393A+uvv2A3YIUSMrKysyZMnq/suFPmz
3Lge74gzNi8QbMuan3/++ZNPPpFhxP4aw6DWhVFycnLk7/6WLVv8ePLl5MmT
O3bs2LVrF92gjGOHgNzc3AMHDsgzmeJ8HQYRrDTHFEQMdggRQ/5G79u3b/36
9QcPHvTjrxNhPD0g2AIAAAAAXI1gCwAAAABwNYItAAAAAMDVCLYAAAAAAFcj
2AIAAAAAXI1gCwAAAABwNYItAAAAAMDVCLYAAAAAAFcj2AIAAAAAXI1gCwAA
AABwNYItAAAAAMDVCLYAAAAAAFcj2AIAAAAAXI1gCwAAAABwNYItAAAAAMDV
CLYAAAAAAFcj2AIAAAAAXI1gCwAAAABwNYItAAAAAMDVCLYAAAAAAFcj2AIA
AAAAXI1gCwAAAABwNYItAAAIO3kK8cADDwwbNuzpp5/WA0+ePPnVhc6dO1fM
CR47dsxaMT093Tr29OnTX/m0f//+w4cPe9QKoMmTJ8uFlYucnZ0dpFkAQJlC
sAUAAGGXlJQUVWjKlCn2gdq2bduKOcEbbrjBWnHOnDnWsS+88EJU8dSoUWPE
iBE7duwI4MJKEydOVNN/4oknAjtlACibCLYAACC8du/eHRMTI1NegwYN5JmG
Hm4PtuPGjSvOBNPS0sqVKxeQYKtdeeWVx44dC9QiZ2Rk1KlTR042OjqaEycA
KD2CLQAACKPs7GyZGVV4XLp0qXWUPdjK5Fucu5HnzZvnUbH0wVZq3759VlZW
oBZ80aJFarLx8fGZmZmBmiwAlE0EWwAAEEYycqp817p1a4/Qag+20tatW4uc
5jXXXFP8YDtmzJiPL7Rhw4YPPvhg5cqVM2fOvPjii63TGTRoUKAWPDc397LL
LlOTtd6ADQDwA8EWAACES2ZmprojV1q+fLnHWMdgO3bsWN/T/Pbbb+21Zs+e
bS1jDbavvPKKj6n99NNPXbt21YWjo6PPnDnj38LaPffcc2qyNWvWPHv2bKAm
CwBlEMEWAACEy8KFC3Wys9/law22tWrVUj/Ur1/f993I06dPtwdbH1dsfQdb
KT8/v0WLFrr8xo0b/VtYu5MnT1asWFFNdt68eYGaLACUQQRbAIAbZWRknCiU
k5Ojhpw6derDDz+cOXPmiy++KH/w8aGW06dPq7q5ublqUu+8846suGrVKhk0
HKvII+CmTZsWLFgwf/78jz/+WNYtTiN//fVXWUvmpmnTpi1fvjwlJaU4F/tK
VEsutVoW6zuXvJXxeJAzZOvBG7ntGjVqpGLdo48+ai9gDbYPPvig/tn33cgt
W7ZUxe64446ABFvpmWee0eVnzJjhrdjRo0dl7P3rX/86derU559//o033jhw
4IDvKQ8cOFAHdnkeVWRLAACOCLYAADdq1aqVvs6Vlpb2xz/+0eMtuFWrVn3s
scd+++03e139YOOrhWJjY3WtypUrP/fcc9bCMiPr8lZy4IYNG7w1T8aZwYMH
ly9f3l4xPj5eJinHa45+1GrQoIEq0LdvX2+N0dc6hwwZEuL14NuKFSv0dA4e
PGgvYA22MlBHR0ern8eMGeNtmv/5z39UGdkf3nrrLV29lMH27bff1uU9VqP0
+eef9+7du1q1avb1E1X47PCuXbu8TXnz5s26pAzCRbYEAOCIYAsAcCN9Ve7e
e+/VV/3sZDH7J1ouvfRSNXbo0KEecViaNWuWKpaVlTV27FhvU1bR6ZFHHrFf
ZUtNTa1du7aPitKAAQM8Uqp/terXr69G3X333d7WVY0aNVQZjxcfBXs9FEku
jppCixYtHAtYg+3+/fu7dOmifq5Xr563u5H192FvuOGGHTt26OqlDLazZ8/W
5SdPnmwd9fLLL+vE7Y0s4O1OY7kgcXFxqlj//v2LbAkAwBHBFgDgRjrYajVr
1vzTn/4kQ8cdd9xhvfh45ZVXqlttNR3oHAPIjz/+qIr16tXLOkqGrwGF4uPj
rcOHDRtmnXhOTo71ymbdunVllYcffliGR4/5Wi90+ldLBCjYBmM9FCk/P19u
MlV35MiRjmU8gu2SJUv0f7ds2eJYRa/GF198MVDBtqCg4Oabb9blV65cqUfp
C8SKXKLExMQHHnhAruoOHTpYR1WtWtXx/gGpZ8+eqozcUnK1+G4MAMARwRYA
4EYewbZt27ZHjx7VY3fu3FmvXj09dv78+da6HoHu6quvXrBgwfLly/v37y/z
miqzfv16XSAuLu7VV1+1TuHdd9/V952WK1cuJSVFj/r00091xVGjRmVnZ+tR
eXl548aN02P1vPyuJQIabAO7Hoq0fft2PWVvt+B6BNuTJ0/q+7QffPBBe/nP
PvtMjY2JiTl+/Higgq1+d7FivWt6xIgRerhsksdTzPKMqHnz5rqAt4u21q/u
yp7guzEAAEcEWwCAG1mDrQxo9lcn7d27V99eW6tWLeuFMGuga9y4cUZGhkfd
3NzcK664Quc1x7fgfvnllzpkJSQkFBQUqOGzZs3SE7e3Ss5L329cqVIl/YUX
/2qJwAXbgK+HIk2YMEHP/YcffnAs4xFs5ZDu3bur/zrejTx+/Hg19tZbb5X/
LU2wlac0hw8fXrt2badOnaIsrOtQnhfJzaGX3fHu6E2bNum6Q4cOdVzM3bt3
6zKTJk3ysdIAAN4QbAEAbmQNth6XEbW+ffvqMtu2bdPDrYEuOTnZXvH999/X
BUaNGuWtDffff78u9vnnn6uBTz/9tB64evVqx4nLMn//+99l7MrLyytNLRG4
YBvw9VAkvXWqVKnirYw92C5btkwP2bx5s7WwzNQNGzZUo2QxUexgK4N5jQtV
r149yokcdfz4cT2RTz/99Prrr69bt64c9frrrzsuQk5Ojn4Ct0+fPo5lcnNz
9R9heMwWAPxDsAUAuJEOtpdccok16FnJMKsjycSJE/Vwa6D7+eef7RVlCNIF
PvroI29t+Ne//qWLvfPOO2qg9Q5bmVZGjx4th3hroeZfLRG4YBvw9VCkG264
QVVp0qSJtzL2YJuenq4foPa4G1lvblng1KlTotjBtpji4uLWr1/v2E55duTt
2di0tDT9bqhevXp5W9KLL75Ylbnxxhu9rzMAgFcEWwCAG+lg261bN29lZFjT
qWTw4MF6uA50VatWdaw4fPhwXXHkyJGPezFkyBBdbPr06aquTKM6pGjVq1fv
06fP0qVLrQ8CW/lXSwQo2AZjPRRJz71du3beytiDrbC8aqlu3brWOKk/dHvX
XXepIYEKthdddNGYMWO+//77IhdKniZ99dVXq1evnjFjhlwtf/jDH6zTueOO
O7xV1Ld8yypFzgUAYEewBQC4kQ62Pm6RLSgo0Ff31EOXio5UV199tWPFm266
qfipR7nnnnt09b179/r4AtG11167YMECj7cM+V0rIME2SOvBN/10ateuXb2V
cQy2b7zxhh6o70bOy8urU6eOGqjfWlzMYCv7xkSbadOmPf/883JeMqgWeen8
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
X/bxHWkBAAAAAAAAAAAAAKH0/wANxTJs
     "], {{0, 501.5}, {633.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{633.5, 501.5},
   PlotRange->{{0, 633.5}, {0, 501.5}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`pres = 0.05, $CellContext`temp = 
     375, $CellContext`temp = 375, $CellContext`fTfP = 
     2, $CellContext`highpressure = True}},
 CellTags->"Snapshot",
 CellID->275288692,ExpressionUUID->"e839aa34-2796-44fa-adac-d12665603aa9"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
uqgsXFhYGKWigjKD7caNG8MfOfPz8ydNmvTCCy88+eSTv/zyS7QG5Dhbs2bN
P//5z3fffdfuQoDEoY5DLik3du81Th5dy+2Gg1Ot9W+ZVevq8hDyQOpoZBnB
CLbQFsG2Dt5///2GDRsuX75c/j7mmGNOOeWUaLV8zTXXnHfeeTJcRKvBSJkX
pJBRa8eOHfJHtEZgaUoaNAdDxkMAdTZnzpy///3vRx999BFHHNGjR49169bV
eeEPP/zw1FNPbdCgwbHHHturV6/U1NQY1ayGVvm2DT/Ypqent2/fPumAgQMH
RmtAjrMLLrhAPYVZs2bZXQuQIKzBtv0roW7Xf3FQkn1s8kFT5A+5G7oFn2Ar
4xjBFnoi2EZKPtHNmzcfMGCAuisbSyeffHK0Gl+xYkWjRo2GDRsWrQYjZd1d
u3v37ugOwtIgO20BiAnhmejls64Mwi1atGjWrFn//v3vuOMOGTNbt26dkpIS
8IFCL/zTTz9J2pIhvW/fvldccYX8fdJJJ8Uo26pgu2fPng0bNoQ5Zl522WUq
D0ro7tev39dffx3dMTlu/t//+3/qicyePduc+Pnnnz/11FOvvfaajYUltszM
zKe81qxZY3ctDuC4DmkG211FRttXgt7OeuugVPvo5N+nX3dwtpW7IRqRhzCD
rYxgMo4RbKEngm2k/va3vx166KHyfaHuRjfYijvvvFPa37p1axTbDJ953k55
gvJHdAdhaVCa5WR6AOoTbC+//HKJSFOnTlV3v/jiC7kroTXgA4VYWMaiDh06
NG7cWDb71dyhQ4fK3KeffjoWTznSYFtRUXHYYYdJPZK4Kysrozsax9natWvv
u+++9957zzrxmmuukWd32mmn2VVVwps/f776/4T//ve/dtfiAI7rkOYpkbOK
jJNGBb2ts+yjGDTpoFk9xxyUbS/+MGgj8hDmiZEJttBZdINtjx49HnjggdGj
R5999tktW7bs1avXDz/8YM696qqrBg0a9PDDD8usbt26qUN5ZeDt2bNnmzZt
jjvuuGuvvfbXX381l5fPTu/evY8//vgjjjji/PPPHzZsmHmMbohZsg3Qp08f
a1WXXXbZ7bffXrcafMj2T8OGDW+55RZzigq2b7/9tjzlI488Uh5r3Lhx1lU+
+ugj2bKSUmXuueeeK5tMRUVFIYqZNm2aDK33339/sBpkJMnOzt62bVvaAVuj
ZIvX5s2bV69eHf4+hYhIs9K4PIR6rGhVDkAH5qAkA5QMUyE2e/wzbOEB/rOs
K27fvl1GyC5duphTSkpKTjzxRBmZCwoKfB4l9MISbH/++edvv/3WnPvjjz/K
8g8++GCwsusj0mCbkpKiUomDdiFFxHE5wnEIthFxXIdUwba4zHP5nhNGBr2Z
HpkYYG6Pz2uyrfwdrBF5iGKCLZwgusH2mGOOUaOoRLZ//OMfzZs3b9So0YwZ
M9RcSXZyV+Y2aNBA/sjIyJDY27hxY5kiqfBPf/rToYceKnfVZoykv1NOOUWW
/MMf/nDbbbe1bt1aFrv77rtDzxLNmjU7/fTTrVVJs2eddVYdavA3atQoWfKr
r74yp0iwVU/54osvlqwtq8vfX3zxhZo7ePBguSvL3HjjjRdddJFa0twd4F9M
qXfjR7a72rdvH+xFls3FtINFa6NUkmZqaurGjRtXrFiRnp4ei3FYmpXG5SHk
gQi2QILxGZp2794dbByrc7CdMmWKjJl9+/a1TlRbpDK2+DxK+AvLRtrUqVM7
d+4ss2StYGXXR6TBdvXq1eor47vvvovK8CsFyEOvXLlS/ghneXkvli1bFs4p
BKuqqnbs2LFkyZKcnJzw69EtR8imhbzmq1atKigoCGf58vLy5cuXr1+/3n+6
tCNfcNWSAaJHvvrl7ZAiw18lnGAr751seyxevHjbtm3hHBhQUVEhXWjnzp0+
06VTyfTt27eHU5g8C3kumzdvltcq9JKRlhfsTTHC6M8x6pDy0Vi0aJF/p4q0
v/mzBtvjXw56kzz7a4bn32ALXPOZZ4GPloZqhGALp4hFsB04cKC6u3DhwoYN
G0pMU3clx8nchx56SD7F8lmWQaZDhw7WnDhr1iy5K5sWUsycOXPk77/85S9q
VmZmpsTkli1bykcpxKzSMIJt+DX4P0GJzzJXcpk5RQVbaVDd/eWXXySlnnzy
yWoD5ogjjmjatKl8wam548aNk4UljwcsxmxTUrBMz83NDfgiW/fVRj3YyhdN
SkpKpNsn4ZNmpXF5CLXTNlqVA9CBz9AU4hzv1tw6ySvMYPvNN99Yv2UU+TpQ
v9/0eZQwF05PT5cvERUB3nzzzWA111P4wfaNN95Q/+dpauT19ttvy1wZQtVd
SeI+K0qQUbN8ztG0e/fuO++8s0mTJqo1+V6+9dZbJS88+uijsvCxxx5rXVii
wfDhw9u1a2c+eps2bW677baAFzSXrDFixAhZwFxYVuzbt6/PN8iQIUPkgVq0
aKHunnLKKdYnqGqWr2nDe9Cyuvvkk0/6P9xnn32m5k6cODHYq2e28Mwzz/jP
feedd9TcGTNmmBOXLl167bXXWl/w7t27SxjxWfdf//qXrCibNPJS3HDDDYcf
frh6vuYCsgFw0UUXqf/fFrJAjx49fC5bfNNNN0kjl156qX9tUoPMkoe2Tiwp
Kbn//vtPOukk1abawHj11VdDp+YxY8YE7ELyiTCXkYj6/PPPy7tvLiObcMOG
DZPpAZ+19F7pBvImqoU7duyofjEtH5/evXtLp1LTTzjhBJ9XXjqDevQPP/xQ
NnW6detmPqJsIw0ePDhgvI20vGBvSjj9OUSHNCL8xFmf7EcffdSpUyfVpnRd
c60w+1utrMH2uJdieyPYwimiHmwlx2VnZ5tT/vznPycdSIIqx2VlZalZMiQm
efeTWltQuzVl6FuzZo38cfzxx8v4rP7bX/3qs9R7PHCwWaXhBdswa/B/gpdc
conMMo8lLvUGW3lEGcrMKdddd50sIwNXfn6+bJJNnjzZnKWOZDbL8ynGNGDA
AJm+YMEC/wJKYx9sZchauHChfJlGOsaGQ5qVxuUhCLZA4olDsP3vf/8rw6Ok
HuvE//mf/5GJ06ZN83mUMBeWEenmm28+44wzZPpxxx1n/QVNFIUfbEePHp0U
yOuvvy5zZQhVd/3DnfpfX2FNbfLQXbt29W+tbdu2f/3rX+UP+SayDtHnn39+
wEeXTXR5Q30eUX1b+ZMcsXLlSnOxxx9/XCYedthh6q4Z06wkKKm58hUpdzt0
6OD/yqiv16OOOkqeVIgXULUg//rPuvLKK2VWq1atzDCVkpIiDfrXIxN93ql7
7703yXsI1tVXX219pmrum2++aYYjM+UleU9NZr1OU8+ePWXihRde6F+bpBuZ
ddlll5lTZPOgS5cuZlPWZm+88cYQr8Ann3wS8H0ZO3asucx9990XcBl5T/2f
tWzdqc05K9m4mjlzZsB3c+jQoWYLu3btUhMfeOAB83+QQjxiHcoL9qaE2Z9D
d8iIPnHmk+3Vq5c1LJvBNvz+VitrsG39v7G9EWzhFFEPtj4hUZ2LQ/2ISb49
ZfAxZ3366adJ3oH6eAt1VLD6meptt92mPu8yOFx++eXynS5RUa0bYlatwTai
GnzIurLZ4zPlnHPOsU5R3+BqF7B86uW5y8ArRapDppO8B7oELMY0YsQIWUxq
C/gix/RQZBVsJVPH6Fwl0qw0TrAFElKkhyIX1sY/2E6ePFmGx3/961/Wib17
904K9J+BES0sZLNfbRUHK7s+wg+2RUVFqamp6ozNSd48m+qlDkONaDO7urpa
7aEWl1566ZgxY2TslW83FWkVa7CVx1ITJX/JKy/v6TfffKNeMfHwww9bH059
VSV5f8X8wQcfyBb7d999169fPzXxzDPPNJf0Cbbbt2+Xp3PxxRcnHTgNtcjM
zFRzX3zxRdXC0qVLrQ+Xl5endjoHzEFWZgs+ZwOW0KGy4UMPPaSm5OTknHLK
KTJFWh4+fLi8tosWLXruuefUZoCEa+uuZ5WhFPlOf++99xZ4Gd4DcdW+QllF
sp6k5oyMjHfeeUc9nCxsNhJRsDVf4UGDBslX//79+2fPnq1O3y1CXNdYtujk
JVX9WYwaNUq9yOZ/Wb/66qtq1iWXXCKLbdy4UTZa1H/di1deeSXgs5bXbdmy
ZStXrvznP/+ppjRo0ED+/fvf/z5//vxNmza9/fbb6qVr2rSpuWvVzHqKvH3y
wVy7du0bb7yhXnzx/vvvW+uvW3k+b4oRdn8O3SHrFmzVi/DUU0+NHz9eXhx1
CHRE/a1W1mDb6sXY3gi2cIqoB1vzOFvl6aefTvL+J2GpN8dZL/n65ptvqg/y
bX6mT59e6j3Lx+eff37jjTeq74sk70G8KsCGmCXBtlOnTuajyJLqkBJ1N9Ia
rOQjLE1J8rVOlGTq85SHDBmS5A228tA333yzKk+GSvlbfdtag23Aa+D++9//
TvJuzAR8kWN68ijZ5lm/fv2vv/4au2ArjctDEGyBxBPpyaPqEGxXrVolw6Ok
J+tElQj8r/gT0cJKx44dZa5svQervM6i9RvbiDaz1SuQ5D0wyee65GYCtQbb
Bx98UF4fycLWg3bKyspatWolS5533nnmxKysLLX6CSecIO+1teW77rpLzZKI
p6b4BFsl2E8aJRKquDR48GDr9M8++0w1KzEh6KvmJTlFJUqfY2Lfffdd1YK8
v+bzVVMk8luX/Oijj9T0Z5991pxoZqhbb73V5+jZn3/+Wc2yHusr3nrrLXk9
r7rqKvMqAxEFW7W38YwzzrAuJq/2DTfcIAvL0wn9OgT7ja20oF6fLl26WH+0
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
os6A0aFDB7WkRMJwXjcrtWPuzDPPVCdJvueee3wWkCmqBp/Lr8jT/POf/9y5
c2frCWxDZCh5ghdeeGG3bt18not5iSLzmrMvv/yymuJz0aK33npLTTeD7ebN
m9VBqv6nIZLwlRTGgdnmf2uYv0hVMjMz1XTJWT6HZk2ePLmzl5nEoxhskyzH
GyvyWVBxXvqG2bWiUp4RYX82gnfIiD5xoYNtRP2tVmawzS42mg6v5XaJZNsD
/6kjf6ywfGQfTK59dXkIa7CV1ECwhZ6iG2yfeOIJ+R6pfzua27p160UXXTRp
0qSot9yzZ0/5Cot6sxExd9qmpaVJxA5/jA1NmpIG2V0LwJ3MYLtp06Zwxsxg
wVb88Y9/VLMefvjhjRs3yna4fB+pCxX5bGYb3ovvnHHGGUl+WrZsqc4OYQZb
CRFqg/+YY46R2CL5Yu3ata+++qqEDnMtaxAwM9o555zzwQcfpKamSu4wr9Rp
Pdo2YLB94IEH1JK33HLLlClTZHWfp6mu1meS5xjO62YlL7W1BfPyQ6Zt27ap
q/jJE3/66afnzJkjU+RZXHrppWoV/+vYBsxQap9yknfPuLz4Enlkm+r777+X
1J/kvV6PeWl4dTazJG9gnzhxYnZ2trzIsuFkRi0z2EqeOuWUU5K8vw1/5ZVX
5PWprq6Wr1F1GQjx9ttvh376OTk5aslWrVq99tprK1asMK9lPGTIEDXr4osv
luJlq2bNmjUSAFWCa9GihblzPLrBVtx///3Tpk3bsGGD1G+eLEVyvbWR+pdn
RN6fQ3TI8D9xoYNtRP2tVpIxK6uMfeXG7r3GESOMw4bXcvujJduaJNXWumLL
f3seQh6o0hts5RWQcYxtOegpusEWCcC601a+etLT08MfZoORRqQpdtcCcK0o
BtvFixerLXwf5pkbrcHW8J617/rrr1c7WJVu3bpJUlDn+beePEq22/2bbdas
mXmiWp9DSc0s4OOEE04wr9RjBAm2M2fOtK7SsWNH/xdBcqKa26ZNGzMbRkSS
kWpBQmLAK8JI3DPPHunjhhtuKCsrM5cMkaHk/TUfKMl7wijz1W7atOnYsWPN
JSWuqqORfbRt21Ydp2o9FPnrr7+2nmnZDL/qHQznkKorr7zS+ihmJfJS9OvX
L+CzlrfJ3NUe4lnXIdj2799fXg3/R7z77rt9Gq9/eUpE/TlEhwz/Exc62BqR
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
gLJ7mATCRbAFAAAAADgawRYAAAAA4GgEWwAAAACAoxFsAQAAAACORrAFAAAA
ADgawRYAAAAA4GgEWwAAAACAoxFsAQAAAACORrAFAAAAADgawRYAAAAA4GgE
WwAAAACAo4UfbH8FAAAAACDuCLYAAAAAAEeLerA1AAAAAACIi2XLlhFsAQAA
AADORbAFAAAAADgawRYAAAAA4GgEWwAAAACAoxFsAQAAAACORrAFAAAAADga
wRYAAAAA4GgEWwAAAACAoxFsAQAAAACORrAFAAAAADgawRYAAAAA4GgEWwAA
AACAoxFsAQAAAACORrAFAAAAADgawRYAAAAA4GgEWwAAAACAoxFsAQAAAACO
RrAFAAAAADgawRYAAAAA4GgEWwAAAACAoxFsAQAAAACORrAFAAAAADgawRYA
AAAA4GgEWwAAAACAoxFsAQAAAACORrAFAAAAADgawRYAAAAA4GgEWwAAAACA
oxFsAQAAAACORrAFAAAAADgawRYAAAAA4GgEWwAAAACAoxFsAQAAAACORrAF
AAAAADgawRYAAAAA4GgEWwAAAACAoxFsAQAAAACORrAFAAAAADgawRYAAAAA
4GgEWwAAAACAoxFsAQAAAACORrAFAAAAADgawRYAAAAA4GgEWwAAAACAoxFs
AQAAAACORrAFAAAAADgawRYAAAAA4GgEWwAAAACAoxFsAQAAAACORrAFAAAA
ADgawRYAAAAA4GgEWwAAAACAoxFsAQAAAACORrAFAAAAADgawRYAAAAA4GgE
WwAAAACAoxFsAQAAAACORrAFAAAAADgawRYAAAAA4GgEWwAAAACAoxFsAQAA
AACORrAFAAAAADgawRYAAAAA4GgEWwAAAACAoxFsAQAAAACORrAFAAAAADga
wRYAAAAA4GgEWwAAAACAoxFsAQAAAACORrAFAAAAADgawRYAAAAA4GgEWwAA
AACAoxFsAQAAAACORrCNhc2bN3/yySfPPvvs2LFjt23bFtG68o6MGTNm+PDh
b7311rRp00pKSgIuVl5enpycPGrUqJEjR86dO1de+WgUDgAAAADOQ7CNrurq
6oEDBzZq1CjJ4o477pAcWuu6qampPXr0SDpY+/btJcD6LLl06dKOHTtaFzvq
qKPmz58fm+cEAAAAAFoj2EbXE088oZLmOeecc++993bt2lXdvfnmm0OvKC9s
p06d1MJXXHGFpOM+ffoccsghcldisjW0btu27dhjj5XpzZo1k2UkNR999NHq
7ty5c2P8/AAAAABAOwTbKEpLS1P7am+//faKigo1cdiwYSquzp49O8S6zzzz
jFrss88+MyeuW7dOhdazzz7bnHj33XfLlObNmy9atEhN2bJlS/v27WVit27d
YvC0AAAAAEBrBNsoGjx4sKTLBg0aZGRkmBOrq6tV6uzTp0+IdS+++GJZpkeP
Hj7TR44cqdosKCiQu4WFhU2aNJEp99xzj3WxTz/9VOXi9evXR+8JAQAAAIAD
EGyj6NJLL5Vo2b17d5/pTz75pEyXQBrsl7YSfq+88sqTTz75xRdf9Jn17bff
qsS6bt06uTt9+nR1d86cOdbFJPYeeuihMv25556L3hMCAAAAAAcg2EZR06ZN
JVpKjPWZ/sMPP9R5d+rAgQNlRQmtKhS//PLLqqlSv9Mgn3POObXuFwYAAACA
xEOwjRZ5ZVTkHDVqlM+sWbNmqVkzZsyIqM3U1FS1H/aqq65SUx5//HF1nij/
ha+88kqZddlll9WtfgAAAABwKIJttGRlZfmf/UlZvXq1mvXzzz+H32BOTo46
T7JkW3NX74ABA2RKu3bt/Jfv1auXzDr//PMDtjYAAAAAAOot/EQTTwTbaMnM
zFTpdezYsT6ztmzZomZ99913YbaWnZ0tEVWtNXr0aHP6PffcI1M6duzov0q/
fv1k1llnnRWwQdt7oO0FUAM1UIOeNdheADVQAzXoWYPtBVADNVCDtjUERLCN
FvNQ5I8//thn1vLly9WsyZMnh9PUxo0bO3TooFYZOnSodZY6FPnEE0/0X+vm
m2+WWV27dg3Ypu090PYCqIEaqEHPGmwvgBqogRr0rMH2AqiBGqhB2xoCIthG
UYsWLSRajhw50me6eSrjBQsW1NrI3LlzW7ZsqS7x88orr/jMfe2112RW06ZN
/VdU52S+9tprAzZrew+0vQBqoAZq0LMG2wugBmqgBj1rsL0AaqCG+tSQmWkE
uRxK/GqIER1qCIhgG0WdO3eWaDl48GCf6V999ZUKtunp6aFb+Oabb9TZouTf
r7/+2n8Bmaia2rdvn8+s008/XabfddddAVu2vQfaXgA1UAM16FmD7QVQAzVQ
g5412F4ANVBDnWsoKDCSk42JE41Vqzx/21JD7OhQQ0AE2yjq2bNnwNM33X33
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
1KqszO4K4KVtrCDYuoS2PRAAAACAU2gbKwi2LqFtDwQAAADgFNrGCoKtS2jb
AwEAAAA4hbaxgmDrEtr2QAAAAABOoW2sINi6hLY9EAAAALCqrDSqquwuAkFo
GysIti6hbQ8EAAAArDZvNqZNM7Zs8SRc6EbbWEGwdQlteyAAAABgqqoypk41
kpM9tylTjNxcuwvCwbSNFQRbl9C2BwIAAACm9PTfU63cJk82KirsLggH0zZW
EGxdQtseCAAAACjV1caMGTXBNiXF7oLgR9tYQbB1CW17IAAAAKBkZtak2okT
jbIyuwuCH21jBcE2FjZv3vzJJ588++yzY8eO3bZtW90aef/994cMGSIvqf+s
LVu2LAiipKQkYGva9kAAAABAmTWrJtiuXWt3NQhE21hBsI2u6urqgQMHNmrU
KMnijjvuKC8vj6idjz76SK27Z88e/7lXXXVVUhCLFi0K2KC2PRAAAAAQu3bV
pNoJE4x9++wuCIFoGysIttH1xBNPqIB5zjnn3HvvvV27dlV3b7755vAbmTlz
ZpMmTUIE25YtWxJsAQAAkEjKy41NmzxnQpZgu3Kl3dUgCG1jBcE2itLS0tS+
2ttvv73iwBnchg0bpiLn7Nmza21BXsDBgwdbd/j6B9uMjAw1a9y4cbl+qoJc
zVrbHggAAACYKiuNrVuN4mK760AQ2sYKgm0USSaVvNmgQQPJnubE6urq9u3b
y/Q+ffqEXn3p0qWdOnXy2QPrH2x//vlnNUvejvBr07YHAgAAAHAKbWMFwTaK
Lr30Usmb3bt395n+5JNPyvQmTZqE/qXtkCFDVGK96667/vvf/wYLts8//7xM
P/nkkyOqTdseCAAAAMAptI0VBNsoatq0qUROibE+03/44QeVUtevXx9idQm2
V1999Zw5cwzLbln/YNurVy+Zfuutt86YMWPo0KF33HHHsGHDfvzxx2AHISva
9kAAAAAATqFtrCDYRou8MiqKjho1ymfWrFmz1CyJoiFasO7PDRFsTz755ICn
jbrsssu2bt0arHFteyAAAAAAp9A2VhBsoyUrK0sFzM8++8xn1urVq9Usiath
thYs2Obn55tJtm3btnfeeed9991n/jL39NNPLw103VvD2wMDqsMzBQAAAJDY
gsUHbRMEwTZaMjMzVbocO3asz6wtW7aoWd99912YrQULtkuXLj300EPViZfN
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
E312JSQkGLt0XM3n2QIFW91IEefufJX7kI4dO0acW5/I7wmfCSCf9QAAAABw
j0DxQWyCcGSw7dOnT4cOHR555JH8TM7Jybn99tvLli2rU+GSJUsK/KAHDx40
oujUqVN9du3evdvY9c033+TzbIGC7VNPPaUH69atm/uQrl276l2NGzf2e0Kx
HQgAAAAgXIiNFY4MtuZnbPM531w09tNPPy3wg5qXIk+YMMFn1/r1641d8+bN
y+fZ8r4UuWrVqrkP0VneuEeW3xOK7UAAAABHSktTGRl2FwEUNbGxgmBrvtOq
jRkzpjCPa6yZO3LkSJ9x81bGK1euzOepAgXbd999Vw/GxsbmPsS4J/M999zj
94RiOxAAAMB5srPV4sVqwQJ1+R+PA0QTGyvCPdhu27ZtSC7G3Ym13LusXnnl
lRdeeOHaa681g23+31H1q0GDBvokgwcP9hmfNm2acf59+/bl81SBgu2XX35p
jKenp/scUr9+/YhzSwX5PaHYDgQAAHCeTZvOL1kbF6cuf3UOQC6xsSLcg+2R
I0eM90mLRAFuOWXVrl27CH+3b3ryySf1eKVKlfJ/qkDBdtWqVca4z32oEhMT
IyMj9fi4ceP8nlBsBwIAADhMUtL5VGtsP/1kd0FA0REbK8I92GrvvfdekaTa
fN5sKg9Tp041TmVdr1Z/T8qXL68HO3funP9TBQq2Ho/HeGfWZ73at956y5i/
bds2vycU24EAAABOkp6u5s27kGqXLFGXs4AkIJ3YWOGAYJudnd28efMC59ni
xYvXrl17wIABBV7x1qTPUK1aNX3OBg0aHDx4UJ27o9S9995rPNC6devMmbNm
zep4zq5du/yeKlCw1T766CNj1+jRo42R2bNnlyxZUo888MADgWoT24EAAABO
smLFhVQ7Z446fdrugoAiJTZWOCDYahkZGWkWVatWNaJfWp70cyl8mPXx2Wef
FStWTD90VFRU48aNzU/7Dhw40Dpt1KhRxviqVav8niePYKu/yc2aNTP2Vq5c
uVatWsbXlSpV2rNnT6DCxHYgAACAY+zYcdFFyHv32l0QUNTExgpnBFsfl7vc
T9FasGBB9erVzXeEy5cv/9Zbb3k8Huuc0aNHG3vXrFnj9yRxcXHGhBMnTuTe
q/8WunbtWrx4cfNR7rzzzs2bN+dRldgOBAAAcIzjx9X8+edTbYBXeUB4Exsr
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
zMk9YePGjeaEZ5991hx/6qmnrONnzpyxHqVjS506dcwJPm/a+gTbFi1aHLR8
qGDlypXWa4zffvtt67GjR482d5UtW/bLL7+07h0zZkxMTIw5YcqUKda9PsG2
efPm77777sSJEx977LHOnTtf/jeviImNFQRblxDbgQCAgtH/sJsve7744gu7
y3GvjAy1erV3ddpL3dUGQMFt2bLF/BfviSeeyD3hpZdeMiesXbvWGNThpWTJ
ksbgTTfdlJOTk/vARYsWmQd269bNussabHXY1DnI59iEhATzUuGKFSuaHwnZ
uXOn+bg6wP7888+5H3fu3LnmyXVAtl6QbA221apVOyXsXupiYwXB1iXEdiAA
oGCuu+4685XPrl277C7HpY4dUwsWnL/p8fz56uxZuwsCnOvGG280/sUrVapU
2sUfXNeJskqVKsbexo0bm+M//PDDLbfcUqlSJT0+efJkv6fNyMgwP4H7yCOP
WHdZg+3HH3/s9/D/+7//M+csW7bMGBw3bpw52KdPn0DP6L777vP7pq012H77
7beX+saEmthYQbB1CbEdCAAoAI/HY97es2LFinaX40aZmWrDBt9lan/80e6y
AOcaP368Gfc+++wz667vv//e3DV69Ojcx+oIE+gOe4mJieXLlzeO7dChg3WX
GWyvvvrqQB/s1WHWfOhXXnnFGOzbt6856Pe+UoaVK1ea04YOHWqOW4NtUlJS
oMPtIjZWEGxdQmwHAgAQdvQrzfnzfVOtfvnz++1qABS91NTU2NhYI+7dc889
1l1dunQxxqOjo48ePZrHSXSW2bRp09dff/3Pf/6za9eu1157bYRF+/btrZPN
YOvzcFY6eJqH/+UvfzEG//znP+fnF4+6GPPYTp06meNmsC1dunQeh9tFbKwg
2LqE2A4EACDsbNp0UaSdPVvt2GF3TYALmAE2KirqyJEjxuDp06fNtc8efPBB
vwdu3Lixe/fu1atXj8hToGDbq1evQCV5PB7z9sh33323MVi1alVjpGXLlnk/
I+Myaa1Zs2bmoBlsmzdvnp9vS4iJjRUEW5cQ24EAAISdrKwLH61dtkwJu7ML
4Fjx8fFmCH333XeNwcmTJ5uDuT+RquPJQw89lEeY/cMf/nDJYPvSSy/lUVXF
ihWNaTfffLMxUrp0aWOkdevWeT+jBg0aGDN16DYHzWB733335fM7E0piYwXB
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
1eZmXlGs/701B0eMGOG3mCNHjphz+vXrZ9312GOPGeNRUVFmOH3zzTfN+Rs2
bAj0HBcsWJCf/IvLlZamvvpK6QYpUyavPFu6tOrUSX35pXe+OxFsAcAxxMYK
gq1LiO1AwHbmvZVq1aplHc9jhZ0DBw5YV9hp1qzZuHHj1qxZ8/HHH+uvfYKt
eUXx6dOnzcGePXsGqse8GdQ999xjHR86dKh5+LZt24xB692SrZcu+9i9e7c5
bebMmZf7LYKPlBT16afe915Llswrz1aooP76V/Xdd657fzY3gi0AOIbYWEGw
dQmxHQjY7oknnjASn889nfJYYadfv37mrvvvvz8rK8vclZmZ2bdvX2uwtV5R
/Mc//tEYbNWqVaB6rr/+emNOzZo1reOff/557nBqvbz5jTfeCHRO672n3n77
7Xx/b3CRgwfV+PGqXTsVE5NXnr3qKtWrl5o3T3HRt4lgCwCOITZWEGxdQmwH
ArYLdE+nQCvspKWlmW+qVq9eXf+r6HPC7Oxs62dvrVcU33HHHcbgH/7wh0D1
WG+e/Jvlrb41a9aY5xw1apQxuHPnTnPwzjvvDHTOxMREc1ovHbqQb9nZasUK
9corqnnzvMKscX9j/Ve9ZIn3EPg4dOjQ+vXrjx07ZnchAIDCEhsrCLYuIbYD
AdsFuqdToBV2li1bZo7379/f7zl13oyOjjbmWK8o1v8nmseePHnS77Gvvfaa
Oefnn382x1NSUszxp59+2hy/+uqrjcHixYunpqb6Pad1VaPbb789f98YV/vl
FzVliurSRVWseIk8W7u2GjRIrVrlXa8WAADHExsrCLYuIbYDAdsFuqdToBV2
JkyYYM73uUTZqnXr1sYc6xXFo0ePNo9dvXq13wOtlxxbl8HVKlWqlDucWq98
7tGjh99z3nXXXeacKlWqXOpb4l4bN6o33lC33qqKFbtEnm3USL36qvPXnwUA
wIfYWEGwdQmxHQjYLo97OvldYcf6jmpCQkKg077++uvGHOsVxbNmzTKP/fTT
T/0eaL2D8ZtvvmndZYblypUrm4MHDx4sUaKEeciUKVN8Tmi9c7Lh1KlT+fve
uEJamvf+Tk8/7b2WOO8wGxWlWrXS30/1+727AABwHbGxgmDrEmI7EJAg0D2d
/K6wY33XddWqVYHOuXr1anOaeUXxjh07zMFBgwb5PdD6WVqfd2Cfeuopv+HU
XDZXi4yM7NWr15YtW3JycvS/8PrriFzWrVtXsG+Uk+zcqcaMUW3bquLFL5Fn
r7xS/eUv6osv1IkTdhcNAIDdxMYKgq1LiO1AQIJA93Tyu8KO9VJk62dyfVhX
pDWvKNbpOCYmxhj0WTbXNHXqVPPAW2+91bpr5MiRfsOpzrAdOnTwSa86jFv/
2Lt3b/Nr/RAF+0aFu4wMtWCBevFFVbfuJcKs3lq0UEOGKP0DLSfH7roBABBD
bKwg2LqE2A4EJAh0Tye/K+zMmDHDHByik08A1ns9Wa8obtKkiTFYpkwZ6+pC
hlOnTlWrVs088Morr7Tu/e6778xdPpccnzlzxu+bs4ZOnTrpTH3jjTc+8MAD
AwYM2LBhQ4G/V2HH4/F+Enb0aHXffap06UuE2TJl1MMPqwkT1OHDdtcNAIBI
YmMFwdYlxHYgIEGgezr5XWFHZ0/zXdcbbrgh0DmTk5PNY61XFHfv3t0c79Kl
i8dyL92cnBzrxcaGE5brX7du3WqODxs2LPeDLl26tHfv3k2bNi1WrJieo+ts
3bq1TuKF+eaEqV27vGvOdurkvZD4km/O1q2r+vdXCxd639IFAAB5EBsrCLYu
IbYDAQkC3dMp0Ao7d999tzGo8+ORI0f8nlOfxzzWekXx9OnTrbm1T58++/bt
0yl47NixtWvXNgbNuzFHXPwx3oyMDPMC486dO+fxjE6fPn3w4MHc7wg7W1KS
d42enj1V9eqXDrMlSng/YDt2rDcCI9jeeeedli1b5r6zGQAg7IiNFQRblxDb
gYAE1ns6+Vxd7HeFnffee8+c//DDD/s953333WfO8bmi+LbbbosITKfaTZs2
mdl28uTJ1mP79+8/bNgwHRC2cWfec1JS1IwZql8/7/o7lwyzervmGtWrl/eQ
X3+1u3Q3eemll3Qz63hrdyEAgMISGysIti4htgMBCTIzM6Ojo40g2alTJ+su
vyvsHD58uHz58mYU/c9//uNzQv0C3ieuWq8o/umnnypWrOg31cbExHz99dd6
zqOPPmp8Hlb/Kx3Mpx6WfvtNxcerv/9d3XijdwmeS4bZK65QHTuqDz5gmR7b
EGwBwDHExgqCrUuI7UBAiHr16hnRslmzZtbxQCvsxMXFRUZGmru6dOmyadOm
rKws/d9nn33WusvgszBQSkrK//t//69UqVLmhNq1a7/11ltHjx4N0RMON9nZ
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
dWbW8rzaqKgotfnBgwd9ekwAAAAAEOgItj50+/bt8PBwmS4rV658+vRpkTIr
VNu2bVXk3Llzpy65evXqTimOHj2a1m0///xztfDDDz9US7799ts8efLIJe3a
tcu8owUAAACAwECw9a0FCxZky5ZNZszs2bNXrVo1b968KoS+8cYb5mLR0dFq
+bZt29K6rXyRa9SooVaVKFGiXLly6ufixYsfP348k44TAAAAAAIGwdbnNmzY
UKZMmZD/KliwYFRUVHJysrnMhx9+qNbu2LEjrduKlJO5kZGRuXLl0iWbN2++
f//+DD82AAAAAAg8BNsMcvbs2Y0bN8bGxrpOX+yrbW/duiWbb/PmzWfOnPGi
pgAAAADgbARbh5IN9+WXX44ZM+ajjz7asGFDQkKC22K//fbbF1988e67786c
OfPnn39ObW+JiYmrV6+Ojo6eNGnS1q1bZTtmWMXhe5cuXVq+fPn48eM//vjj
vXv3JiUluS1mv5WPHDkyZ84c2W0WLVp08uTJDKs4MoQcgT/99NOxY8fK5r58
+XJqxWyOIQwOjmZzcDBTzW2+TcaMwcHRbA4O8pOe/J996tSpEyZM+Oqrr+Lj
490WY3BwNJuDw/Xr17/55pvJkye///77X3/99fnz51PbIYNDcJAjg/yfWk/j
Y2Gzlf04OBBsHefo0aOtWrUK+b/Kli0ru5C52NWrV1944QVLsebNm7veh7tz
584KFSqYixUqVMhDCkZA+eSTT9TU2VpYWFhsbKylmM1WTk5OHjRoUPbs2c0l
u3fvLseozDogpF9cXNzjjz9ubrvQ0NCBAwdaPrHYHEMEg4PD2RwczHbv3q1u
cpGfWyyrGBwczebgIK1fv/6+++4zlyxatOiSJUssxRgcHM3m4CAjbenSpc3F
ChQoMG3aNEsxBodg0rlzZ9WClhsh7beyfwcHgq2zyNe/YsWKqp80bdpU9rEu
XbqozyGys5m7TUREhO5Ozz//vPzUqn59+OGHzVc4nzx5slixYnJ5vnz55K5k
Fy1cuLD6devWrf44RKSBfkpUjhw5nnrqqWbNmqnHGcs3LPPt2/ZbediwYWqH
1atX79evX/369dWvHTp0yPSDQ9okJCTUrFlTtVeZMmUiIyNVo0tyBNDF7I8h
DA6OZnNwMJNvDVWqVFFbuQZbBgfnsjk4SDExMWoSS5lfnnvuuV69euXPn1/1
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
9erVT5w4oYpdvXq1c+fOqpg6b8vg4Gjnz59Xc1+//fbbeqGHS5Hv2sqBMDgQ
bB1q69at6hu20NDQyZMnm1fJdyh1u5zrDCEzZsxQPVB9M6OebZc3b17X/asJ
0Fq3bp1xh4AMIt961PTXTzzxhEhLK997770hphkyNT3NneXWPDiCviXhp59+
Mi/3MIYIBocgZR4c9uzZo55LGBER8bWJeqLxs88+K3/+/vvv1YYMDkHJPDhc
uXJF/dyrVy9LsZ07d6pV69atEwwOQcryyUH3jd9++81cTKYA9d2Xni2ZwcG5
ZEwISXnC1+LFi/VbQP/+/VXDffXVV/JX9bBjm60cCIMDwdaJli1bpqKr/K9l
An/pjz/+UN1M392vnTp1Sq2aO3eu/FVuq341P9tOqVSpklzes2fPDDsI+IZl
xn7lySeflM1Xrlw5kZZWrly5svx1+PDhlmJLlixRe5Bdy+f1hw/JJr5165Zl
ob7CUH0Pr3geQwSDQ1DwPDhYbq9zq1q1amorBgenszM45MuXT/786quvWorp
CxFlcwsGh6Bw108OshHlzyVLlnQt1rt3b7kqPDxc/crg4FzmO+5TI7OtsN3K
gTA4EGwdR34iVV+zFy1aVF8Sb3bp0iXVr1y/Wjl58qRapa6T37Ztm/rVcmt/
XFycmlFZTyeCAPT+++/LzyFFihSxPItB/PebMXWTvv1WbtOmTYi7W/vVu1jx
4sUz7FDgrevXr5cqVUo26JQpUyyr9Beq+nqwu44hgsHB4ewMDmvWrAl3R7V7
/vz55c/623UGB+eyPzioz66yh1iKyQ91qtjx48cFg4PD2fzk8Nprr4WkPNbW
9R6WXr166fwrGBycrFWrVq5vAWrua6l06dLyV3Wdhs1WDoTBgWDrLPJtRd0U
I/vboUOHUism18oyDRs2tAxc0dHRqsupp5IlJyerr1AsD5aKiopSxfQsiAhA
ixcvNn+fpu3bt0/dGqO+eLffyosWLVJLzBMNyf+p1SjXrVu3jD8mpJ+a2bhW
rVqWzyHPP/+8alY1a5zNMYTBwdFsDg5uuX2OLYODo9kcHNSTbWUP2bVrl7mY
mhBGn7xjcHA0m4PDnDlzVLHvvvvOXOzq1avqecddu3ZVSxgcgozb59jabOVA
GBwIts7Srl071TfGjBmzyh11ecl7772nikVERMhRSG0bExOjnrDcpEkT3V0/
//xzVVJPiKonlJB/yy/HCJsuX76spigsXrz4ihUr1GVmu3fv1o9uiY2NVSVt
tvLt27fV+ZrKlSurSULk/+9t27ZV2+7cuTPTDxFpMG7cONVSL7300rFjx+SS
xMTEUaNGqYUvvPCCKmZzDBEMDk5mf3Bw5TbYMjg4ms3BQf6/r+6wlslF95AZ
M2aoJyy8/vrreocMDs5lc3C4ePGiLBCSctJ248aN6kPj2bNnW7durZpeXwLE
4BBk3AZb+63s98GBYOsgevIxD7Zt2yZSeqC6pCQkZRLv6tWrq2/YQlImwNQT
3ImU71tq1KihVpUoUUJPkSoHNHXREQLZunXr1EcO1bKVKlVSv4aGhn722We6
mP1WXrBggdpD9uzZq1atqr4Jkd54441MPzikzZ07d5o2baqHAtl8hQoVUj/L
dyIVV+2PIYLBweFsDg6u3AZbweDgZHYGByUmJkbdfR+Scq2p/uQgP5GaLwBj
cHA0m4PD6tWr1eN+QlLmyq5Zs6buG+ZvOQSDQ3BxG2yF7Vb2++BAsHUQ3dk8
2LFjhyqcmJj4/vvvq+f7KLIrdu/e/fz585bdyjaNjIxUl6AozZs3379/f6Yf
H9JDxpBHHnnE3Afku4/rJIT2W3nDhg3qk61SsGDBqKgoy/iGwHTjxo3Ro0er
r0YV+fOIESP0NA5pGkMEg4PD2RwcLB544AFZcuzYsa6rGByc666DgyY/Ftaq
VUsHn7CwsJdffjkhIcFSjMHB0WwODnv37m3UqJG5WHh4+LJly1x3yOAQNL78
8suQlJNirs1ns5X9OzgQbIOb7G8nTpzYuHHjvn37XGdENJNrZWfYvHnzmTNn
Mq168JULFy78+OOP6pENHorZb+WzZ8/KbhMbG+v6sQcBTrayfAdZu3btoUOH
XOf9SN8OGRycy+bgYB+Dg3PZHxz++uuvrVu3quk4PO+QwcG5bA4OsjPs2LFD
lnQ9M2LB4JAV2Gxlfw0OBFsAAAAAgKMRbAEAAAAAjkawBQAAAAA4GsEWAAAA
AOBoBFsAAAAAgKMRbAEAAAAAjkawBQAAAAA4GsEWAAAAAOBoBFsAAAAAgKMR
bAEAAAAAjkawBQAAAAA4GsEWAAAAAOBoBFsAAAAAgKMRbAEAAAAAjkawBQAA
AAA4GsEWAAAAAOBoBFsAAAAAgKMRbAEAAAAAjkawBQAAAAA4GsEWAAAAAOBo
BFsAAAAAgKMRbAEAAAAAjkawBQAAWYf8rNK/f/+ePXu+++67llXJycnbtm2b
MWPG+PHjv/nmm/j4ePu7/fXXX2NiYiZMmCB3PmDAgKlTp65evfrw4cMeNhk9
erSshix/8+bN9BwJAMCEYAsA8DsZKBYsWHDkyBF/VwTB3xbDhw8PSTFmzBjz
8pMnTz7++OMhJsWLF1+5cqXnvV24cGHSpEkVK1YMSUWLFi22bNnidtuRI0eq
MsOGDfPV0QFAlkWwBQD4V2xsbJMmTeTH+3/+85/+rktWF/RtsWPHjuzZs8sD
vP/+++VHGr385s2bDz/8sIqZuXLlKly4sPo5W7ZsW7duTW1vMvYWKlQotUhr
9uSTT5r/nHLt2rVixYqpv8JnJwDwEsEWAOBH8m0oR44c6sN/sIYppwj6tpDp
tUqVKuoAZ8+ebV4VHR2tlvfv3//GjRtyybfffluwYEG5pHLlyq67SkpKeuON
N1wDrAyqdevWrV69ev78+S2rWrZs6XrJ8UcffaTWVqhQISEhIeOOHQCCHsEW
AOBHP/zwg/7kv2rVKn9XJ0sL+raIiopSR1etWjWZTM2r2rdvL5fLTGpe/vnn
n6vy586ds+xqwoQJljwrl1y+fNlc5vvvv3/sscfMxZ555hnLfhITEx988EG1
1nJpNAAgTQi2AAA/Cvow5SDB3RYJCQnqul9p3rx5lrUVKlSQywcPHmxeuG/f
PlV+586d5uXy15w5c+rXqk2bNq6XGWuvvfaaOdtu2rTJUmDKlClqVeHCha9f
v+7dUQJA1kWwBQD4UXCHKWcJ7raYNm2azo/qYmOz1q1by1XNmzc3L1y8eLHa
JC4uTi9MTk7W1zNLbdu29TyncVJSUseOHc3lLQUuXbqUO3dutTY6Otq7owSA
rItgCwDwCxkuLl68uHz5cv2Zf968eRdTpJYU5NvQ999/P3Xq1MmTJ2/YsEGW
9LD/a9euqb0lJiaqJUePHp0/f/77778v48OSJUsuXLhg2eTUqVMLFy6cMGHC
lClTvvvuuzNnznje861bt9SS+Pj4NWvWyD3PmDFD/nDlyhWbL0Kajujq1avm
I5LVkEch/+iyZctkOHK7yenTpzdt2vTxxx+PHTv273//+4IFCw4ePOhazE5b
yGNUSzycndRlLLeLpqPmaXpl7kq2VOnSpdWhvf76664FxowZo9ZGRUXJ6CqX
7N27t1SpUnJJWFiYueTWrVv1q5QnT54///zzrn/90KFDoaGheqv9+/dbCjz/
/PNqVcmSJeVHKS8OFACyLoItAMAvBg0aFJIKGXkshWVa1LcimsmF69evd7v/
qlWrqjIzZ86USfOpp54yh4uQlMlvR40apQpfvnw5IiJCzZer5ciR46233nI9
u6f3LANyXFzco48+atlz/vz5hwwZYrnj0vsj0uXnpJD111vlzZtXhnFdcteu
Xc8880yBAgXcvrzVqlXbtm1bWtvi/vvvV0s6d+6c2kEVKVJElYmMjExfzdP3
ytyVPvcqyZjpWkBm7TJlyug/VK9ePX2x8ddff20u2b9/f70rtxnZrQ4dOsjm
aNmy5XvvvXfq1CnLWvO58gULFqTvGAEgiyPYAgD8wnLvodm4ceN0MZkrBwwY
kFpJSYbKwYMHu57n0k9vGTNmTI0aNVLbXOYIGTR0qHH1/PPPp7bnXr166fOA
rmQxt+d8031E5cqVUwVefPFFS5SWJkyYoIrJIJ8tWzYP+w9Jeb6M+apXO21R
smRJteS5555LrU31s2+6d++ejpqn+5W5q27duqk9VKxYMbUye/fu1S2r5MmT
Z+rUqeYyd+7cue+++3SBPXv22KxAQkKC3Da1tUlJSWoGZqlr16429wkAMCPY
AgD8Ytq0afXq1dORRypbtmy9FOaTVh06dDBnDRlMuqVQs/1oPXv2tOzfElKU
UqVKNW7cWIeIkJQzhuHh4ernnDlzyghcu3ZtSzC0vK+57rlw4cIRERGjR49u
3769+XRklSpV9IXQ3h+R+bWykBVW5wF/++03S8U6derUv39/mTTlC2telT9/
fn1O2U5b+CTYeqi5N6+MZzJR6ufS9u3b10PJmzdvLlmyZOjQoS+99NL06dOP
Hj1qKXD69Gnza2uZWtkb7dq1U7uVr6GHCAwASA3BFgDgR54nLFq7dq1eK9Po
nDlzzGu/+uorfbVtaGjo9u3bzWst8VPm2b1796pVMtA1b97ckrDatm0rY4sq
IN/v6tatq1cNHDjQw55r1aqlN5R++eWXEiVK6LWTJ0/21RFZ4mHNmjWnTp06
b968rl27yvSnyvTp00cX+Nvf/ma511W+QZcvX14XsExV5LktfBhs3dbcm1fG
M/NdsV5e6Ltjxw69q9atW3uzKwv9IF3pp59+8uGeASCLINgCAPzIQ5hKTEys
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
rc2r8ufP37BhQxk5ZfIyLy9dunRcXJx5z5kWbCV5CDLetmrVSj/iR+nbt6/r
btN9RHeNh+vXr9f3coak3FLaq1ev11577dFHH7VEWuWee+65deuWzba4cuWK
Jb3K1KarZJGOYOvNK+PZnTt3dLukNvNVOkyaNMn8amt6amiLwYMHe9jb888/
r4qVKFEitRu3AQAeEGwBAP7Vs2dPSwSQcUavTUhIkInAbYLQZBY4ePCgZbeZ
EGxlhJF/OrVaDRw40O29qOk+IjvxcMiQIR52K7344osTJkzQv65cudK8uee2
iImJsWRbsw8++ODll19WP6cv2Kb7lbmrbt26qc0LFizotlHSZ/78+frqaA8K
Fy4cHR3t+e/q89G9evXyVfUAIEsh2AIA/Ov27du9e/cuXry4DgKus9du3bq1
Xr16lgs7paJFi0ZFRV2/ft11tzVr1lRlWrdu7fbvtmnTRhWwXJGrdenSRRWw
PH7FHJlPnTrVsmVLPe2P0qBBA0tgdJWOI6pYsaIq07FjRw97Xrp06QMPPGDZ
bf78+eXrsGXLFllABkO9vF+/fuZt79oWBw4caNSokfn8rzpb/cUXX8i1AwYM
cJvObNY83a/MXS1evFjvZ9OmTenYQ2pkfT799FPXk/iKjLRvvfVWfHy8553I
D2N6k7v2HACAWwRbAECAkCHx559/Pn78uPn6WDMZu37//ffly5d//vnn69at
O3LkSGJiYiZXUrg7F3zjxo0ff/zxs88+++abb2St7O8qg45I7vbw4cNr1qyZ
OXOmDErHjh1L69WtnttCvt1v27Zt1qxZss7Xrl3zvsKufPvKyG3Dw8NVq0VE
RPiwntqlS5d27969atUqmXPnzZsnXz19e/Jd9enTR9WtfPnylucOAwBsItgC
AJAmd73IGQFo+vTpqtVy5crl+QE9mezq1av6Au85c+b4uzoA4FQEWwAA0oRg
60QJCQnFihVTDffhhx/6uzr/30cffaRqFR4e7pcrEAAgOBBsAQBIE4KtQ0VF
RamGK1euXGqXu2cyWY0HH3xQ1WrGjBn+rg4AOBjBFgCANCHYOtTNmzerVaum
2m7q1Kn+ro5BPx24bt263F0LAN4g2AIAkCYEW+fatWuXmtK5SJEid52sOKNd
uXJFPWA3V65c+/fv929lAMDpCLYAAKQJwdbRxowZo5rvzTff9G9Nhg4dqmoy
YcIE/9YEAIIAwRYAgDQ5c+bMoRTnzp3zd12QZomJiW+//faQIUOmT5/u35pE
R0fLaowcOfL27dv+rQkABAGCLQAAAADA0Qi2AAAAAABHI9gCAAAAAByNYAsA
AAAAcDSCLQAAAADA0Qi2AAAAAABHI9gCAAAAAByNYAsAAAAAcDSCLQAAAADA
0Qi2AAAAAABHI9gCAAAAAByNYAsAAAAAcDSCLQAAAADA0Qi2AAAAAABHI9gC
AAAAAByNYAsAAAAAcDSCLQAAAADA0Qi2AAAAAABHI9gCAAAAAByNYAsAAAAA
cDSCLQAAAADA0Qi2AAAAAABHI9gCAAAAAByNYAsAAAAAcDSCLQAAAADA0Qi2
AAAAAABHI9gCAAAAAByNYAsAAAAAcDSCLQAAAADA0Qi2AAAAAABHI9gCAAAA
AByNYAsAAAAAcDSCLQAAAADA0Qi2AAAAAABHI9gCAAAAAByNYAsAAAAAcDSC
LQAAAADA0Qi2AAAAAABHI9gCAAAAAByNYAsAAAAAcDSCLQAAAADA0Qi2AAAA
AABHI9gCAAAAAByNYAsAAAAAcDSCLQAAAADA0Qi2AAAAAABHI9gCAAAAAByN
YAsAAAAAcDSCLQAAAADA0Qi2AAAAAABHI9gCAAAAAByNYAsAAAAAcDSCLQAA
AADA0Qi2AAAAAABHI9gCAAAAAByNYAsAAAAAcDSCLQAAAADA0Qi2AAAAAABH
I9gCAAAAAByNYAsAAAAAcDSCLQAAAADA0Qi2AAAAAABHI9gCAAAAAByNYAsA
AAAAcDSCLQAAAADA0Qi2AAAAAABHy6Bg+y8AAAAAADJLRgRbAAAAAAAykw+D
LQAAAAAAAYhgCwAAAABwNIItAAAAAMDRVLD966+/rl27duPGDX9XBwAAAACA
NJBJVuZZmWpv3rwZHx+fkJDg7xoBAAAAAJAGMsnKPCtTrRDiypUrMuGSbQEA
AAAATiEzrEyyMs8mJyfLYHvr1i0ZcrnTFgAAAADgFDLDyiQr86z4L3UCVy7n
ZlsAAAAAQCCTAValWvmD+L/UcnVNMvEWAAAAABBoZFZVVyCrM7PCHXVNsnTt
2rV/AwAAAAAQSGRWVaHVfAWyWzdv3pT5938AAAAAAAgk6sk+niMtAAAAAAAA
AAAAACAz/T/SuFSY
     "], {{0, 502.}, {633.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{633.5, 502.},
   PlotRange->{{0, 633.5}, {0, 502.}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`pres = 0.03, $CellContext`temp = 
     383, $CellContext`temp = 383, $CellContext`fTfP = 
     1, $CellContext`highpressure = False}},
 CellTags->"Snapshot",
 CellID->1097270806,ExpressionUUID->"e2e64c1a-db25-41f4-ae68-67703723d883"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3QmczfX+x/EzljCNQpIUUqGIFm3SQoutUip1w9W9lFu61eW2of6yVCii
0nrbdHNTonQr7bZQJEL2ZSxjmGYzxsyY4fw/c7753Z/zO+ssZz6/4/V8nIfH
nO/v+/v+lvP1O7/3+W1N+j5wU/9KHo/nn9Xln5v++kiHQYP+OvjmWvKmx/3/
vOdv9991Z5f7H7zrb3cNurhvZSlMk39yqng8xX97HQoKCnJycn4HAAAAAEAT
yaqSWJ0x1i/SZvpkZ2fvBQAAAABAE8mqJrQGi7e5ubkydM+ePbk+eQAAAAAA
aGLiquRWSa/yR8BUK/l33759FT2nAAAAAAAEJblV0qtftjVnIJNqAQAAAACu
YGVb65zkjIwMcwZyRc8aAAAAAAARMeckS56VVJufn28O4Fb0TAEAAAAAEAVz
Ua2kWkm42dnZnIQMAAAAAHAXSbKSZyXV/v7773v37q3o2QEAAAAAIGqSZ80j
bgm2AAAAAAA3ItgCAAAAAFyNYAsAAAAAcDWCLQAAAADA1Qi2AAAAAABXI9gC
AAAAAFyNYAsAAAAAcDWCLQAAAADA1Qi2AAAAAABXI9gCAAAAAGJpk89PPl8d
zhSaCpE3SLAFAAAAAMQSwRYAAAAA4FKrfP4bGVM5kmYJtgAAAACA2CDYAgAA
AABcypxd7EyvWYdzVojktGSCLQAAAACgvBFsAQAAAACuZu4KVYJga0YM3TjB
FgAAAABQ3gi2AAAAAABXM0/zCRhmgzGVzYihGyfYAgAAAADKG8EWAAAAAOBq
BFsAAAAAgKsRbAEAAAAArkawBQAAAAC4GndFBgAAAAC4GsEWAAAAAOBqm3xK
EGzNiKEbJ9gCAAAAAMobwRYAAAAAEAdW+TjTa0CmciTNEmwBAAAAALFBsAUA
AAAAxAFzdrG5K9RXhzOFkZx+bEewBQAAAADEEsEWAAAAAAA7gi0AAAAAwNUI
tgAAAAAAVyPYAgAAAABcjWALAAAAAHA1gi0AAAAAwNUItgAAxNg+n9zc3Jyc
nKysrPT09NTU1B07dmzbti35kC1btmwGgPKXbCNboZSUFNkiyXZJtk6yjZIt
ldlkVfSGEwiDYAsAQCyZXUT52s3Ozk5LS5N9yJ07d8oOZH5+flFRkRcASuHg
wVK9Cgr2S5KVLZJsl2TrJNso2VLJ9opsC/0ItgAAxIw5UCvfubLfmJqaKvuN
kmcrekcYgOvZw+kB36voQHQvM5a9Hdk6maO3sr2SrZY5dFvRG1EgKIItAKCc
7AupoueuAljHamUvUXYXd+/eXdH7wgDigV+e3V/kLSjy5hf+8coL+bKqySgy
ol/CFbKlku2VybZH7NYbrkCwBQCULXt6zQ3iyEy4ZoVkZ2enpqaSagGUCSvV
mjy7b793b4F3T743O9+blefNzPNm7Ct+pTteplwqSDWpLKPIiDK6Sbh+2Va2
WrLt4qCt28mnV+KXfgRbAEBZ8cuz8s2yxyfbxpSYs9rsCbei573cWXeLSktL
27FjR0XvCwOIBwcPHaU1kXb5Tu+w77zXvONt9aL3jInRvWSUju8Ujy6NmHhr
jt6abCtbLdl2WfeSqugNKqJm5dPcQ6+9ueFfVmVXxFuCLQCgTFiR1uTZrKws
2QvatWvXzp07zf1+hfwhb6VQBkkFK+EeCdnWnIScmZkp66GgoKCid4cBuJ45
olroS7WZed4hX3nPnOhtPqG0L2nk4S+9v+cWNyuNH7qpVMHWrVtlC2ZOSK7o
DSqiYI+0klX37M3L9r2ycopfmUFeZqipKaOYkKs83hJsAQClZ4+0GRkZEl23
b9+ekpIi3y9Skp+ff8BH/pC3UiiDpIJUk8r2eFvRy1FeTHLPyckxV6tV9O4w
ANezzkCW+Jmxz9vrgzKItPZXzw+Kmy2wnZNs7gwg27Ej4afIuGFF2hxfpJXE
mr4nLy07b1dWXmpmXmpWvrx2Zuan2F7y1pRLBakmlWUUGVFGz7HFW4UItgCA
UrLf6VeyqnlChBSG3iuTCuZhNzJK3N9y06wiifCyvJLlY7PfCyCOWdfV7i3w
PvqVt9mEsn8N/qq4cet6W9l2yRZMtmNxvK2OM1aqNZF2w+78Ed8Wdpl8MKoz
1aVy13cPPvV9oYxu4q3abEuwBQCUhnXpaGZmpnkwhLyNfN9MKpun3sjocXz1
lnUe8pYtW+Rt+e3rAjhCHPRdWptf6P15h/eMCd6mz5X9S5qVxmUSRb4TkmXb
JVswzkZ2ESvVZuzJm7psf5uXSnUQ/7yXvNKINGVlW20ItgCAErNSbXp6urm1
SMn20Mz9lKSReM22VrDdtGlTYWFh2e7fAjjSWFfX7i3wDvnae/r4iF7Xv+vd
nl18A+SHv4x0FGlcJmGutN2/v1C2YARbtzAHVXNyi4/VSiBtXhYH8aURaUoa
lGYVHrQl2AIASsZKtRkZGdu3b5evktLsp8no0og0FZfZ1lxgK8l9/fr1ZbVn
C+CIZV1dKyn1ije9p44P/7ru3eLKloe+jGgsaVzGsq60lS2Y+QUyzjbRcWmf
71ZR2Xvz1qbmnzOpzI7jS1NrUvOzfbeT0tYLCLYAgBIwNw8x19WW5litnTlu
a663jbObk1jBdu3ataVfUQCOcOY85LzC4sfRStZoMi7M69rJh6Va46FZ4UeU
xmUSeYfORpYtGMHWFazDtel78oZ/W3j6c94yfA37pkiaVXjQlmDrFqmpqU89
9VSElb/44osvv/yyXOcHwBHOuhuSbJ127txZVntr0pQ0qOrmJLILF+IrMjs7
O5JGrGC7Zs2ayNdGZmbm559/PnLkyEceeeTbb78tq5UcY7/++utdd901adKk
ip4RIH6Y85Bz93t37fWe8myYV9fDU639bxkUdnSZhEzInI0sWzCCrSuYq2uz
9+btzsq75u2Dp433luB1w3vez9d6V6R6h359WPnVbx2UZrP1XWlbtsFWGvnq
q6+WLl1a+qa0WbVqlSyarKgKmbrsFTRu3Hj48OHm7bBhwzwez0cffWRVkM3L
rbfeKoXdunWTt7LZqVu37ujRoytkbgHEPevhNbKHs337dvmjrPbWpClp0Npx
itm+05tvvimb0KFDh9oLp02bdtZZZ1WuXPmoo4668MILv/76a/vQV1999bTT
TktISDj++OO7d+++fv36EO2b1SVfIpEH282bN8uW33PI/fffX1YrOcbOO+88
swjff/99Rc8LECfswbbxM6FeXd45LMn+84vDSuQPeRu6Bb9gK9sxgq1+5jzk
zJy8lMz8ZhPCH5oP+JJIa7n+34cdx5dmpXFtZyOXbbDdunWrfHN16tSp9E1p
079/f1m0efPmxX7Su3fvbt68uaxVaxvyf//3fzIzssdl1bnvvvuk5NJLL83M
zDQlEntld2vq1Kmxn2EAcc9+uHbXrl1lu8MmDUZ+0Pa/kfnMJ1gjv/32W82a
NWUrOmTIEKtQtqJSUrVq1RtuuKFz586VKlWqUqWKRDMz9OOPP5ahSUlJvXr1
uvzyy+Xvk08+OUS2NcE2LS1NphXhepBNusmDEpx79+79/vvvl+16jpk2bdqY
BZk9e7ZV+NZbbz366KPjx4+vwBkD3MsKtjv3eBs+E/TV8vnDUu2gL/4o73x4
tpW3IRqRSVjBVrZgsh2LMNjKXuigQYN27NgRcGhycrJs2SZPnhy2nQgbhJ0V
bLel54c9KB/wNXruYV2u14eHDZVmCbbuVVHBVrYb3bp1a9iwof1/sV+wffLJ
J+Vt69atZVfQPq7835edrl9++SWmcwzgCGDd43fbtm3yR9nusEmD0myEN94s
fbCVPbQLL7zQJC97sDVx1drSTpo0Sd7eeOON8rfMW5MmTSTn/vrrr2aojChD
H3vssRBrLKpgW1hYWL16dWlTZqOoqKhs13CMrVix4u67737ppZfshVdffbUs
3emnn15RcwW4mnVL5JQ93pPHBn2ttP3uOPDzwwZ1evuwbHvxq0EbkUlYN0aO
Ktjeeeed8t9ctgABh77xxhsytEWLFmHbibBB2FkX2G5Nz2/0jDfa16WvebNs
D6ZLzvKvIM1al9nqUYbBdvjw4fINJf0tMTHxzDPPvO2226xBb7311nXXXVez
Zs2zzz77n//8pz2j/f3vf5fKCxYsuOaaa44++mjZVXjttdfk/8vQoUMbNWok
TbVr1+67777zq79y5cpbb721Tp06DRo06Nu3rzO7hZ2itNmhQ4caNWo88cQT
pjwlJaVfv36yCNWqVWvVqtXAgQNlNvJ8F7dK/WOPPVYWTWbJjCvlc+bMkb9f
eeUVq+X09HQpuffee81b+X8nbyV1PvLII7JcVatWjWT2/JiDAmPHjrUX2oOt
2SycdtppycnJfuNmZGRUqlSpY8eOwRrP8+1ryQJu2bJl0yEbASCkDT7r1q1b
vnx55McfoyLNSmZcv369TG7z5s2ymQq2E+XMsNmHOAcFbEE20bIVHTBggF+w
veyyy6REvp7M2y+//FLedunSJc8XbD/55JMPPvjAqjxjxgwZam3/A25sowq2
q1evNlk7Xo9pEmyB0jDBNqeg+PE9DcYEfVn+8VmAode89b9sK38Ha0QmkVMO
wXb37t2PP/54VPeEIdhGzgq2W9LyG471Rvuat+Ww/nb7VP8K0mx8B9tXX31V
vvGlv9WrV6979+6yq2CVS6GEuE6dOjVt2lT+lr2FPXv2mKHdunUzZ3BJluzc
ufNRRx0lbyWLVa9eXepffPHF8vaYY47Ztm2bvb7kuKSkJKkgf5i8uX37dvuc
hJ3iCSecUKtWrcsvv1xytFkPzZo1k/KzzjpLImft2rXlb5PNZeXI4pgLnaS+
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
oyytW7fesmVLbGYjKvbrTx966KGKnh1XItgeIaxbSGXs867/3Xvb+95KEliG
lvYljdwyxbsmrbhZ67ZRshFbs2ZN5A+xhRJWtv09O29HRv7G3fkrduQvSc7/
cXP+gk0F8zf+8Zpne1mFCzcXSDWpLKPIiDL674pTbR7BFgBQRsyjPbKzs9PT
0yW9JicnS4JbsWKFBNgFCxb84CN/yFsplEFSQapJZRlFRizBE/3cxbrX1tat
W9etWxfLvV9Z88OHD7/tttvatm173XXXPf7449OnT4/8gs0Y69atW4cOHe68
885p06ZV9Ly4lXy49/vI/7iKnheUL+uEZAmhW7O8M1Z5b/uPt9EYb1SH5KwD
c02eKR5dGpGmpEHrJGSv7+nDsu2Ky5v7xT2TbffsLb7eNi27+JLbben5yb/n
b07L37S7OLEGfMkgqSDVpPLOzOIDtTL6HsWpNo9gCwAoO+ZKUhNvZf8nLS1N
omtKSsq2bdu2+sgf8lYKZZBUMJH2yLlcS8L7nj17ZNllFzGWJyQDiGNFB/44
bpuVV/zM2eTM4oOtv6Z6l6V4l2z3/rSt+PVjoNdPh15STSrLKDKijJ6aU9yU
OVZb5LtHtWyvZKsl2y7ZgsX9j5DxSgKpibdZOcUvSanpe4pfv2cHeJlB8srM
+aO+ibR7dX/4BFsAQNmy4q3sAkl0zfLJ9DF/S6G5nPbIibSGdQupnTt3rlq1
qpQPSAIA44DvnOSCouJjrHvyven7ihPuzj3elD3eHdne7SFfUkGqSeXde4tH
lNGlEWlKGjzgO1YrWyrZXslWi9tGxYHcfX/k02hfCm8V5USwBQCUE3NyckBH
7G/+1gOSzI22Vq5cGckDXwAgNHO9rbz2F3nzC4uPt0o+zfW99hYEfeUeqiOV
ZRQZcX/RH+1Ig7J1km2UdX8/TkKGcgRbAABiycq2O3fuXL9+/ZIlS2TXcfv2
7VIY9tmgABDagUMJt2Svgv2Fsi2SLZJsl2TrtG7dOtlSkWrhCgRbAABizBzL
zsrKSktL27Ztm+w6Ll++fNGiRfPnz587d+7333//nc+3AFD+zAZHtjyy/ZGt
kGyLZIsk2yXZOsk2ypyBfMSeZgMXIdgCABB75npb+122tm/fnpycvNln06ZN
GwEgVmSbYzY+shWSbZHfLf44VgtXINgCAFBRzBXHOTk55i5bshuZfsjvABAr
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
jh072i/OPeecc0pza6lXXnnFtCaJNfRzbPv16yfVmjZt6hwkiVgGtWzZMuCI
/YMo8TwDAAAAcJ1guUBhNCDY+pk0aZKVQC+66KKPPvrIedemEtiwYcN9991n
ndjcrl27EjRy8ODBIUOGmBZOPvnksFnbnIp80kknOQddf/31ZgEDjqiwowIA
AABQQmFeINj6McH29NNP//DDD8u8cYm3N998c8mCbUFBQa9evUyqbdGiRXJy
cthRxo8fL5Vr1KjhHCQzIIM6duwYcESFHRUAAACAEgrzAsHWz+zZs1944YUy
OUobjKyfsWPHRjVKVlZW+/btTaqVP8Je5Gu8//77ZpR9+/b5DWrevLmU33HH
HQFHVNhRAQAAACihMC8QbPXLyclp27atiah9+vQpKCiIcMSFCxeasT755BN7
eXJysrlKd9KkSQFHVNhRAQAAACihMC8QbPUzNzcWDz30UFQjHjx40ByZ9Xte
7dNPP20aXL16dbAplnx2AQAAAMQ1hXmBYFseioqKNm3aNG7cuAsvvDBYeIzQ
jz/+aI6uNmjQ4JNApIJVuVevXt27dx81apRV8uqrr5oM++yzz5qS//73v9Wr
V5eSa6+9NthEFXZUAAAAAEoozAsE26isXbv27rvvbt26daNGjU488cQTbOrV
q3f88cfXrl07MTHR/rSgn376qTRT7NatmyekTp06WZXNpO0l8onI3JqaMpNN
mjQxf8vchripssKOCgAAAEAJhXmBYBu5sWPHVqpUKXTMdCplsG3WrFno9rt0
6WJVTkpK8isR8pH17t37qKOOskZp3779ypUrQ0xUYUcFAAAAoITCvECwjdBv
v/1mz4YRqlat2q+//lrR816soKBAPuvvv/9++/btYSsr7KgAAAAAlFCYFwi2
EercubMVV6tUqdKiRYuOHTtaJZ06dbrkkksaNWpkT7UPPvig8zk7rqCwowIA
AABQQmFeINhGIj8/39xwSZx66qnWQdimTZuawsWLF5uSlStXWicP169ff/fu
3RU31yWnsKMCAAAAUEJhXiDYRkKSrHUc9qOPPrLKrQfxjBgxwipMTU1t1aqV
KR84cGBFzG9pKeyoAAAAAJRQmBcItpGYM2eOCapHH320vfy1114z5d27d7eX
p6WlVa1aVcpr1KiRm5sb25ktAwo7KgAAAAAlFOYFgm0kPvvsMxNgW7ZsaS+3
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
e+65JyQkxPoiZKV27dqHDh2ye8xs03ChAgAAwFlmZqZ6cm73FCigNOwFwjYH
1PdhxowZ9957r/X4rCE+Pn706NG7d++2e9Ic0nChAgAAwLRz587mzZu/+uqr
dg+CAkrDXiBsfWf0rMvXGxuqVKny/PPP//LLL3ZPer00XKgAAAAwqCfkxssF
CVvYRcNeIGy9Onfu3MyZM9u2beuuZytUqDB8+PD8+F5adzRcqAAAADBcunTJ
eBZK2MIuGvYCYeuO6tlZs2Z56Nkbb7zxqaeeUl9sZmam3cPmMg0XKgAAAAyE
LWynYS8QtlazZ89u165d4cKFXfZsbGzs4MGDExISMjIy7J7UXzRcqAAAAPnX
5cuXp0+f3q1bt0bXPProo6+//vqZM2ese65du3bUqFEPPvhg3bp169Sp87e/
/e21115LTk42d5g1a9bQoUON56XNmjV79tlnP/vsszz8UgAHDXuBsLVymbSl
SpUaOHDgmjVr0tPT7R7Q7zRcqAAAAPmUytKGDRu6PFzy3XffmbtduHChX79+
7t74tnPnTmO3Tp06Zbn17rvvtukrQ8GlYS8QtlbWsH344Yc/+uij2Tly8eJF
u7+gbNNwoQIAAORTgwYNMp9SqieH7733XseOHY03u8XFxV29etXY7YknnjB2
u+OOO9Q+X3zxxcSJE+Pj442N9913n7HbV199NWrUKGNjkyZNXn755U8//dS+
Lw4FlIa9QNhauXsRcs7kx5NKabhQAQAA8qlKlSqp54RNmzZ13vjkk08azxWX
LFmifnv+/PkiRYqo37Zu3dr59YGpqak333yz2h4SEmK+D4732MJ2GvYCYWtF
2Gq4UAEAAGykWnKHN/v37z979qz1bWuxsbHqOWG9evUSExPNjerX77333rJl
y4x32v766689e/a844471q5dm+XuTz/9tPGsUs1gDkPYwl4a9gJha0XYarhQ
AQAAbPTBBx/4+NwvKiqqffv2K1euNO/bo0cP46YSJUqoev3ss8+cC9cdFbwb
N258880369SpY9w9KSnJuImwhe007AXC1mrp0qULco/zWezyCw0XKgAAgI3c
ndbJgwkTJhj3PXz4sPFyYlNwcHDTpk3feust9eTZ+bPs379/2LBhjRs3Ll68
uPUBAzts//3vfxsHvk+cOOG8/dChQ8b2I0eO2DWbs+uZZ9++fcZ9T5065Y/Z
8pKGvUDYwkrDhQoAAGCj2rVrZzdsg4KCvv/+e+PuqklffPHFmjVrZtnn1ltv
/f333419pkyZou7ifGvRokU7deqkOrcghG2ZMmWML+rBBx903l63bl1je/Pm
ze2azdn1zFOiRAnjvn369PHDaHlKw14gbGGl4UIFAACwiwrJ4OBgI0nKli2b
anH58uWzZ8/u2bNn6tSp0dHRZpk2a9Ysy0MdPnxY7dOxY0fzvW9PPvmk2p6Q
kGBUbXh4+LPPPrto0aKDBw8aZ4saOHCgsee5c+fMeQhbuxC2Bg17gbDNIuMa
f38W87zuetJwoQIAANhl/fr1Zqt27tzZ8847duyIiIgw99+5c+fMmTNHjBih
tjvvpirYaNv4+Hj12+HDhxv7q6TN8oAqoIybVDsbWwhbGxG2Bg17gbDN4sMP
P1TLddWqVX56/KNHj/bq1euee+7x0+PnCg0XKgAAgF0mTZpkhqr5zlkP7rzz
TnP/adOmGb9o166d8z5paWlGyqlnnuq3nTp1Mnbbt2+f825r164NCwszbjLf
fHrlyhVjyz/+8Y/c+ypt5i5s77vvvsrX9OzZ067ZnF3PPIStXxG2WUydOtX8
y+fXX3/NxUe+cOHCc889Z/wfPOvrUrSi4UIFAACwS9euXc1QdT7dsTvmNWqV
xYsXqwgyfj1u3Ljdu3dnZmbu2rVr6NChxsbRo0eru6hENX778MMPGwF78eLF
efPmGRe3Nfz222/mpzBeGl2rVq3vvvtOPZ/339eeZ9yFbSAhbP2KsM1i6dKl
ISEhxpJTv1B/stasWaP+/rmex9y5c6f6+81cyUqvXr1ya2B/0HChAgAA2KVi
xYrmszjzDE4eqCeQ5v4HDhz44YcfQkNDC7ly8803Hz16VN3l4MGDRYsWNTYG
BQVVqlTJfEaq6tX4xZdffml+inr16pkPosLZj198XiFs8xcNe4Gwtdq6dest
t9zi/HdOfHz85MmTzXPW+ej48eMzZswwT2RniIyMfOedd66zlP1Nw4UKAABg
izNnzphP5KpVq+Z1f/WE2TzMqkLG2Lh69eqGDRs6PyeMiYnp3bv3pUuXzDtu
2rTJOVeVmjVrLl++/MqVK8ZL/rp27WruvHv3bvNAcHBwcEpKSq5/4XnMXdhe
vHjx7DXO36ssTp48+e2337799tuTJk3auHGj+d1Q3zrjvpcvX3be//z588Z2
lTbuHtPcJ8t9fZlHVcCiRYveeuutN998U/1YU1NTje2ErV8Rti6p5Tdq1Cjr
/1tTf4GodThr1qxffvlFrVjnv0PUXdSW7du3z5kzp1+/flWrVrX+T7k77rhj
//79Nn5dPtJwoQIAANhi2bJl5nO5Hj16eN45PT390UcfNffPclqVxMTEhISE
FStWHD582OXdMzMzjx49+sMPP6in0yqgvM6mHkc9t8xSXvmUu7CtX7++sf3O
O++03kt9B3r16mWeYtoQHh7erVs3VbX9+/c3tmR5tWTZsmWN7Q899JC7eWJi
Ylze1/M8Bw4c6NmzZ5aIiIiIUHWgwoGw9SvC1oM9e/aov77M14G4VKRIkXLl
yrm8iLazmjVrfvrpp3lwvuVcoeFCBQAAsMWYMWPMZ3RTpkzxsGdycvLf/vY3
52eAa9asybM587scnBX5559/jo2Ndff0u0WLFg888IDx6yz/R8KXlz2bEZrl
vh7m2bJlyw033OBuHvPs1oUIW/8gbL06cODAwIEDzfPRZdett966cOFCzV97
nMXjTuyeBQAAwE7t27c3n9dt2rTJ5T6JiYlz585t0KCB85PAbt265fGo+Vp2
w/bUqVPOh5bUrx966KEXXnhB/bycL7dkyIOwPX78uPkuaaVw4cJNmjTp2bOn
2t+8CLIpP4bt4xZ2T5QVYeujM2fOzJo164EHHnBese4EBQU1atRozJgxP//8
s92D54SGCxUAAMAWzsfgatWq1chJ/fr1K1WqpApIPffL8mywQoUK5tV54Ivs
hq3qTfO7fcsttzi/unvbtm3lypXL47BVDWt+uqpVq+7evdu8acOGDaVLl3ae
p3fv3tn41mhJw14gbLMrNTV1zZo1U6ZMGTlyZK9eve666y71R6lJkyZdunQZ
MmTIhAkTvvjii9OnT9s95nXRcKECAADkvUOHDnk9omHVsmXLs2fP2j17PpOt
sD127Jj53VYFev78+SyPdvTo0cjIyDwL24MHDzrPo6Ipy6OpHZyPIxO2/kDY
wkrDhQoAAJD35s6d63vPhoaGtmvX7quvvrp69ardg+c/2Qrb999/3/y2v/TS
Sy4f8Omnn86zsH3vvffMz2VcmNhq8ODBhK1fEbaw0nChAgAA5L3hw4ebMdK5
c+eRFm+88caXX365adOmY8eOpaen2z1vPpatsL3vvvvMn4u7l3yfPHnSfIm4
v8O2Y8eO5jzuDtYfPnyYsPUrwhZWGi5UAACAvNeiRQszRnbu3Gn3OIEsW2F7
6623GhujoqI8PKZ5WR9/h+0tt9xibCxZsqSHeYoVK0bY+g9hCysNFyoAAEAe
S09PL1KkiBlQHJD1q2yFrXluqPj4eA+P2bhx47wJW/OqQ3Xq1PEwT61atQhb
/yFsYaXhQgUAAMhju3btMg/XWi9aityVrbAtVaqUsbF27doeHrNLly55E7bh
4eHGxkaNGnmY5+677yZs/YewhZWGCxUAACCPzZw50wzbZ555xu5xAly2wlb1
o7GxfPnyHh7zrrvu8hy2qnzd3ddsVV/C1nzN88033+xhnttvv52w9R/CFlYa
LlQAAIA89ve//90M26+++srucQJctsL2kUceMTaGhIR4OAd11apVPYdthw4d
XN5RRY35o/clbBs0aGBs9Pye37i4OMLWfwhbWGm4UAEAAPKYWSvKgQMH7B4n
wGUrbMeMGWP+aLZu3eryAZOTk8PCwlzG6U033WRsb9Wqlcv77tixI1th27Vr
V3P//fv3u3zMpKQk8yzNhK0/ELaw0nChAgAA5KUrV66EhoYaGRITE2P3OIEv
W2E7f/58MyTvv/9+lw/42muvuYvTatWqGdvLly+fkZFhve+4ceOyFbaff/65
ub+7aB09erTXffIRDXuBsIWVhgsVAAAgL/34449mhrRt29bucQJftsI2PT3d
vMJOUFDQ+vXrszza6dOnY2Ji3MVpy5YtzZsmT56c5b5LliwJCQnJVtheuHAh
IiLC2K7uqwory2OeOHHCvNYPYesnhG2+85///Of5559funSpj/sfOHDgRzcu
X77s8i4aLlQAAIC89O6775oZ8tJLL9k9TuDLVtgqq1evNn9A4eHhs2fPNm/a
unVr+fLlCznJEqcqZs2boqKivv7660uXLsm1/JwxY4ba4uG+7uZ59dVXzbsU
KVJk/vz55k0qjm688UbnxyRs/YGw9VFqaqrdIzhcvHixZs2a6o/DkCFDfLyL
eTo4q59++snlXTRcqAAAAHlJPdcynzItXrzY7nECX3bDVnnggQecn9nGxcW1
a9dOPVU238rqLk6TkpKy1GtYWFjlypVdPmH2MWzT0tKc35StlCtXrn379vHx
8dbHJGz9gbD1UbVq1Vq3bv3JJ5+o74BdM6i47tChg/HHwfewdX4ZBmELAAAA
W2RkyB9/SEqK61tzELaqJZ955hl3T3TNSwJZ41SuvSs2S9s6e+211wYOHJit
sJVrvdyiRQt3j6lSomnTpsav+/Tpk/3vn1407AXC1kcVK1Y01mF0dHS/fv0S
EhIyMzPzcoDNmzfXqlXL/KPhY9gePXrU2P+bb745Z+HyzfKi5UIFAABAPnXs
mHoqK8uXy5IlcuiQ633MFw93797debvZp3fddZfLO6pnuTVq1HA+Slu0aNHH
HnvsypUrJUqUcBe2yp49e1RpmqcIK3Tt7bENGjQwXtVsHrLv27ev7/OkpKS8
9dZb5cqVc05aNU+vXr1UKHXs2NHYMmDAAJ++cRrTsBcIWx+ZYWuqUqXKuHHj
Dh8+7O9PrQr66aefDg4OLnTt3fHZCtvFixcb+6ufne+fUcOFCgAAgHxq505H
0hofP//sl0+RlJS0cuXKjz76SNVNenq6sdFz2BpUv2zevFnd8fvvv7948WKu
DJOamrpt27a5c+fOnDlzx44d5jyBRMNeIGx9pNKyaNGi1hcVqNJs1arV7Nmz
k5OT/fSp1R8N43OVKVNm1apVxqv3fQzbl19+We1cqVKlbH1GDRcqAAAAdJaS
Im7OSyonT/7/sP3uO8mzlz36ErbIGQ17gbD13ZUrV7744ou2bds6nwDcVKRI
kT59+qxbty7XX6KswjYmJmb8+PEXLlyQ/10r3Mew7dKlS6Frb1VYs2bNiy++
qP5Qjxo16ttvv3X3ImSDhgsVAAAAurl6VU6fll9/lXXrHNG6bZvr3VJTZelS
xw5r1siOHZKWlkfjEbb+o2EvELY5cPLkybfeest853gWlSpVGjNmzMGDB3Px
M6Y5/fnPVtiqYVwO2bx5cw8TarhQAQAAoImUFNm3TzZu/L9cNT9WrnR7lxMn
3B7P9R/C1n807AXC9nrs2LHj2WefNc/hluUlynfeeeesWbOMq2LlIt/D9vz5
8+Y85cuX792796BBg8xTjteoUUP9vFze8XE3cvcLAQAAQH6kwta5Z50/cvuZ
73UhbK+fuy7QMA0I2+uXnp7+3Xff9e3bt3Tp0i5fotyvX79c/J74HrZbt24N
Dw8vdO3kcuYx39TU1AEDBhizjR071uUdNVyoAAAAyGNXrri9yXjtsfPHsmWy
aZMkJeXhfN4Qtv6jYS8QtrkoIyPj66+/dnmOKUUF6dy5c6//s2TrpciZmZkn
TpzI8o5a9WMyTvLcuHFjl/fScKECAADAq99++23EiBH169ePuUb9Qv1WbfT9
EdLSHOd62rnT8X5YlavuTo+6e/f/9ez69Y5fnzkjGp76l7D1Hw17gbDNFQcO
HHj99ddVJzpfQsule++994z6k38dshW27vTp06fQtWvyujzVlYYLFQAAAB6k
paUNGzYsIiIizEJtVDeleTxnU1KSimLZsCHr22bdXdny4kU5ftxxViidHTly
ZN81iYmJds8SaDTsBcL2eqg/I++///4dd9zhsmFVNvbt23fQoEExMTFZDt2m
pKTk+JPmStiqv9zUg6i/5QhbAACA/E5Fa9u2ba1J60zt4KFtd+1y/Z7ZLVvy
8utAvqFhLxC2OXDlypW5c+d26tSpcOHC1p41Ths1e/Zs9b0y9lcZ+8knn5iv
hVBWejhnnDe+h+3EiRMrVqwYGxtr7eh27dqpB6lbt67LO2q4UAEAAODOsGHD
PFetQe3m7pKPp065qNrly2Xr1rz9SpBPaNgLhK3vMjIy1qxZ07dv32LFirk8
RFuhQoWXXnrpwIEDLu+uvi3mns8880yOx/A9bOfMmWN8unnz5jlv37Fjh3Ep
XncPouFCBQAAgEu//faby1cgmwoXdnyEhqr/Rsyf7/r9tmlp//ciZPXfDRsc
L0tOTBR3FQxo2AuErY9efvnlcuXKuexZ9TdJjx49Vq1aleHtD79xyqZC1y4j
m+NJPIRtz549u3TpMmHCBOO3Z86cKV68uNr5hhtuMH8o27dvr1atWqFrp2s+
efKky0+hFqr6UtLTXXy4w/7sz/7sz/7sz/7sz/627D9ixAjngDU/VMlaP+6/
f8Tly+LyY+dOOXBALlxwfSsffDh/ELb5l9mkzho3bjxt2rQL6s+/b+rVq2fc
sVevXjmexEPYRkVFqZvatm1rbvnmm2/MF0jXqlUrPj7eOL2V2nPBggXuPoVa
qKtWuX6fhbs3B7M/+7M/+7M/+7M/+7O/LfvXr1/fCFvVrSEhYcHBYYUKefio
X6iQ8MHHdX4QtvmXc9iWKVNm5MiR2TpxuiEuLi40NLRSpUpz5szJ8SS33nqr
mmHo0KHWm6Kjo9VN7du3d96YkJBgtLBBDXDbbbft3LnTw6cgbNmf/dmf/dmf
/dmf/fPL/iVKxLjq2cLXPqxhG2N7E/ERAB+Ebf6lwrZw4cIPPPDA0qVLr169
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
/fffPTxst27djD2rVauW5ab//Oc/Q4cOVRmrPmnJkiXVp3jiiSd+/vlnv3x5
bqiAVj/wsDDXSdumjaxYIXl+WSEAAJBzycnJ6olHdHS03YMgYGnYC4QtrDRc
qHkgMTGxefPmnl8e/NRTT5n7Ox+0HT9+vIdHfvrpp43dVLr6/+vIhl27HOeG
Cglx0bORkTJwoPzvPcEAACA/IWzhbxr2wv9r787joygS/o/ngARCJIAkgJwq
QeVQEBEV5XrkUEQBgeWIoJwKeLGKcqzctyKiuCKCJ8jhyoKsiHLLi0NWkRUE
ARUEFeERCDHZXKR+Rer31Kud7pkkk+mZ7snn/QevUF3VXT1d6elv+iLYwmyI
Qaj7EiQ///zz1VdfrYNqUlLSgw8+uHTp0r1798owq69JLl269PeGd7Xqk7aJ
iYke77E1evLJJ1W1+vXrB2VtCrZjh+jcWURGWkTaatXElCnC+9oAAACnI9gi
4IaYhLpHngi2MHPgQLVVbm5uy5YtVfaMioqSOdTjDTsjR47Umbd///663HjS
tnfv3t7m36RJE1WnU6dO9q1FIX36qWjd2vqq46uvvnQjbWZmqLsIAACKh2AL
uzkwLxBsYebAgWqrVatW6Xw6d+5ccwU5sOVXg76j9siRI3qS8fHIK1euNLf9
7LPPdIXFixfbuBo+5eVdeuds06bWkbZRI7FkCW+kBQAgTBBsYTcH5gWCLcwc
OFADRY7h0aNHjx8/3liYkpKigufVV19tbpKTkyM/EOOdtt5O2srMO2nSpIsX
L+qpGzZsqFSpkppapUqVzFCcDc3JEW+/La691jrS3nqrWLOGZ0MBABBWCLaw
mwPzAsEWZg4cqAHxyiuvqBOv3bp1M5Z36NBBZc8ePXp4NDl58mTbtm09HiHl
46St1KhRo8cee2zChAnt27cvVaqUKpQ/yAgcjJU0yMiQqyxq17aOtO3aiU2b
gtwjAAAQDARb2M2BeYFgCzMHDtSA6N+/v4qZHm+ebdOmjSq/8847jeUrVqzQ
51ulm2++Wf/8wAMP6GrGk7aWYmNjg3wRcmqqmDFDJCVZ5NnISNG1q9izJ5jd
AQAAQSWP2OPi4pLkoQBgDwfmBYItzBw4UANi3LhxKmnWqlXLWC7Xt0yZMt26
dVu7dq0qOX/+fL9+/YynaOfPny+Ht37FrSw5dOiQnoPHSVtjpJVh+Ztvvgna
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
09PVFbnS4sWLPaZaBtvhw4f7nud3331nbjVt2jRjHWOwff31133M7eeff27X
rp2uHBUVdeHCBf9W1uyFF15Qs61YsWJaWlqgZgsAJRDBFgAAhMrcuXN1sjNf
5WsMtpUqVVI/VK1a1ffVyJMmTTIHWx9nbH0HWyk3N7devXq6/oYNG/xbWbMz
Z87Exsaq2c6aNStQswWAEohgCwBwo9TU1NP5srKyVMm5c+c+/vjjKVOmvPzy
y/IHHy9qOX/+vGqbnZ2tZvX+++/LhsuXL5dBw7KJ/AbcuHHjnDlzZs+e/emn
n8q2henkb7/9JlvJ3DRx4sTFixfv2rWrMCf7itRKrrVaF+Mzl7zV8biRM2if
gzdy29WoUUPFuieeeMJcwRhsH3nkEf2z76uR69evr6rdc889AQm20owZM3T9
yZMne6t24sQJGXtfeeWVCRMmvPjii++8887Bgwd9z7l37946sMvjqAJ7AgCw
RLAFALhRgwYN9Hmu48eP33zzzR5PwS1XrtyTTz75+++/m9vqGxvfyBcTE6Nb
lS1b9oUXXjBWlhlZ1zeShevXr/fWPRln+vbtW6pUKXPD5ORkmaQszzn60apa
tWqqQvfu3b11Rp/rTElJCfLn4NvSpUv1fA4dOmSuYAy2MlBHRUWpn4cNG+Zt
nv/5z39UHTke3nvvPd28mMF2yZIlur7Hxyh9+eWXXbp0iY+PN38+Efn3Du/c
udPbnDdt2qRryiBcYE8AAJYItgAAN9Jn5R588EF91s9MVjO/ouXKK69UU/v1
6+cRh6WpU6eqahkZGcOHD/c2ZxWdHn/8cfNZtsOHD1euXNlHQ6lXr14eKdW/
VlWrVlWT7r//fm+fVYUKFVQdjwcf2f05FEiujppDvXr1LCsYg+2BAwfatm2r
fq5SpYq3q5H1+2Fvu+227du36+bFDLbTpk3T9ceNG2ec9Nprr+nE7Y2s4O1K
Y7kiCQkJqlrPnj0L7AkAwBLBFgDgRjrYahUrVvzLX/4iQ8c999xjPPl43XXX
qUttNR3oLAPITz/9pKp17tzZOEmGr175kpOTjeX9+/c3zjwrK8t4ZjMpKUk2
eeyxx2R49Fiu8USnf61EgIKtHZ9DgXJzc+UmU20HDRpkWccj2C5YsED/d/Pm
zZZN9Mf48ssvByrY5uXltWzZUtdftmyZnqRPECtyjbp27frwww/Lj7pZs2bG
SeXKlbO8fkDq1KmTqiO3lPxYfHcGAGCJYAsAcCOPYNu4ceMTJ07oqTt27KhS
pYqeOnv2bGNbj0B3ww03zJkzZ/HixT179pR5TdVZt26drpCQkPDGG28Y57By
5Up93WlkZOSuXbv0pM8//1w3HDx4cGZmpp6Uk5MzYsQIPVUvy+9WIqDBNrCf
Q4G2bdum5+ztElyPYHvmzBl9nfYjjzxirv/FF1+oqdHR0adOnQpUsNXPLlaM
V00PHDhQl8suedzFLI+I6tatqyt4O2lrfOuuHAm+OwMAsESwBQC4kTHYyoBm
fnTSvn379OW1lSpVMp4IMwa6mjVrpqamerTNzs6+9tprdV6zfAru3r17dchq
3rx5Xl6eKp86daqeublXcln6euMyZcroN7z410oELtgG/HMo0OjRo/XSf/zx
R8s6HsFWlnTo0EH91/Jq5JEjR6qpd955p/xvcYKtPKQ5evTomjVrWrVqFWFg
/AzlcZHcHHrdLa+O3rhxo27br18/y9XcvXu3rjN27FgfHxoAwBuCLQDAjYzB
1uM0ota9e3ddZ+vWrbrcGOg+/PBDc8NVq1bpCoMHD/bWhyFDhuhqX375pSp8
7rnndOGKFSssZy7rvP322zJ25eTkFKeVCFywDfjnUCC9deLi4rzVMQfbRYsW
6ZJNmzYZK8tMXb16dTVJVhOFDrYymFf4s/Lly0dYkZNOnTqlZ/L555/feuut
SUlJctJbb71luQpZWVn6Dtxu3bpZ1snOztZ/hOE2WwDwD8EWAOBGOtheccUV
xqBnJMOsjiRjxozR5cZA98svv5gbyhCkK3zyySfe+vCvf/1LV3v//fdVofEK
W5lWhg4dKku89VDzr5UIXLAN+OdQoNtuu001qVWrlrc65mB79uxZfQO1x9XI
enPLCufOnROFDraFlJCQsG7dOst+yqMjb/fGHj9+XD8bqnPnzt7W9PLLL1d1
br/9du+fGQDAK4ItAMCNdLBt3769tzoyrOlU0rdvX12uA125cuUsGw4YMEA3
HDRo0FNepKSk6GqTJk1SbWUa1SFFK1++fLdu3RYuXGi8EdjIv1YiQMHWjs+h
QHrpTZo08VbHHGyF4VFLSUlJxjipX3R73333qZJABdvLLrts2LBhP/zwQ4Er
JQ+Tvv766xUrVkyePFl+LFdffbVxPvfcc4+3hvqSb9mkwKUAAMwItgAAN9LB
1sclsnl5efrsnrrpUtGR6oYbbrBseMcddxQ+9SgPPPCAbr5v3z4fbyC66aab
5syZ4/GUIb9bBSTY2vQ5+KbvTm3Xrp23OpbB9p133tGF+mrknJycxMREVaif
WlzIYCvHxhiTiRMnvvjii3JZMqgWeOp87969/fv3r1Wrlu8Px0ew1U9d9nFh
NgDAB4ItAMCNdLAdOXKkj2qVKlVS1W655RZdqAPdXXfdZdmqdu3aRQ10xuAs
nTx58r777tNPVTKTWdJ8BtCPVgEJtvZ9Dt5kZGToJl27dvVWzTLYpqamxsbG
qsKHH35YFa5fv16VlCtXTsf/AL7H1ht55CM3mY8PxPhuYh/B9t5771V15Krx
xh8A8APBFgDgRjrYDh8+3FudzMxM/Uwe4+2NOtDdfffdlg2NbyCdVjjGd5tq
v/3224IFC7p166bvsjSSodv4JCL/Wulg6yMe6hjoLdja/TlY0mdsW7du7a2O
ZbCVunTpogr11cgPPfSQeR3tDrZy0fJj99hAZcuWvemmmwYMGDB37lx5RHTx
4kX9ul4fwVZ+CKpOfHy8f50BgBKOYAsAcCMdbH08kOfIkSM6bhivWC4w0PXt
21c3lN99xe9tTk7O559/Pnbs2OTkZGMI8vYo3cK30sG2U6dOljORX826YVGD
bcA/B8uly03prY63YPv+++/r8k2bNmVlZemz0mvWrNHV7A627777rnG7PP74
4/v27fM435qXl6efiuxtG0kNGzZUdeS29q8zAFDCEWwBAG6kg23dunW9vTt1
+fLlOnTMmTNHlxcY6CZOnKgb+nga8NmzZ2W0+fjjj2Xm0pe/nj59etu2bQsW
LNiyZYu5iezqtGnT9Mx79epVnFaSvi3X23nPr7/+2u9gW5zPoUD6qciJiYne
6ngLtvJoJC4uTpUPGzZs7dq16ueKFStmZ2franYHW32aWJIztKzz/fff6zre
Pmdh+ANFq1at/OsMAJRwBFsAgBsZ32Nr+Q5WqUmTJrqOzBe6vMBAt2zZMt3w
jjvu8NaHcePG6WrqVt+srCz9uKq2bdtatpIpVV8bfOONN/rdSpG5XhXWrFnz
4sWL5oYTJkzwO9j6/TkUhn6PbVRUlLenM3kLtlKPHj1UuYyEDzzwgPp50KBB
xjp2B1t9Jj0yMvLChQuWdSZNmqQX5O0xWXLjli5dWtUx/tUCAFB4BFsAgBsZ
g+3111+fkZHhUcF4magxCYpCBDo5N+NzkyyDj8xZ5cuX17nm0KFDqrxNmzaq
sFSpUjt27DA3/Pbbb/Wc9ROf/GsltWrVSpcbz0ora9asiY6O1hWKGmyL8zkU
aOzYsXrOu3btsqzjI9h+8MEHESYbN2401rE72Orrh6Vff/3VXOG9997T1yFH
eP/jgFw1XWfChAn+dQYASjiCLQDAjYzBNiL/XajHjh1Tk/Ly8mbOnGkMFPql
MEqBgU76xz/+oZvLvPbEE0/I7zg9dcOGDdWrV9cVOnbsqCf9/e9/1+XVqlVb
u3atcbZfffXVddddpyvou2X9ayXJMKvL4+LiVqxYoU4d/vzzzwsXLtTX6ypF
DbbF+RwKZEyds2bNsqzjI9jK0B0fH29cO/m5eZyztjvY9uvXT89EfobGk7Zp
aWmLFi3yeMC1t9cqGbf+F1984V9nAKCEI9gCANzII9hK0dHRMt62a9dOv+JH
8bg8VRQu0Ent27c3zqdcuXK33nprly5dGjRoYCyvUaPG8ePHdav09PQbb7zR
WCE5Ofmee+7p1q1b06ZNjeWNGjXSl+D610rk39/qkV5jYmL0CnrwI9j6/TkU
KDc3V28pb09V8hFsJbk6xg48/vjjHhXsDrbr16/Xj92OyL9Z+MEHHxwxYsTN
N99s+c6myy67LCsryzyf3r17qwpVqlTxdsM4AMA3gi0AwI10sI2NjZVxwDLH
SY8++qj5ztNCBjoZNmVWMiYXM7nogwcPejQ8efLkFVdc4aOVVK9ePVmt+K1E
/vWuHtnWaNq0aYMHD1Y/+xds/f4cCtSrVy/VPCEhwfIGYd/BdvXq1cY+mK9n
DsJ7bJ988knfm6xfv35Tp07V/121apV5Jvqst8zFfvcEAEo4gi0AwI10sG3T
ps1PP/1055136sfvKLfccotliJBkPFR17rvvvgIXtG3btmbNmumHO2mVK1eW
WSktLc2yVWpqqkyUiYmJHq3kfJo2bTp58uT/Gi7oLWYrkX+T5m233WY8S6jO
X7/55pty6vDhwy1zUxA+B9+WLl2q57NhwwZzBeNjqQ4fPuwxNTMzU7/qV4Z0
c/MvvvhCN3/++eeNk4xX//p+6VKBli1bVqdOHY+PpVy5cu3bt9+6dausICO/
Lh86dKhHc3kkpqd6G7EAgAIRbAEAbmQMtqokIyNjy5YtMrB89NFH5hBUTDk5
Od9+++2KFSsWLFjwySefyPkbXyvjjaxz5MiRjRs3yoAp09PevXvtayXyX1m7
c+fO119/XfZQZuTCNCkq/z4Hb2TbmjVrqu34l7/8JYD9DDL5sXz33Xcff/zx
a6+9JsPp0aNHC39F8cCBA9UnULduXY934AIACo9gCwBwI3OwhRvpS4JjYmLO
nDkT6u4E2/nz5/Vl5G+88UaouwMALkawBQC4EcE2PKSnp+tLrz2uFi4J5s2b
p9a9Zs2axTn3DQAg2AIA3IhgGzamT5+u75O1fGhwuJIre9VVV6l1f/nll0Pd
HQBwN4ItAMCNCLZhIzMzs2HDhmprzpkzJ9TdCR79DuKbbrqJu2sBoJgItgAA
NyLYhpMvv/xSPdK5UqVK586dC3V3guHs2bPqNb4xMTH79+8PdXcAwPUItgAA
NyLYhpnx48erDfrUU0+Fui/BMHLkSLW+U6dODXVfACAcEGwBAG508uTJQ/l+
/fXXUPcFAZCdnT169Ognn3zypZdeCnVfgmHWrFlyZceMGZOTkxPqvgBAOCDY
AgAAAABcjWALAAAAAHA1gi0AAAAAwNUItgAAAAAAVyPYAgAAAABcjWALAAAA
AHA1gi0AAAAAwNUItgAAAAAAVyPYAgAAAABcjWALAAAAAHA1gi0AAAAAwNUI
tgAAAAAAVyPYAgAAAABcjWALAAAAAHA1gi0AAAAAwNUItgAAAAAAVyPYAgAA
AABcjWALAAAAAHA1gi0AAAAAwNUItgAAAAAAVyPYAgAAAABcjWALAAAAAHA1
gi0AAAAAwNUItgAAAAAAVyPYAgAAAABcjWALAAAAAHA1gi0AAAAAwNUItgAA
AAAAVyPYAgAAAABcjWALAAAAAHA1gi0AAAAAwNUItgAAAAAAVyPYAgAAAABc
jWALAAAAAHA1gi0AAAAAwNUItgAAAAAAVyPYAgAAAABcjWALAAAAAHA1gi0A
AAAAwNUItgAAAAAAVyPYAgAAAABcjWALAAAAAHA1gi0AAAAAwNUItgAAAAAA
VyPYAgAAAABcjWALAAAAAHA1gi0AAAAAwNUItgAAAAAAVyPYAgAAAABcjWAL
AAAAAHA1gi0AAAAAwNUItgAAAAAAVyPYAgAAAABcjWALAAAAAHA1gi0AAAAA
wNUItgAAAAAAVyPYAgAAAABcjWALAAAAAHA1gi0AAAAAwNUItgAAAAAAVyPY
AgAAAABcjWALAAAAAHA1gi0AAAAAwNUItgAAAAAAVyPYAgAAAABcjWALAAAA
AHA1gi0AAAAAwNUItgAAAAAAVyPYAgAAAABcjWALAAAAAHA1gi0AAAAAwNUI
tgAAAAAAVyPYAgAAAABcjWALAAAAAHA1gi0AAAAAwNUItgAAAAAAVyPYAgAA
AABcjWALAAAAAHA1m4LtvwEAAAAACBY7gi0AAAAAAMEUwGALAAAAAIADEWwB
AAAAAK5GsAUAAAAAuJoKthcuXEhNTc3IyAh1dwAAAAAAKAKZZGWelak2MzPz
3Llz6enpoe4RAAAAAABFIJOszLMy1Qohzp49KxMu2RYAAAAA4BYyw8okK/Ns
Xl6eDLZZWVky5HKnLQAAAADALWSGlUlW5lnxf9QJXFnOzbYAAAAAACeTAVal
WvmD+DNVrq5JJt4CAAAAAJxGZlV1BbI6MyusqGuSpdTU1D8AAAAAAHASmVVV
aDVegWwpMzNT5t//BQAAAADASdSbfXxHWgAAAAAAAAAAAABAMP0/k+WijQ==

     "], {{0, 501.5}, {633.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{633.5, 501.5},
   PlotRange->{{0, 633.5}, {0, 501.5}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`pres = 0.05, $CellContext`temp = 
     383, $CellContext`temp = 383, $CellContext`fTfP = 
     2, $CellContext`highpressure = True}},
 CellTags->"Snapshot",
 CellID->1388359653,ExpressionUUID->"12531de3-69ef-45ab-9a5d-cf5020c64bfb"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3QmUFNXd9/FGxIWgAiIaFxANoigY40rUiPFR0RgTFGKO8GICSqJJ9JFE
jahBFI173HCNSdRHooa4sO+77NvIPqzDMswwzM4sPdt9/90Xipqq7p7uWbpu
9Xw/p8+c6eqqW7e671Tf31TVrS6DH7ht6BGBQOCPx8iP2379yLXDhv360dvb
ypP+9//x3t/cf8/dN93/p3t+c8+wKwa3lIk58qP4yEAg9LtyCQaDxcXF+wEA
AAAAMIlkVUms7hjriLT5YYWFhQcAAAAAADCJZFUdWqPF25KSEnm1qKioJKwM
AAAAAACT6LgquVXSq/wSMdVK/i0tLfW6pgAAAAAARCW5VdKrI9vqM5BJtQAA
AAAAX7CyrXVOcl5enj4D2euqAQAAAAAQF31OsuRZSbXl5eX6AK7XlQIAAAAA
IAH6olpJtZJwCwsLOQkZAAAAAOAvkmQlz0qq3b9//4EDB7yuDgAAAAAACZM8
q29xS7AFAAAAAPgRwRYAAAAA4GsEWwAAAACArxFsAQAAAAC+RrAFAAAAAPga
wRYAAAAA4GsEWwAAAACArxFsAQAAAAC+RrAFAAAAAPgawRYAAAAAkEzbwpaG
TatNT9QzxF8gwRYAAAAAkEwEWwAAAACAT60LmxAfPXM8xRJsAQAAAADJQbAF
AAAAAPiUPrvYnV4LanPPEM9pyQRbAAAAAEBTI9gCAAAAAHxNjwpVj2CrF4xd
OMEWAAAAANDUCLYAAAAAAF/Td/OJGGaj0TPrBWMXTrAFAAAAADQ1gi0AAAAA
wNcItgAAAAAAXyPYAgAAAAB8jWALAAAAAPA1RkUGAAAAAPgawRYAAAAA4Gvb
wuoRbPWCsQsn2AIAAAAAmhrBFgAAAACQAtaFudNrRHrmeIol2AIAAAAAkoNg
CwAAAABIAfrsYj0q1LTa9MR4Tj+2I9gCAAAAAJKJYAsAAAAAgB3BFgAAAADg
awRbAAAAAICvEWwBAAAAAL5GsAUAAAAA+BrBFgAAAADgawRbAACSrDSspKSk
uLi4oKAgNzc3Kytrz549u3btyjhkx44d2wGg6WXYyF4oMzNT9kiyX5K9k+yj
ZE+ld1le7ziBOhBsAQBIJt1FlK/dwsLCnJwc6UPu3btXOpDl5eVVVVUKABqg
pqZBj2CwQpKs7JFkvyR7J9lHyZ5K9ldkW5iPYAsAQNLoA7XynSv9xqysLOk3
Sp71uiMMwPfs4bQ6/KiqTuyhl7KXI3snffRW9ley19KHbr3eiQJREWwBNHOl
MXldO6QU61it9BKlu7hv3z6v+8IAUoEjz1ZUqWCVKq88+CiL+bBmk0VkQUfC
FbKnkv2VzrZ8M8JkBFsAzZM9vZZEQcJF49KNrbCwMCsri1QLoFFYqVbn2dIK
dSCoispVYbkqKFP5ZSqvNPTIdT30dJlBZpOZZRFZUBbXCdeRbWWvJfsuDtrC
ZARbAM2NI8/K3q8orNBGT9FnXtkTrtd1h49Zo0Xl5OTs2bPH674wgFRQc+go
rY60aXvViFnq+g9VjzfVua8l9pBFbvgwtLgUouOtPnqrs63stWTfZY0l5fUO
FYiAYAugWbEirc6zBQUF8k2dnZ29d+9ePSatkF/kqUyUl2QGK+GSbdEQ+iTk
/Px8aWPBYNDr7jAA39NHVCvDqTa/TA2fps57TXV7taEPKeThqWp/SahYKfzQ
oFLBnTt3yh5Mn5Ds9Q4ViIBgC6D5sEfavLw8ia67d+/OzMyUfaBMKS8vrw6T
X+SpTJSXZAaZTWa2x1uvtwP+o/8rUlxcrK9W87o7DMD3rDOQJX7mlaoBnzdC
pLU/7vw8VGzQdk6yHhlA9mP8mxdmItgCaCbso9FKVtV3MZCJsXsOMoO+IYss
wrCQqDfd/IqKiqQt5eXlJaffCyCFWdfVHgiqP09T57za+I9Hp4UKt663lX2X
7MFkP8b3oE/JZ7du3boFCxbMmDFj2rRp0+Mgs8nM33zzzfr162Vxr7egDgRb
AM2BdXljfn6+vnmBPI2//yAz6zuzyOJcYYR6sM5D3rFjhzxtur4ugGaiJnxp
bXmlWrFHnfuq6vq3xn9IsVK4rKIqfEKy7LtkD8bZyD61a9euWbNmLV++fNOm
TfI57ty5c1ccZDaZWRaRBWVxmeL1dsRCsAWQ8qxUm5ubq4e/qF8vQo/5I4WQ
bZEoK9hu27atsrKycfu3AJob6+raA0E1fLr63itxPX76sdpdGBoA+eGp8S4i
hcsq9JW2FRWVsgcj2PqRBNLp06dv3LhRujF6WP6csP0x6Xn0mNiyoCwuhZic
bQm2AFKblWrz8vJ2794tu7uG9CVkcSlEiiLbIiH6Atvc3NzNmzc3Vs8WQLNl
XV0rKfWaf6izXqn7ccvHoZktD02NaykpXJayrrSVPZj+7y5ffz5SVFQ0Z86c
9PT07Ozs/Px8fTK5iGdZPacsIgvK4lKIFGXsOckEWwApTA9woa+rbcixWjt9
3JZb1SMhVrDdtGlTwxshgGZOn4dcVhm6HW3Xv6kuL9fx+MlHtVKt9tCUuheU
wmUVZYfORpY9GMHWdzZu3Pjtt99K3JMPrry8vLKysjpBsogsKItLIWvWrNmw
YYPX2xQZwdYvsrKynn322Thnnjx58tSpU5u0PoAvWCP2yF/Q3r17G6tHIUVJ
gQygkTIKCwtjvCpf5TG+ImMva7GCrXQw4m9p+fn5kyZNevrppx955JGZM2c2
VgNOMulQ3XPPPaNHj/a6IkDq0Ochl1So7APqzJfqeNxcO9Xaf5eX6lxcViEr
0mcjyx6MYOs7y5Yt27Nnj3yRBYNBSak1+s7EibW3GllQFpdCpKilS5d6vU2R
NW6wlUKmTZu2cuXKhhdlmnXr1smmyRvlydqlV9C5c+eRI0fqpyNGjAgEAv/9
73+tGWT38otf/EIm3nrrrWXh/8x06NDhueee86S2gCGsG6zIt/Du3bvll8bo
TYRIUVKg9eXO97t/vfvuu2effXaLFi1OOumkvn37bt682f7q2LFjL7jggpYt
Wx511FGXXXbZ9OnT41/WQTdF+RKJP9hu375d9vyBQ+6///7GasBJ9oMf/EBv
wuzZs72uC5Ai7MG284uxHjd9WCvJ/nFyrSnyizyNXYIj2OoDf3zx+cjixYsL
CwslllZVVdUj1R5qcjWyuBQiRS1atMjrbYqscYPtzp075ZvrxhtvbHhRphk6
dKhs2vz585O/6n379nXr1k3eVWsf8pe//EUqIz0ua54//OEPMuWqq67Kz8/X
UyT2Snfrs88+S36FAUPYD9dmZ2c3uB9RixTIQVsTTIjPxDDHsl999ZXsOdu0
aTNgwIAf/ehH8vvpp59u5VPZi8qUVq1a/exnP+vTp88RRxxx5JFHSjSLZ1k3
HWxzcnLWr18fZxuTXbrOgxKcBw4c+OmnnzZuG06aiy++WG/InDlzrIn//Oc/
//znP7/yyiseVgzwLyvY7i1SZ7wY9XH+67VS7bDJB6f3qZ1t5WmMQmQVVrCV
PZjsx+IMttILHTZs2J49eyK+mpGRIXu2jz76KK59fRwFIpolS5ZIX6WioqLh
wVYKkaKkQK+3KTKCbZy8Cray37j11lvPOOMM+1+xI9g+88wz8rRnz57SzbYv
K3/70ulatWpVUmsMGMMah3bXrl3yS4P7EbVIgVIsg0N6rt7BVj67Ll26SFb9
9ttv9ZThw4fLvvTxxx/XT3Vctfa0o0ePlqc///nP41nWLdFgW1lZecwxx0iZ
Ug3pSzRu602yNWvW/Pa3v33rrbfsE//nf/5Htu573/ueV7UCfM0aEjmzSJ3+
QtTHWtv/dB+cVOulG/9VK9te8W7UQmQV1sDICQXbu+++W/7MZQ8Q8dUPPvhA
Xu3evXud5cRZIKJZsWJFeXm5ZNL6nYd8qMmFzkaWQqQoKdDrbYqsEYPtyJEj
5RtK2lvr1q3PO++8O+64w3rpn//85y233HLcccddeOGFf/zjH+0Z7fe//73M
vHDhwuuvv/473/mOdBXee+89+Xt57LHHOnXqJEVdeeWVs2bNcsy/du3aX/zi
F+3btz/11FMHDx7szm51rlHKvPbaa4899tgnn3xST8/MzBwyZIhswtFHH92j
R48HH3xQqlEWvrhV5j/hhBNk06RKelmZPnfuXPn9nXfesUrOzc2VKb/73e/0
U/m7k6eSOh955BHZrlatWsVTPQd9UOCFF16wT7QHW71bOPvsszMyMhzL5uXl
HXHEETfccEO0wsvCfS3ZwB07dmw7ZCuQEraEpaenp6WlxX+MLCFSrBQuq9Dr
8nqLU421U5IdlOymonWi3Bm28BD3S/YFJZx+/fXXn3/+uTXlyy+/lN2ptQ+/
+uqr5al8PemnU6dOlac33XRTPMtG3NkmFGw3bNigj3Km6jFNgi3QEDrYFgdD
t+859fmoD8v/Tozw6vX/PJxt5fdohcgqipsg2O7bt++JJ55IaEwYgm39rFy5
0hozqoHBVo8iZexlp40YbN999135xpf21rFjx759+0qas6bLRAlxN954Y9eu
XeV36S1Yw0Tfeuut+gwuyZJ9+vQ56qij5KlksWOOOUbmv+KKK+Tp8ccfb90y
Sc8vOa5NmzYyg/yi8+bu3bvtNalzjSeffHLbtm1/9KMfSY7W78M555wj0y+4
4AKJnO3atZPfdTaXN0c2R1/oJPPL7/r4+8SJE2XKU089Za03Oztbpvz0pz/V
T5cuXarfjRYtWpx//vmSo+OpnoO+ctZxoMEKtuPGjTvyyCMl3W/cuDHi4tJn
aNmypTvzWqS7uK02rzuzQOOQpLl582b505Dd7/bt2xvah4hEipXCZRWyIoJt
o3PsmmQHG3EnVu9gayedNOlcnXvuubJrnTJlip74wgsv6P3z7NmzZ8yYcdll
l8nTt99+O55l3RINtmlpaTrY/uc//2mU5ioVkFWvWrVKfolnfnkDly9fHs+Q
a9LVka9g+cqTbmr89TEt2Mq3sLznq1evLigoiGf+ioqKFStWrFu3zj1dypEd
Qr17jxHJl7V8HFLJepcgy0oJ6enpUsM6Z462dfJZS49CekE7duyo80SC+N+K
hm9dNNIyFy9e7P5ME/24DWQPtt99LupD8uw3GaGf0Wb4n3+EZnhvWaxCmijY
1gPBtn5kz9+4wdbY00Gb+lRk6fK1atVKcqv0APWUu+66S+b561//qp/qmDlw
4ED99JNPPpGnkgStMTruvPNO+0BJen5JstZRzt///vcy5f/9v/+X0Bolg8ve
zKrn/PnzL7roovvvv18/lS/0k0466eijj7aGu3SfihxnsJVCJk2aFP8b4iDV
kFflG8Q+UQfbRx99VAqXX2bOnBlxWfGzn/1MZpB3NdoM9mO1BFukEn24dsOG
DYn2t+MnxUrhsgp90NbrLU41jl2TYzdosefWSWGJBlvZG7dp00anyNdee83+
kj7B2PL000/Hv6xD/MH21VdfbdmypX29LcPeeOMNeVWanH4qadqx4IIFC/RL
jjGa5Ltp0KBB8tWjSzviiCNuv/12iSfDhg2TmeVbxj6zhJERI0bIl6y19lNO
OaVfv34RbwAt0Ua+BGUGa2ZZcMCAAY6/OPm2khUdf/zx+ulZZ51l30Bd5/PP
P1+FT1rWTx955BH36v7xj3/oV+X7N9q7Z5XwxBNPuF9988039aszZsywJi5b
tuyGG26wv+HXXnutpCHHstLZkAVPO+00eStuvvnm73znO3p7rRnku/iyyy7T
38tCZrj++usdty2+5ZZbpJArr7zSXTepg7wkq7ZPLCkpuffee6XPoMuU3tGZ
Z5758ssv19k1lY9Ab+m7774r8a13797W1h133HEPP/ywI97WuXXSmx05cqTu
k2gnnnjiY489JtPda4/nrYhz6xJq8Patfu+99/QBCyEtx1oqzo/bfPZge/Jf
m/bRwGAr7eG2226TxnPqqaf2799fwoJ+Vb46zzvvPOnTWvNLk3j22WflD+SY
Y47p3r37Rx99JK/KPJs2bYqnQLc6z/OMdhpnWV1nV/7973/v1atX69atzzjj
DNmjSh/Aekn2rhJeOnfuLK9efPHFo0ePtl6q82zPetcnNoJt/biDrXwKMsX+
mWZmZsoUCVz6qY6Z1jXIEjYD4cOmjhJkR2ef/+OPP7ZmKCoqkq/Lrl27JrTG
b775Jva2/OpXv5LZ5OtAP613sNXnrcX/hthJx0x/dzim62BrkXYebSt0r+zF
F1+MNgPBFqlKB1v5Cl60aJF8VzZuj0KTYqVwWQXBtikkLdjKJyj7belLBMIn
81j/R/388891N/6SSy6RLpbu5zv+kRhtWbf4g+1LL70UiORvf/ubvCpNTj91
hzvpMumX7KlNVn355Ze7S5PO2B133CG/nHDCCfYmfdFFF0Vcu2QE+Qgca9Tf
jG7yRkm3x5rtT3/6k0yUnqp+agUZO/kS169269ZNnnbp0sX9zvTp00deatu2
rWxUjDdQlyA/3S9dc8018lKHDh2sWLdhwwYp0F0fmej4pH7zm9/I9Hbt2l13
3XX2LdWvvvbaa1ZaP+KII6wZ2rRpY79Pk3SQZOKll17qrpv0YwPhQSCtKdI9
6Nmzp1WUvdif/OQnMd4BFb4lmZ7zvvvus/73YiefXfxbJ377299G/Kwd5cT/
VsS5dQk1eGur+/bta//niRVs4/+4zWcPth2fbdpHA4PtGWHy9ytBT57KTkYv
u2bNGnkq81jzS14LhP8TIn8peq975plnyk9rNIPYBbrVeZ5nxNM4y+o6u/L1
11/X1ZD6yF9uixYtpIS8vLyycJCR6YFw53zQoEGnnXZawHZFYZ3ZoX71qRPB
tn7cwfb+++/XO43v2wTCYzzqGfQnaD/HTJ727t3bevqf//xHpsgXvX3+tWvX
2tfbq1cvaVS5ubn1W6O2cePGxx577IYbbrj44ov1xcLCOoe83sH2D3/4g30t
dVbPTrp28pJsnWO6FWzHjRunz3+Ldmeff/3rX4Hwsd2Ir5ZxKjJSlxVsFy5c
2ERj70ixUjjBtokkdCpyYV1in4qs6VOGpM9TFv5ybN++fcB2Soz+MtKvxl42
oviDrfRVNm/erAdYCITz7OYwfaJmQv186Yfo61nElVdeKd8I0la/+OILHWk1
e7CVdemJ8j0ub5d8Cp999tltt92mJz7wwAP21cnXn54u8eSdd96RyCBv0cCB
A/VE6ZRaczqCrXQVZHP0pUZ6KGmxa9cu/aoeDlEsW7bMvjrpNOqDzu4k5WCV
IJ1h+3RJPTo9yfeynrJv376zzjorEB77esSIEfLeLl68+MknnzzyyCMD4XBt
P/Sso58mXcq33nprYZgKn+atD3HKIrNmzZLUnJGR8eabb+rVycxWIQkFW+sd
fvDBB+XLWjqTc+bM0WOa6ZYZ402wIp4mb9rkyZMlR7z66qt6kwPh8+rj2Trx
8ssv65d++MMfSlOX/tK///1v+V1PfPHFF61y4n8r4ty6+gVbceyxx/75z38e
P378ggUL9Bn1CX3c5rMH2w7PNO2jgcFWWrU+SVIW1B1sfS6xI9hKe5OnkgSt
C+ikaVl/y/EU6FbneZ4RT+Os8+zKSy65pGXLltZlkqNGjZJwPW3atLJDY+NY
R2Dly0v+Uqxxh+IMtonWp04E2/pxB9vBgwfLlB49evS3Ofvss3/1q1/pGeoX
bB23VND/g83MzKzfGsU333yj/4knf1C33HKL9dXc6MG2zurZyT42ED5Y4Jiu
g60+f3vFihXSW7DfhMLu/fffD0Q6fc7C4FFIVTrYrlu3Tv66my7YSuGyCoJt
U7Afq61z8KhGCbZC/yd8+fLl0id3fBmJCy+80P69EG3ZaDvbRrnGNqF+/urV
q/WUCy64wHEfZ+trzh5spTMm8UqysP0kh2Aw2KFDh0D4/7HWRH2ukTj11FPl
07GXrHtcQt5DPcURbLVo19hKn7ZFixby0sMPP2yf/o9//EMXKzkl6rsWJl0R
HaMcZyPrca31Z2Rtr54ikd8+53vvvaeny7etNdGKfrfffrvjPN6vv/5av/TZ
Z5/Zp7/++uvyfv74xz+2RmVPKNjqo+fnnXeefTZ5t2+++WaZWTYnxptgj3iO
/0hIC9THcCX6WScSx9g6WaN+P3v27Gm/DFY63vqYmnS5paOb6FsR59bVL9i2
bt1aOmyO+RP6uM1nD7btn2naRwODrf3Wk/pTGDNmTJkr2Op/rDnGMZB9V8AV
bKMV6FbneZ4RT+Os8+xK+RPWxbrfBP0ncPXVV0c8yyjOYJtofepEsK0fd7B9
4403ZMqHH34YbZH6BVtpNvZCTj755NNPP73eaxT6HJtXXnnFmtKvX79AzGA7
ZcoUmXLPPfdYU9auXRuoK9jWWT2Ho4466qyzznJMdNzu56233gqE/+9tH0FL
04Of2E/mB5oJfa+fvLw8iUhxjpaTKClWCpdVcMcfD9U72ErPQTon9913n32i
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
WwAAAACArxFsAQAAAAC+RrAFAAAAAPgawRYAAAAA4GsEWwAAAACArxFsAQAA
AAC+RrAFAAAAAPgawRYAAAAA4GsEWwAAAACArxFs/SInJ+fzzz9/+umn33zz
zdWrV1dXV8e/bEVFxbhx41544YXnn39+3rx58jE1XT0BAAAAIMkItr4wevTo
E044IWBz2mmnpaWlxbPssmXLunbtal+2bdu2CxYsaOo6AwAAAEByEGzN98kn
n+hAeuSRR958883XXHNNixYt5KlE3SVLlsRedseOHSeddJLM3Lp16/79+995
553t2rXTT+fNm5ec+gMAAABAkyLYGq6ysvLEE0+UKHr66afv3btXT1y/fn2r
Vq1kogTV2IsPHjxYZmvTps3ixYv1lC1btnTu3Fkm9u7du2mrDgAAAABJQbA1
3NSpU/Xh2hdeeME+vX///jKxQ4cOMS62LSws1Pl3yJAh9ukffPCBLnPdunVN
VW8AAAAASBaCreEyMzM/+uijRx55RFKqffqf//xnSabHHXdcZWVltGWnT5+u
A+zcuXPt0wsKCo4++miZ/uSTTzZVvQEAAAAgWQi2frR3795OnTpJMr399ttj
zPbcc8/pYFvmGga5R48eMr1///5NWU0AAAAASAaCrY/k5eV9/PHHAwYMaN++
vcTSE088ceHChTHm/9Of/qTHiXK/dM0118hLV111VZNVFgAAAACShGDrI59/
/rn9rj1z5syJPf/QoUNltk6dOrlf6tu3r7x00UUXNU1NAQAAACB5CLY+8u9/
//vHP/7xjTfeqI/Ytm7d+rnnnosxeNSQIUNktq5du7pfGjhwoLx0/vnnR1xw
KAAAAABE12ghp5EQbP0oPz//pz/9qT5u++GHH0abTZ+KfNppp7lf0otffvnl
ERdMTkNN2p9Diq0oxTYnaStKsc1J2opSbHOStqIU25ykrSjFNidpK0qxzUna
ilJsc5K2ohTbnKStKMU2Jy0teVsUP4KtTxUUFOj721533XXR5nnllVdkhmOP
Pdb90pVXXikv3XDDDREX5A/c5BWl2OYkbUUptjlJW1GKbU7SVpRim5O0FaXY
5iRtRSm2OUlbUYptTtJWlGKbk7QVpdjmVFQQbFFPjnv9aDfddJOE0y5dukRb
6tNPP9VHdUtLSx0vdevWTabfddddERfkD9zkFaXY5iRtRSm2OUlbUYptTtJW
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
XZygVrvs2iUyMmQPBwB+RMFeIGxdSk1N1R4MGI8QDJUrVx4wYMDs2bO1xwza
44rr168730Tbsnv37rlz52qPLqpWrWr9V/S77rrryJEjEj8vmxRcqAAQCCpV
qqT9smjWrJnzxqeeekr/JbJEK7QbxowZo2/57rvvnPfUulXfPmHCBH1LoL3H
9uxZc9J+/71ISJA9FgD4HQV7gbDNwcGDBx955BHjlckuxcTElCtXrnDhwjns
o6lVq5b2eCMfjrfsEQouVADwFVpL7r2ZI0eOXLp0KcPyJGKpUqW0Xxn169dP
cIox7c/vvPPOsmXLjHfaapV633339ejRw3TzpKQk/ZfOM888YwwTUGGr2br1
j6RdvlwcOcIhkQHAKxTsBcL2po4dOzZ48ODw8PCc0zU7jRs3XrRokeKvPTZR
cKECgK/497//bfMXRHR0dKdOnVavXm3c9pFHHtGvKlKkSJ8+fT755JMEG083
pqamHjp0aMGCBcOGDdNv/vTTT+tXBWDY/vabI2m1vNX+AADwEgV7gbC16eLF
i7Nnz+7evXvBggVv+lglKCjo9ttvHzdu3Pbt22UPnhsKLlQA8BUDBw50959A
X3nlFf22J0+evO2225yvCg4Obtas2dSpU7XfsM4fJS0tbe7cuQ888ECVKlWs
rywK5LAVjs9a9gQA3Pff//5Xf03L2bNnnbefOHFC3/7zzz/Lms1ZXub56aef
9NueP3/eG7PlJwV7gbB1V2pq6rp166ZNm/bcc8/17du3Xbt2derUufPOO7t1
6zZs2DDtwclnn3124cIF2WPmiYILFQB8Re3atd0N26CgoFWrVuk3v3z58pgx
Y2rVqmXap3HjxsYxDC9evFizZk3TDtrHHTFiRICErZauhw7JHgKAR5UpU0b/
efXQQw85b69Xr56+vUWLFrJmc5aXeYyTpAwYMMALo+UrBXuBsIWVggsVAHyC
FpLBwcH645ayZcumWiQnJ1+6dOngwYMzZsyIjY01stR6fvOTJ09q+9x///1h
YWH6Pk899ZR+Vbt27fQtd9xxx7///e+tW7cmJSUJx6GTzurbhw8fbszjZ2Gb
keFI2mXLHO+iPXdO9jQAPIew9S0K9gJhCysFFyoA+IQNGzYYrdq1a9ecd967
d29kZKSx/759+z788MPRo0dr25130ypYb9saNWpof01MTNTbuUmTJmlpac57
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
b0rBggU//vhjY+eBAwcaV/Xq1Uvi2Fbp6eKNN0RMjDlpK1YUS5bIHg6AbYQt
AMBdCvYCYau+n3/+uWTJktqjjujo6B49ejzyyCNFixbV/7pp06ab3rxYsWKE
rToOHz5crlw55+9CqVKlwsPDnbeEhIQsWLBA3//q1atVqlQxrvpEmcMKa/+X
161rTtrQUPHcc4LThgC+hbAFALhLwV4gbNX32GOPaQ85YmNjjQ49duxYxYoV
tY1t2rTJ+bbx8fH6I5avv/76VwvTmzoNCi5U/3DixAktY/XvSOHChSdPnpyY
mKhtz8jImDdvXrVq1YyADQsLW7p0qX6rzZs3G69Y1m6lfU+lfhLi8mVthTgO
dGyq2ubNxY8/yh0NQG7ExMRER0fLngIA4EsU7AXCVnFJSUla42hFM2jQIOft
s2fP1kvn4MGDOdz822+/1XfTvnf2P6iCC9U/PProo/q3w/mfKQzp6en9+vUz
2jYyMvLo0aP6VS+++KKxvXXr1tn9i0Q++PhjUbKkOWmLFROzZjlOXwsAAIBA
oGAvELaKW7t2rZ4zGzdudN6emJgYERGhbZ8wYUION3/ppZe0fSpVquTWB1Vw
ofqBkydPhoaG6t/Nr776yuU+Wtved999RsN26dJF356Wlub8ttwpU6bk4+B/
OHxYtG3r4iBRAwaIS5fyfxwAAABIo2AvELaKmzRpkt4yv1sOg1y3bl1te48e
PXK4ebdu3bR9HnrooXXr1o0ZM+aRRx558cUXv/nmm5yf8lNwofqBcePG6d/K
okWLagGb3W7Jycm1atUyGnb16tX69sOHD0dFRekbw8PD9+7dm1+DC23pjR0r
wsPNSVurltiwId+mAAAAgCoU7AXCVnGjR48ucOM4UdarWrdurV3VokWLHG5e
qVKlAq5otzp+/Hh2t1JwofoB42XGxvOw2fnmm2+M79R9991nbH/33XeN7XXq
1LH+W4c3rFolqlY1J21UlHjlFZGamg8fHwAAAMpRsBcIW8Vpa0armAoVKliv
0p+NbdiwYXa3vXLlitFB5cuX79+//9ChQ2vUqKFvqVmzZnZlNCQbHvusAtI9
99yjf+Xvuuuum+585513Gu+0dT7dcMeOHY3v6csvv+zNecW5c6JXLxevPe7Y
UWT/jyIAAADwH9l1gYJpQNgqbtCgQVrCVK9e3XpV3759tatq166d3W137typ
vw/34YcfTktL0zempqY+/vjjehmNHz/e5Q0VXKh+oE+fPvqXvVSpUjfd+dNP
PzUC9rvvvjO2nz9/vkSJEtrGfv36JSUleWnUzEzxr3+JQoXMSXvLLeLLL730
MQEAAOAzFOwFwlZx+kuRy5UrZ72qS5cu2lVNmzbN4eZZWVlnz541vaNW+zbp
ZwvK7rYKLlQ/8Oqrrxqtmt3Boww7duwwdl61apXzVcuXLzfOcusNu3aJ2283
J21wsBg+XHitpAEAAOBLFOwFwlZxb731lpY2UVFR1quaN2+uXdW+fftc3O2A
AQMK3DjpTJarc7QouFDVl5GRodXohx9+OG/evK1bt167ds20w5EjR4xWve22
27T9c7i3U6dOGTuvW7fOm4P/j9atTz8tQkLMVat17n/+kz8jAJAg+QbZUwAA
fImCvUDYKm7+/Pl63aSkpJiuqlmzprZdS9Rc3O2IESP0928Stnl3/fr1qVOn
Fi9e3PnwXAULFnzuuecuXLjgvGebNm2MHd59990c7tP4vgcHB1+8eNHLn4HD
V185XmlsStpChcQ77wh5Z80FkB/0nzaypwAA+BIFe4GwVdzWrVv1hxzffvut
8/b4+PigoCBt+4wZM7K77aRJkypWrFiqVCmtvExX6ccgqlevnssbKrhQlXXu
3LmGDRsWyEbp0qU3bdpk7Lxz5079u6YJDQ1duXJldnerv85c07p1a29/CidO
iE6dXBwkqmdPx/GjAPg9whYA4C4Fe4GwVVxWVpb+zKzpfLWvv/66/lDk8OHD
2d127ty5+j5f/vWIP3v37g0JCdG2Dxs2zOUNFVyoakpJSXE+52x0dHSrVq2q
VKni3LZawH7++efGTfTDXOtiYmK2bdtmvdvx48cb+yxdutR786eliddec5y7
x5S0VauKv76vF4A/I2wBAO5SsBcIW/XNnDlTf9QxdepUfcuyZcsiIyO1LZ07
d3bes0+fPt26dXvllVf0v168eLFw4cLabiVKlDC+Kbt3765WrZpeVeeyeUJO
wYWqpkmTJunfmlKlSn399dfGm9SWLFniHLwRERGbN2/Wr9L+H7njjjuMq8LC
wp544onTp0/r1546dco4ZrVG+4Z6b/iNG0WtWuakDQ8XL74o8uUEuQBUQdgC
ANylYC8QturTvqr16tUzXtpauXJlI6aO//V8otHR0dr2Dh06GFu02tJ3DgoK
iouLq1Gjhv5SWG3PHA7Mq+BCVYr2HZnx/+3deXgUReL/8RxAIIlccohyeHDI
KSisIMilgCziioqCQVADiAsLiMoKuAhyn4KsB6CIN6LiCoqsIgLyCCxfRBTl
CgiCqLAcIZuYu35F6tn69XbPJDPJHNWT9+sPH+yu6q7prunpT7q7+rnn8vLy
evbsGVUwtNf27dttZXJycm677TYdUatXr3769Gk16/jx4w0aNLBe1ZXxVu6a
evXq6RuVpZtvvvn8+fPBaP+pU+KBBzzce9ypk/B+/R9AxCLYAgD8ZWBeINi6
gtzsAwYMKFeunE49nTt33rNnj61YYmKinCXTlnXipk2brA+BlilTpk2bNrt3
7y5kdQZ2VHPs2rWrSZMmckvOmjVLDRjVv39/jyUzMjLatm2rt/zIkSP1rJMn
T95www1RXsTExAwZMkS/ejiA8vPFyy+Liy+2R9rq1cUrrwR8bQDcgWALAPCX
gXmBYOsiWVlZcn998cUXx48f97fuqVOntmzZsnXrVufoyk4GdlRzdO/e3ZZD
ly5d6q2w/MrUrFlT/0nhwIEDelZeXt6SJUsaNmxoi7S33377d999F4yW79kj
OnSwR9roaJGcLP57MRlAaUSwBQD4y8C8QLCFk4Ed1RyHDx++6KKLrGnUOjaU
0/PPP69LTpw40Vlg3759a9asWbFixddff/17cJ5uTU8XTzwhypa1p9pmzcR/
n/0FUHolJCTEx8eHuxUAADcxMC8QbOFkYEc1yiuvvGINtpMnTy6kcE5Ojn6i
tnnz5iFrpLZmjbj8cnukleewM2fKtoW+OQAAAHA9A/MCwRZOBnZU09x55506
2N5yyy2FF160aJEuHKRrsh4dOybb6WGQqN69xZEjIWsFAAAAIo2BeYFgCycD
O2ropaamLl68uF+/fp06dUpKSrINtyW/C7Vq1dJx9auvvipkURs2bNAlT548
GeSGX5CbK555RiQm2iNtnTpi1aoQrB8AAACRzMC8QLCFk4EdNZSysrKmT5+e
kJBgvd84NjZ29OjReXl5uti6dev023lk+C1kgYcPH9bLkf8Odvu3bRMtW9oj
bZky4pFHRFpasFcOAACAyGdgXiDYwsnAjhoy+/fvb9q0aZQXY8eOtRYeMWKE
nvXiiy96W+b777+vysiwnBPM51rPnhUPPyxiYuyptm1b8c03wVstAAAAShcD
8wLBFk4GdtTQWL9+feXKlXVWrVixYseOHevWraunREdHr127VpfPyMho3Lix
vqS7Zs0aj4vt16+fKtOjR4/gNf6tt0TNmvZIW7myeOGFC6+vBQAAAALFwLxA
sIWTgR01BL7++uvExESVQGW8nTt3bmZmprjwvGruuHHjdLatWbOm9TnZnTt3
li1bVs2Kj4//xz/+YVvs/Pnzdd2PPvooGC0/cEDcfLOHQaKSksRvvwVjhQAA
ACjVDMwLBFs4GdhRg0123Xr16qn42aBBg4MHD9oKDBgwQOfT2267zTpr+vTp
1tuVO3bs+PHHH+/fv3/Dhg1JSUn6OdxevXoFvNkyeU+aJOLi7JG2YUPx+ecB
XxuAyJReINytAAC4iYF5gWALJwM7arDNmTNHX6v95ZdfbHOzs7M7d+5sTa9L
ly7Vc/Py8jp06ODtsVylffv2586dC2yb168XDRrYI60MuTLqFlxqBgCfqMNU
uFsBAHATA/MCwRZOBnbUYGvXrp06tZs6daptVn5+/sCBA21BNTEx8cCBA7rM
4cOHL7roIo+R9pJLLhk/fnxgr4b8+uuF24yd9x536yYcl5oBoAgEWwCAvwzM
CwRbOA21CHdbQqRixYrq1O7111+3Ts/NzdWptnz58n369NGJtXXr1tnZ2brk
K6+8Ys2zc+bMmTZt2gcffBDYYZDz8i4MBlW5sj3SXnKJePPNAK4HQClCsAUA
FGmoQ7hbZEewhZOBHTWwZEd95plnrFNq166tTu3GjBmjJ2ZlZd155506q8ro
Kqc0atRIT3n88cetC7EWHjJkSMCbvWuXuP56e6SNibnwip9A3+YMoBQh2AIA
/GVgXiDYwsnAjhpAu3btatKkiTyL+/nnn/XErl27qlO7ESNGqCmZmZm9evXS
QXXmzJlq+ieffKInRkdHWwc6ll+QWrVq6bmrV68OVJvT0oQM3LGx9lTbqpXY
vj1QKwFQShFsAQD+MjAvEGzhZGBHDZT09PS4uDh1FvfGG2/o6YsWLerSpcuW
LVvU/8qe3LNnTx1Rp0+frkvm5+db32xbsWLFb7/9Vs9dt26dHga5Ro0avwXi
dTurVonate2R9qKLxPz5Ije35IsHUNoRbAEA/jIwLxBs4WRgRw2g5s2bq7O4
5ORkb2Uef/xxHV2dw0n16NHD+jhtQkLCkiVL9NwRI0boWbfeemtJmnrkiJAL
cA4Sdccd4vjxkiwYAP4/gi0AwF8G5gWCLZwM7KgBNGbMGHUWd+WVV3ossG/f
vrJly6oyjz32mLNAy5Yto/5XvXr1jh49quZmZGQ0btxYz1q8eHExGpmdLWbN
EvHx9kh7+eXCcu8zAARAQkJCvDzcAADgMwPzAsEWTgZ21ABau3atTp06jVo9
+uij+l7iXMfNvgcPHlRzFyxYkJycLP9x3333paamWsvs3LlTR2N5xmh9MZAv
tmwRzZrZI23ZsuKJJ0RA3xoEAAAAFIeBeYFgCycDO2oAyT5crlw5lTqXL1/u
LKAHN+7du7dtlgywLVq0kLMqVaqUlpYmp+zevdvjWqZPn67j8/333+9j206f
FsnJIjranmpvvFHs2ePPhwQAAACCxsC8QLCFk4EdNbA6deqkIuegQYOcc9u2
bavm1qxZ03rFNjs7u1u3bmrW6NGjC19FXl5ehw4doqOjR44cKb8XvrRKhuxq
1eyR9uKLxcsvi/x8fz4eAAAAEEwG5gWCLZwM7Kh+2bVr1+DBg61v87GZOnWq
fjbWOdc6cpRMvucK3hG7e/fum2++WU2sVq3akSNHimzGjz/+uH79el8a/MMP
MmvbI210tHjgAfHvf/uyAAAAACB0DMwLBFs4GdhRfZSXlzdz5kx1p/HFF1/8
/vvveyy2bds2HV0PHTpkm7t3717rwFByaTVq1ND/K1Ot9f0+JZSRIcaPv/D8
rC3VNmkiNm8O1EoAAACAQDIwLxBs4WRgR/XRpk2bEhISrLE0OTlZdlpbsdzc
3MqVK6sCL730knM51lf2WAU21a5dK6680h5pK1QQ06dfGBUZAAAAMJOBeYFg
CycDO6rvUlJSbrzxRmsarV+//vbt223F+vTpo+YmJSV5XM748eMrVKigFxIX
Fzd8+PATJ04EpJE//yz69vXwgto//lEcPhyQNQAAAADBYmBeINjCycCO6pe8
vLy5c+eWL19ex9IyZcpMmTLFOhLU888/r2Zddtll3paTlpb29ttvP/PMMx9/
/PHJkycD0jbZhIULRcWK9kgrW/HuuwFZAwD4J71AuFsBAHATA/MCwRZOBnbU
Yvjhhx/atGljvXTbvn37H3/8Uc09cOCAnr5///7QNGnHDnHttfZIGxsrRo0S
58+HpgkAYKeOhOFuBQDATQzMCwRbOBnYUYsnJydnypQpZcuW1Rm2YsWKr732
mpp7xRVXqIkvvvhisFuSmipGjBAxMfZU26aN+PrrYK8cAApDsAUA+MvAvECw
hZOBHbUkdu3a1aJFC+ul26SkJNmTR44cqf73nnvuCWoDVq4UtWrZI22lSuK5
50ReXlDXDABFI9gCAPxlYF4g2MLJwI5aQllZWePGjYuNjdXZtkmTJgsXLlT/
rlmzZpDWm5IievTwMEhUv37il1+CtE4A8A/BFgDgLwPzAsEWTgZ21IDYtm1b
o0aNdLa13qL8/fffB3ZdWVli2jRRvrw90tavLz79NLCrAoASIdgCAPxlYF4g
2MLJwI4aKBkZGaNGjYqOjo76X3//+98DuJYNG8TVV9sjbbly4m9/E7//HsD1
AEAAEGwBAP4yMC8QbOFkYEcNrI0bN+qRo5S+ffsGZMknT4pBgzzce9yli9i3
LyBrAIAAI9gCAPxlYF4g2MJpqEW42xIsaWlp8tOp07mWLVvu2bOnhAvMzxdL
l4qqVe2RtkYN8eqrAWkyAARFQkJCfHx8uFsBADDaUIdwt8iOYAsnAztqkHzy
ySeTJk3Kysoq4XK+/VbccIM90kZHiyFDxJkzAWkpAAAAYAoD8wLBFk4GdlRj
/ec/YuxYUaaMPdW2aCG++ircjQMAAACCwMC8QLCFk4Ed1Uwffijq1rVH2oQE
MXu2yMkJd+MAAACA4DAwLxBs4WRgRzXNTz+JPn08DBJ1220XZgEAAAARzMC8
QLCFk4Ed1Rw5OWLevAuXZW2Rtm7dCxdwAQAAgIhnYF4g2MLJwI5qiK1bLzw8
a4u0ZcqIRx+98LAtAAAAUBoYmBcItnAysKOG3ZkzYtiwCwMd21LtDTdcGBIZ
AAAAKD0MzAsEWzgZ2FHD6403LryO1hZpq1QRixdfeH0tALhaeoFwtwIA4CYG
5gWCLZwM7Kjhsn+/6NrVwyBRAwaIkyfD3TgACISoAuFuBQDATQzMCwRbOBnY
UUPv99/FxIkiLs4eaa++WmzYEO7GAUDgEGwBAP4yMC8QbOFkYEcNsU8/FfXr
2yNt+fLi6adFVla4GwcAAUWwBQD4y8C8QLCFk4EdNWR++UX07+/h3uPu3UVK
SrgbBwBBQLAFAPjLwLxAsIWTgR01BPLyxHPPiUqV7JG2Vi3x9tvhbhwABA3B
FgDgLwPzAsEWTgZ21GD7+mvRpo090sbEiOHDRWpquBsHAMFEsAUA+MvAvECw
hZOBHTV4zp8Xo0eL2Fh7qr32WrFjR7gbBwDBR7AFAPjLwLxAsIWTgR01SN57
T1x2mT3SXnSRWLBA5OaGu3EAEBIJCQnx8fHhbgUAwE0MzAsEWzgZ2FED7vBh
8cc/ehgk6q67xM8/h7txAAAAgMEMzAsEWzgZ2FEDKDtbzJghKlSwR9orrxRr
14a7cQAAAIDxDMwLBFs4GdhRA2XzZtGkiT3Sli0rxo0TGRnhbhwAAADgBgbm
BYItnAzsqCX373+LBx4Q0dH2VNuxo/jhh3A3DgAAAHAPA/MCwRZOBnbUksjP
F8uWiYsvtkfaatXEK6+Eu3EAAACA2xiYFwi2cBpqEe62lNSePeLGG+2RNjpa
JCeL06fD3TgAAADADYY6hLtFdgRbOBnYUYshPV088cSF52dtqbZZM/Hll+Fu
HAAAAOBaBuYFgi2cDOyo/vroI3H55fZIGx8vZs68MCoyAEBLLxDuVgAA3MTA
vECwhZOBHdV3x4+LO+/08ILaW28VR46Eu3EAYJ6oAuFuBQDATQzMCwRbOBnY
UX2RmyueeUZcdJE90tauLd5/P9yNAwBTEWwBAP4yMC8QbOFkYEct0vbtolUr
e6SNjRWPPCLS0sLdOAAwGMEWAOAvA/MCwRZOBnbUQpw7J/78ZxETY0+1118v
du0Kd+MAwHgEWwCAvwzMCwRbOBnYUb156y1xySX2SFu5snj+eZGXF+7GAYAb
EGwBAP4yMC8QbOFkYEd1OnhQdOvmYZCoe+8Vv/4a7sYBgHsQbAEA/jIwLxBs
4WRgR7XKzBSTJ4u4OHukbdBArF8f7sYBgNsQbAEA/jIwLxBs4WRgR9U+/1w0
bGiPtDLkTpp0IfACAPyVkJAQHx8f7lYAANzEwLxAsIWTgR1V+u03MWCAh3uP
b75ZHDgQ7sYBAAAApYaBeYFgCyfTOmp+vli8WFSpYo+0NWuKN98Md+MAAACA
Usa0vCAItvDEqI76zTeibVt7pI2JEcOGibNnw904AAAAoPQxKi8oBFs4GdJR
//Mf8eijokwZe6pt2VJs2xbuxgEAAACllSF5wYpgCycTOuo//iHq1LFH2sRE
MW+eyM0Nd+MAAACAUsyEvGBDsIVTeDvq0aOid28Pg0T16SOOHQtjuwAAAABc
QLCFK4Sro+bkiNmzRUKCPdLWqyfWrAlLiwAAAADYEWzhCmHpqLLXNG9uj7Rl
y4qxY0V6euibAwClRXqBcLcCAOAmBFu4Qog76unTYsgQER1tT7UdOojvvgtl
QwCgNIoqEO5WAADchGALVwhlR331VVG9uj3SVq0qXnrpwutrAQDBRrAFAPiL
YAtXGGoRvLXs3Ss6d/YwSNSgQeLUqeCtFgDwPwi2AIAiDXUId4vsCLZwCnZH
/f138eSTolw5e6Rt3Fhs2hTUNQMA7Ai2AAB/EWzhCkHtqOvWiauuskfaChXE
tGkiOzt4qwUAeEawBQD4i2ALVwhSRz1xQtx9t4d7j3v2FIcOBWOFAICiEWwB
AP4i2MIVAt5R8/LEokWiYkV7pL30UrFyZWBXBQDwD8EWAOAvgi1cIbAd9f/+
T7RubY+0sbFi5Ehx/nwA1wMAKI6EhIT4+PhwtwIA4CYEW7hCoDpqaqr4y19E
TIw91cqcu3NnQNYAAAAAINQItnCFgHTUlSsv3Glsi7QVK164Jzkvr+SLBwAA
ABAeBFu4Qgk76qFD4pZbPAwSdc89F8aPAgAAAOBqBFu4QrE7alaWmDr1wrt7
bJH2qqsuvOUHAAAAQAQg2MIVitdRN24UjRvbI225cuLJJ8Xvvwe8jQAAAADC
g2ALV/C3o548KQYN8nDvcefOYu/eILURAAAAQHgQbOEKvnfU/HyxdKmoWtUe
aatXF6++GtQ2AgAAAAgPgi2KLTs7e/Xq1bNnz541a9bmzZt/9+fuXn/r+thR
v/tOtG9vj7TR0WLIEHHmjO+tAwCEU3qBcLcCAOAmBFsUz44dOxo0aBBlUbly
5S1btgSpbpEdVZ4BjR0rypSxp9rmzQU7P2IYeLxC6NENSgP101B4GXoCBN0A
BegGUAzsCQRb8x05cqR69eryrCM+Pr5v37733ntvlSpV1P9u3rw5GHUL76ir
V4t69eyRNiFBzJ4tcnKK+RlhIAOPVwg9ukFpQLCFj+gGEHQD/JeBPYFga74H
H3xQnnIkJiZu27ZNTUlJSalXr56c2Llz52DU9dZRjx0Tffp4GCTqttvE0aPF
+mwwmIHHK4Qe3aA0INjCR3QDCLoB/svAnkCwNVxqamrZsmXlKUdycrJ1+ssv
v6xORb7//vuA13V21NxcMW+eSEy0R9o6dcQ//lHczwazGXi8QujRDUoDgi18
RDeAoBvgvwzsCQRbw3322WfqlGPTpk3W6efOnYuLi5PTJ02aFPC6to66dau4
5hp7pC1TRjz6qPjPf4r/0UL2dYiwFUXYxwnZiiLs44RsRRH2cUK2Ind9HHOC
rbu2mzkrirCPE7IVRdjHCdmKIuzjhGxFEfZxQrki3xFsDTdz5kx1yvG7Yyjj
5s2by+l9+/YNeF3dUc+eFcOGXRjo2JZq27UTu3eX4FP971qCLcJWFGEfJ2Qr
irCPE7IVRdjHCdmK3PVxCLZuX1GEfZyQrSjCPk7IVhRhHydkK4qwjxPKFfmO
YGu4xx57TI315JzVqVMnOatDhw4Br6s66htviJo17ZG2ShWxePGF19eWXOR9
7zgwmryiCPs4IVtRhH2ckK3IXR+HYOv2FUXYxwnZiiLs44RsRRH2cUK2ogj7
OKFcke8ItoaTfUaeb9StW9c5q0+fPnJWq1atAl53KAAAAAB4V+yAEyQEW8Ml
JyfLBNqgQQPnrAEDBshZTZs2DXjduDj7hdpGjcSGDcX+EAAAAAAQRARbw6nb
iS+77DLnrN69e8tZ119/fTDqAgAAAIBbEGwNN3/+fJlAK1So4JzVvn17Oat7
9+7BqAsAAAAAbkGwNdyKFSvUsB4ZGRm2WY0aNZLTBw0aFIy6AAAAAOAWBFvD
bd26VYXTDz/80Dr96NGj0dHRcvpzzz0XjLoAAAAA4BYEW8Pl5+erq6u2d87O
mDFDhda9e/cGoy4AAAAAuAXB1nyLFy9WOXTu3LlqykcffVS+fHk5pVevXtaS
SUlJffr0mTp1ajHqAgAAAIBLEWzNJ7dqixYtVD6tWbPmFVdcof5do0aNQ4cO
WUvGx8fL6T169ChGXQAAAABwKYKtK8jNPmDAgHLlykX9V+fOnffs2WMrlpiY
KGf17NmzGHUBAAAAwKUIti6SlZUl99cXX3xx/PjxUNYFAAAAAJMRbEuVAwcO
vPTSSxMnTnzzzTePHDkSsrowSnZ29urVq2fPnj1r1qzNmzfLr62PFVNSUr7y
Ij09PahtRlC98MIL48aN870nCA4IkcivbpCZmentaLB///5gNxUBd+bMGfm7
MG/evMmTJ7/11lt+jS1Z7N8UGEjmguXLlz/11FPPPvvsp59+6uOPOweECCOj
3PPPPz9p0iT51T59+rRfdcN7ekCwLSXy8/NHjhwZGxsbZXHvvffK36Og1oVp
duzY0aBBA+uurFy58pYtW3yp27Vr1ygvtm3bFuyWI0iWLFmiduKpU6d8Kc8B
ISL52w1kfvF2NLjllluC3VoE1oIFC6pUqWLdidHR0Q8++KBMu0XWLclvCoxy
8ODBbt262b7O9erVk9GmyLocECLG0aNHbSd78mjwl7/8JS8vr8i6JpweEGxL
iccff1x1sObNmz/00EPXX3+9+t/evXsHtS6McuTIkerVq8t9Fx8f37dvX3m0
UScz8n/lr1KR1atWrertl4tg61IbNmwoW7as2ok+JhoOCJGnGN3g2Wef5Tw2
MixdulTtuGrVqg0cOPDPf/5z06ZNfdyVJfxNgTnk6X3Dhg3Vfu/YsaOMJ3KH
quFZZE4p8i8VHBAiQ3p6+jXXXKN2XN26dQcMGKC+4FL//v2LrG7C6QHBtjQ4
fPiw+vtJv379cnJy1MQJEyao/rZx48Yg1YVpHnzwQbnXEhMTdQ5NSUmpV69e
VMGQYoXXPXr0qNrpq1atOu3gy5/yYBR5uB47dqz1L6u+JBoOCBGmeN1AeuCB
B2Rhed7iPBrI84RgNxuBkpaWpt6ncN111+ldn5ub+/DDD6v+8N577xVSvSS/
KTDK3/72N7XHly1bpifu2bNH/aWiWbNmhVfngBAZ5s+fr7rBtGnT1Hlddnb2
/fffryYeOHCgkLqGnB4QbEsDed4SVXAvgcwmemJ+fr769enbt2+Q6sIoqamp
6qJMcnKydfrLL7+sDjvff/99IdU//PBDVUweB4LcUgTdjh079B/n/Uo0HBAi
SbG7gdSqVStZeMSIEcFuJIJq3bp1ar/bztyysrIqV64sp48ZM8Zb3RL+psAo
bdu2lbusW7dutumzZs1Sx/xz584VUp0DQmRo165dVMHNGxkZGXrinj171Df6
2WefLaSuIacHBNvSoH379rJTdenSxTb9r3/9q5wuf5gKufu9JHVhlM8++0wd
mjZt2mSdLn+t4uLi5PRJkyYVUn3y5MmyzOWXXx7kZiIUxo0bpzrDoEGD3njj
Dd8TDQeESFLsbiD3srpHcfny5SFoJ4Ln9ddfb968+SWXXOL85jZp0kTu4rvu
ustb3RL+psAcMn106tRJ/r5PmzbNNmvlypVqLxfymkgOCBFj/fr1c+bMWbFi
hXWiDLkxMTFy/86aNauQuoacHhBsS4MKFSrITiW7lm36+++/X+SfVUtSF0aZ
OXOm2mW/O4aslCc2Rf49rU+fPrLMnXfeKY9748ePv/feeydMmPDBBx9wE7Ib
yURz0003qdNRfS3el0TDASGSFLsb7N69WxXeuHHjwoULhwwZMnjw4EWLFh06
dCj4rUYo/Prrr+pq7OTJk72VKeFvClxh5MiRclfGxcUVkko4IES26dOnq/37
3XffFVLMkNMDgm3Ek7tM9ajZs2fbZn3xxRdqlowqAa8L0zz22GNRBWN6OGd1
6tRJzurQoUMh1S+//PIoT2Qtfrxcx3qK4nui4YAQYYrXDaTly5erwurxTE2e
2CxYsCCYTUaIqIdnpULGgCrhbwrMd/DgQXXxvWvXroUU44AQkbZv3z5p0qQ2
bdqovSmPCYUUNuf0gGAb8U6cOKF6lHVAAEX/kU2e0gS8LkwzdOjQqIJh7pyz
1NXYVq1aeat79uxZ/VNVp06dgQMHDhs2TD+d16hRI+df7OEWvicaDggRzK9g
O3r0aFW4bNmyHTt2lP97++23lylTRk185ZVXgt9eBNHChQvVrhwwYEAhxUry
mwLznTx5Uv3Ky2xb+LU2DggRST2MoHTq1Ck/P7+QwuacHhBsI96xY8dUj3rz
zTdts1JSUtSsd999N+B1YZrk5GS5vxo0aOCcJc9e5KymTZt6q7tjxw71Z9t+
/frpqzxZWVmDBw9W3eCpp54KUrMRbL4nGg4IEcyvYKtiS6VKlb788ks9UZ5O
qAFU5X99ef8pzPTiiy9GR0erxFr4fizJbwoM9+uvv6rxoKS5c+cWXpgDQkTq
0qVLr169WrZsqbpB+/btC/n7hjmnBwTbiKdvD1i6dKlt1s6dO9WsTz75JOB1
YRp129hll13mnNW7d++ogoH6C6men5//888/256olV95Nd5d4XVhsmLciswB
IfL4FWxFQWc4ffq0beLzzz9PN3AveZAfP3682oO1a9cu8hmTEv6mwFj79u27
4oorVE+QXcKXKhwQIthHH31Uvnx59Ves3Nxcj2XMOT0g2JYGFStWjPI0mpke
0vCrr74KRl0YRb2erEKFCs5Zaiy77t27F2OxgwYNiip4j2Hht6nAWH4lGg4I
kcrfYOvRjz/+qBYyZ86cALYNIZCVlZWUlKR2X5MmTawv7PAmSL8pCK/NmzdX
rVo1quC9LSX8InNAiBhTpkxRu9J6Ud7GkNMDgm1pcPXVV8seNXbsWNv0t99+
W3U2efAJRl0YZcWKFWqXWV9PpjRq1Ciq4JUfxVjsqFGjZN3y5csTbF3Kr0TD
ASFSBSTY6ofxp0+fHsC2IdjOnTvXuXNnte/kP+R+9KVWkH5TEEbvvPOOeuxI
/tf2zpdi4IDgRvLrnJWVZZu4fft2tStfffVVbxUNOT0g2JYGPXr0iPI0jIMa
9rBGjRpBqgujbN26VR1bbM/vHz16VD1R9dxzz3mrO3PmzHr16sndnZmZaZt1
yy23yLotWrQISqMRfH4lGg4Ikcr3biBDUJMmTapXrz5jxgzbrG3btqmFrFq1
KmgtRYClpaW1a9dO7biBAwc6z2m9KclvCgwkU21sbKzccdWqVduyZYuPtTgg
RAx5KLj00kvll3fevHm2WfqqayG3ExtyekCwLQ3efPNN1SGtz33LnVWpUqWo
guGAglQXRsnPz1d/Rbe9W1D+GKldvHfvXm919WD+8ofPOv2bb75Rv4PDhw8P
VrsRZH4FWw4IkcqvbqBe/tW8efOcnBzr9LvuuktOL1eu3PHjx4PWUgSYGtxY
evzxx/2qWJLfFJjm0KFD6jnK2rVr79u3z6+6HBAihhoHu2XLlrZnafv376++
1L/99pu3uoacHhBsSwN5qKlTp47sV1dfffWxY8dEwVPe6kKbtGPHDl1y9erV
fQocPHjQ37ow3+LFi9WO04Mc6jEBevXqZS2ZlJQku8HUqVPV/8pDmTo0VatW
TX/Bv/766/r168uJCQkJJ06cCOUHQQAVkmhs3UBwQIhchXQD5+/CE088oQoP
Hjw4PT1dFHSMsWPHqoljxowJdetRXNu3b1dXVy+99NIPPZEFdGHnAcH33xQY
Tu4vtSufeuopjz0hNTVVlXR2Aw4IEePpp59We+2BBx5ISUkRBa87nzBhgpp4
33336ZLG5gWCbSnx2muvxcTEyK4VGxvbtGnTChUqqJ726KOPWovNnj1bTd+6
dau/dWE++Q1t0aKF2n01a9bUwx7WqFHDNgCmes16jx499JRVq1apwvIsqEmT
Jg0bNlSnQ7Lke++9F/KPgoApJNE4u4HggBChCukGzt+FrKysNm3aqIlVqlRp
3bq1GjZE6tatmz4Bhvluu+22qEJZv/7OA4LvvykwmR63thD66+/sBhwQIkZu
bm7Hjh31Tpc/8ZUrV1b/lnHVuiuNzQsE29Lj008/rVu3ru6ulSpVmjFjhm3A
n7lz56q51j/S+lgXriC/wgMGDChXrpzem507d96zZ4+tWGJiopzVs2dP68RN
mzbpF9tJZcqUkb9lu3fvDmHzEXhr1qxRO9T5sgaP3UBwQIhEhXQDj78LaWlp
f/3rX9U4M0r16tWfeOIJby+DgJnUnYeFsH79PR4QfPxNgcmWLVtWeDewfv09
dgMOCBEjIyPjySefVPddKPLfcufaxogzNi8QbEubEydOfPbZZzKMOIcxDGpd
GCUrK0t+97/44otiPPly6tSpLVu2bN26lW5QynFAQHZ29t69e+WZjC9vh0EE
K8lvCiIGB4SIIb/Re/bs+eSTT/bt21eMv06E8fSAYAsAAAAAcDWCLQAAAADA
1Qi2AAAAAABXI9gCAAAAAFyNYAsAAAAAcDWCLQAAAADA1Qi2AAAAAABXI9gC
AAAAAFyNYAsAAAAAcDWCLQAAAADA1Qi2AAAAAABXI9gCAAAAAFyNYAsAAAAA
cDWCLQAAAADA1Qi2AAAAAABXI9gCAAAAAFyNYAsAAAAAcDWCLQAAAADA1Qi2
AAAAAABXI9gCAAAAAFyNYAsAAAAAcDWCLQAAAADA1Qi2AADAcPIEY9iwYYMG
DZo4caKemJKS8k2Bn376KYxtc3ryySdlU2WDMzMzw90WACgtCLYAAMBwY8eO
jSrw1FNP6YkNGjRQE7t16xa+pnkwfvx41bDHH3883G0BgNKCYAsAAEy2ffv2
2NhYmRNr1aolz0P0dGODbWpqavXq1WXDYmJiOCkCgNAg2AIAAGNlZmY2btxY
BdilS5daZxkbbKVnn31WtU02Mj09PdzNAYDIR7AFAADGmjFjhkqIzZo1y8vL
s84yOdhmZ2dfeeWVztunAQBBQrAFAABmSk9PV/f0SsuWLbPNNTnYSvPmzVPN
q1KlSlpaWribAwARjmALAADMtGDBAp0NMzIybHMND7anTp2Ki4tTLZw9e3a4
mwMAEY5gCwCIPKmpqScLZGVlqSlnz55du3bt1KlTFy1aJP9x5swZb3XPnTun
6mZnZ6tFvf3227LiO++8I6OKxyry9/Hzzz+fP3/+nDlzPv30U1nXl0b+9ttv
staSJUsmT568bNmybdu2nT9/PrC15KdWn8U65pK3MrZHQUO2HbyR+6527doq
GI4ePdpZwBls5RpXr149ZcqUV199dd++ffn5+T6u69ixY+vXr//73/8+adKk
Z5555rXXXtu7d6+3wr5vmf79+6sWXnLJJfIcyddPDgDwH8EWABB5mjZtqq+U
HT169A9/+EN0dHSURUJCwiOPPHL69GlnXf1o5EsFypUrp2tVqFBh3rx51sIy
I+vyVnLiP//5T2/Nk6EpKSmpTJkyzooyrMnQanuYtNi1atWqpQrcdddd3hpT
tWpVVWbAgAEh3g6Fe+utt/RyZEp1FrAG219//bVTp062tVeuXHnixIkeN6ay
c+fO22+/PTEx0dnyqIKnerdu3eqs5fuW2bBhg54lw3LxtgMAwBcEWwBA5GnS
pIlKE/fff7++6uckix0/ftxW94orrlBzBw4caIvD0rRp01SxjIyM4cOHe1uy
JOuOGjXKeZ3uwIED1apVK6Si1K9fP1scK16tSy65RM268847vW0rmf5UmXvv
vTeU26FI8uOoJTRs2NBjAR1s5ZapU6eOtwbI2OvxEvOLL74YExNT+CaVBZx3
Efu4ZSS5OypVqqSm33333f5uAQCA7wi2AIDIo4OtVqVKlXvuuefJJ5+89dZb
rZfYGjdurG4o1XRs8RhzfvrpJ1Wsd+/e1lkyfPUroNOWMmjQIOvCs7KyrFc2
a9SoIauMHDlSRiTbeq0XOotXSwQo2AZjOxQpNzdX7jJVd/DgwR7L2FYhxcXF
3XjjjXKzNG/e3Bo5W7VqZbst+dtvv7VWlOvq06fPsGHD5EZo06aNdVZCQoLt
yr6PW0bp1auXmiW3s/xQfm0EAIDvCLYAgMhjC7YtW7Y8duyYnvvVV1/VrFlT
z50zZ461ri22XHPNNfPnz1+2bNndd98t85oq88knn+gClSpVeumll6xLePfd
d/XdrTJebdu2Tc/68ssvdcUhQ4ZkZmbqWTk5OSNGjNBz9bqKXUsENNgGdjsU
afPmzXrJ3m7itQVbudNTUlL03FWrVlnvMV65cqW1bnJysp718MMP254vlmcy
9evX1wVsF2192TKarKtLyv3o+xYAAPiFYAsAiDzWYCtjiHPopN27d+srelWr
VrVeSrPGljp16qSmptrqZmdnX3311TqvrV+/3tmAXbt26Ydhr7/+en25cNq0
aXrhzlbJden7jcuXL6/fEVO8WiJwwTbg26FI48aN02v/8ccfPZaxBturrrrK
OYjWF198oQs0btxY36ctz2fkhtKt8vgQ7ueff67rDhw40DqryC1jtX37dl14
woQJPn58AIC/CLYAgMhjDba2y4jaXXfdpcts2rRJT7fGllWrVjkrfvDBB7rA
kCFDvLVh6NChutjOnTvVxIkTJ+qJtmuIeuGyzKuvvrply5acnJyS1BKBC7YB
3w5F0nsnPj7eWxlrsPV2Vfemm27SZfQFU/mPdu3a1ahRQ05cvny5x4pZWVn6
Cdw77rjDOqvILWMl47/+EwqP2QJA8BBsAQCRRwfbSy+91Br0rGSY1fFk/Pjx
ero1tpw4ccJZccaMGbrAunXrvLXh448/1sXefvttNdF6h63MOw899JCc4q2F
WvFqicAF24BvhyLdcMMNqkrdunW9ldHBtk6dOt6GPl6zZo1eu/NPHPKsxttz
r0ePHtXjPvXu3ds6q8gtY3PxxRerwh06dCiyMACgeAi2AIDIo4Nt9+7dvZWR
kUTHk6SkJD1dx5aEhASPFR988EFdcfDgwY95MWDAAF3s6aefVnVlGtUxR6tY
seIdd9yxdOlS64PAVsWrJQIUbIOxHYqk196qVStvZXSw7dGjh7cyBw8e1Gsf
O3ast2Ly9Oabb75ZuXLllClTZIOvuuoq66a+9dZbPbbN25ax0Tdsy8X6Uh4A
UAwEWwBA5NHBtpBbZPPz8/XwyDfffLOermPLNddc47HijTfeGOWn++67T1ff
vXt3IW8gat269fz5821jGRW7VkCCbZC2Q+H0M7DdunXzVkYH22HDhnkrI89M
9Npvv/1229xdu3YNGjSobt26hTfbW7D1tmVsOnbsqMoXcls1AKCECLYAgMij
g+2YMWMKKVa1alVVrG3btnqiji09e/b0WKtevXr+BjprcJaOHz/+pz/9SY+q
5CQT0+HDh23rLUatgATb4G0HbzIyMnSVPn36eCumg+0jjzxSyNJknFTFrBlZ
nrHIjVlIU61vDfYWbL1tGZvbbrtNlY+Li+ONPwAQJARbAEDk0cF2+PDh3spk
ZmbqUX2sD1Hq2PLHP/7RY0Xre06n+2bFihXO5fz222+LFy++44479LOcVjJ0
//rrryWspYNtIfFQpi1VxluwDfZ28Ehfse3cubO3MjrYjhgxwluZ8+fP60YO
HTpUTZTpUm4Q26arUKFC69atH3zwwQULFsgzmby8PP0iXW/B1tuWsZEfQZVP
TEz07dMDAPxGsAUARB4dbG3D/lhZn7603rFcZGxJSkrSFeUvY8lbm5OT8+WX
X06YMMH2YlZvA/b6XksH2169enlcyO+WO3X9DbYB3w4e1y53pbcy+oM73x6r
fffdd7qR+nW0r7/+unWLjRo1avfu3bZrqfn5+XpUZNvW8zfYNmvWTJWXDfal
PACgGAi2AIDIo4Nt/fr1vb079Z133tHRZv78+Xp6kbFl8uTJumIhowGfOXNG
Bqi1a9d+//33+unXkydPbt68efHixRs3bnRWkU2dPn26XrjOa8WrJenHcr1d
9/zmm2+KHWxLsh2KpEdFrl69urcyOtheeeWV3srImK8bqV/N88ADD+iJCxcu
9Fjx0KFDuoxtC/gbbPWfFzp16uRLeQBAMRBsAQCRx/oeW29vGm3VqpUuI1OM
nl5kbFmxYoWueOONN3prw5NPPqmLqUd9s7Ky9HBVXbt29VhLplR9b/C1115b
7FqKzPVqorcX4kyaNKnYwbbY28EX+j22MTEx3l5sZL1UvW3bNmcB+ZH1iMTS
vn37bBWjo6PPnz/vceFPP/20rmgbwMqvYCt3TdmyZVX5Qq4sAwBKiGALAIg8
1mDbokWLjIwMWwHrzajWJCh8iC1yadZxk5YsWeIs8/3331esWFGnJx2punTp
oiaWKVPmq6++clb84Ycf9JL1iE/FqyV16tRJT7delVZWr14dGxtb7GBbku1Q
pAkTJhQeWsX/BtvmzZufPn3aVuC5557zuFn0vcHSL7/84lzyG2+8oe9DjnLE
dr+CrdwCejmTJk0q+pMDAIqFYAsAiDzWYBtV8C7UI0eOqFn5+fmzZs2yxpYN
GzZY6/oSW95//31dXea10aNHy19APXf9+vWXXXaZLnDLLbfoWS+88IKeXqtW
rY8++si62K+//rpx48a6gH5atni1JBlm9fT4+PiVK1eqC5Q///zz0qVL9XDB
ir/BtiTboUhbtmzRFfWzsTa2h4uvu+66o0ePqll5eXkTJ07Ug4OVK1cuJSVF
Vxw4cKCuJT+d9aJtWlrayy+/bBt62vZaH7+CrXXf/etf//J9CwAA/EKwBQBE
HluwlWJjY2W87datm37FjzJ48GBbXR9jS/fu3a3LSUhIaNeu3e233960aVPr
9Nq1a+u0JaWnp1977bXWAjKd3XrrrXfccYfMZdbpzZs317fgFq+WKHi+1ZZe
ZcTTH9CmGMG22NuhSLm5uXpPeRv5yhZslauvvvqmm27S7zBSxo4da634z3/+
U2feqILHeO+///4RI0b84Q9/8Pg2pYsuuigrK8vfLaP0799fFa5Zs6a3x70B
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
     "], {{0, 501.5}, {633.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{633.5, 501.5},
   PlotRange->{{0, 633.5}, {0, 501.5}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`pres = 0.08, $CellContext`temp = 
     383, $CellContext`temp = 383, $CellContext`fTfP = 
     2, $CellContext`highpressure = False}},
 CellTags->"Snapshot",
 CellID->1750863316,ExpressionUUID->"e27c82c9-5693-4aea-a569-04be8719c034"]
}, Closed]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->"SourceInformationGroup",
 CellID->62407265,ExpressionUUID->"ac4fd0d5-f22a-43eb-8250-543ffe090b76"],

Cell[CellGroupData[{

Cell[TextData[{
 "Contributed By",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"AuthorNames", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "'John Smith' for single authors; 'John Smith, Robert Ford, and \
Jane Doe' for multiple authors. To credit people other than Demonstrations \
authors, please see the 'Details & Citations' section."}], "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNames"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "33c3b20e-b4c6-4193-ac9e-e2b5c027d2d9"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "AuthorNames"},
 DefaultNewCellStyle->"Item",
 CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
 CellID->255368948,ExpressionUUID->"339fc614-81c6-4f28-8eab-5784c57b3f50"],

Cell["Neil Hendren", "Item",
 TaggingRules->{},
 CellID->127823445,ExpressionUUID->"559894f4-a3f7-4aa2-b132-9ed190d28ece"],

Cell["Rachael L. Baumann", "Item",
 TaggingRules->{},
 CellID->392586725,ExpressionUUID->"c78590bc-7c07-4fe8-9920-4b1842560e36"],

Cell["John L. Falconer", "Item",
 TaggingRules->{},
 CellID->250311285,ExpressionUUID->"68b59fcf-cb19-4473-acf9-fd43099d3fd4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details & Citations",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"DetailCells", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "This optional section is for a more detailed description of the \
Demonstration than the caption, but it should still be as concise as \
possible. This section may also include numbered snapshot captions (e.g., \
Snapshot 1: phrase or sentence without an initial capital and without a \
period, unless more than one sentence is used) and explanations of the ", 
           StyleBox["Manipulate", "MRbig"], 
           " control labels. Define any symbols undefined so far. Include \
only text in this section \[LongDash] no code, graphics, etc. Do not change \
the cell style or copy cells from other sections. \n\nA book reference uses \
this format: \n   L. D. Schmidt, ", 
           StyleBox[
           "The Engineering of Chemical Reactions", FontSlant -> "Italic"], 
           ", New York: Oxford University Press, 1998. \n\nAn article \
reference uses this format: \n   D. Pearson, \"A Polynomial-Time Algorithm \
for the Change-Making Problem,\" ", 
           StyleBox["Operations Research Letters", FontSlant -> "Italic"], 
           ", ", 
           StyleBox["33", FontWeight -> "Bold"], 
           "(3), 2005 pp. 231\[Dash]234."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDetailCells"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "cd2a3bf7-cf02-495f-9186-bbbfb09e6440"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "DetailCells"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
 CellID->441931514,ExpressionUUID->"12a2b598-c96c-47ba-82a5-beeb7eae90ae"],

Cell["\<\
Fugacity is used instead of Gibbs free energy to determine phase equilibrium \
because it is easier to use (the fugacity of a pure-component ideal gas is \
the same as the pressure). Fugacity is defined by:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.743717119249568*^9, 3.743717139483358*^9}, {
  3.74371729532371*^9, 3.743717395946455*^9}, {3.7438122747927074`*^9, 
  3.743812388817633*^9}, {3.74507810208637*^9, 3.745078113153695*^9}},
 CellID->156872021,ExpressionUUID->"fa3a743a-90a5-4090-8809-3e8a505c8745"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["dG",
     FontSlant->"Italic"], "=", 
    RowBox[{
     StyleBox["VdP",
      FontSlant->"Italic"], "\[Congruent]", 
     RowBox[{
      StyleBox["RT",
       FontSlant->"Italic"], " ", "d", " ", "ln", " ", "f"}]}]}], 
   TraditionalForm]], "InlineMath",ExpressionUUID->
  "4ffe1db5-d720-4bcd-aa0a-3168e6d61b7b"],
 " (1)"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.6448612691090956`*^9, 3.644861299672844*^9}, 
   3.743513237832238*^9, {3.7437174028397274`*^9, 3.7437175059648356`*^9}, {
   3.7437176314805994`*^9, 3.7437176322773247`*^9}, {3.743812202835842*^9, 
   3.7438122065074315`*^9}, {3.7450781180061483`*^9, 3.7450781224028378`*^9}, 
   3.929192326976372*^9},
 CellID->336904835,ExpressionUUID->"a827b636-8a88-444a-8bad-cabde76800be"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox["G", TraditionalForm]], "InlineMath",ExpressionUUID->
  "af82f92e-e383-4f0f-af5a-995b8ad151c1"],
 " is the Gibbs energy, ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]], "InlineMath",ExpressionUUID->
  "a7a2e0ee-f61c-40fb-aa99-f10be8efabf4"],
 " is specific volume, ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]], "InlineMath",ExpressionUUID->
  "e1155af1-7edc-429b-91a8-c25da360cf06"],
 " is pressure, ",
 Cell[BoxData[
  FormBox["R", TraditionalForm]], "InlineMath",ExpressionUUID->
  "98c9a527-dafa-4aad-847b-f6db4c5a6a16"],
 " is the gas constant, ",
 Cell[BoxData[
  FormBox["T", TraditionalForm]], "InlineMath",ExpressionUUID->
  "8fcf8904-f091-48e4-a9c9-abc3bec6976a"],
 " is temperature and ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]], "InlineMath",ExpressionUUID->
  "068790a9-dfde-41a1-be1a-d56ef2c0ad75"],
 " is fugacity. When two phases are in equilibrium for a single component, \
the fugacity of the component is the same in each phase. When only one phase \
exists, it is the phase with the lower fugacity."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.743717533328426*^9, 3.743717565917956*^9}, {
   3.743717645037936*^9, 3.743717651753046*^9}, {3.743717766766074*^9, 
   3.7437177898961396`*^9}, {3.7437178418826675`*^9, 3.743717842271021*^9}, 
   3.743719236582649*^9, {3.7437192914544325`*^9, 3.743719469547324*^9}, {
   3.74371953249998*^9, 3.7437195413960743`*^9}, {3.7438120856775503`*^9, 
   3.7438121867849813`*^9}, {3.745074542226204*^9, 3.745074546343503*^9}, {
   3.745074588679205*^9, 3.7450745984470987`*^9}},
 CellID->106618000,ExpressionUUID->"179beb4f-4386-4225-a40b-902d89819ff7"],

Cell["\<\
Equation (1) can be integrated, using the fact that the fugacity of an \
single-component ideal gas is the pressure, to yield:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.7437179477135596`*^9, 3.7437179482410393`*^9}, {
   3.7437179953913097`*^9, 3.7437180400919843`*^9}, {3.743718084272666*^9, 
   3.7437182369042187`*^9}, {3.743719258125964*^9, 3.7437192611737375`*^9}, {
   3.7438124398371606`*^9, 3.7438125069318533`*^9}, 3.929192327016479*^9},
 CellID->451625093,ExpressionUUID->"4986ce4e-1f8f-4236-bf49-fa8cfdc737c3"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"(", 
      RowBox[{"G", "-", 
       SuperscriptBox["G", "ig"]}], ")"}], 
     RowBox[{"R", "\[InvisibleSpace]", "T"}]], "=", 
    RowBox[{
     RowBox[{"ln", "(", 
      FractionBox["f", "P"], ")"}], "=", 
     RowBox[{"ln", " ", "\[Phi]"}]}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"cb6b1c13-3bf6-4725-b346-6587a9102967"],
 " (2)"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.7437176368624964`*^9, 3.7437176999403095`*^9}, {
   3.7437177502940164`*^9, 3.7437177628660088`*^9}, {3.7437178493748193`*^9, 
   3.743717850087468*^9}, {3.7437192522626286`*^9, 3.743719252376733*^9}, {
   3.743812212313373*^9, 3.7438122164624696`*^9}, {3.7450746207849483`*^9, 
   3.745074621333901*^9}, {3.745078125899723*^9, 3.745078157982617*^9}, 
   3.9291923270547523`*^9},
 CellID->477183820,ExpressionUUID->"78a66b76-754d-4712-99b5-d47ec66afabd"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["G", "ig"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "1a1df093-a466-4508-86e9-281770e70ace"],
 " is the Gibbs energy of an ideal gas and ",
 Cell[BoxData[
  FormBox["\[Phi]", TraditionalForm]], "InlineMath",ExpressionUUID->
  "b0501831-01eb-47df-957d-8fa424c23c74"],
 " is the fugacity coefficient. Equation (2) can be applied to solids, \
liquids or gases. Below the critical point, the Poynting correction is used \
to calculate the fugacity of a liquid or solid:"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.7437186949427385`*^9, 3.7437187671698694`*^9}, {
   3.7437188891774216`*^9, 3.7437188903184605`*^9}, {3.7437192686845703`*^9, 
   3.7437192688146887`*^9}, {3.743719784699669*^9, 3.7437198214625893`*^9}, {
   3.7438124951548615`*^9, 3.7438125662672663`*^9}, {3.7438126047563105`*^9, 
   3.743812648147004*^9}, 3.745074634694234*^9},
 CellID->23551827,ExpressionUUID->"1897ef4c-da2b-4dee-8e09-7a06db5e8b10"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "=", 
    RowBox[{
     SuperscriptBox["\[Phi]", "sat"], 
     SuperscriptBox["P", "sat"], 
     FractionBox[
      SuperscriptBox["e", 
       RowBox[{"V", "(", 
        RowBox[{"P", "-", 
         SuperscriptBox["P", "sat"]}], ")"}]], 
      RowBox[{"R", " ", "T"}]]}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"9e040a25-e964-400b-8f9e-d0cd0214c7c6"],
 " (3)"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.7437186949427385`*^9, 3.7437187701926203`*^9}, {
   3.7437190063443594`*^9, 3.7437190478357573`*^9}, {3.743719275414345*^9, 
   3.743719275522443*^9}, {3.7437195711419277`*^9, 3.743719572324003*^9}, {
   3.7438122230544996`*^9, 3.743812226458599*^9}, {3.74507464826466*^9, 
   3.745074674588006*^9}, {3.745078166219726*^9, 3.7450782159415703`*^9}, {
   3.7451544884765244`*^9, 3.745154497909794*^9}, 3.745166965144438*^9, 
   3.929192327087913*^9},
 CellID->216493807,ExpressionUUID->"8ecb3fc9-3b33-4ffe-9d53-d3cc9cd498e5"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Phi]", "sat"], TraditionalForm]], "InlineMath",
  ExpressionUUID->"8ad51614-8b34-441c-8121-f9a7dc3aafff"],
 " is the fugacity coefficient at saturation conditions, ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["P", "sat"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "e047250a-63c7-43fb-b1ec-6e258c00733c"],
 " is the saturation pressure and ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]], "InlineMath",ExpressionUUID->
  "eb488ce0-0fbd-4734-9c68-aa12961ef6e6"],
 " is the liquid or solid volume, which is assumed independent of pressure. \
For low pressure, we assume that"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.7437186949427385`*^9, 3.7437187701926203`*^9}, {
  3.7437190063443594`*^9, 3.7437191351078224`*^9}, {3.743719833114191*^9, 
  3.7437198361819825`*^9}, {3.7438126554545755`*^9, 3.7438128324095926`*^9}, {
  3.745074687872848*^9, 3.745074699000484*^9}},
 CellID->568471048,ExpressionUUID->"50527cb0-111b-4f93-ac62-45e950fa21c3"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["f", "L"], "\[TildeTilde]", 
    SuperscriptBox["P", "sat"]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"88f1a7c1-5d2f-408d-a802-87d4683204cb"],
 " (4)"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.7437191377090855`*^9, 3.743719156607671*^9}, {
   3.743719196150103*^9, 3.743719196150103*^9}, {3.7437192779306335`*^9, 
   3.74371927801471*^9}, {3.7438122325142803`*^9, 3.743812236153626*^9}, {
   3.745166943649438*^9, 3.7451669438894377`*^9}, 3.9291923271193*^9},
 CellID->804286894,ExpressionUUID->"caf43011-33d6-4438-b69a-95995d552dd2"],

Cell["and", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.7437191377090855`*^9, 3.74371915774971*^9}},
 CellID->10145431,ExpressionUUID->"fde23bd3-c251-428b-91a7-5d9b2f03db12"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["f", "S"], "\[TildeTilde]", 
    SuperscriptBox["P", "sat"]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"3f998d95-aa1f-425a-a636-bd88d596559c"],
 " (5)"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.7437191377090855`*^9, 3.7437191687608995`*^9}, {
   3.7437192801226287`*^9, 3.743719280989417*^9}, {3.743812240774191*^9, 
   3.7438122469470887`*^9}, 3.929192327150469*^9},
 CellID->282198968,ExpressionUUID->"57855b8c-d5d4-4a39-8889-125f8d02bf79"],

Cell[TextData[{
 "where the superscripts ",
 Cell[BoxData[
  FormBox[
   RowBox[{"L", ",", " ", "S"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"85fb5676-c613-494d-872a-94c3fd3e3e43"],
 " and ",
 Cell[BoxData[
  FormBox["sat", TraditionalForm]], "InlineMath",ExpressionUUID->
  "ce50f955-fc92-4b64-b0a7-eac68de59cbd"],
 " represent liquid, solid and saturation properties."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.7437195873076363`*^9, 3.743719631045948*^9}, {
  3.7450747393930483`*^9, 3.7450747504591103`*^9}},
 CellID->585505911,ExpressionUUID->"74451d62-b389-46ff-b7a3-1b4eb27c357a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "References",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ReferenceCells", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "This optional section is for a more detailed description of the \
Demonstration than the caption, but it should still be as concise as \
possible. This section may also include numbered snapshot captions (e.g., \
Snapshot 1: phrase or sentence without an initial capital and without a \
period, unless more than one sentence is used) and explanations of the ", 
           StyleBox["Manipulate", "MRbig"], 
           " control labels. Define any symbols undefined so far. Include \
only text in this section \[LongDash] no code, graphics, etc. Do not change \
the cell style or copy cells from other sections. \n\nA book reference uses \
this format: \n   L. D. Schmidt, ", 
           StyleBox[
           "The Engineering of Chemical Reactions", FontSlant -> "Italic"], 
           ", New York: Oxford University Press, 1998. \n\nAn article \
reference uses this format: \n   D. Pearson, \"A Polynomial-Time Algorithm \
for the Change-Making Problem,\" ", 
           StyleBox["Operations Research Letters", FontSlant -> "Italic"], 
           ", ", 
           StyleBox["33", FontWeight -> "Bold"], 
           "(3), 2005 pp. 231\[Dash]234."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoReferenceCells"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "5170f62c-7abe-4331-a2c9-69cfe714c5ba"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ReferenceCells"},
 DefaultNewCellStyle->"Text",
 CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
 CellID->592881655,ExpressionUUID->"83a74d80-ef1d-4fee-b4cf-b94318094434"],

Cell["References for demonstration.", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->423796343,ExpressionUUID->"47593db1-0a9b-4d62-9615-62aacfada4d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Submission Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SubmissionNotes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Enter any additional information that you would like to \
communicate to the reviewer here. This section will not be included in the \
published resource.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSubmissionNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "243ab3cd-5b92-46fb-a47f-172122a6574f"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SubmissionNotes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
 CellID->797097429,ExpressionUUID->"5f053220-1475-4ce7-936e-d2caa6ce36c3"],

Cell["Additional information for the reviewer.", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->820829112,ExpressionUUID->"c7eaf52a-2cd2-4a99-816a-d6876503d2aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the demonstration in search \
results.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20,
         FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "5a5cfc4d-083c-4f72-b507-1ae0156accda"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->938146184,ExpressionUUID->"06afd7a2-583d-4eed-99b5-dd9a9fb205f0"],

Cell["chemical engineering", "Item",
 TaggingRules->{},
 CellID->858230107,ExpressionUUID->"afe05024-334f-4a5b-959f-e5dc17340830"],

Cell["fugacity", "Item",
 TaggingRules->{},
 CellID->334422713,ExpressionUUID->"92c2adbf-f83f-42df-b71e-4416e3cbdc89"],

Cell["thermodynamics", "Item",
 TaggingRules->{},
 CellID->419988527,ExpressionUUID->"2104dfd0-87dc-43ed-b4ef-9b343be306e5"],

Cell["vapor-liquid equilibrium", "Item",
 TaggingRules->{},
 CellID->670454273,ExpressionUUID->"419decae-0650-49eb-a7f6-a8af96565cf2"],

Cell["fugacity temperature dependence", "Item",
 TaggingRules->{},
 CellID->846373912,ExpressionUUID->"a2f57a16-880f-4cda-8b29-59944199b4cc"],

Cell["fugacity pressure dependence", "Item",
 TaggingRules->{},
 CellID->952996925,ExpressionUUID->"483bde01-1afd-4d20-8f1e-4fa28d9a012e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Categories",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Categories", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose categories that best represent your demonstration. These \
choices determine which pages your demonstration will appear on when \
published to the repository.", "MoreInfoText"], Background -> GrayLevel[0.95],
         FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 
        5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCategories"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "f1a81a9c-b0d1-4fbe-86cf-ac9d870ce182"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
 CellID->845692503,ExpressionUUID->"196ee512-98e0-4973-af09-64403cec8787"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Mathematics"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School K-2 Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Elementary School K-2 Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School 3-5 Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Elementary School 3-5 Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Middle School Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Middle School Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"High School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"High School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Algebra I"}], 
                    "\" \"", 
                    StyleBox["\"High School Algebra I\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Geometry"}], 
                    "\" \"", 
                    StyleBox["\"High School Geometry\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Algebra II and Trigonometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Algebra II and Trigonometry\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Precalculus"}], 
                    "\" \"", 
                    StyleBox["\"High School Precalculus\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Calculus and Analytic Geometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Calculus and Analytic Geometry\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Advanced Calculus and Linear Algebra"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Advanced Calculus and Linear Algebra\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Finite Mathematics"}], 
                    "\" \"", 
                    StyleBox["\"High School Finite Mathematics\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Statistics"}], 
                    "\" \"", 
                    StyleBox["\"High School Statistics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{
                    Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Area"}], "\" \"", 
                    StyleBox[
                    "\"Area\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Equations"}], "\" \"", 
                    StyleBox[
                    "\"Equations\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Exponential Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Exponential Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Exponents and Logarithms"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Exponents and Logarithms\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Hyperbolic Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Hyperbolic Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Identities"}], "\" \"", 
                    StyleBox[
                    "\"Identities\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Inequalities"}], "\" \"", 
                    StyleBox[
                    "\"Inequalities\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Integers"}], "\" \"", 
                    StyleBox[
                    "\"Integers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Irrational Numbers"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Irrational Numbers\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Number Bases"}], "\" \"", 
                    StyleBox[
                    "\"Number Bases\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Parametric Equations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Parametric Equations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Perimeter"}], "\" \"", 
                    StyleBox[
                    "\"Perimeter\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Pi"}], "\" \"", 
                    StyleBox[
                    "\"Pi\"", FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polynomials"}], "\" \"", 
                    StyleBox[
                    "\"Polynomials\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Pre-Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Pre-Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Prime Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Prime Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Rational Numbers"}], "\" \"", 
                    
                    StyleBox[
                    "\"Rational Numbers\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Real Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Real Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Trigonometric Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Trigonometric Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Volume"}], "\" \"", 
                    StyleBox[
                    "\"Volume\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebra"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Algebra\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Algebra\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Algebra I"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Algebra I\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Algebra II and Trigonometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Algebra II and Trigonometry\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Precalculus"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Precalculus\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Complex Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Complex Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linear Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Linear Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polynomials"}], "\" \"", 
                    StyleBox[
                    "\"Polynomials\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Quadratic Forms"}], "\" \"", 
                    StyleBox[
                    "\"Quadratic Forms\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Rational Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Rational Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Vector Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Vector Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Applied Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Applied Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Applied Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Approximation Methods"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Approximation Methods\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linear Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Linear Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Numerical Analysis"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Numerical Analysis\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Operations Research"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Operations Research\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Optimization"}], "\" \"", 
                    StyleBox[
                    "\"Optimization\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Special Functions"}], "\" \"", 
                    StyleBox[
                    "\"Special Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Wavelets"}], "\" \"", 
                    StyleBox[
                    "\"Wavelets\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Calculus & Analysis"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Calculus & Analysis\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Calculus & Analysis\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Calculus and Analytic Geometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Calculus and Analytic Geometry\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Advanced Calculus and Linear Algebra"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Advanced Calculus and Linear Algebra\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Calculus"}], "\" \"", 
                    StyleBox[
                    "\"Calculus\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Complex Analysis"}], "\" \"", 
                    
                    StyleBox[
                    "\"Complex Analysis\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Derivatives"}], "\" \"", 
                    StyleBox[
                    "\"Derivatives\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Differential Equations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Differential Equations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Harmonic Analysis"}], "\" \"", 
                    StyleBox[
                    "\"Harmonic Analysis\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Integrals"}], "\" \"", 
                    StyleBox[
                    "\"Integrals\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Multivariable Calculus"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Multivariable Calculus\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Real Analysis"}], "\" \"", 
                    StyleBox[
                    "\"Real Analysis\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Related Rates"}], "\" \"", 
                    StyleBox[
                    "\"Related Rates\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Riemann Surfaces"}], "\" \"", 
                    
                    StyleBox[
                    "\"Riemann Surfaces\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Series"}], "\" \"", 
                    StyleBox[
                    "\"Series\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Special Functions"}], "\" \"", 
                    StyleBox[
                    "\"Special Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Vector Fields"}], "\" \"", 
                    StyleBox[
                    "\"Vector Fields\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Discrete Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Discrete Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Discrete Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Finite Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Finite Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Coding Theory"}], "\" \"", 
                    StyleBox[
                    "\"Coding Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Combinatorics"}], "\" \"", 
                    StyleBox[
                    "\"Combinatorics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Graph Theory"}], "\" \"", 
                    StyleBox[
                    "\"Graph Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Networks"}], "\" \"", 
                    StyleBox[
                    "\"Networks\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Sequences"}], "\" \"", 
                    StyleBox[
                    "\"Sequences\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Tiling"}], "\" \"", 
                    StyleBox[
                    "\"Tiling\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Trees"}], "\" \"", 
                    StyleBox[
                    "\"Trees\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Experimental Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Experimental Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometry"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Geometry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Geometry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Curves"}], "\" \"", 
                    
                    StyleBox[
                    "\"Algebraic Curves\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Algebraic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Surfaces"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Algebraic Surfaces\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Analytic Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Analytic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Conic Sections"}], "\" \"", 
                    StyleBox[
                    "\"Conic Sections\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Curves"}], "\" \"", 
                    StyleBox[
                    "\"Curves\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Differential Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Differential Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Ellipses"}], "\" \"", 
                    StyleBox[
                    "\"Ellipses\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometric Transformations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Geometric Transformations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Higher-Dimensional Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Higher-Dimensional Geometry\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Hyperbolic Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Hyperbolic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Nested Patterns"}], "\" \"", 
                    StyleBox[
                    "\"Nested Patterns\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Plane Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Plane Geometry\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polygons"}], "\" \"", 
                    StyleBox[
                    "\"Polygons\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polyhedra"}], "\" \"", 
                    StyleBox[
                    "\"Polyhedra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Projective Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Projective Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Reflections"}], "\" \"", 
                    StyleBox[
                    "\"Reflections\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Solid Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Solid Geometry\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Surfaces"}], "\" \"", 
                    StyleBox[
                    "\"Surfaces\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Triangles"}], "\" \"", 
                    StyleBox[
                    "\"Triangles\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Historical Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Historical Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Historical Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Euclid's Elements"}], "\" \"", 
                    StyleBox[
                    "\"Euclid's Elements\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Foundations of Mathematics"}],
                     "\" \"", 
                    StyleBox[
                    "\"Foundations of Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Greek Mathematics"}], "\" \"", 
                    StyleBox[
                    "\"Greek Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Unsolved Problems"}], "\" \"", 
                    StyleBox[
                    "\"Unsolved Problems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Number Theory"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Number Theory\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Number Theory\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Number Bases"}], "\" \"", 
                    StyleBox[
                    "\"Number Bases\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Prime Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Prime Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Representations of Numbers"}],
                     "\" \"", 
                    StyleBox[
                    "\"Representations of Numbers\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Pure Mathematics"}], "\" \"", 
                    
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Pure Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Pure Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Algebraic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Complex Analysis"}], "\" \"", 
                    
                    StyleBox[
                    "\"Complex Analysis\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Differential Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Differential Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Dynamical Systems Theory"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Dynamical Systems Theory\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Group Theory"}], "\" \"", 
                    StyleBox[
                    "\"Group Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Knot Theory"}], "\" \"", 
                    StyleBox[
                    "\"Knot Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mathematical Logic"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Mathematical Logic\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Theorem Proving"}], "\" \"", 
                    StyleBox[
                    "\"Theorem Proving\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Topology"}], "\" \"", 
                    StyleBox[
                    "\"Topology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Recreational Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Recreational Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Recreational Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Golden Ratio"}], "\" \"", 
                    StyleBox[
                    "\"Golden Ratio\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mathematics Problems"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Mathematics Problems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Unsolved Problems"}], "\" \"", 
                    StyleBox[
                    "\"Unsolved Problems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Statistics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Statistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Statistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Statistics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Statistics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Data Analysis"}], "\" \"", 
                    StyleBox[
                    "\"Data Analysis\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Probability"}], "\" \"", 
                    StyleBox[
                    "\"Probability\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Random Processes"}], "\" \"", 
                    
                    StyleBox[
                    "\"Random Processes\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Life Sciences"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Life Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Life Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Biology"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Biology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Biology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Biology"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Biology\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Developmental Biology"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Developmental Biology\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Growth Processes"}], "\" \"", 
                    
                    StyleBox[
                    "\"Growth Processes\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Molecular Biology"}], "\" \"", 
                    StyleBox[
                    "\"Molecular Biology\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Natural Forms"}], "\" \"", 
                    StyleBox[
                    "\"Natural Forms\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Plant Biology"}], "\" \"", 
                    StyleBox[
                    "\"Plant Biology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Zoology"}], "\" \"", 
                    StyleBox[
                    "\"Zoology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cognitive Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Cognitive Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Cognitive Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Perception"}], "\" \"", 
                    StyleBox[
                    "\"Perception\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Psychology"}], "\" \"", 
                    StyleBox[
                    "\"Psychology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Psychophysics"}], "\" \"", 
                    StyleBox[
                    "\"Psychophysics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Ecology"}], "\" \"", 
                    StyleBox["\"Ecology\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Medicine"}], "\" \"", 
                    StyleBox[
                    "\"Medicine\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Engineering & Technology"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Engineering & Technology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Engineering & Technology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Applied Sciences"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Applied Sciences\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    "Chemical Engineering", {False, "Chemical Engineering"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Chemical Engineering\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Civil Engineering"}], "\" \"", 
                    StyleBox[
                    "\"Civil Engineering\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Control Theory"}], "\" \"", 
                    StyleBox[
                    "\"Control Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Electrical Engineering"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Electrical Engineering\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Electrical Engineering\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Circuit Design"}], "\" \"", 
                    StyleBox[
                    "\"Circuit Design\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Signal Processing"}], "\" \"", 
                    StyleBox[
                    "\"Signal Processing\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fluid Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Fluid Mechanics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Image Processing"}], "\" \"", 
                    
                    StyleBox[
                    "\"Image Processing\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Machines"}], "\" \"", 
                    StyleBox[
                    "\"Machines\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mechanical Engineering"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Mechanical Engineering\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Nanotechnology"}], "\" \"", 
                    StyleBox[
                    "\"Nanotechnology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Robotics"}], "\" \"", 
                    StyleBox[
                    "\"Robotics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Signal Processing"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Signal Processing\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Signal Processing\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Audio"}], "\" \"", 
                    StyleBox[
                    "\"Audio\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Wavelets"}], "\" \"", 
                    StyleBox[
                    "\"Wavelets\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Kids & Fun"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Kids & Fun\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Kids & Fun\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "School Puzzles and Recreations"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"School Puzzles and Recreations\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"School Puzzles and Recreations\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Puzzles and Recreations: Elementary"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Puzzles and Recreations: Elementary\"", FontSize -> 12,
                     Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Puzzles and Recreations: Intermediate"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Puzzles and Recreations: Intermediate\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Puzzles and Recreations: Advanced"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Puzzles and Recreations: Advanced\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Everyday Life"}], "\" \"", 
                    StyleBox[
                    "\"Everyday Life\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "For Kids"}], "\" \"", 
                    StyleBox[
                    "\"For Kids\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Optical Illusions"}], "\" \"", 
                    StyleBox[
                    "\"Optical Illusions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Puzzles"}], "\" \"", 
                    StyleBox[
                    "\"Puzzles\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Recreation"}], "\" \"", 
                    StyleBox[
                    "\"Recreation\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Computation"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Computation\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Computation\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algorithms"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Algorithms\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Algorithms\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Automatic Reasoning"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Automatic Reasoning\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Coding Theory"}], "\" \"", 
                    StyleBox[
                    "\"Coding Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computational Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Computational Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Algebra"}], "\" \"", 
                    
                    StyleBox[
                    "\"Computer Algebra\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Graphics"}], "\" \"", 
                    StyleBox[
                    "\"Computer Graphics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cryptography"}], "\" \"", 
                    StyleBox[
                    "\"Cryptography\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Data Compression"}], "\" \"", 
                    
                    StyleBox[
                    "\"Data Compression\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Image Processing"}], "\" \"", 
                    
                    StyleBox[
                    "\"Image Processing\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Numerical Analysis"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Numerical Analysis\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Science"}], "\" \"", 
                    
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Computer Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Computer Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Computer Science"}], "\" \"", 
                    
                    StyleBox[
                    "\"High School Computer Science\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computational Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Computational Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Graphics"}], "\" \"", 
                    StyleBox[
                    "\"Computer Graphics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Data Structures"}], "\" \"", 
                    StyleBox[
                    "\"Data Structures\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Finite State Machines"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Finite State Machines\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Recursion"}], "\" \"", 
                    StyleBox[
                    "\"Recursion\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Theory of Computation"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Theory of Computation\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Systems"}], "\" \"", 
                    
                    StyleBox[
                    "\"Computer Systems\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "NKS / Wolfram Science"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"NKS / Wolfram Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"NKS / Wolfram Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cellular Automata"}], "\" \"", 
                    StyleBox[
                    "\"Cellular Automata\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fractals"}], "\" \"", 
                    StyleBox[
                    "\"Fractals\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Nested Patterns"}], "\" \"", 
                    StyleBox[
                    "\"Nested Patterns\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Simple Computational Systems"}], "\" \"", 
                    
                    StyleBox[
                    "\"Simple Computational Systems\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Substitution Systems"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Substitution Systems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Business & Social Systems"}], "\" \"", 
           
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Business & Social Systems\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Business & Social Systems\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Actuarial Science"}], "\" \"", 
                    StyleBox[
                    "\"Actuarial Science\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Business"}], "\" \"", 
                    StyleBox[
                    "\"Business\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Economics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Economics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Economics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Economics and Finance"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Economics and Finance\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Macroeconomics"}], "\" \"", 
                    StyleBox[
                    "\"Macroeconomics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Microeconomics"}], "\" \"", 
                    StyleBox["\"Microeconomics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Finance"}], "\" \"", 
                    StyleBox[
                    "\"Finance\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Law"}], "\" \"", 
                    StyleBox[
                    "\"Law\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Political Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Political Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Political Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "International Relations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"International Relations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Social Sciences"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Social Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Social Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Social Studies"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Social Studies\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linguistics"}], "\" \"", 
                    StyleBox[
                    "\"Linguistics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Our World"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Our World\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Our World\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School K-2 Science"}], "\" \"", 
                    StyleBox[
                    "\"Elementary School K-2 Science\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School 3-5 Science"}], "\" \"", 
                    StyleBox["\"Elementary School 3-5 Science\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Middle School Science"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Middle School Science\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Everyday Life"}], "\" \"", 
                    StyleBox[
                    "\"Everyday Life\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geography"}], "\" \"", 
                    StyleBox[
                    "\"Geography\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometric Models"}], "\" \"", 
                    
                    StyleBox[
                    "\"Geometric Models\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "History"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"History\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"History\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Classic Science Experiments"}], "\" \"", 
                    StyleBox[
                    "\"Classic Science Experiments\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Euclid's Elements"}], "\" \"", 
                    StyleBox[
                    "\"Euclid's Elements\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Greek Mathematics"}], "\" \"", 
                    StyleBox[
                    "\"Greek Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "International Relations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"International Relations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linguistics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Linguistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Linguistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Language Arts"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Language Arts\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Textual Analysis"}], "\" \"", 
                    
                    StyleBox[
                    "\"Textual Analysis\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Machines"}], "\" \"", 
                    StyleBox[
                    "\"Machines\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Natural Forms"}], "\" \"", 
                    StyleBox[
                    "\"Natural Forms\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Navigation"}], "\" \"", 
                    StyleBox[
                    "\"Navigation\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Solar System"}], "\" \"", 
                    StyleBox[
                    "\"Solar System\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Programming Functionality"}], "\" \"", 
           
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Programming Functionality\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Programming Functionality\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "3D Graphics"}], "\" \"", 
                    StyleBox[
                    "\"3D Graphics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Version 7 Features"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Version 7 Features\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Short Programs"}], "\" \"", 
                    StyleBox[
                    "\"Short Programs\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Physical Sciences"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Physical Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Physical Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Astronomy"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Astronomy\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Astronomy\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Astronomy"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Astronomy\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Solar System"}], "\" \"", 
                    StyleBox[
                    "\"Solar System\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemistry"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Chemistry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Chemistry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Chemistry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemical Kinetics"}], "\" \"", 
                    StyleBox[
                    "\"Chemical Kinetics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "General Chemistry"}], "\" \"", 
                    StyleBox[
                    "\"General Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Inorganic Chemistry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Inorganic Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Organic Chemistry"}], "\" \"", 
                    StyleBox[
                    "\"Organic Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Physical Chemistry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Physical Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Earth Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Earth Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Earth Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Earth and Environmental Sciences"}], "\" \"", 
                    StyleBox[
                    "\"High School Earth and Environmental Sciences\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Meteorology"}], "\" \"", 
                    StyleBox[
                    "\"Meteorology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "History of Science"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"History of Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"History of Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Classic Science Experiments"}], "\" \"", 
                    StyleBox[
                    "\"Classic Science Experiments\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Classic Scientific Images"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Classic Scientific Images\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Materials Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Materials Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Materials Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Crystallography"}], "\" \"", 
                    StyleBox[
                    "\"Crystallography\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Physics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Physics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Physics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Acoustics"}], "\" \"", 
                    StyleBox[
                    "\"Acoustics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Astrophysics"}], "\" \"", 
                    StyleBox[
                    "\"Astrophysics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "College Physics"}], "\" \"", 
                    StyleBox[
                    "\"College Physics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Electromagnetism"}], "\" \"", 
                    
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Electromagnetism\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Electromagnetism\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Electrostatics"}], "\" \"", 
                    StyleBox[
                    "\"Electrostatics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fluid Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Fluid Mechanics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Gravitation Theory"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Gravitation Theory\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Mechanics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Optics"}], "\" \"", 
                    StyleBox[
                    "\"Optics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Particle Physics"}], "\" \"", 
                    
                    StyleBox[
                    "\"Particle Physics\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Quantum Physics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Quantum Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Quantum Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Quantum Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Quantum Mechanics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Statistical Mechanics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Statistical Mechanics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Statistical Mechanics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemical Kinetics"}], "\" \"", 
                    StyleBox[
                    "\"Chemical Kinetics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox["Thermodynamics", {False, "Thermodynamics"}], 
                    "\" \"", 
                    StyleBox["\"Thermodynamics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Waves"}], "\" \"", 
                    StyleBox[
                    "\"Waves\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Systems, Models & Methods"}], "\" \"", 
           
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Systems, Models & Methods\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Systems, Models & Methods\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cellular Automata"}], "\" \"", 
                    StyleBox[
                    "\"Cellular Automata\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chaos Theory"}], "\" \"", 
                    StyleBox[
                    "\"Chaos Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Discrete Models"}], "\" \"", 
                    StyleBox[
                    "\"Discrete Models\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Experimental Methods"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Experimental Methods\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fractals"}], "\" \"", 
                    StyleBox[
                    "\"Fractals\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Game Theory"}], "\" \"", 
                    StyleBox[
                    "\"Game Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Generation of Form"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Generation of Form\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Multi-agent Modeling"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Multi-agent Modeling\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Networks"}], "\" \"", 
                    StyleBox[
                    "\"Networks\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Random Processes"}], "\" \"", 
                    
                    StyleBox[
                    "\"Random Processes\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Substitution Systems"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Substitution Systems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Trees"}], "\" \"", 
                    StyleBox[
                    "\"Trees\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Creative Arts"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Creative Arts\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Creative Arts\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Art and Design"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Art and Design\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Visual Patterns"}], "\" \"", 
                    StyleBox[
                    "\"Visual Patterns\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Architecture"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Architecture\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Architecture\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometric Models"}], "\" \"", 
                    
                    StyleBox[
                    "\"Geometric Models\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Art"}], "\" \"", 
                    StyleBox[
                    "\"Art\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Color"}], "\" \"", 
                    StyleBox[
                    "\"Color\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Generation of Form"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Generation of Form\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Graphic Design"}], "\" \"", 
                    StyleBox[
                    "\"Graphic Design\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Iconography & Typography"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Iconography & Typography\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Music"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Music\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Music\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Music"}], "\" \"", 
                    StyleBox[
                    "\"School Music\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Audio"}], "\" \"", 
                    StyleBox[
                    "\"Audio\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Music Theory"}], "\" \"", 
                    StyleBox[
                    "\"Music Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Patterns"}], "\" \"", 
                    StyleBox["\"Patterns\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJy9Wetz27gRby+\
xJT8kP2LncXe9YabT3kznPO30ptOZfmNkOdHED9V0czP9BpOwhAYkWBBUovz13QVJcUlQcvqh/\
WQLCywWu4vf/hb0986CrcAsJQ+\
2b3KT5uYs6I3mPPzIo4dvsqeXIjPBCQzEImTSGyczkXCuRTILhndzrmMVLRMGwgz0TAyPMx807l0xA\
0uYgXF//yw4DsK5UtKjwy/PgtdjyWOeGKaXXjnj/dmf6ayHXxUmdM79+\
ewv3XNfXYkoktxzd63nvHgnZvOOGX7/LDilMl/O+L1m3qRee0Llb7mKudHLWvxj5/\
KJx5LIu9NippL2ioYxU83B1WEuc2LuH+iMUSm2Gv2EySVY3mHInxqGRAuWhDxqrr6EcDJdWVkv/\
YEuvRCJMLzbj8/pxMCANGtOeOprThTvjP+dwySVkCmn48+pSiC4AlLsIk/\
ClvxlJS9tVjOmhZnHGQ3JMuX6XklwRIeG3UmE6o3gZHB/knAwRraG+\
5PE8BnXZOh4orU1Guy7zuP7hnC/GPHesIyqOZkyzTAgYFHHmXemcItAzHU99s1U1D/\
2pkouIVPAJxkd1fzMidZgirpc0w5v11t9y7uGX5AE7Xbl9gcl85jXA73SHH/n8Zvzv7gaByMVp5J/\
dg8zXJfd3b49+\
HvOIowznFtpml3HKz92OGT4gYdGdezyzE9TKeDGUXjpgZNgXKvPIrZKvStu5ir6GrOP4YSQNQjE9tZ\
ngqx6dgMXoMgy75ZnoCCck3DfpEbE4oudUA8fBSkP19y6/i9swSU3dI8Vdvx+ZYF/8P9Hp/\
7IyYLDKgtcz+ydg9MWcPIFvZ/Pz8XDA9cl6nTc0KN3DMpbAra7KncsRuhG+jy/\
yiXsAdDE7qH4uCYO7JVzlcG4ZAbODlnGG7dXQNYkiRfk+\
oGFVLQdwJHowKZADsoEvRBc0jw7ORdZqHkT2bH+fTX4D0YqAirgARNQNLQwHt+\
LhMGujfn7bzVL5870/jU3n5T+SB0cADTzpHnoOyFht3pg605zOgHrhEVVoAlryn6/ykP/\
9NE6fljmHWTAKNeN5DmuRe46InQjd7ThRgxHNt0C7mBue//\
TRvK6mvpjKUXaqEevylmwwZ1moB0grp3y36FDuD47Rx9mBeK5yp+\
RWutKD655hsk8ZQaKWwMop5IlvMtahONZqzzC0JxHDTydavUv9M2iS8neLX+\
QjueGAZgZde3phmYHKhBLZrKBEu/\
gjyowl96SpxDJcR6C7h8zr6SmZNm3FypPohKN1UN3Lh69hfT9uEb2jyRTcoF+\
1ArghFajQUk4imvkP1lLQdbRgm9veaqhRCSmttDlDtNcN5Fh55G83wDBj+Xry/\
OiiwBhsMywjXBAArBD5akzvPc+UcYZPa7tBpVAGEVIMtTO5jG6dtEAlP6dSpVUM2rZLQeMrMo/\
dQf6/a2SQCw9Sw8IsJJpHfHbFNvdmkJjjj3KrgfnzLCumoeq2T0ApqERuoWqquzBIfMbubKHwcuLhM\
CddyHSqmDZGPhnfm6UPRGQC5YBTlG/rasDz4nSzrgfFhN4R40/\
Wols0WjWkZFepkbNUEC1WWfgOsjurEF0Dicxm/Hq4A3jN7Kq2sAgFFiPkMB936A7rQn/\
xek3HfHAniUwOg8NXER6l8qKjOmAFzScA0uiMAYZm+vm8U+LyOBFJ0Z1HrO4fmTp9fvA+\
6P3i5IP0M+\
s3LCF5nMpc4kErUgOytAuNAtNk16vLQzfBwKBw2v6y7HkJMjvIf1NbmmzIz6aziF2FkIKGzN/\
G7zhZ0ZjW7H0v2n3J5WEJBaUC1Y5gbjUPoBkSBu2W0pWEhrW6rnkPUSmjfk8AZreue7ZJFF6xpACdG\
m9WS87Xh29QzgYM23mq8CBF36iByikyLbHyUKAQ0r6VDmRQAR0KpBFLYA8LiqkzS2yx3cjyeCihdWY\
V3MzSkoas4x4gH/tTaUuAzSFlZBLK/2/xq5PQ5CYlA4K9ApnZP4AqQrtHotxElY/\
VHkLUPdtVqTtqdBkSskRQdqSwzGyDg35P8NgZzFaNywHM9Oq6wcXMgc+\
csXDOQaTUkrAgIUost8B0p2OBdvY0jUsmUIoRSg7jMTWNjF5XEnQxqNqrEP36arWYNGr5BjXTcndeh\
EkRB1bSVq1LsUDr68plJveG2HzCuG1EbRynFIJDm2pSss0deSHwBM+\
QUZ31LijKwVhsYjlLBtcM8BZbKCarf8ASatx5/f+\
qVojgOYzAGZkp1WeAkXYnXId8rQJt7vTbAnHa1lQDDqp1xuHrZn9Kx6JENxPLtKbPMMygJ15oGwnWA\
IkevTIhyKCjal0q1S/\
WkmyDXbE15GC5LxuoEUlsYgBlYg1lA2hHGnFq0lUILoFPUfHk0v2iaK6wgc6AuuYuy+w/\
9ZJVSpsA90k/geVF6okQ/SviFQpMnnUaKL3LoEY5G2K9ap05E/elYq4RA+\
XTzb4tL2pCO6P5ky5TPag7rutQlLhmg1s+\
2Goo6juvWXA8B36W1QZCyUAy5jSlJ3iO8UZgCzktbWgyYHdZnwDbXykJrsdev0BAfx4B8iSFPceXPm\
iqsvls5lbgTo/\
RNAbKBZijQx7awBk6XLUAqrbWjFfhiOhw1wY75xnYtZ4NoOfTHbSyfUIv4GD9l0a97zSsO60w2sGrc\
/Kg0TZrbpXLdrhGIzn2/LhApC+pePFb+cm18D9tIwwQr/p/\
mDjYErHPPxY48w7bX6oceSD8YLrZcSWHhYMYhVwaYf81+\
8b7WvVKykKFpqv4yWbevtNbfvjuEQxBmNwUp79ksEwpoev6WaHd/wzQHdXa9KRM+uK2O41UItZi/\
Ov4bqDkW13F4Ul/m4Nm/Dbon77Nhx8EBma6BL7fV+DiZCj2MIgbm8I0hNQT4AD+\
JYin0Y2ItqwbJ8cy15OsOAUmYJws0ydtNm6gvIX2ma++\
hiIA2RC65LsW7n7humefve9iLBaXOQJtg0/VDQ0//JF8qKA1o8LttT+\
do3sb159oWr9v1s722ZhDCQBmHM9//Xa+dXr++M3rw+e9/BctDFJi/\
o8gUKYNbO9V25JnFJvTEos4BIEJo6xLFQv2Phhzr5u7f183tEgH3/gtsn1/\
updcNbqkYfBXEG2lmrppYEhuO9mGWzfqdR+tu7dWHaWZTurNw78Bo5fuVqDQ+vXFEq3tR/6h2SJ9Y/\
jvR5BJ6HiSQIdbLZ1AUWa14NYFLOn1yrh9sNbpnLghJCNPBic8xj2NkVqlx+zoBGPyv1HT/\
4D2EDFYg=="},
 CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
 CellID->280729649,ExpressionUUID->"8ebfcdf9-29d9-430e-ae48-b503c6d779ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Demonstrations",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"RelatedDemonstrations", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Enter any additional information that you would like to \
communicate to the reviewer here.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedDemonstrations"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "cda70431-95fd-400d-ba0f-4fc72a24f585"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "RelatedDemonstrations"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
 CellID->1132753,ExpressionUUID->"8404ed2f-93d1-4976-a92c-5dc492fe3812"],

Cell["Link to a related demonstration", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->275239670,ExpressionUUID->"1f0358d2-8c51-47e0-a967-2513018bed43"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "External Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExternalLinks", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Provide hyperlinks (not just bare URLs) to any relevant \
resources.wolfram.com pages, with the page title as the linked text. Links to \
", 
           ButtonBox[
           "NKS | Online", 
            BaseStyle -> {"Hyperlink", FontColor -> RGBColor[0.4, 0.45, 0.5]},
             ButtonData -> {
              URL["http://www.wolframscience.com/nks"], None}], 
           " should use the section title, not a page number. Links to \
non-Wolfram sites go in the Details section.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExternalLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "533caa4d-46cb-444a-ba5b-fd19d2b9c045"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ExternalLinks"},
 DefaultNewCellStyle->"Item",
 CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
 CellID->843468725,ExpressionUUID->"0be6fa28-1cf7-4d68-899c-08e2fa1ac061"],

Cell["Link to external information", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->478615100,ExpressionUUID->"41bd8d5d-0610-4f9b-8329-7d9e6202279a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Symbols",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"RelatedSymbols", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "List the names of published resource objects from any Wolfram \
repository that are related to this function.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedSymbols"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "55a1d590-ca7b-4f84-977a-67742f30e94f"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "RelatedSymbols"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
 CellID->899564547,ExpressionUUID->"712d3abe-2a38-422d-a24f-3217aad14a29"],

Cell["SymbolName (documented Wolfram Language symbol)", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->907516902,ExpressionUUID->"532ef332-7cda-47b1-9683-626bc957abc3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Published Date",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"PublishedDate", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"If known, the date Demonstration was published."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoPublishedDate"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "1c28478a-c82c-485f-a8d5-461bfa4f4dbd"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PublishedDate"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
 CellID->364555554,ExpressionUUID->"914507a7-e7c9-4482-a2a2-bd03be4ff4a3"],

Cell["2018-09-19", "Text",
 TaggingRules->{},
 CellID->16677766,ExpressionUUID->"e4ae2b19-48e9-43f9-9ab5-39150a59d1da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your demonstration to ensure \
it is discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "f2d1bd61-0ff0-4027-9802-40ba1a53eae7"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->618273920,ExpressionUUID->"27440945-482c-4175-bc94-ed1af0106fc8"],

Cell[CellGroupData[{

Cell[TextData[{
 "AR Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityARSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your demonstration is expected to be supported \
through AR (Augmented Reality).", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityARSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "fd5e78a9-32ea-441b-add8-30acf77a5969"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityARSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellID->119819855,ExpressionUUID->"47be5216-26c9-4053-9317-4fd04b3cfa25"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, False}], "\" \"", 
           StyleBox[
           "\"Supported in ARPublish (Augmented Reality)\"", FontSize -> 12, 
            Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJw9j8tOwzAQRSlKKOW1ZJ0lVPJHmCCkSIhWGX7ATSfUwvZYnvEif4/\
NazlH9zFXXyloQRaHcLHLErMoWPcnnD7xOJ9x82q5kHYQ9Dyvfu75nJsxF8cWcoyUBI+dDZ0e9/\
ngLJ+6B50/PIbKRzTOyvLI7YtxjAou94kiJlngvicfjdiDrQo9/oaV/l0US4F5o7OQL5KpPkUu+\
8D9SsHdULJTTCimCmH9ROTQBAXXfeZiGUIZ8l/5B+\
sGbt4oFHYzIlNOE74vEeH2GX0plPSd9wX8smDe"},
 CellTags->{
  "CheckboxCell", "CompatibilityARSupport", 
   "CompatibilityARSupport-Checkboxes"},
 CellID->732595960,ExpressionUUID->"2d82a9f7-c219-4df4-b815-a4c25c1af8b8"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "ba375f8c-ef17-4b4a-9d17-27f1a9bb2a57"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellID->591034469,ExpressionUUID->"14d87075-2d50-4a0f-96f2-2262c145ecc6"],

Cell["6", "Text",
 TaggingRules->{},
 CellTags->"ScrapeDefault",
 CellID->491105737,ExpressionUUID->"be26c5e8-be75-49cc-bcea-d0587fd18731"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your demonstration is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "0a045b7e-12da-4f91-bba4-f1892f53b01e"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellID->744922803,ExpressionUUID->"b14cd31a-2856-4935-9d96-469bcf85a9c6"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[True, {False, True}], "\" \"", 
           StyleBox[
           "\"Supported in cloud\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxFjkuOwjAQRAUKf4bF7NhxgRwCjJAioQHRXCAkjbCw3Za7e5Hb4yDQbEvvVdV2XsIIpH\
MI45NKVClhYh7YPLG9D7g4WhYurkkxc5Wg5296H3Jx0ez9gsZISbDd2LBpHGn7NabnRBGTdLA25GMt\
9madlc700EfLe6colgLzbKtCPlNNf4Kc+sBmUMKqCoIpJpS6B2GyI3JYhxIWRjkrVcjHeXSoHeN/\
2L/l4o9CzpYXZNLU4LWLCD979HlQ0rvvBXKCW6E="},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->194338208,ExpressionUUID->"8533be30-078a-4ab6-bdad-56a14cb9e95a"]
}, Closed]]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
TaggingRules->{
 "ResourceType" -> "Demonstration", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> "2024.06.26", "CreationTimestamp" -> 
  3.929192321008894`16.34687827577496*^9, "UpdatedTimestamp" -> 
  3.929192321008949`16.346878275774966*^9, "CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWFtv2zYUri+\
5IPEyNECB9a0PeciCbR2GAduaXerJSeohSZPQ6XNo6UgRTJMqSaXxv98hJTm2I7mS7WCdHxJapL7z8\
dz40X5N7TpiGImYe0f3kQSlQsH9mlq7jEPQfj13uq7qXR//\
Ntrcw39rRx9jytTO3geQZv48HvZBSt9+9t+aFYQO4RIHLSeWErj+QFkM/\
jO1e3SHI6rNW0JDX4gBrmqehkqrVo8GQciDq5iBIq0rUCKWLvRGEZBmh2qKNJvvuQuFLNf+\
ZsIdmGUJ4J4juIZ7fUH1rd8o2vk5gKfIfmaPjJSGocNCpH3TAT/\
k4STdm4dXXhlS2Wt5S1XzPGYMif3weDI1cAUBUgWJTP0wiKV1zXi7f5UldQWRUKEWcpQAJjgqBWrY+\
NXU5jENWSwxMjX11QV1GeguV5oyRr4pYuivL+Lshdza6ompyGwRLTEf/hGhsdc4o5HdQ8xd86a/\
llgmLwuda8lRZdJ6O8EiEQu1eUyY0E6N1G5I/c0fEw/qh1uWPOavIt+WJX/\
gNwu81CBg7G11xCdui0Cp38qiZoP3scYwgmcKagsjzagLbcyrFcJum6LrAKMj8BB3+\
51gHgYSE5OrP8sCX8jwDgFv7pK2cCIBv0m1cc1V2g5yvNGpik6jCLh3zW8p9xh4DjCm5jpmVRbm+\
Ai/VvaSi7DY8VIE8rwHQ9yABmPuRIo4Wh4Ua7fVZmaE7eAOE/\
qFg4sCIUNQ3zu34A764h4f7zw8NtZJK5uz33bQHo2ZtvXNdQ5T8nX2iEBSm7mhLt3NxoFQg564jjwc\
p32/OMorAJ8KcAMfbGQlsHnCRJ+\
ym1tzpE16VP1S1uwJ6Heh5wFPGlH5cj2m3B05tyJ0oRNSJoJJYq2UmNR4SuL5ik2Z8kEedYqzz+\
2sOZMIfIwBd012Uw8wLzN4icfFeL/\
TBibAsiNlrSdjW9pLdokqh102yJIulSHqp6oUeL9KjaVSZtbqlIcyf57Dp7E/\
c32cFIg6q0p5L1ZwCgF1R92AC5l0pyzWqmmikV98h2Ut5eDOFN68MlzSzLweW1frp/\
imbYzHVf0WgM7a2LTFlZUSlsQ2Mgfsi1SBegq6hdWIEtqq5nWzutsxdWn5qY0u9uwAM3Wzy62x0Wec\
3BizLth4Cly672U7UuOT4RFs/8HbY/MTNmvqqPIxSLngoUvZhRQRoLesnluU8wTR/\
EtEPW2GrbZSwg2t9r5U7cq1HaVsyQjpj4YmhzbbVoz0xGrgbJqQHWKBzkBTz9wP0hsY2XRCnVxAXiY\
rXl+BD9Jk96ts6qG7rCYqE0ZnaCW3p/EdKrmCNk/R54+uns/s5+\
At3gmWuazMuUlU0PcHhSjVBH01nHkK/udCJLwEDmgAxMWAVNPt14WYyWmXlweJsYWF/JOZnK/\
sS3qvjJ5fCOoLU/EXy0ehgqx/CmuL6Pz9Qh6zwr64bP8nSn6hboEAP362X81KZ2fp4FoF/\
7oQ5ikkezHpKfcsLNS/K8RfTplXxS0rxX8v54//VoAvRfILkt2/\
Fu6DuJJG2H9mK2QZ3X1Y8rjKVdsLU11Qbnfn/Mae/TiO1RZHs2bny+6Vwq5Sfi8TnHKi+1+K4NOh"]\
]], "DefinitionNotebookFramework" -> "DefinitionNotebookClient", 
  "RuntimeConfiguration" -> {
   "Contexts" -> {
     "DemonstrationResource`", "DemonstrationResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Tagged", "HintPods" -> True, "LoadingMethod" -> 
    "Paclet", "PacletName" -> "DemonstrationResource"}, "ToolsOpen" -> True, 
  "SubmissionReviewData" -> {"Review" -> False}},
CreateCellID->True,
FrontEndVersion->"14.1 for Mac OS X x86 (64-bit) (June 13, 2024)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell[
       StyleData[StyleDefinitions -> "Default.nb"]], 
      Cell[
       StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
         Cell[
          BoxData[
           TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
          CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
          RGBColor[0.7508, 0.17868, 0.085283], CellTags -> {"MainDockedCell"},
           CacheGraphics -> False], 
         Cell[
          BoxData[
           TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
          TaggingRules -> {"Tools" -> True}, 
          CellTags -> {"ToolbarDockedCell"}, 
          CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}},
           CacheGraphics -> False, CellOpen -> Dynamic[
            CurrentValue[
             EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
       PrivateNotebookOptions -> {
        "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
       CellLabelAutoDelete -> False, 
       CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
       AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}]}, Open]], 
   Cell["Hint Styles", "Section"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell["Template Boxes", "Section"], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              StyleBox[
              "\"Add Snapshot\"", "Text", FontFamily -> "Source Sans Pro", 
               FontSize -> 11, StripOnInput -> False], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1953907064413444837; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "AddSnapshot"; (
                    Needs["DemonstrationResource`DefinitionNotebook`" -> 
                    None]; DemonstrationResource`DefinitionNotebook`\
AddManipulateSnapshot[
                    ButtonNotebook[]])]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1953907064413444837]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7071186616034202283; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7071186616034202283]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4937992391498864149; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4937992391498864149]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Subscripted Variable\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert subscripted variable placeholder\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    168721804526114855; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Subscripted Variable"; 
                    DefinitionNotebookClient`SubscriptInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    168721804526114855]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4246462567992284997; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4246462567992284997]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> GrayLevel[1], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> GrayLevel[0.9], 
               Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
               Automatic], FrameStyle -> Directive[
                GrayLevel[0.9], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert comment for reviewer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7544339529118446740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment for reviewer"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7544339529118446740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1923617830619908649; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1923617830619908649]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1439263868824766472; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1439263868824766472]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              GrayLevel[0.9]}}, 
          GridBoxFrame -> {
           "Columns" -> False, "RowsIndexed" -> {1 -> GrayLevel[0.9]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[
                 RasterBox[CompressedData["
1:eJztnXvQFlUdx0ktEbIsMsnKUWqaLkOYKWNNiHSbQUrtRdLUerm8L+AlbJBE
ur7gIFlmzeQ4iOIlanTGCyT4RzPZWDKKt1E0TSP6OcZomhI5mpFmnc/s7rTv
tufsue3zHHj44+Mg7HMu39095/wu5+xhs8/pm7vXiBEjzh2p/tM3a/GUhQtn
LZl+gPqfGQvOPWPegsGBqQsWDc4bXHj07L3VXw4oZir2Ucj7dmlOyel2O3qR
0YptOaMTaE+vsULxn5wLE2hPL/Fexc6S/jvzv+t2u3qFW0vaF2xIoF29wLQa
7QumJdC+3Zl9FVsM+m/Jr+l2O3dXlhi0Lzg/gXbujrxT8ZKF/i/l13a7vZ1m
kuKNLZZ/vYX2Bde12I79FZMT0LvKKsUOxQ8Vh0Yue7KD9gXHRG7DOMWPFC8o
Lk9A7yrLSn3/t+JmifOc7KPY7KH/5vy3ofVPUaxTvFYqeygBvavM1+jwgGKm
+K9LzvbQvuAszzpHKmYb7vu8BPSucnyDFs8qlirGOpR5oOJvAfpvV7zNob6D
FRco/tpQ7ucS0LvKREtN/qVYo/ioRZmrArQvsBmrafvP87bZlHlEAnpXeYeH
NhsVM6R+nD5Sho+5vrym0Ys6v6i406NMl3e4U+wt2bzro9GTivMUb83Lep3i
rgjaF9yVlzkirwMb7c+eZb2q2CsBvet4OlAnbKeVim9F1L6AMhmL/hFYzlMJ
6KzjvhZ0S417EtBZx4YE9GmbWxLQWcflCejTNisT0FnHUAL6tM13EtBZx9wu
acIak3nxMcWjir/I8PhkTAYS0FnHcR3S+znFz3Itxku9b4P15nsUp0tm7/09
Ut1TE9BZxxEtar4z1/yzktkarm0bpRhU/DGwHYcnoLOOsS3o/rxkfqO3R2oj
du85kvmRfdpzUAI668AufDWS7ujzbWkvpsPYdI9jm16R/9nRqfJUJP1/L1kc
63uKryg+rHh95La+QbIxzbZN2xLQt4m7I+lfx4uS5f4wfsSK8fI8f9+y/rsT
0LeJdS3qX4Y1568VJ4nffFzlEos61yWgb5U3KT6t+KZivcRb57nwJ8WXJcwv
yW9vaqiHvuFjwZfHOuzNHdaa52yCZPG31ZLZOjF89LHA/xeyPmSuf8yhPvrO
PHW1ZPHXj0icmHMB8bg+xUWK28Uu/6bbsEbBv++7TpmQl+FbPxrdofiBZGPj
uyzrxT4hh+frihslm+u7rWUIN+Z98rkHyyO3hTUh+SCLFcfK8DU1efTkKMRa
t8fiGcUmyfy9NyjWijn3sw7mZ5+9GfwmNJZkgjghuRWsrXnmX05Ab3xm+HbJ
oyjbuqzR50gWn/y84gDJ7GzyUh61KPdXeRmu9+CslvtLHO4TeV194h+7DeUh
yfZw1WlE+74rWWy/TiPWLP3SnC+y2kN/xq7nWuozWn+hUp8uf6otyFWcLfo1
I+vJGZZacX/uaKjvdI97cHFLfZ+rqW9ZS/VVuVfxbkO/eaY/6agV788thjrJ
43L1nR3eQt+HDPWxZlvdsvZotJ+hDeRbnuCoUwFxgI2Guq/yKPOJiH1fZVEf
Ntb6lrS/TcxzIbb0Ek/tC7BZdPMBazzXfXpXROr7WrH3kzD3+OSFmdgq2drF
VO+i/B6E6A/9hnZc5ljWnAh93yjutsgYyWzrGNoz3x/dUB+5tnV5xYwpX1Jc
I5lv4MW8THJreUbIl/1A5TeMow9o2vKCoxZHBfb9EcVbHLUvOETi2ME2ORus
t8u2EjngrPlt1oDMrdiRh5V+f5rh+j4HDcYE9BvtbP0POohvh/g0se1s1h2L
S3/mmXO1dZk3iO+enJcxSvR2pas94OMP4pn4UKD2Bezl+aen/jbjLXt7Tsr/
3G/oL/PnhlzrMyQ7d+B3+b8xLmE3f1yxIC9L509+3LH/Oxz7XLZtYzFd/Gxk
m1z5WZLNzfMM5RCrfX/pN325juVriv0uvLO8C18zlGdaA4foX2fbxuJMR+23
WpZb+HZ09xc/XHnO1I3t15auIT7yY0PbXMYGF//Y/Ja0L3CxkS+1LBNf+fOa
MtiTMq50LTEn3fNYjQ+eZ2jbpyzbNtqhv0tb1h5cbORTLcu831DGmsq1A4Zr
q/PqDMO1J1q2bbxlX6/sgPYFV1q2abxleQ8byqj64K4yXFvNzVwTQf9TLfvK
ve9EbtBSy/aAbezjQUMZiyvX6vIrGJPK8XDGLN1+OuaZKZZtu9Shv8ta1t7F
R/2yQ7mbDOUwh36mdO21mutOK10zylAmMXPWxOW1lImtDn2GM1vS3jVGs8Oh
7BsM5ZBrxVqyGMuqcanHZbg9i66mvELshq+KXS6dTz4xGk2PrL1PjNJF/xWG
cm7Kr+E+YFthYxU+IHwr2GC8l9hk2Ga6ODZjUX9e1iLLdl3moT9gq8Y6f4J1
ss8e9Fcc6phuKIf7XthK+BYGxe4coDL47SbmZeADrs4pdYyVsLg4Phvb9YcO
fEch/rcxlvVwRoApj6u8jsXHxvti80zguyMXaGTp98TVmnyxsDKg3wVod4in
9vhMHwms/yiH+kzxBnzJ1bUdPucL8t9tz68j94n54KeSvSsja+pZXlNWlY9J
vHwEfPi2z2EB6wdTHM+WOQ51mnw/0O/Yhzo+KMPXSXXgh3Jd8zRxp9jHHBgf
10aq9woHbYh7mfxcxBQPDtCeZ548SlOOLrHR2yJrX7Be7OKPMc4cKXjCUaOh
hvJ4J33PEWJdbvK5Mceb8idi0GQjN/XfB5d8ZOzlpnMx0Mg1nw3fqmlNTi7M
vS1rX6Czkdvau3uxo1ZN5zjBb8X+DBj2Lp2s+TfGIuYo1/hKKFUfNfGCtvIP
WQO6xDrgJxblMh/0i348Z38Sz1rdWpP3h5zHhzqsewFaFzY7cbLQM1macD2H
DX1+aVk2Objk4vI+sHZhrMHvPyjDxynsZvK6OKPimS7pXgbbDr8COdCbpd38
W3K5XfPAWQ/9xqOuP0i2fsOnxJpjUyJ6l8FHgk2zotRf9gQcK5ltzl6BWPtI
C5Y76g+smdtek3QC7GD2g7C3ZZLY2wL4H8hLID5IfnHI/iP8QRM87gHrNfZh
p7Y/RAca3S6ZrcEYH2KzVGFvGXvMmL+vlsy2dtl/hx/Mdz875/Hpctq6BX3H
R8O6Hvud5yvGXlgXiDmRa8CeTPy/Tbla+JN994nyu5mS7Tftht70jTnlG5Lt
uY2Rqxqbmy36cUlgHbyHvNv4Cjq5byfF/ddVbM8fYM9/jHg168r5+X1v2ocU
yq5w/oBLvICzL3z2xpkgv5/cBvz+rPV/If+fJ+dLymdPAs+za64qsdpxkeqv
wlzP2sn3rJ8qKZ+9Cgd59gt9yJmNtXefMYk8GV1OXQgpnj1cELpfjbPB8Bv4
7Ftn3cc6jDGtrbP3IMWztwumRuoj6zxy19gzSry3bp4mDkB8eyDXvK29ulWO
S0BnHabczBB4ntkfj68NG455sFvnruj27qZAG+dmp8ZQAjrriJGzkTopfnun
YHfwVTaR8ncmXc9z3BW5LwGddYTGDIjD8X639f0FxsfQM7yeTkDnOkLOXiXn
AX9B+fsjMfffV78/QnzySc+y8Pd12sdsg8/Zw2jMN3Dq7F7snFjf3zmypnzq
ZG+NT56f7jyibmKbK08eON96sskNjfE9B5szR/gW1hqx//7URIsyO03T2fP4
hsmXdYnHkRe9vaFcE+RIH+hQH+8wfqNnG8o9PgG9q+jyt8it4JyrulxkG0LO
YTvbs058GzNFH+9se4+vD0Ol9jHm4ne33eNmotvf35wsWWynHGdre5+dD4zV
+JH5Rmtsf/4xHvpPjtyGQyX7ti65ijZzSqehv/u3WP51Dtpf32I7iOlMSkDv
TkM+Z7HvzkSvfn+8E5xvoX/o+XF70MO6xHQu0xbx35+xBzumGfSflkD7eoG6
70zemkC7egVyfMox9p3ifq7nHsK4sKT/ii7U3+uwn2Nbjs8Z/3sI55ScbrfD
m/8Cm+a3ew==
                  "], {{0, 0}, {96, 100}}, {0, 255}, ColorFunction -> 
                  RGBColor], {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], PlotRange -> {{0, 96}, {0, 100}}, 
                  ImageSizeRaw -> {96., 100.}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Demonstration Resource\"", FontFamily -> 
                    "Source Sans Pro", FontWeight -> "SemiBold", StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"DEFINITION NOTEBOOK\"", FontFamily -> 
                    "Source Sans Pro", FontTracking -> "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {2 -> GrayLevel[1]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> GrayLevel[1], 
                 StripOnInput -> False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Demonstration Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> GrayLevel[1], 
               StripOnInput -> False], 
              "https://resources.wolframcloud.com/DemonstrationRepository"}, 
             "HyperlinkURL"]}, {
            TemplateBox[{
              
              TemplateBox[{
               "\"Open Sample\"", 
                "\"View a completed sample definition notebook\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 1953775238739395670; (
                DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                DefinitionNotebookClient`ViewExampleNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[1953775238739395670]]& , 
              "\"View a completed sample definition notebook\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Style Guidelines\"", 
                "\"View general guidelines for authoring resources\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 6116318327813659236; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                SystemOpen[
                 "https://demonstrations.wolfram.com/guidelines.php"]), 
               DefinitionNotebookClient`ButtonCodeID[6116318327813659236]]& , 
              "\"View general guidelines for authoring resources\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0.05]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 1908941340027841465; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[1908941340027841465]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[0.57555, 0.57556, 0.57554]], "Grid"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Check\"", "\"Check notebook for potential errors\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 3941141659801008137; (
                DefinitionNotebookClient`$ClickedButton = "Check"; 
                DefinitionNotebookClient`CheckDefinitionNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[3941141659801008137]]& , 
              "\"Check notebook for potential errors\"", False}, 
             "OrangeButtonTemplate"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 6058522267645278627; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[6058522267645278627]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"To my cloud account\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8267267753343341396; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "DeployCustom"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "To my cloud account"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource["Demonstration", 
                    ButtonNotebook[], "CloudPrivate"], "ShowProgress" -> 
                    True]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8267267753343341396]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1628664177886538591; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "DeployCustom"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource["Demonstration", 
                    ButtonNotebook[], "CloudPublic"], "ShowProgress" -> 
                    True]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1628664177886538591]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             Alignment -> Right, StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False]}, ImageSize -> 15, 
                    PlotRange -> {{0., 15.75}, {0., 16.5}}, AspectRatio -> 
                    1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your demonstration submission\
\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    2169377100431483360; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   2169377100431483360]]& , 
                  "\"Submit changes to update your demonstration \
submission\"", True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False]}, ImageSize -> 15, 
                    PlotRange -> {{0., 15.75}, {0., 16.5}}, AspectRatio -> 
                    1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your demonstration to the Wolfram Demonstration \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    850153740503147579; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   850153740503147579]]& , 
                  "\"Submit your demonstration to the Wolfram Demonstration \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.1511, 0.15112, 0.15108], 
              RGBColor[0.7508, 0.17868, 0.085283]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[0.1511, 0.15112, 0.15108], 2 -> 
              RGBColor[0.7508, 0.17868, 0.085283]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[0.1511, 0.15112, 0.15108]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[
              RasterBox[CompressedData["
1:eJztnXvQFlUdx0ktEbIsMsnKUWqaLkOYKWNNiHSbQUrtRdLUerm8L+AlbJBE
ur7gIFlmzeQ4iOIlanTGCyT4RzPZWDKKt1E0TSP6OcZomhI5mpFmnc/s7rTv
tufsue3zHHj44+Mg7HMu39095/wu5+xhs8/pm7vXiBEjzh2p/tM3a/GUhQtn
LZl+gPqfGQvOPWPegsGBqQsWDc4bXHj07L3VXw4oZir2Ucj7dmlOyel2O3qR
0YptOaMTaE+vsULxn5wLE2hPL/Fexc6S/jvzv+t2u3qFW0vaF2xIoF29wLQa
7QumJdC+3Zl9FVsM+m/Jr+l2O3dXlhi0Lzg/gXbujrxT8ZKF/i/l13a7vZ1m
kuKNLZZ/vYX2Bde12I79FZMT0LvKKsUOxQ8Vh0Yue7KD9gXHRG7DOMWPFC8o
Lk9A7yrLSn3/t+JmifOc7KPY7KH/5vy3ofVPUaxTvFYqeygBvavM1+jwgGKm
+K9LzvbQvuAszzpHKmYb7vu8BPSucnyDFs8qlirGOpR5oOJvAfpvV7zNob6D
FRco/tpQ7ucS0LvKREtN/qVYo/ioRZmrArQvsBmrafvP87bZlHlEAnpXeYeH
NhsVM6R+nD5Sho+5vrym0Ys6v6i406NMl3e4U+wt2bzro9GTivMUb83Lep3i
rgjaF9yVlzkirwMb7c+eZb2q2CsBvet4OlAnbKeVim9F1L6AMhmL/hFYzlMJ
6KzjvhZ0S417EtBZx4YE9GmbWxLQWcflCejTNisT0FnHUAL6tM13EtBZx9wu
acIak3nxMcWjir/I8PhkTAYS0FnHcR3S+znFz3Itxku9b4P15nsUp0tm7/09
Ut1TE9BZxxEtar4z1/yzktkarm0bpRhU/DGwHYcnoLOOsS3o/rxkfqO3R2oj
du85kvmRfdpzUAI668AufDWS7ujzbWkvpsPYdI9jm16R/9nRqfJUJP1/L1kc
63uKryg+rHh95La+QbIxzbZN2xLQt4m7I+lfx4uS5f4wfsSK8fI8f9+y/rsT
0LeJdS3qX4Y1568VJ4nffFzlEos61yWgb5U3KT6t+KZivcRb57nwJ8WXJcwv
yW9vaqiHvuFjwZfHOuzNHdaa52yCZPG31ZLZOjF89LHA/xeyPmSuf8yhPvrO
PHW1ZPHXj0icmHMB8bg+xUWK28Uu/6bbsEbBv++7TpmQl+FbPxrdofiBZGPj
uyzrxT4hh+frihslm+u7rWUIN+Z98rkHyyO3hTUh+SCLFcfK8DU1efTkKMRa
t8fiGcUmyfy9NyjWijn3sw7mZ5+9GfwmNJZkgjghuRWsrXnmX05Ab3xm+HbJ
oyjbuqzR50gWn/y84gDJ7GzyUh61KPdXeRmu9+CslvtLHO4TeV194h+7DeUh
yfZw1WlE+74rWWy/TiPWLP3SnC+y2kN/xq7nWuozWn+hUp8uf6otyFWcLfo1
I+vJGZZacX/uaKjvdI97cHFLfZ+rqW9ZS/VVuVfxbkO/eaY/6agV788thjrJ
43L1nR3eQt+HDPWxZlvdsvZotJ+hDeRbnuCoUwFxgI2Guq/yKPOJiH1fZVEf
Ntb6lrS/TcxzIbb0Ek/tC7BZdPMBazzXfXpXROr7WrH3kzD3+OSFmdgq2drF
VO+i/B6E6A/9hnZc5ljWnAh93yjutsgYyWzrGNoz3x/dUB+5tnV5xYwpX1Jc
I5lv4MW8THJreUbIl/1A5TeMow9o2vKCoxZHBfb9EcVbHLUvOETi2ME2ORus
t8u2EjngrPlt1oDMrdiRh5V+f5rh+j4HDcYE9BvtbP0POohvh/g0se1s1h2L
S3/mmXO1dZk3iO+enJcxSvR2pas94OMP4pn4UKD2Bezl+aen/jbjLXt7Tsr/
3G/oL/PnhlzrMyQ7d+B3+b8xLmE3f1yxIC9L509+3LH/Oxz7XLZtYzFd/Gxk
m1z5WZLNzfMM5RCrfX/pN325juVriv0uvLO8C18zlGdaA4foX2fbxuJMR+23
WpZb+HZ09xc/XHnO1I3t15auIT7yY0PbXMYGF//Y/Ja0L3CxkS+1LBNf+fOa
MtiTMq50LTEn3fNYjQ+eZ2jbpyzbNtqhv0tb1h5cbORTLcu831DGmsq1A4Zr
q/PqDMO1J1q2bbxlX6/sgPYFV1q2abxleQ8byqj64K4yXFvNzVwTQf9TLfvK
ve9EbtBSy/aAbezjQUMZiyvX6vIrGJPK8XDGLN1+OuaZKZZtu9Shv8ta1t7F
R/2yQ7mbDOUwh36mdO21mutOK10zylAmMXPWxOW1lImtDn2GM1vS3jVGs8Oh
7BsM5ZBrxVqyGMuqcanHZbg9i66mvELshq+KXS6dTz4xGk2PrL1PjNJF/xWG
cm7Kr+E+YFthYxU+IHwr2GC8l9hk2Ga6ODZjUX9e1iLLdl3moT9gq8Y6f4J1
ss8e9Fcc6phuKIf7XthK+BYGxe4coDL47SbmZeADrs4pdYyVsLg4Phvb9YcO
fEch/rcxlvVwRoApj6u8jsXHxvti80zguyMXaGTp98TVmnyxsDKg3wVod4in
9vhMHwms/yiH+kzxBnzJ1bUdPucL8t9tz68j94n54KeSvSsja+pZXlNWlY9J
vHwEfPi2z2EB6wdTHM+WOQ51mnw/0O/Yhzo+KMPXSXXgh3Jd8zRxp9jHHBgf
10aq9woHbYh7mfxcxBQPDtCeZ548SlOOLrHR2yJrX7Be7OKPMc4cKXjCUaOh
hvJ4J33PEWJdbvK5Mceb8idi0GQjN/XfB5d8ZOzlpnMx0Mg1nw3fqmlNTi7M
vS1rX6Czkdvau3uxo1ZN5zjBb8X+DBj2Lp2s+TfGIuYo1/hKKFUfNfGCtvIP
WQO6xDrgJxblMh/0i348Z38Sz1rdWpP3h5zHhzqsewFaFzY7cbLQM1macD2H
DX1+aVk2Objk4vI+sHZhrMHvPyjDxynsZvK6OKPimS7pXgbbDr8COdCbpd38
W3K5XfPAWQ/9xqOuP0i2fsOnxJpjUyJ6l8FHgk2zotRf9gQcK5ltzl6BWPtI
C5Y76g+smdtek3QC7GD2g7C3ZZLY2wL4H8hLID5IfnHI/iP8QRM87gHrNfZh
p7Y/RAca3S6ZrcEYH2KzVGFvGXvMmL+vlsy2dtl/hx/Mdz875/Hpctq6BX3H
R8O6Hvud5yvGXlgXiDmRa8CeTPy/Tbla+JN994nyu5mS7Tftht70jTnlG5Lt
uY2Rqxqbmy36cUlgHbyHvNv4Cjq5byfF/ddVbM8fYM9/jHg168r5+X1v2ocU
yq5w/oBLvICzL3z2xpkgv5/cBvz+rPV/If+fJ+dLymdPAs+za64qsdpxkeqv
wlzP2sn3rJ8qKZ+9Cgd59gt9yJmNtXefMYk8GV1OXQgpnj1cELpfjbPB8Bv4
7Ftn3cc6jDGtrbP3IMWztwumRuoj6zxy19gzSry3bp4mDkB8eyDXvK29ulWO
S0BnHabczBB4ntkfj68NG455sFvnruj27qZAG+dmp8ZQAjrriJGzkTopfnun
YHfwVTaR8ncmXc9z3BW5LwGddYTGDIjD8X639f0FxsfQM7yeTkDnOkLOXiXn
AX9B+fsjMfffV78/QnzySc+y8Pd12sdsg8/Zw2jMN3Dq7F7snFjf3zmypnzq
ZG+NT56f7jyibmKbK08eON96sskNjfE9B5szR/gW1hqx//7URIsyO03T2fP4
hsmXdYnHkRe9vaFcE+RIH+hQH+8wfqNnG8o9PgG9q+jyt8it4JyrulxkG0LO
YTvbs058GzNFH+9se4+vD0Ol9jHm4ne33eNmotvf35wsWWynHGdre5+dD4zV
+JH5Rmtsf/4xHvpPjtyGQyX7ti65ijZzSqehv/u3WP51Dtpf32I7iOlMSkDv
TkM+Z7HvzkSvfn+8E5xvoX/o+XF70MO6xHQu0xbx35+xBzumGfSflkD7eoG6
70zemkC7egVyfMox9p3ifq7nHsK4sKT/ii7U3+uwn2Nbjs8Z/3sI55ScbrfD
m/8Cm+a3ew==
               "], {{0, 0}, {96, 100}}, {0, 255}, ColorFunction -> 
               RGBColor], {
              ImageSize -> {Automatic, 12}, ImagePadding -> {{5, 0}, {0, 0}}, 
               BaselinePosition -> Scaled[0.25], 
               PlotRange -> {{0, 96}, {0, 100}}, 
               ImageSizeRaw -> {96., 100.}}], 
             "Wolfram Demonstration Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentReplyIcon"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.076923], 
         FaceForm[{#, 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{1.5, 7.5}, {6.5, 11.5}, {
          6.5, 3.5}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJw9U2tIVEEUvq5iVkttZmdfuo/ZbQukJGKVqPBLUTGJ0h9hVLIJRYhUVJj2
AjGRWCKiF0llZWRCSEnZExEJ06CotaiQyH7EIrthT3u6NXPn3jswnDlzzzlz
vu8711u9vWJzsqIoSXwv5tuk6IsgrQvOnLf+1CRC5ZKbg3WJAIJV90rNJoJF
XOR6sebI6W3pyXq8DxccIoGwa+uxj/v/McxNbTxZOJ3w4Rkb+ZVgWGk2ZbcQ
Yfm0V+07Jhm6St7vzVhI2JfBT78ZCkI8cj2hqe/xxaIJJm0PoWEssCgtzvCc
lzlYYwXP5iUYHpXlHV4xasXLeh4wyKCWX2fDqcJwbfQ+w4F83vGQDT1fJ1/U
dzJ842bsih1XB3hiI0NzrPyOq9mBPb1tjpyNDBXci5U7MVQnLhji4nMsE+9W
c6ARL3i3XSWbXNiiLi8EzPxbbqydsaD73LgHJ2wp/OiFoKVJ8Ui+Chha6M3T
H8NZUMPm+XB9p8h0QtATjvtxqUh0SBgV76QHZN+lszReA5pNQ66o1+8HV6O3
rdWCBIcTuKHxHJ4NQdO1sx4Nxxy4VYBug2dVt4lMnB/vGCi7TSgWz/504Etk
VbXlNSGkCmWHqFYbJXziYXlT7VKXEdLq2DDMwyvvksTZZ5W4OgiCjmCVFTUP
dh+3HSKJ8y9hqUogIfqn83PkCUndQoTLQsZ2gpperL3fQJLXIMEn5F5GaD3D
l50g2O3OIkhiCUf7v8/fMJOMuRPTmT2FjLlU+0ghY471+dV93epzr/sPPaJz
u3Ev65sNX/8//gP5Ei2u
          "]]}, AspectRatio -> Automatic, ImageSize -> {13., 13.}, 
        PlotRange -> {{0., 13.}, {0., 13.}}]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11], "\[SpanFromLeft]"}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9], 
            ItemBox[
             ButtonBox[
              TagBox[
               StyleBox[
                TemplateBox[{"\"Reply \[RightGuillemet]\"", 
                  StyleBox["\"Reply \[RightGuillemet]\"", "HyperlinkActive"], 
                  BaseStyle -> "Hyperlink"}, "MouseoverTemplate"], FontSize -> 
                9], 
               MouseAppearanceTag["LinkHand"]], BaseStyle -> "Hyperlink", 
              ButtonFunction :> (SelectionMove[
                 ParentCell[
                  EvaluationCell[]], After, Cell]; 
               DefinitionNotebookClient`CommentInsert[]), Evaluator -> 
              Automatic, Method -> "Queued"], Alignment -> Right]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.88722, 0.77308, 0.76696]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 2045406886999866622; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[2045406886999866622]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYI9uuJUYJobchmTZGFisJTpAUhCMgGihBvyC5t0Tly
Qj0SgpgIKA6UJWjIdi3RSVJYtMMRUBaoBo8hu3VEJ0vjMwGCgGqAKnEZMl8B
uy8wEVAlVkOAjiTSBAiCewrZkKXKwiQZAlSPach0GWL9AkFA9RCNkCQNYU/A
GymYCKgebggQUG4IVVxC3TChSuxQJZ1QJcVSK+9QJRdTqzyhVslGKqKiIfgB
MfUOAGAkpIY=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYI9uuJUYJobchOXaENOjyrtDkgCMgGihBvyB5dkXXa
3Mu12TARUBwoS9CQ3brCK7XZsZoAQUBZoBo8huzVFQW6HI8JEARUA1SJyxCg
xwmaAEFAlVgNATqSSBMgCO4pZEM26/CRZAhQPaYha7Q5STIEqB6iEZKkIWz8
kYI1muCGAAHlhlDFJdQNE6rEDlXSCVVSLLXyDlVyMbXKE2qVbKQiKhqCHxBT
7wAAuk3GZQ==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYI9uuJUYJobcjZGK8nK+Z9uXsTgoBsoAjxhhx11H61
ZwtWjwPFgbIEDTnha/n96SOg4K8vn67O6tgRag5BQDZQBCgOlAWqwWPIYWuV
b4/ug2w8e3S9nexybTZkBBQBigNlgWqAKnEZ8mz9MiD3zaXTKw150UyAIKA4
UBaoBqgSqyEnfMz//fnz59fPTe7qWE2AIKAsUA1QJVA9piH3pnUB2XfWzMNj
AgQB1QBVAtVjGvLhwikQO82HoCFANUCVQPUQjZAkDWH/eP0SyMYMT0wEVANU
CVQPNwQIKDeEKi6hbphQJXaokk6okmKplXeokoupVZ5Qq2QjFVHREPyAmHoH
AG0Lmsg=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.7508, 0.17868, 0.085283], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.7508, 0.17868, 0.085283], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[{
                Thickness[0.066667], 
                FaceForm[{
                  GrayLevel[0.75], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{7.5, 
                  5.6426}, {6.475, 5.6426}, {5.643, 6.4746}, {5.643, 
                  7.4996}, {5.643, 8.5256}, {6.475, 9.3576}, {7.5, 9.3576}, {
                  8.525, 9.3576}, {9.357, 8.5256}, {9.357, 7.4996}, {9.357, 
                  6.4746}, {8.525, 5.6426}, {7.5, 5.6426}}, {{7.5, 10.287}, {
                  5.962, 10.287}, {4.714, 9.0386}, {4.714, 7.4996}, {4.714, 
                  5.9616}, {5.962, 4.7136}, {7.5, 4.7136}, {9.038, 4.7136}, {
                  10.286, 5.9616}, {10.286, 7.4996}, {10.284, 9.0386}, {9.038,
                   10.285}, {7.5, 10.287}}, CompressedData["
1:eJxTTMoPSmViYGAwBGIQHdN/6KvGHQ2Hu1tbai4YCzn4mHc6JqSqOZhLHYhW
cBR2sNxyomxfvIrD+5OHndZm8jncPPc9+PFTFYfHx2fsnjaBxSENBNSUHRKN
Qg20VjI62JvG7fLsUXZYuveguFowk8PZMyCg6LCZp3BN9+1/9tb3/Xun5yk4
mDRsd2h6xO4AtO3pBSVpOB9sXpoEXH3jVOfunOcicPOMQWCzKNw+vySBCEsT
Ibh7gIYLNTsIw917Uen2z7osPrh/QN6N6WeB+9cFaPpvoDmH2paHn9ok6tAu
BvIhk4PAy+3rmYH2lu+bL6V/95/91523uv6mSjg8rBJZ5/6Q3cH4yEa9PGVp
OJ+Zs0s+GegvmHqlvtJC6bOKcPOmfGOLnwEMF5h9u9X5ubcCww3mHrC3n6nA
3QsLd5h/wOEOjBeYf2HxBgsP/bsqbI1TNR1g4QWMBR6mbE14eIKdpaIFD28P
kMPZNRxg8QHjw+ILph4WnyjmAd0Nsw+WHmDugbkb5l5YeoKJw9TB/AszBxYe
MHtg4WXIsUYmCugOWHjC3AkLbxgfFh8w9bD4gpkHi0+YfbD4Rk//AAQ8Rd0=

                  "], CompressedData["
1:eJxdVA1IU1EYHStG2VxrxByaa073dFtRkiYheW9/EmhkGaWW/WjaEs1ICxEJ
zX6sCCuzX7USSiLRKHEWESWSaVFWhpkWlaiZWk5Lnab19p7nCj0Yb/fx3e/n
nPMdj5jk9XFSiUSyg/853r/GGtO6ODO1z+yylme70ePLtrc3fDXSwkyu+qi3
Oztn8ceSJi1FvC72R9TyIB3Nyl9xMrHTTJcHfWsufaCjT+qvr6pcNI+evjbs
21HmQbfkVv/2aTVTF+tryadDevp2TYwy4r6ZDsm2XQx9p6fH1M0vh96aqER4
DDSpc/SW7axJvFdgoNNK50TtDDTRthtXanR7OSqXmo+pI40TdTlapT3SvS7N
hxb9LHkaYuVoe4O+xT7OiX3Gc9SzxX4w4Q9HjY6EFo7GC89knDJiScWzSo4G
Vw7wN3zEex2TdVD3vKNc4GRfIwcTHqbmmeiroXA+xIs+58ceGDPRsFMX9qiy
9eL3FjOtO/Doqmu5B8PlRwbx38rjpJh/t/Anj5twb+kEjt5m2v+GB+i9lrrw
sIS3GcU4ngecHVU1h91YvEHm+OfK8iWrsh/XX9ewetuFQdWsnxhhYBXrd/WX
9NlltUo2T4rlTG8GUbB5fQUC5AwPfpoFH72cGV4ingqG5/48zdSNCjnDW+h3
qpzxMZenq0orY3yJ+EkZn2L+cQLcC2p0d/ZZRglwrw0J4CVpJ9CL0K5/P4Ge
xPw2Ar0NO9LX9BDoUTz3EehVxGOQQM8OuTxMlTC944x9QDz2BfkqIn/f/3DC
ldXT5DdOtxRrWD9OFn1i2oia9et7yaTJ36Bm8+SGp3pd+DuLzWuLfREd8kzJ
8Hia5JdppQqG19ryc3E5sXKGZ2vwlLQZPC/A+7CzI0LB+EhffDto02YF4ysn
Npq/Imd8Lp3XeLnDXcb41o8N7v9cIGV6GOntfrzEc5xAL02q/mWv4kcJ9BT2
R5PSpBom0NvC0JtOwQYbgR5X7k7uO1LXQ6BXv+KKgOHqPgI9F201PlfWDhLo
3X5t173vKRK2DzhjXxCPfUI+7BvqYR/RD/YV/UJXmAe6w7zwA+ABvwBe8BPg
Cb8B3tgL8AG/Al/YK/AJvwPf8EPoAX4JvcBPoSf4LfQGH4Ae4dfQ6//+/w8B
rcVF
                  "]}]}, AspectRatio -> Automatic, ImageSize -> {15., 15.}, 
               PlotRange -> {{0., 15.}, {0., 15.}}], True -> GraphicsBox[{
                Thickness[0.066667], 
                FaceForm[{
                  GrayLevel[0.25], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{7.5, 
                  5.6426}, {6.475, 5.6426}, {5.643, 6.4746}, {5.643, 
                  7.4996}, {5.643, 8.5256}, {6.475, 9.3576}, {7.5, 9.3576}, {
                  8.525, 9.3576}, {9.357, 8.5256}, {9.357, 7.4996}, {9.357, 
                  6.4746}, {8.525, 5.6426}, {7.5, 5.6426}}, {{7.5, 10.287}, {
                  5.962, 10.287}, {4.714, 9.0386}, {4.714, 7.4996}, {4.714, 
                  5.9616}, {5.962, 4.7136}, {7.5, 4.7136}, {9.038, 4.7136}, {
                  10.286, 5.9616}, {10.286, 7.4996}, {10.284, 9.0386}, {9.038,
                   10.285}, {7.5, 10.287}}, CompressedData["
1:eJxTTMoPSmViYGAwBGIQHdN/6KvGHQ2Hu1tbai4YCzn4mHc6JqSqOZhLHYhW
cBR2sNxyomxfvIrD+5OHndZm8jncPPc9+PFTFYfHx2fsnjaBxSENBNSUHRKN
Qg20VjI62JvG7fLsUXZYuveguFowk8PZMyCg6LCZp3BN9+1/9tb3/Xun5yk4
mDRsd2h6xO4AtO3pBSVpOB9sXpoEXH3jVOfunOcicPOMQWCzKNw+vySBCEsT
Ibh7gIYLNTsIw917Uen2z7osPrh/QN6N6WeB+9cFaPpvoDmH2paHn9ok6tAu
BvIhk4PAy+3rmYH2lu+bL6V/95/91523uv6mSjg8rBJZ5/6Q3cH4yEa9PGVp
OJ+Zs0s+GegvmHqlvtJC6bOKcPOmfGOLnwEMF5h9u9X5ubcCww3mHrC3n6nA
3QsLd5h/wOEOjBeYf2HxBgsP/bsqbI1TNR1g4QWMBR6mbE14eIKdpaIFD28P
kMPZNRxg8QHjw+ILph4WnyjmAd0Nsw+WHmDugbkb5l5YeoKJw9TB/AszBxYe
MHtg4WXIsUYmCugOWHjC3AkLbxgfFh8w9bD4gpkHi0+YfbD4Rk//AAQ8Rd0=

                  "], CompressedData["
1:eJxdVA1IU1EYHStG2VxrxByaa073dFtRkiYheW9/EmhkGaWW/WjaEs1ICxEJ
zX6sCCuzX7USSiLRKHEWESWSaVFWhpkWlaiZWk5Lnab19p7nCj0Yb/fx3e/n
nPMdj5jk9XFSiUSyg/853r/GGtO6ODO1z+yylme70ePLtrc3fDXSwkyu+qi3
Oztn8ceSJi1FvC72R9TyIB3Nyl9xMrHTTJcHfWsufaCjT+qvr6pcNI+evjbs
21HmQbfkVv/2aTVTF+tryadDevp2TYwy4r6ZDsm2XQx9p6fH1M0vh96aqER4
DDSpc/SW7axJvFdgoNNK50TtDDTRthtXanR7OSqXmo+pI40TdTlapT3SvS7N
hxb9LHkaYuVoe4O+xT7OiX3Gc9SzxX4w4Q9HjY6EFo7GC89knDJiScWzSo4G
Vw7wN3zEex2TdVD3vKNc4GRfIwcTHqbmmeiroXA+xIs+58ceGDPRsFMX9qiy
9eL3FjOtO/Doqmu5B8PlRwbx38rjpJh/t/Anj5twb+kEjt5m2v+GB+i9lrrw
sIS3GcU4ngecHVU1h91YvEHm+OfK8iWrsh/XX9ewetuFQdWsnxhhYBXrd/WX
9NlltUo2T4rlTG8GUbB5fQUC5AwPfpoFH72cGV4ingqG5/48zdSNCjnDW+h3
qpzxMZenq0orY3yJ+EkZn2L+cQLcC2p0d/ZZRglwrw0J4CVpJ9CL0K5/P4Ge
xPw2Ar0NO9LX9BDoUTz3EehVxGOQQM8OuTxMlTC944x9QDz2BfkqIn/f/3DC
ldXT5DdOtxRrWD9OFn1i2oia9et7yaTJ36Bm8+SGp3pd+DuLzWuLfREd8kzJ
8Hia5JdppQqG19ryc3E5sXKGZ2vwlLQZPC/A+7CzI0LB+EhffDto02YF4ysn
Npq/Imd8Lp3XeLnDXcb41o8N7v9cIGV6GOntfrzEc5xAL02q/mWv4kcJ9BT2
R5PSpBom0NvC0JtOwQYbgR5X7k7uO1LXQ6BXv+KKgOHqPgI9F201PlfWDhLo
3X5t173vKRK2DzhjXxCPfUI+7BvqYR/RD/YV/UJXmAe6w7zwA+ABvwBe8BPg
Cb8B3tgL8AG/Al/YK/AJvwPf8EPoAX4JvcBPoSf4LfQGH4Ae4dfQ6//+/w8B
rcVF
                  "]}]}, AspectRatio -> Automatic, ImageSize -> {15., 15.}, 
               PlotRange -> {{0., 15.}, {0., 15.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell[
    StyleData["HintPodTitleBar"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{
            Offset[{0, -3}, {1, 1}], 
            Offset[{0, -1.3443}, {1, 1}], 
            Offset[{-1.3443, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{1.3443, 0}, {-1, 1}], 
            Offset[{0, -1.3443}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], {-1, -1}, {-1, -1}, {-1, -1}, {1, -1}, {
            1, -1}}]], 
         InsetBox[
          FormBox[
           StyleBox[
           "\"Notebook Analysis\"", FontColor -> GrayLevel[0.4], FontColor -> 
            GrayLevel[0.4], FontFamily -> "Source Sans Pro", FontWeight -> 
            Plain, FontSize -> 13, StripOnInput -> False], TraditionalForm], 
          Offset[{8, 0}, {-1, 0}], 
          NCache[
           ImageScaled[{0, 1/2}], 
           ImageScaled[{0, 0.5}]]], 
         TagBox[
          TagBox[
           TooltipBox[{
             GrayLevel[0.6], 
             DiskBox[
              Offset[{-13, -10}, {1, 1}], 
              Offset[6]], 
             GrayLevel[0.97], 
             AbsoluteThickness[1.5], 
             CapForm["Round"], 
             LineBox[{{
                Offset[{-15, -8}, {1, 1}], 
                Offset[{-11, -12}, {1, 1}]}, {
                Offset[{-15, -12}, {1, 1}], 
                Offset[{-11, -8}, {1, 1}]}}]}, 
            FrameBox[
             StyleBox[
             "\"Close analysis pod\"", "Text", FontColor -> 
              RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
              "Plain", FontTracking -> "Plain", StripOnInput -> False], 
             Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
             RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
             StripOnInput -> False], TooltipDelay -> 0.1, 
            TooltipStyle -> {Background -> None, CellFrame -> 0}], 
           Annotation[#, "Close analysis pod", "Tooltip"]& ], 
          EventHandlerTag[{"MouseClicked" :> NotebookDelete[
              EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
            Automatic, PassEventsUp -> True}]]}, AspectRatio -> Full, 
        ImageSize -> {Full, 20}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 0}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterTop"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {4, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterBottom"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {0, 4}}]& )}], 
   Cell[
    StyleData["HintPodFooter"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{{-1, 1}, {-1, 1}, 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 1.3443}, {-1, -1}], 
            Offset[{1.3443, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-1.3443, 0}, {1, -1}], 
            Offset[{0, 1.3443}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], {1, 1}, {1, 1}}]], 
         InsetBox[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{3}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False], 
              
              StyleBox[#, FontColor -> GrayLevel[0.4], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 12, 
               StripOnInput -> False], 
              StyleBox[
               TemplateBox[{5}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False]}, "RowDefault"], TraditionalForm]], 
          
          Offset[{5, 2.5}, {-1, 0}], {-1, 0}]}, AspectRatio -> Full, 
        ImageSize -> {Full, 21}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 3}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodMenuItems"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       TemplateBox[{#, FrameMargins -> 3, Background -> GrayLevel[1], 
         RoundingRadius -> 0, FrameStyle -> Directive[
           AbsoluteThickness[1], 
           RGBColor[0.75686, 0.82745, 0.88235]], ImageMargins -> #2}, 
        "Highlighted"]& )}], 
   Cell[
    StyleData["HintPodActionMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], #2}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          Dynamic[
            If[
             CurrentValue["MouseOver"], 
             GrayLevel[0.96], 
             GrayLevel[1.]]]}, "Highlighted"], ButtonFunction :> 
        ReleaseHold[#3], 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["HintPodDisabledMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], 
              StyleBox[#2, FontOpacity -> 0.4]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          GrayLevel[1.]}, "Highlighted"], ButtonFunction :> Null, 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic, Enabled -> False]& )}], 
   Cell[
    StyleData["HintPodActionLabel"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[#, FontColor -> GrayLevel[0.2], FontFamily -> 
         "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, LineIndent -> 
         0, StripOnInput -> False], FrameMargins -> 0, ImageMargins -> 0, 
        BaselinePosition -> Baseline, ImageSize -> Full]& )}], 
   Cell[
    StyleData["HintPodMenuDelimiter"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[
         GraphicsBox[{
           CapForm["Round"], 
           GrayLevel[0.9], 
           AbsoluteThickness[1], 
           LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
          PlotRange -> {{-1, 1}, {-1, 1}}, ImageMargins -> {{0, 0}, {2, 2}}, 
          ImagePadding -> {{5, 5}, {0, 0}}, ImageSize -> {Full, 2}], 
         LineIndent -> 0, StripOnInput -> False], FrameMargins -> 0, 
        ImageMargins -> 0, BaselinePosition -> Baseline, ImageSize -> 
        Full]& )}], 
   Cell[
    StyleData["HintPodIconChevron"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.2], 
         AbsoluteThickness[1.8], 
         CapForm["Round"], 
         JoinForm["Miter"], 
         LineBox[{{-0.5, 1}, {0.5, 0}, {-0.5, -1}}]}, AspectRatio -> Full, 
        BaselinePosition -> Bottom, ImageMargins -> {{0, 4}, {0, 0}}, 
        ImageSize -> {5.6, 7.7}]& )}], 
   Cell[
    StyleData["HintPodIconPopOut"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4h1yra8Dd6g4rHN/WCWip+KwRiYqxXq+isNk
CZYwvlwEDROHqYPpKwUrUHFgAIEDKg5nzwDBG2VU/hlluPogMEMCzm9kOdpv
aC6OJi/mINR84NRCVwQfIq8M519wufHhi5Yymn4lNPOVHNLAQBHO/6YR03/o
K5eDB9Ab69wFHJoeHZ+xexqng8r0/xPqfvM5cG9dVnl8JacD0FO6m+byOPxL
/f4kUZHbQZr3ge4EBW6HD2IeAX9m8Dhkzyqfs2gxp8ONxmK3Kd/4HOYsUt75
p50Tbi6YesgF9b8ShJ+oCOfD3Anjw/zx9JP8pXx7hD9h4QfjqxtyAKNCBU0e
EY4wPqr5iHh4/nvlx0tnVRyYObvkk98pOwA9+X75MRUHWWD03udHxCssngGf
XO7X
          "]]}, AspectRatio -> Automatic, ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconWrench"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.4], 
         AbsoluteThickness[1], 
         Opacity[1.], 
         JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGYCYmWv6mZ9n3/2cmJZvp/5BBzci37yv9wu6/Au
ysnuhaQynG8at8uT55AGXJwBDHQdPl3yTRKIUIfzo1Ks7/vzajiosjVOdfbW
ccjaUzJZokUFrv8ySLmlqoPbts9/r1iowsVh6mD6zp4BAh4NnPbA3AHTr+ss
8/rRNoS7YXyYv2D+7H/ySf5SPrdD7D/nX29ff7H/6hXZZnGNGc6HqYPRMPED
b+bZ6FxBqAPpOprL7YAefgCtVISU
          "], CurveClosed -> {1}]}, AspectRatio -> Automatic, 
        BaselinePosition -> Scaled[0.2], ImagePadding -> 0.5, 
        ImageSize -> {16., 16.}, PlotRange -> {{0., 16.}, {0., 16.}}]& )}], 
   Cell[
    StyleData["HintPodIconInfo"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{6.81, 13.}, {
           3.3914, 13.}, {0.62, 10.229}, {0.62, 6.81}, {0.62, 3.3914}, {
           3.3914, 0.62}, {6.81, 0.62}, {10.229, 0.62}, {13., 3.3914}, {13., 
           6.81}, {13., 10.229}, {10.229, 13.}, {6.81, 13.}}, CompressedData["

1:eJxTTMoPSmViYGCQB2IQbct1fXGBrbRD6+vAHXKtvA7r3B9WiayTdoCI8zgc
/qoR039IHkoLOjCAgYKDB0iZu4CDPFijgsOsmSDAC1UnCzWPE0rLQMXZHV6x
mAia1Ug56E1Y8MMwjdXh685bXX9VJRx4Jq9sCvRkcTh7BgREHfoPgTSwOAQB
db8OFHYAO4eLFeo+IQcRMIMLzoe4h9dBW2LqFc4MYYd4zdMCx38JOviYdzom
pIo4PJgjuHSvo6jDkgKQz0QdCsEelHDQjAHZJAa1VxIqLwH3Jzofok8S4i9W
RQews67LQsJhnoKDMRjIQ9Q3wMJJwQFMJULDSRJmrhzUPKh6Blmof+QcwM6K
kXb4Bgq2rzJQcXFovMhA5UUdciqqluo0SztsKMqY+NZG2OHV1E08hTrSDquA
oTmXQdABPX4BaWq/EA==
           "], {{8.81, 9.79}, {8.8101, 9.5122}, {8.5878, 9.2854}, {8.31, 
           9.28}, {7.51, 9.28}, {7.2283, 9.28}, {7., 9.5083}, {7., 9.79}, {7.,
            10.62}, {7.0054, 10.898}, {7.2322, 11.12}, {7.51, 11.12}, {8.35, 
           11.12}, {8.6239, 11.115}, {8.8447, 10.894}, {8.85, 10.62}}}]}, 
        AspectRatio -> Automatic, ImagePadding -> 0.5, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconNone"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       GraphicsBox[{}, AspectRatio -> Automatic, ImageSize -> {16., 16.}, 
        PlotRange -> {{0., 16.}, {0., 16.}}, BaselinePosition -> Scaled[0.2], 
        ImagePadding -> 0.5]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreAlways"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYCYpF17g+rROQcbLmuLy6wlXaoBguoOvQf+qoR
w6/i8CZwh1zralWH4oyJb2vsVRx0N819v/yYqoO0/l0VtkYEv/U1UOFRBP/D
8mPe5pyqcP0z8oSaD3ipws2H0famcbs8fVQd2BqnOnevUXUAa+dWdUgSiLDc
ckLVwQPounXHVeB8kK1TmxH8gN7peULOKnD9EP+owM2H+QvmzyUFIBEeuHxC
mb+c2CtuuP75NjpXZj3jgpsP0s11nRPO5+feuqzyOAec73dxYsy/w+xw/WDr
uNjh5n9MPhPr7cEG93+V2Wq78Nus8PCB8WHhB+PDwhemHxb+MPNh8ZMGBhJw
f8Lkv2nEAJXwOGyu/rQh4DWrwwrTs9Z+F7kdvHiYtNunsTrYgrwpy+XQteHh
y6lGbA6HxNWCWRdzOJwKObhiyTk2B3fmCm4VDXaouRwOEaeMjmzUY4OHhybI
eA02eHgt/GH4bJ0qm4PT+bSrz4Hh+Z0tfobPVDZ4eIOVx7DD3QlzNwMYIPx1
smzffCl9FUg4u7M5hPEBU1S+isPs0Pmr195gdTAGgc0qUHewOswDJhfv7yoO
/g7CiYcvszoAU9vrQAtVh6V+QAFnNqg9iHj5dMk3SWAGIt78wBGJiFcYH+ZP
GB/mT5h+WLqBmQ/zJwC4F0s3
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInCell"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
            0}}}, {{{11.69, 13.37}, {7.57, 13.37}, {7.57, 12.37}, {7.76, 
           12.37}, {11.19, 8.93}, {11.19, 1.25}, {7.57, 1.25}, {7.57, 0.25}, {
           12.19, 0.25}, {12.19, 13.37}}, {{9.17, 12.37}, {11.17, 12.37}, {
           11.17, 10.37}}}], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIjIGYCYo+HVSLr3EUdbLmuLy6wlXZYUgBiyTlAxJUc
kt9FOdllyDuU6yrKf1mD4LM879F466sMV28MApuVHX7yv9y+3lkOQj9WdngU
Ib794gFZh/Dojfvf/FN22CHX+jrQAsHvf/JJ/tJ6GTgfbI+ODFz/2TMgIA03
vxroqodVQg5gSkQO6m4mVPubGR1E7I/d2fpE2cHy2tFckwYGB2n9uypsjCoO
YG89/GcP4wd5zm1QO/QHzr9wNeyN/u5f9jD9kHD4aQ8zX+z36XcnD3+3v8fE
2SXfrOygvqBzw8OX3+yDQAxHBB/srr9KcL7mW959BjuV4PrnCi7de7BcCW4+
LLwhND88PmDyEHcLOjg2PTo+Y/d3+/21shbpLYIOTglPLyjd/mZ//wH35JVM
CD4knATgfL0JC34YPuOH688Nq1237REf3HzNmP5DXzX4HLhVNOp6dv6yP3xZ
O1UyiRcePrlH/22q/sQDD79vGiANPA5yy1946NUzOOy61fU39TuPw5GNenmL
GxkdwPal8cLjB2Y+LP7SwEDCgQEMZODyf7+VPpgTKOOw9ldM7tE6XgfmCqCL
9sk43PfvnZ4nxAuJZ2NZB5j9UV933uraK+swf/XaG/HfeCDudZJzuA1yTgov
PH3CzBcAJg/mdHmHVElQyuSH851lXj8ykxKEq4eFNwCKHGBr
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInNotebook"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYC4qAdcq2vAwUcbLmuLy6wFXdYUgBiSTp4PKwS
Weeu4GCgtVL4AouUw1zBpXsPlis4vDlgqexlLeWg+ZZ3n8FOBB+s/y+CH6S+
oHODoyJc/z0mzi75ZkW4+cYgsFnRoanYbco3N0kHEftjd7Y+UXRYeM3kvcVR
CYeQx0tnH2FQgroLwb9pWxmxYqs4nP9zQfrmV8bicP0g1VzXxeDmf9OI6T/0
lcsB6Bmgj6QcGMDggz1MvoTnRNz7f2/sf/K/3L7+saLDzmCriP/PX9iHR2/c
/+YfzL1P4Pz+Xoc96+IfwPkrVqZm1068AdcPtAxo4yW4+ccenln/jOGkPcz/
MjWJRqEGh+xh4QPjw8IPxoeFL0w/LPxh5sPiB0KzwuNPHhibO+Su2h8GKTvE
7aAYeYAl7+5Z+/rfVgXnOLgdPu6qO5h345j9voPiasGsXHA+JJw44Hy9CQt+
GD5jh+vPDatdt+0RG9x8TZByDTYH/uky5V7st+21JaZe4cxgdZgp5PnFqOuh
vQY/99ZlP1kcIO54CjWfxeFeX0HUh0Uv7bdEft15i4vVoa2/Q3Oiy1t77Xax
m+fKWeHxAzMfFn9pYCACj1+YfMeX29cbgfF/+LJ2qmQSKzx95B79t6n6Ews8
/cDsB3O5JB1Upv+fUPebxeHIRr28xQeB6e+Cy40PX1gdnjTPO7uKX8qh/8kn
+Uv57A4sYXy6m2KlHDjBCY3DwV9OLMvXGJjeda7MejaXC56eYeENAPSkchE=

          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
          3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJdIGYC4qAdcq2vL6o52HJdX1ywVwtC24rB+YdTViWE
XBKE86tF1rk/rOJxMAaBzxpwPkReDY2vCDVPCMpXhvPB+jerwfnPf6/8eOms
ukPDdoemR+wiUHkNuHtgfJh7YXy2xqnO3W/U0eQ14ObB+DD7YHzNmP5DXzWY
4PzY3KP/NlX/toeZBxYP/GIPsw/GBzuHSxrOX7TF/MchFSkH9g9iHgF/Ptmb
vrdwdTeSdNjZywYU+WQPcb8E1B+f7H8EP146m0XcYeE1E6DKT/Z9IGUXRB02
V3/aEJD92R5s7A4Rh1kzQeCr/YQFPwyfvRN2+Put9MEcwe/2894vP+ZtLuxw
3793ep7QT3uIOiEHkC651t/2YH8a80LtY3NA5TPB+RPrflsVnPtkL/8lJ6xW
T8jhTSDYo1DzxOB8BjBQh/O/aQADzlQTTV4bbh6MD7MPxoeFfwDI2czaDmfP
gAA0nCdqOTglPL2gdFvDweNhlci645oO8iAPzdOEmPNXw+EPMDp9k7Qc4nZ5
8jC9VncAG39KywE9/QIAH6UuJw==
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{
          5.63, 11.05}, {5.63, 10.44}, {6.0569, 10.539}, {6.5048, 10.49}, {
          6.9, 10.3}, {9.53, 10.3}, {9.53, 11.05}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{7.92, 3.73}, {
          8.0396, 3.4994}, {8.0784, 3.2353}, {8.03, 2.98}, {9.41, 2.98}, {
          9.41, 3.73}}}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}}}, {{{6.73, 6.21}, {6.2, 5.82}, {6.67, 5.46}, {11.22, 5.46}, {
          11.22, 6.21}, {6.73, 6.21}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{8., 8.7}, {
          8.0514, 8.4458}, {8.0162, 8.1818}, {7.9, 7.95}, {10.25, 7.95}, {
          10.25, 8.7}}}]}, AspectRatio -> Automatic, ImagePadding -> 0.75, 
        ImageSize -> {15., 15.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconHint"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[#], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}}, {{{9.015, 17.37}, {4.4559, 17.37}, {0.76, 
           13.645}, {0.76, 9.05}, {0.76, 4.455}, {4.4559, 0.73}, {9.015, 
           0.73}, {13.574, 0.73}, {17.27, 4.455}, {17.27, 9.05}, {17.27, 
           13.645}, {13.574, 17.37}, {9.015, 17.37}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQbcixRiYqRcVh3bak+pu23A5rf8XkHt2n7OC/fkpq
x2MOB8+5DWqHnik5nP8e/HjpbHYHj4dVIuvYlRyAiisjVrA78Bau6b6toegQ
ApQ9soDdQepAtIJjoILDJ8fzaVefczgs6Nzw8GWoPNx84yMb9fIeyzr831T9
acMFXod1N+LL/OVkHV5uX8/8/IyAw7Fck4btDrIOZQ/mCC7dK+TAXMGtomEn
6/DP+dfb1w0iDkIi9sfufJV1ePRy6iYeQzGHac7dOc+t5R3SwEDcwe7FzTW/
bBQc9kybwF+1TcLh7TwbnStSig7Hd+3oZSuQdDjab1iuy6jk0MIL8qGkg8f+
WlmL50oO9uHRG/fnSDr4fu4LLjmi7HDw1ELXbZslHGDhAzO//9BXjRh+VQeG
iXW/rQzEHKzv+/dOz1N1uFfY1fekSMRhzhGFDUUZqhB/LhaCmFOs6sC0h1VI
ZL+Ag8g6d2AIqjqYCJrZ7L3E64Ae/gDrrapT
           "], CompressedData["
1:eJxTTMoPSmViYGBQBGIQ/emSb5KAhJoDAwg0aDhYbjlRtu++isNudX7urWpK
DrX2pnG7Tqo4TFPsKy2sVnRQvv2zLqtGBULfUXAI6J2eJ8Ss4mDSsN2hKUnB
Ia0jOfZOmrKD/l0Vtsar8g5Gz9apPlms5GDgs4zLLVXeweLHoZRVDxQdnNdm
3ivskneQW/7CQ09e0aHEbco3tnh5h+jLex6LxCo4FErzPtC9IO+wVfT36Xed
8nDzH5tJHYheIOeQBxJ4pOCgu2nu++Vscg75Qs0HTjUqOjDkN7IcPS/rcObd
ycNOukoObqqlTLM4ZOD+O7JRL2/xQWkHHibtdrFITYeb8WX+ctOkHQ6eWui6
zVjLQfD4rh29bdIO/Ye+asTwazuAnJswRdohaIdc6+uL2g6qbI1TnbtlHGy5
ri8uqNVxEIgAhtg3WYj5B3QcgKEkzcsAdOfS2UcUDHQdEp5eULotqehw89z3
4Mepug63pGsSjUyVHMr3zZfSj9V1uKKdKvkoQtmhOGPi25p6XQeQ8p91KhB9
lroOIGH7UlWH+qw9JZNn6EDs54bGF4OOA9AVtlzhag6KG4oyJupqO4CCYaGr
mgM4XiO0HK5WvFQz9FBzuAzi7tR0cNv2+e8VCzUHJ5AF0poO6PEPAFdvzZk=

           "]}]}, AspectRatio -> Automatic, BaselinePosition -> Scaled[0.1], 
        ImagePadding -> 0.5, ImageSize -> {14., 14.778}, 
        PlotRange -> {{0.76, 17.27}, {0.73, 17.37}}]& )}], 
   Cell["Documentation", "Section"], 
   Cell["Usage", "Subsection"], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell["Details & Options", "Subsection"], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    PasteAutoQuoteCharacters -> {}, StyleMenuListing -> None], 
   Cell["Examples", "Subsection"], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell["Links", "Section"], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell["Annotation", "Section"], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["HiddenMaterial"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.3, 0.7, 0.6], "Thickness" -> 2}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"hidden\"", "HiddenMaterialCellLabel", StripOnInput -> False], 
           "\"Hidden input cells will be closed on the published web page but \
will remain open in the downloadable example notebook\""}, 
          "PrettyTooltipTemplate"]], "HiddenMaterialCellLabel"]}, {
      None, None}}, StyleMenuListing -> None, Background -> 
    RGBColor[0.8, 1., 0.9]], 
   Cell[
    StyleData[
    "HiddenMaterialCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.3, 0.7, 0.6, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", 
    PrivateFontOptions -> {"OperatorSubstitution" -> False}, FontColor -> 
    GrayLevel[0.5]], 
   Cell["Special Input", "Section"], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 8263526385974082686; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog[
                    "Demonstration", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[8263526385974082686]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 5263076252613204070; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog[
                    "Demonstration", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[5263076252613204070]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell["Misc", "Section"], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["RelatedSymbol", StyleDefinitions -> StyleData["Item"]], 
    DefaultNewCellStyle -> {"RelatedSymbol", FontFamily -> "Source Sans Pro"},
     DefaultFormatType -> DefaultInputFormatType, FormatType -> InputForm], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[0.9]]}, Visible -> False, FrontEndVersion -> 
  "14.1 for Mac OS X x86 (64-bit) (June 13, 2024)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"714bcd34-3c9d-4624-9dc0-99e0c779e16b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Name"->{
  Cell[580, 22, 415, 7, 70, "Title",ExpressionUUID->"80b166c7-6de8-4856-b160-53671ea8f3ed",
   CellTags->{"Name", "Title"},
   CellID->344714230]},
 "Title"->{
  Cell[580, 22, 415, 7, 70, "Title",ExpressionUUID->"80b166c7-6de8-4856-b160-53671ea8f3ed",
   CellTags->{"Name", "Title"},
   CellID->344714230]},
 "Caption"->{
  Cell[1020, 33, 1495, 33, 70, "Section",ExpressionUUID->"508930fb-ebe2-4394-ac55-e4bc403452fa",
   CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
   CellID->138150581]},
 "CaptionCells"->{
  Cell[1020, 33, 1495, 33, 70, "Section",ExpressionUUID->"508930fb-ebe2-4394-ac55-e4bc403452fa",
   CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
   CellID->138150581]},
 "TemplateCellGroup"->{
  Cell[1020, 33, 1495, 33, 70, "Section",ExpressionUUID->"508930fb-ebe2-4394-ac55-e4bc403452fa",
   CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
   CellID->138150581],
  Cell[5571, 123, 2246, 48, 70, "Section",ExpressionUUID->"16857b55-e3a9-4653-a127-a1b31cf4f147",
   CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
   CellID->447669593],
  Cell[8608, 194, 1944, 40, 70, "Section",ExpressionUUID->"122bd488-c28a-4c28-b559-d6fcd66c8bee",
   CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
   CellID->791025314],
  Cell[61884, 1259, 1302, 31, 70, "Section",ExpressionUUID->"a2966795-4073-4a65-81eb-36a1ea65908f",
   CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
   CellID->98938448],
  Cell[446423, 7622, 1221, 29, 70, "Subsection",ExpressionUUID->"339fc614-81c6-4f28-8eab-5784c57b3f50",
   CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
   CellID->255368948],
  Cell[448066, 7668, 2197, 46, 70, "Subsection",ExpressionUUID->"12a2b598-c96c-47ba-82a5-beeb7eae90ae",
   CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
   CellID->441931514],
  Cell[459870, 7955, 2173, 45, 70, "Subsection",ExpressionUUID->"83a74d80-ef1d-4fee-b4cf-b94318094434",
   CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
   CellID->592881655],
  Cell[462661, 8016, 1242, 30, 70, "Subsection",ExpressionUUID->"5f053220-1475-4ce7-936e-d2caa6ce36c3",
   CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
   CellID->797097429],
  Cell[464532, 8062, 1106, 27, 70, "Subsection",ExpressionUUID->"06afd7a2-583d-4eed-99b5-dd9a9fb205f0",
   CellTags->{"Keywords", "TemplateCellGroup"},
   CellID->938146184],
  Cell[466478, 8118, 1128, 27, 70, "Subsection",ExpressionUUID->"196ee512-98e0-4973-af09-64403cec8787",
   CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
   CellID->845692503],
  Cell[653267, 11586, 1216, 30, 70, "Subsection",ExpressionUUID->"8404ed2f-93d1-4976-a92c-5dc492fe3812",
   CellTags->{"Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
   CellID->1132753],
  Cell[655103, 11632, 1558, 37, 70, "Subsection",ExpressionUUID->"0be6fa28-1cf7-4d68-899c-08e2fa1ac061",
   CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
   CellID->843468725],
  Cell[657278, 11685, 1191, 29, 70, "Subsection",ExpressionUUID->"712d3abe-2a38-422d-a24f-3217aad14a29",
   CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
   CellID->899564547],
  Cell[659105, 11730, 1070, 26, 70, "Subsection",ExpressionUUID->"914507a7-e7c9-4482-a2a2-bd03be4ff4a3",
   CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
   CellID->364555554],
  Cell[660334, 11765, 1073, 26, 70, "Subsection",ExpressionUUID->"27440945-482c-4175-bc94-ed1af0106fc8",
   CellTags->{"Compatibility", "TemplateCellGroup"},
   CellID->618273920]},
 "Initialization Code"->{
  Cell[5571, 123, 2246, 48, 70, "Section",ExpressionUUID->"16857b55-e3a9-4653-a127-a1b31cf4f147",
   CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
   CellID->447669593]},
 "InitializationCode"->{
  Cell[5571, 123, 2246, 48, 70, "Section",ExpressionUUID->"16857b55-e3a9-4653-a127-a1b31cf4f147",
   CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
   CellID->447669593]},
 "DefaultContent"->{
  Cell[7820, 173, 751, 16, 70, "CodeText",ExpressionUUID->"0a97b23e-1347-438f-ad73-f509963dd897",
   CellTags->{"DefaultContent", "samplecell", "TabNext"},
   CellID->687519280],
  Cell[462046, 8002, 578, 9, 70, "Text",ExpressionUUID->"47593db1-0a9b-4d62-9615-62aacfada4d7",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->423796343],
  Cell[463906, 8048, 589, 9, 70, "Text",ExpressionUUID->"c7eaf52a-2cd2-4a99-816a-d6876503d2aa",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->820829112],
  Cell[654486, 11618, 580, 9, 70, "Item",ExpressionUUID->"1f0358d2-8c51-47e0-a967-2513018bed43",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->275239670],
  Cell[656664, 11671, 577, 9, 70, "Item",ExpressionUUID->"41bd8d5d-0610-4f9b-8329-7d9e6202279a",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->478615100],
  Cell[658472, 11716, 596, 9, 70, "Item",ExpressionUUID->"532ef332-7cda-47b1-9683-626bc957abc3",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->907516902]},
 "samplecell"->{
  Cell[7820, 173, 751, 16, 70, "CodeText",ExpressionUUID->"0a97b23e-1347-438f-ad73-f509963dd897",
   CellTags->{"DefaultContent", "samplecell", "TabNext"},
   CellID->687519280]},
 "TabNext"->{
  Cell[7820, 173, 751, 16, 70, "CodeText",ExpressionUUID->"0a97b23e-1347-438f-ad73-f509963dd897",
   CellTags->{"DefaultContent", "samplecell", "TabNext"},
   CellID->687519280],
  Cell[462046, 8002, 578, 9, 70, "Text",ExpressionUUID->"47593db1-0a9b-4d62-9615-62aacfada4d7",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->423796343],
  Cell[463906, 8048, 589, 9, 70, "Text",ExpressionUUID->"c7eaf52a-2cd2-4a99-816a-d6876503d2aa",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->820829112],
  Cell[654486, 11618, 580, 9, 70, "Item",ExpressionUUID->"1f0358d2-8c51-47e0-a967-2513018bed43",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->275239670],
  Cell[656664, 11671, 577, 9, 70, "Item",ExpressionUUID->"41bd8d5d-0610-4f9b-8329-7d9e6202279a",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->478615100],
  Cell[658472, 11716, 596, 9, 70, "Item",ExpressionUUID->"532ef332-7cda-47b1-9683-626bc957abc3",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->907516902]},
 "Manipulate"->{
  Cell[8608, 194, 1944, 40, 70, "Section",ExpressionUUID->"122bd488-c28a-4c28-b559-d6fcd66c8bee",
   CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
   CellID->791025314]},
 "ManipulateGroup"->{
  Cell[8608, 194, 1944, 40, 70, "Section",ExpressionUUID->"122bd488-c28a-4c28-b559-d6fcd66c8bee",
   CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
   CellID->791025314]},
 "SnapshotGroup"->{
  Cell[61884, 1259, 1302, 31, 70, "Section",ExpressionUUID->"a2966795-4073-4a65-81eb-36a1ea65908f",
   CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
   CellID->98938448]},
 "Snapshots"->{
  Cell[61884, 1259, 1302, 31, 70, "Section",ExpressionUUID->"a2966795-4073-4a65-81eb-36a1ea65908f",
   CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
   CellID->98938448]},
 "Snapshot"->{
  Cell[141226, 2579, 75506, 1244, 70, "Output",ExpressionUUID->"e839aa34-2796-44fa-adac-d12665603aa9",
   CellTags->"Snapshot",
   CellID->275288692],
  Cell[216735, 3825, 76282, 1257, 70, "Output",ExpressionUUID->"e2e64c1a-db25-41f4-ae68-67703723d883",
   CellTags->"Snapshot",
   CellID->1097270806],
  Cell[293020, 5084, 75658, 1247, 70, "Output",ExpressionUUID->"12531de3-69ef-45ab-9a5d-cf5020c64bfb",
   CellTags->"Snapshot",
   CellID->1388359653],
  Cell[368681, 6333, 77407, 1275, 70, "Output",ExpressionUUID->"e27c82c9-5693-4aea-a569-04be8719c034",
   CellTags->"Snapshot",
   CellID->1750863316]},
 "SourceInformationGroup"->{
  Cell[446125, 7613, 273, 5, 70, "Section",ExpressionUUID->"ac4fd0d5-f22a-43eb-8250-543ffe090b76",
   CellTags->"SourceInformationGroup",
   CellID->62407265]},
 "AuthorNames"->{
  Cell[446423, 7622, 1221, 29, 70, "Subsection",ExpressionUUID->"339fc614-81c6-4f28-8eab-5784c57b3f50",
   CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
   CellID->255368948]},
 "Contributed By"->{
  Cell[446423, 7622, 1221, 29, 70, "Subsection",ExpressionUUID->"339fc614-81c6-4f28-8eab-5784c57b3f50",
   CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
   CellID->255368948]},
 "AuthorNotes"->{
  Cell[448066, 7668, 2197, 46, 70, "Subsection",ExpressionUUID->"12a2b598-c96c-47ba-82a5-beeb7eae90ae",
   CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
   CellID->441931514]},
 "DetailCells"->{
  Cell[448066, 7668, 2197, 46, 70, "Subsection",ExpressionUUID->"12a2b598-c96c-47ba-82a5-beeb7eae90ae",
   CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
   CellID->441931514]},
 "Details & Citations"->{
  Cell[448066, 7668, 2197, 46, 70, "Subsection",ExpressionUUID->"12a2b598-c96c-47ba-82a5-beeb7eae90ae",
   CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
   CellID->441931514]},
 "ReferenceCells"->{
  Cell[459870, 7955, 2173, 45, 70, "Subsection",ExpressionUUID->"83a74d80-ef1d-4fee-b4cf-b94318094434",
   CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
   CellID->592881655]},
 "References"->{
  Cell[459870, 7955, 2173, 45, 70, "Subsection",ExpressionUUID->"83a74d80-ef1d-4fee-b4cf-b94318094434",
   CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
   CellID->592881655]},
 "Submission Notes"->{
  Cell[462661, 8016, 1242, 30, 70, "Subsection",ExpressionUUID->"5f053220-1475-4ce7-936e-d2caa6ce36c3",
   CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
   CellID->797097429]},
 "SubmissionNotes"->{
  Cell[462661, 8016, 1242, 30, 70, "Subsection",ExpressionUUID->"5f053220-1475-4ce7-936e-d2caa6ce36c3",
   CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
   CellID->797097429]},
 "Keywords"->{
  Cell[464532, 8062, 1106, 27, 70, "Subsection",ExpressionUUID->"06afd7a2-583d-4eed-99b5-dd9a9fb205f0",
   CellTags->{"Keywords", "TemplateCellGroup"},
   CellID->938146184]},
 "Categories"->{
  Cell[466478, 8118, 1128, 27, 70, "Subsection",ExpressionUUID->"196ee512-98e0-4973-af09-64403cec8787",
   CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
   CellID->845692503]},
 "DemoCategories"->{
  Cell[466478, 8118, 1128, 27, 70, "Subsection",ExpressionUUID->"196ee512-98e0-4973-af09-64403cec8787",
   CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
   CellID->845692503]},
 "CheckboxCell"->{
  Cell[467609, 8147, 185621, 3434, 70, "Output",ExpressionUUID->"8ebfcdf9-29d9-430e-ae48-b503c6d779ef",
   CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
   CellID->280729649],
  Cell[662560, 11825, 1370, 35, 70, "Output",ExpressionUUID->"2d82a9f7-c219-4df4-b815-a4c25c1af8b8",
   CellTags->{"CheckboxCell", "CompatibilityARSupport", "CompatibilityARSupport-Checkboxes"},
   CellID->732595960],
  Cell[666429, 11933, 1328, 34, 70, "Output",ExpressionUUID->"8533be30-078a-4ab6-bdad-56a14cb9e95a",
   CellTags->{"CheckboxCell", "CompatibilityCloudSupport", "CompatibilityCloudSupport-Checkboxes"},
   CellID->194338208]},
 "Topics"->{
  Cell[467609, 8147, 185621, 3434, 70, "Output",ExpressionUUID->"8ebfcdf9-29d9-430e-ae48-b503c6d779ef",
   CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
   CellID->280729649]},
 "Topics-Checkboxes"->{
  Cell[467609, 8147, 185621, 3434, 70, "Output",ExpressionUUID->"8ebfcdf9-29d9-430e-ae48-b503c6d779ef",
   CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
   CellID->280729649]},
 "Related Demonstrations"->{
  Cell[653267, 11586, 1216, 30, 70, "Subsection",ExpressionUUID->"8404ed2f-93d1-4976-a92c-5dc492fe3812",
   CellTags->{"Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
   CellID->1132753]},
 "RelatedDemonstrations"->{
  Cell[653267, 11586, 1216, 30, 70, "Subsection",ExpressionUUID->"8404ed2f-93d1-4976-a92c-5dc492fe3812",
   CellTags->{"Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
   CellID->1132753]},
 "External Links"->{
  Cell[655103, 11632, 1558, 37, 70, "Subsection",ExpressionUUID->"0be6fa28-1cf7-4d68-899c-08e2fa1ac061",
   CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
   CellID->843468725]},
 "ExternalLinks"->{
  Cell[655103, 11632, 1558, 37, 70, "Subsection",ExpressionUUID->"0be6fa28-1cf7-4d68-899c-08e2fa1ac061",
   CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
   CellID->843468725]},
 "Related Symbols"->{
  Cell[657278, 11685, 1191, 29, 70, "Subsection",ExpressionUUID->"712d3abe-2a38-422d-a24f-3217aad14a29",
   CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
   CellID->899564547]},
 "RelatedSymbols"->{
  Cell[657278, 11685, 1191, 29, 70, "Subsection",ExpressionUUID->"712d3abe-2a38-422d-a24f-3217aad14a29",
   CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
   CellID->899564547]},
 "Published Date"->{
  Cell[659105, 11730, 1070, 26, 70, "Subsection",ExpressionUUID->"914507a7-e7c9-4482-a2a2-bd03be4ff4a3",
   CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
   CellID->364555554]},
 "PublishedDate"->{
  Cell[659105, 11730, 1070, 26, 70, "Subsection",ExpressionUUID->"914507a7-e7c9-4482-a2a2-bd03be4ff4a3",
   CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
   CellID->364555554]},
 "Compatibility"->{
  Cell[660334, 11765, 1073, 26, 70, "Subsection",ExpressionUUID->"27440945-482c-4175-bc94-ed1af0106fc8",
   CellTags->{"Compatibility", "TemplateCellGroup"},
   CellID->618273920]},
 "CompatibilityARSupport"->{
  Cell[662560, 11825, 1370, 35, 70, "Output",ExpressionUUID->"2d82a9f7-c219-4df4-b815-a4c25c1af8b8",
   CellTags->{"CheckboxCell", "CompatibilityARSupport", "CompatibilityARSupport-Checkboxes"},
   CellID->732595960]},
 "CompatibilityARSupport-Checkboxes"->{
  Cell[662560, 11825, 1370, 35, 70, "Output",ExpressionUUID->"2d82a9f7-c219-4df4-b815-a4c25c1af8b8",
   CellTags->{"CheckboxCell", "CompatibilityARSupport", "CompatibilityARSupport-Checkboxes"},
   CellID->732595960]},
 "ScrapeDefault"->{
  Cell[665141, 11896, 139, 3, 70, "Text",ExpressionUUID->"be26c5e8-be75-49cc-bcea-d0587fd18731",
   CellTags->"ScrapeDefault",
   CellID->491105737]},
 "CompatibilityCloudSupport"->{
  Cell[666429, 11933, 1328, 34, 70, "Output",ExpressionUUID->"8533be30-078a-4ab6-bdad-56a14cb9e95a",
   CellTags->{"CheckboxCell", "CompatibilityCloudSupport", "CompatibilityCloudSupport-Checkboxes"},
   CellID->194338208]},
 "CompatibilityCloudSupport-Checkboxes"->{
  Cell[666429, 11933, 1328, 34, 70, "Output",ExpressionUUID->"8533be30-078a-4ab6-bdad-56a14cb9e95a",
   CellTags->{"CheckboxCell", "CompatibilityCloudSupport", "CompatibilityCloudSupport-Checkboxes"},
   CellID->194338208]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Name", 808754, 14636},
 {"Title", 808914, 14640},
 {"Caption", 809076, 14644},
 {"CaptionCells", 809279, 14648},
 {"TemplateCellGroup", 809487, 14652},
 {"Initialization Code", 812449, 14698},
 {"InitializationCode", 812677, 14702},
 {"DefaultContent", 812901, 14706},
 {"samplecell", 813916, 14725},
 {"TabNext", 814110, 14729},
 {"Manipulate", 815125, 14748},
 {"ManipulateGroup", 815338, 14752},
 {"SnapshotGroup", 815549, 14756},
 {"Snapshots", 815754, 14760},
 {"Snapshot", 815958, 14764},
 {"SourceInformationGroup", 816595, 14777},
 {"AuthorNames", 816774, 14781},
 {"Contributed By", 816992, 14785},
 {"AuthorNotes", 817207, 14789},
 {"DetailCells", 817442, 14793},
 {"Details & Citations", 817685, 14797},
 {"ReferenceCells", 817923, 14801},
 {"References", 818136, 14805},
 {"Submission Notes", 818355, 14809},
 {"SubmissionNotes", 818580, 14813},
 {"Keywords", 818798, 14817},
 {"Categories", 818991, 14821},
 {"DemoCategories", 819208, 14825},
 {"CheckboxCell", 819423, 14829},
 {"Topics", 820068, 14839},
 {"Topics-Checkboxes", 820282, 14843},
 {"Related Demonstrations", 820501, 14847},
 {"RelatedDemonstrations", 820743, 14851},
 {"External Links", 820978, 14855},
 {"ExternalLinks", 821198, 14859},
 {"Related Symbols", 821420, 14863},
 {"RelatedSymbols", 821643, 14867},
 {"Published Date", 821866, 14871},
 {"PublishedDate", 822086, 14875},
 {"Compatibility", 822306, 14879},
 {"CompatibilityARSupport", 822517, 14883},
 {"CompatibilityARSupport-Checkboxes", 822776, 14887},
 {"ScrapeDefault", 823015, 14891},
 {"CompatibilityCloudSupport", 823198, 14895},
 {"CompatibilityCloudSupport-Checkboxes", 823466, 14899}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 415, 7, 70, "Title",ExpressionUUID->"80b166c7-6de8-4856-b160-53671ea8f3ed",
 CellTags->{"Name", "Title"},
 CellID->344714230],
Cell[CellGroupData[{
Cell[1020, 33, 1495, 33, 70, "Section",ExpressionUUID->"508930fb-ebe2-4394-ac55-e4bc403452fa",
 CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
 CellID->138150581],
Cell[2518, 68, 926, 14, 70, "Text",ExpressionUUID->"26b5f88e-13ef-4328-b31f-d08ed404df37",
 CellID->291355424],
Cell[3447, 84, 1163, 18, 70, "Text",ExpressionUUID->"2ceda9a5-cd47-419f-a462-e4f87ac87fa4",
 CellID->294064757],
Cell[4613, 104, 921, 14, 70, "Text",ExpressionUUID->"02e68e18-0d34-4e8b-be8e-de08a2ce3ce1",
 CellID->1271497273]
}, Closed]],
Cell[CellGroupData[{
Cell[5571, 123, 2246, 48, 70, "Section",ExpressionUUID->"16857b55-e3a9-4653-a127-a1b31cf4f147",
 CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
 CellID->447669593],
Cell[7820, 173, 751, 16, 70, "CodeText",ExpressionUUID->"0a97b23e-1347-438f-ad73-f509963dd897",
 CellTags->{"DefaultContent", "samplecell", "TabNext"},
 CellID->687519280]
}, Closed]],
Cell[CellGroupData[{
Cell[8608, 194, 1944, 40, 70, "Section",ExpressionUUID->"122bd488-c28a-4c28-b559-d6fcd66c8bee",
 CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
 CellID->791025314],
Cell[CellGroupData[{
Cell[10577, 238, 39653, 764, 70, "Input",ExpressionUUID->"43c371ed-6862-469c-8b02-a44c466deafc",
 CellID->948876044],
Cell[50233, 1004, 11602, 249, 70, "Output",ExpressionUUID->"45084640-34e9-4f94-a1de-55c9d6324215",
 CellID->101659201]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[61884, 1259, 1302, 31, 70, "Section",ExpressionUUID->"a2966795-4073-4a65-81eb-36a1ea65908f",
 CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
 CellID->98938448],
Cell[63189, 1292, 78034, 1285, 70, "Output",ExpressionUUID->"03981ebf-0f30-40c4-a5d9-7a86907c961a",
 CellID->129445914],
Cell[141226, 2579, 75506, 1244, 70, "Output",ExpressionUUID->"e839aa34-2796-44fa-adac-d12665603aa9",
 CellTags->"Snapshot",
 CellID->275288692],
Cell[216735, 3825, 76282, 1257, 70, "Output",ExpressionUUID->"e2e64c1a-db25-41f4-ae68-67703723d883",
 CellTags->"Snapshot",
 CellID->1097270806],
Cell[293020, 5084, 75658, 1247, 70, "Output",ExpressionUUID->"12531de3-69ef-45ab-9a5d-cf5020c64bfb",
 CellTags->"Snapshot",
 CellID->1388359653],
Cell[368681, 6333, 77407, 1275, 70, "Output",ExpressionUUID->"e27c82c9-5693-4aea-a569-04be8719c034",
 CellTags->"Snapshot",
 CellID->1750863316]
}, Closed]],
Cell[CellGroupData[{
Cell[446125, 7613, 273, 5, 70, "Section",ExpressionUUID->"ac4fd0d5-f22a-43eb-8250-543ffe090b76",
 CellTags->"SourceInformationGroup",
 CellID->62407265],
Cell[CellGroupData[{
Cell[446423, 7622, 1221, 29, 70, "Subsection",ExpressionUUID->"339fc614-81c6-4f28-8eab-5784c57b3f50",
 CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
 CellID->255368948],
Cell[447647, 7653, 122, 2, 70, "Item",ExpressionUUID->"559894f4-a3f7-4aa2-b132-9ed190d28ece",
 CellID->127823445],
Cell[447772, 7657, 128, 2, 70, "Item",ExpressionUUID->"c78590bc-7c07-4fe8-9920-4b1842560e36",
 CellID->392586725],
Cell[447903, 7661, 126, 2, 70, "Item",ExpressionUUID->"68b59fcf-cb19-4473-acf9-fd43099d3fd4",
 CellID->250311285]
}, Open  ]],
Cell[CellGroupData[{
Cell[448066, 7668, 2197, 46, 70, "Subsection",ExpressionUUID->"12a2b598-c96c-47ba-82a5-beeb7eae90ae",
 CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
 CellID->441931514],
Cell[450266, 7716, 534, 9, 70, "Text",ExpressionUUID->"fa3a743a-90a5-4090-8809-3e8a505c8745",
 CellID->156872021],
Cell[450803, 7727, 821, 22, 70, "Text",ExpressionUUID->"a827b636-8a88-444a-8bad-cabde76800be",
 CellID->336904835],
Cell[451627, 7751, 1687, 37, 70, "Text",ExpressionUUID->"179beb4f-4386-4225-a40b-902d89819ff7",
 CellID->106618000],
Cell[453317, 7790, 544, 9, 70, "Text",ExpressionUUID->"4986ce4e-1f8f-4236-bf49-fa8cfdc737c3",
 CellID->451625093],
Cell[453864, 7801, 939, 23, 70, "Text",ExpressionUUID->"78a66b76-754d-4712-99b5-d47ec66afabd",
 CellID->477183820],
Cell[454806, 7826, 1006, 20, 70, "Text",ExpressionUUID->"1897ef4c-da2b-4dee-8e09-7a06db5e8b10",
 CellID->23551827],
Cell[455815, 7848, 1008, 24, 70, "Text",ExpressionUUID->"8ecb3fc9-3b33-4ffe-9d53-d3cc9cd498e5",
 CellID->216493807],
Cell[456826, 7874, 1039, 23, 70, "Text",ExpressionUUID->"50527cb0-111b-4f93-ac62-45e950fa21c3",
 CellID->568471048],
Cell[457868, 7899, 630, 14, 70, "Text",ExpressionUUID->"caf43011-33d6-4438-b69a-95995d552dd2",
 CellID->804286894],
Cell[458501, 7915, 179, 3, 70, "Text",ExpressionUUID->"fde23bd3-c251-428b-91a7-5d9b2f03db12",
 CellID->10145431],
Cell[458683, 7920, 537, 13, 70, "Text",ExpressionUUID->"57855b8c-d5d4-4a39-8889-125f8d02bf79",
 CellID->282198968],
Cell[459223, 7935, 610, 15, 70, "Text",ExpressionUUID->"74451d62-b389-46ff-b7a3-1b4eb27c357a",
 CellID->585505911]
}, Open  ]],
Cell[CellGroupData[{
Cell[459870, 7955, 2173, 45, 70, "Subsection",ExpressionUUID->"83a74d80-ef1d-4fee-b4cf-b94318094434",
 CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
 CellID->592881655],
Cell[462046, 8002, 578, 9, 70, "Text",ExpressionUUID->"47593db1-0a9b-4d62-9615-62aacfada4d7",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->423796343]
}, Open  ]],
Cell[CellGroupData[{
Cell[462661, 8016, 1242, 30, 70, "Subsection",ExpressionUUID->"5f053220-1475-4ce7-936e-d2caa6ce36c3",
 CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
 CellID->797097429],
Cell[463906, 8048, 589, 9, 70, "Text",ExpressionUUID->"c7eaf52a-2cd2-4a99-816a-d6876503d2aa",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->820829112]
}, Open  ]],
Cell[CellGroupData[{
Cell[464532, 8062, 1106, 27, 70, "Subsection",ExpressionUUID->"06afd7a2-583d-4eed-99b5-dd9a9fb205f0",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->938146184],
Cell[465641, 8091, 130, 2, 70, "Item",ExpressionUUID->"afe05024-334f-4a5b-959f-e5dc17340830",
 CellID->858230107],
Cell[465774, 8095, 118, 2, 70, "Item",ExpressionUUID->"92c2adbf-f83f-42df-b71e-4416e3cbdc89",
 CellID->334422713],
Cell[465895, 8099, 124, 2, 70, "Item",ExpressionUUID->"2104dfd0-87dc-43ed-b4ef-9b343be306e5",
 CellID->419988527],
Cell[466022, 8103, 134, 2, 70, "Item",ExpressionUUID->"419decae-0650-49eb-a7f6-a8af96565cf2",
 CellID->670454273],
Cell[466159, 8107, 141, 2, 70, "Item",ExpressionUUID->"a2f57a16-880f-4cda-8b29-59944199b4cc",
 CellID->846373912],
Cell[466303, 8111, 138, 2, 70, "Item",ExpressionUUID->"483bde01-1afd-4d20-8f1e-4fa28d9a012e",
 CellID->952996925]
}, Open  ]],
Cell[CellGroupData[{
Cell[466478, 8118, 1128, 27, 70, "Subsection",ExpressionUUID->"196ee512-98e0-4973-af09-64403cec8787",
 CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
 CellID->845692503],
Cell[467609, 8147, 185621, 3434, 70, "Output",ExpressionUUID->"8ebfcdf9-29d9-430e-ae48-b503c6d779ef",
 CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
 CellID->280729649]
}, Open  ]],
Cell[CellGroupData[{
Cell[653267, 11586, 1216, 30, 70, "Subsection",ExpressionUUID->"8404ed2f-93d1-4976-a92c-5dc492fe3812",
 CellTags->{"Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
 CellID->1132753],
Cell[654486, 11618, 580, 9, 70, "Item",ExpressionUUID->"1f0358d2-8c51-47e0-a967-2513018bed43",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->275239670]
}, Open  ]],
Cell[CellGroupData[{
Cell[655103, 11632, 1558, 37, 70, "Subsection",ExpressionUUID->"0be6fa28-1cf7-4d68-899c-08e2fa1ac061",
 CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
 CellID->843468725],
Cell[656664, 11671, 577, 9, 70, "Item",ExpressionUUID->"41bd8d5d-0610-4f9b-8329-7d9e6202279a",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->478615100]
}, Open  ]],
Cell[CellGroupData[{
Cell[657278, 11685, 1191, 29, 70, "Subsection",ExpressionUUID->"712d3abe-2a38-422d-a24f-3217aad14a29",
 CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
 CellID->899564547],
Cell[658472, 11716, 596, 9, 70, "Item",ExpressionUUID->"532ef332-7cda-47b1-9683-626bc957abc3",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->907516902]
}, Open  ]],
Cell[CellGroupData[{
Cell[659105, 11730, 1070, 26, 70, "Subsection",ExpressionUUID->"914507a7-e7c9-4482-a2a2-bd03be4ff4a3",
 CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
 CellID->364555554],
Cell[660178, 11758, 119, 2, 70, "Text",ExpressionUUID->"e4ae2b19-48e9-43f9-9ab5-39150a59d1da",
 CellID->16677766]
}, Open  ]],
Cell[CellGroupData[{
Cell[660334, 11765, 1073, 26, 70, "Subsection",ExpressionUUID->"27440945-482c-4175-bc94-ed1af0106fc8",
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->618273920],
Cell[CellGroupData[{
Cell[661432, 11795, 1125, 28, 70, "Subsubsection",ExpressionUUID->"47be5216-26c9-4053-9317-4fd04b3cfa25",
 CellID->119819855],
Cell[662560, 11825, 1370, 35, 70, "Output",ExpressionUUID->"2d82a9f7-c219-4df4-b815-a4c25c1af8b8",
 CellTags->{"CheckboxCell", "CompatibilityARSupport", "CompatibilityARSupport-Checkboxes"},
 CellID->732595960]
}, Closed]],
Cell[CellGroupData[{
Cell[663967, 11865, 1171, 29, 70, "Subsubsection",ExpressionUUID->"14d87075-2d50-4a0f-96f2-2262c145ecc6",
 CellID->591034469],
Cell[665141, 11896, 139, 3, 70, "Text",ExpressionUUID->"be26c5e8-be75-49cc-bcea-d0587fd18731",
 CellTags->"ScrapeDefault",
 CellID->491105737]
}, Open  ]],
Cell[CellGroupData[{
Cell[665317, 11904, 1109, 27, 70, "Subsubsection",ExpressionUUID->"b14cd31a-2856-4935-9d96-469bcf85a9c6",
 CellID->744922803],
Cell[666429, 11933, 1328, 34, 70, "Output",ExpressionUUID->"8533be30-078a-4ab6-bdad-56a14cb9e95a",
 CellTags->{"CheckboxCell", "CompatibilityCloudSupport", "CompatibilityCloudSupport-Checkboxes"},
 CellID->194338208]
}, Closed]]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
