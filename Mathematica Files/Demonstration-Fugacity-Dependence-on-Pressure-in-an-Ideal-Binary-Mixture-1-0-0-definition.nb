(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    847861,      15438]
NotebookOptionsPosition[    681331,      12275]
NotebookOutlinePosition[    838434,      15248]
CellTagsIndexPosition[    836754,      15199]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Fugacity Dependence on Pressure in an Ideal Binary Mixture", "Title",
 TaggingRules->{},
 CellChangeTimes->{
  3.685987571981817*^9, {3.7541503178866577`*^9, 3.754150325583211*^9}, {
   3.757773891830263*^9, 3.75777389821837*^9}},
 CellTags->{"Name", "Title"},
 CellID->145039789,ExpressionUUID->"b0713b89-5154-4a08-ba9c-9da68dec10ad"],

Cell[CellGroupData[{

Cell[TextData[{
 "Caption",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CaptionCells", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "The caption provides all the information needed to understand the \
Demonstration. It should be between three and five sentences long, but \
clarity is more important than length. Include only text in this section \
\[LongDash] no code, graphics, etc. Do not change the cell style or copy \
cells from other sections. Do not copy text from books or the web. Write your \
ideas in your own words. If you want to refer to something on the web, link \
to it in the Details.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCaptionCells"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "77e06e5f-eaab-427b-84f1-836bae7e1f04"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "CaptionCells"},
 CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
 CellID->138150581,ExpressionUUID->"8566c1d8-fa2c-4127-bad8-0c39959420bc"],

Cell[TextData[{
 "This Demonstration shows how the fugacities of benzene (",
 Cell[BoxData[
  FormBox[
   StyleBox["B",
    FontSlant->"Plain"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "afd9c9ec-bdbc-46d5-876c-0572712166dc"],
 ") and toluene (",
 Cell[BoxData[
  FormBox[
   StyleBox["T",
    FontSlant->"Plain"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "cc7016c3-de16-4859-a970-484fd82f27cd"],
 ") change with pressure and composition at constant temperature. The liquid \
mixture is modeled as an ideal solution and the gas phase is ideal, so \
Raoult's law models vapor-liquid equilibrium. Use sliders to vary the \
temperature and overall mole fraction of benzene. Use buttons to view the \
pressure-composition diagram (",
 Cell[BoxData[
  FormBox["P", TraditionalForm]], "InlineMath",ExpressionUUID->
  "b9081218-df96-4732-9745-511f59f1dddd"],
 "-",
 Cell[BoxData[
  FormBox["x", TraditionalForm]], "InlineMath",ExpressionUUID->
  "5924b787-08c2-4639-ae42-6bf1f95a2319"],
 "-",
 Cell[BoxData[
  FormBox["y", TraditionalForm]], "InlineMath",ExpressionUUID->
  "35b58941-eedc-460e-91e0-8f29efb8f2b0"],
 "), the fugacity-pressure plot or both plots at once. Black dots on the \
diagrams represent the pressure (on the ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]], "InlineMath",ExpressionUUID->
  "39f3a0b4-ac48-4ca8-9a33-d08d637bc5c8"],
 "-",
 Cell[BoxData[
  FormBox["x", TraditionalForm]], "InlineMath",ExpressionUUID->
  "7fbd883e-5bc7-455f-950c-12c186203dbc"],
 "-",
 Cell[BoxData[
  FormBox["y", TraditionalForm]], "InlineMath",ExpressionUUID->
  "dadf8f69-f055-43d0-828e-0658e51f896f"],
 " diagram) or fugacity (on the fugacity plot) for the given temperature and \
pressure."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{
  3.6859875925938497`*^9, {3.685987730683936*^9, 3.6859877370869474`*^9}, {
   3.6896133660263977`*^9, 3.6896133936780577`*^9}, {3.754150355744855*^9, 
   3.7541503598701143`*^9}, {3.7564743952567587`*^9, 3.756474457590083*^9}, {
   3.757258451937079*^9, 3.75725847590117*^9}, {3.7572585501934137`*^9, 
   3.757258588822824*^9}},
 CellID->775430540,ExpressionUUID->"b799a223-fc5e-4f8b-8fa2-fc95fe497f18"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialization Code",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"InitializationCode", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Provide any code that must be evaluated before the ", 
           StyleBox["Manipulate", "MRbig"], 
           ". This will automatically be built into the ", 
           StyleBox["Manipulate", "MRbig"], 
           " in the final notebook version. Never use a package that is not \
included in the default distribution of ", 
           StyleBox["Mathematica", FontSlant -> "Italic"], 
           ". To use a package, use the ", 
           StyleBox["Initialization", "MRbig"], " option (with ", 
           StyleBox["Get", "MRbig"], ", not ", 
           StyleBox["Needs", "MRbig"], ") in the ", 
           StyleBox["Manipulate", "MRbig"], 
           " itself, and use the full name of the function from the package. \
For example:\n", 
           StyleBox[
           "  Manipulate[\n  \[Ellipsis]\n  ComputationalGeometry`ConvexHull[\
\[Ellipsis]]\[Ellipsis]\n  \[Ellipsis]\n  Initialization :> \
Get[\"ComputationalGeometry`\"],\n  \[Ellipsis]\n  ]", "MR"], 
           "\nIf you provide initialization code, include a ", 
           StyleBox["SaveDefinitions->True", "MRbig"], " option in the ", 
           StyleBox["Manipulate", "MRbig"], ".", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoInitializationCode"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "eb1941e7-5550-4a07-b07b-a138d046e33f"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "InitializationCode"},
 DefaultNewCellStyle->"Input",
 CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
 
 CellID->447669593,ExpressionUUID->"dae2168a-5f5c-449d-aeb7-e9372650332d"],

Cell[TextData[{
 "If you provide initialization code, include a ",
 StyleBox["SaveDefinitions->True", "MRbig"],
 " option in the ",
 StyleBox["Manipulate", "MRbig"],
 "."
}], "CodeText",
 Editable->False,
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "samplecell", "TabNext"},
 CellID->687519280,ExpressionUUID->"c0f3aa03-167a-4826-979a-3defedfadc2f"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Manipulate",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ManipulateGroup", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"This section contains the ", 
           StyleBox["Manipulate", "MRbig"], 
           " input cell and its evaluated output cell. Make all control \
labels or labels in the output as descriptive as possible, with only proper \
nouns and proper adjectives capitalized. More description of the controls can \
be provided in the Details section below, if necessary. If you change this ", 
           
           StyleBox["Manipulate", "MRbig"], 
           " after creating screenshots and/or thumbnails, use ", 
           StyleBox["Update Thumbnail & Snapshots", FontWeight -> "Bold"], 
           " in the toolbar to update any copies in later sections. You can \
control the Flash preview for the Demonstration with the ", 
           StyleBox["AutorunSequencing", "MRbig"], " option. Use ", 
           StyleBox["SaveDefinitions->True", "MRbig"], 
           " if you provided initialization code in the previous section."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoManipulateGroup"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "6b955f98-1bc7-4467-a0bd-4cec335869e2"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ManipulateGroup"},
 DefaultNewCellStyle->"Input",
 CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
 CellID->791025314,ExpressionUUID->"d0b3f07c-327c-42f4-ab36-f72679877b17"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "Px", ",", "Py", ",", "PsatB", ",", "PsatT", ",", "PxyPlot", ",", 
       "fugPlot", ",", "sol", ",", "solL", ",", "solV", ",", "fT", ",", "fB", 
       ",", "f", ",", "L", ",", "V", ",", "label", ",", "fBen", ",", "fTol"}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SetOptions", "[", 
       RowBox[{"Plot", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "17", ",", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "}"}]}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Off", "[", 
       RowBox[{"Solve", "::", "ratnz"}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PsatB", "[", "T_", "]"}], ":=", 
       RowBox[{"0.00133322368", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"6.87987", "-", 
           RowBox[{"(", 
            RowBox[{"1196.76", "/", 
             RowBox[{"(", 
              RowBox[{"T", "+", "219.161"}], ")"}]}], ")"}]}], ")"}]}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PsatT", "[", "T_", "]"}], ":=", 
       RowBox[{"0.00133322368", "*", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"6.95087", "-", 
           RowBox[{"(", 
            RowBox[{"1342.31", "/", 
             RowBox[{"(", 
              RowBox[{"T", "+", "219.187"}], ")"}]}], ")"}]}], ")"}]}]}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Px", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"x", "*", 
         RowBox[{"PsatB", "[", "temp", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "x"}], ")"}], "*", 
         RowBox[{"PsatT", "[", "temp", "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Py", "[", "x_", "]"}], ":=", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox["x", 
           RowBox[{"PsatB", "[", "temp", "]"}]], "+", 
          FractionBox[
           RowBox[{"1", "-", "x"}], 
           RowBox[{"PsatT", "[", "temp", "]"}]]}], ")"}], 
        RowBox[{"-", "1"}]]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"sol", "=", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               FractionBox["solVap", 
                RowBox[{"PsatB", "[", "temp", "]"}]], "+", 
               FractionBox[
                RowBox[{"1", "-", "solVap"}], 
                RowBox[{"PsatT", "[", "temp", "]"}]]}], ")"}], 
             RowBox[{"-", "1"}]], "\[Equal]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"z", "-", "solLiq"}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"solVap", "-", "solLiq"}], ")"}]}], ")"}], "*", 
              "P"}], "+", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"solVap", "-", "z"}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{"solVap", "-", "solLiq"}], ")"}]}], "*", 
              RowBox[{"PsatB", "[", "temp", "]"}], "*", "solLiq"}], "+", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"solVap", "-", "z"}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{"solVap", "-", "solLiq"}], ")"}]}], "*", 
              RowBox[{"PsatT", "[", "temp", "]"}], "*", 
              RowBox[{"(", 
               RowBox[{"1", "-", "solLiq"}], ")"}]}]}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"solLiq", "*", 
              RowBox[{"PsatB", "[", "temp", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "solLiq"}], ")"}], "*", 
              RowBox[{"PsatT", "[", "temp", "]"}]}]}], "\[Equal]", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"z", "-", "solLiq"}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"solVap", "-", "solLiq"}], ")"}]}], ")"}], "*", 
              "P"}], "+", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"solVap", "-", "z"}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{"solVap", "-", "solLiq"}], ")"}]}], "*", 
              RowBox[{"PsatB", "[", "temp", "]"}], "*", "solLiq"}], "+", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"solVap", "-", "z"}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{"solVap", "-", "solLiq"}], ")"}]}], "*", 
              RowBox[{"PsatT", "[", "temp", "]"}], "*", 
              RowBox[{"(", 
               RowBox[{"1", "-", "solLiq"}], ")"}]}]}]}]}], 
          "\[IndentingNewLine]", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"solVap", ",", "solLiq"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"solL", "=", 
       RowBox[{"solLiq", "/.", 
        RowBox[{"sol", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"solV", "=", 
       RowBox[{"solVap", "/.", 
        RowBox[{"sol", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"V", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"z", "-", "solL"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"solV", "-", "solL"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"L", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"solV", "-", "z"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"solV", "-", "solL"}], ")"}]}]}], ";", "\[IndentingNewLine]",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fB", "[", 
        RowBox[{"z_", ",", "P_"}], "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"z", "*", "P"}], ",", 
            RowBox[{"P", "<", 
             RowBox[{"Py", "[", "z", "]"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"V", "*", "solV", "*", "P"}], "+", 
             RowBox[{"L", "*", 
              RowBox[{"PsatB", "[", "temp", "]"}], "*", "solL"}]}], ",", 
            RowBox[{
             RowBox[{"Py", "[", "z", "]"}], "\[LessEqual]", "P", 
             "\[LessEqual]", 
             RowBox[{"Px", "[", "z", "]"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"PsatB", "[", "temp", "]"}], "*", "z"}], ",", 
            RowBox[{"P", ">", 
             RowBox[{"Px", "[", "z", "]"}]}]}], "}"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fT", "[", 
        RowBox[{"z_", ",", "P_"}], "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "z"}], ")"}], "*", "P"}], ",", 
            RowBox[{"P", "<", 
             RowBox[{"Py", "[", "z", "]"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"V", "*", 
              RowBox[{"(", 
               RowBox[{"1", "-", "solV"}], ")"}], "*", "P"}], "+", 
             RowBox[{"L", "*", 
              RowBox[{"PsatT", "[", "temp", "]"}], "*", 
              RowBox[{"(", 
               RowBox[{"1", "-", "solL"}], ")"}]}]}], ",", 
            RowBox[{
             RowBox[{"Py", "[", "z", "]"}], "\[LessEqual]", "P", 
             "\[LessEqual]", 
             RowBox[{"Px", "[", "z", "]"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"PsatT", "[", "temp", "]"}], "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "z"}], ")"}]}], ",", 
            RowBox[{"P", ">", 
             RowBox[{"Px", "[", "z", "]"}]}]}], "}"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"z_", ",", "P_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"fB", "[", 
         RowBox[{"z", ",", "P"}], "]"}], "+", 
        RowBox[{"fT", "[", 
         RowBox[{"z", ",", "P"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"label", "=", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Framed", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"#1", ",", "18", ",", 
              RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", "#2"}],
              "]"}], ",", 
            RowBox[{"Background", "\[Rule]", "White"}], ",", 
            RowBox[{"FrameStyle", "\[Rule]", "None"}], ",", 
            RowBox[{"FrameMargins", "\[Rule]", "Tiny"}]}], "]"}], ",", "#3"}],
          "]"}], "&"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"PxyPlot", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Px", "[", "x", "]"}], ",", 
           RowBox[{"Py", "[", "x", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0.5"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Orange", ",", "Red"}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<mole fraction benzene\>\"", ",", "\"\<pressure (bar)\>\""}], 
           "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"fob", "\[Equal]", "3"}], ",", "\"\<\>\"", ",", 
            RowBox[{"Row", "@", 
             RowBox[{"{", 
              RowBox[{"\"\<fugacity of benzene = \>\"", ",", 
               RowBox[{"Round", "[", 
                RowBox[{
                 RowBox[{"fB", "[", 
                  RowBox[{"z", ",", "P"}], "]"}], ",", "0.01"}], "]"}], ",", 
               "\"\< bar    fugacity of toluene = \>\"", ",", 
               RowBox[{"Round", "[", 
                RowBox[{
                 RowBox[{"fT", "[", 
                  RowBox[{"z", ",", "P"}], "]"}], ",", "0.01"}], "]"}], ",", 
               "\"\< bar\>\""}], "}"}]}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"label", "[", 
             RowBox[{"\"\<liquid\>\"", ",", "Orange", ",", 
              RowBox[{"{", 
               RowBox[{"0.22", ",", "0.42"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"label", "[", 
             RowBox[{"\"\<vapor\>\"", ",", "Red", ",", 
              RowBox[{"{", 
               RowBox[{"0.76", ",", "0.1"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PointSize", "@", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"fob", "\[Equal]", "3"}], ",", "0.02", ",", "0.01"}], 
              "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Py", "[", "z", "]"}], "\[LessEqual]", "P", 
               "\[LessEqual]", 
               RowBox[{"Px", "[", "z", "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Point", "@", 
                 RowBox[{"{", 
                  RowBox[{"z", ",", 
                   RowBox[{"f", "[", 
                    RowBox[{"z", ",", "P"}], "]"}]}], "}"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Point", "@", 
                 RowBox[{"{", 
                  RowBox[{"solL", ",", 
                   RowBox[{"f", "[", 
                    RowBox[{"z", ",", "P"}], "]"}]}], "}"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Point", "@", 
                 RowBox[{"{", 
                  RowBox[{"solV", ",", 
                   RowBox[{"f", "[", 
                    RowBox[{"z", ",", "P"}], "]"}]}], "}"}]}], ",", 
                "\[IndentingNewLine]", "Orange", ",", "Dashed", ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"z", ",", "P"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"solL", ",", 
                    RowBox[{"f", "[", 
                    RowBox[{"z", ",", "P"}], "]"}]}], "}"}]}], "}"}], "]"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"solL", ",", 
                    RowBox[{"f", "[", 
                    RowBox[{"z", ",", "P"}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"solL", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
                "\[IndentingNewLine]", "Red", ",", "\[IndentingNewLine]", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"z", ",", "P"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"solV", ",", 
                    RowBox[{"f", "[", 
                    RowBox[{"z", ",", "P"}], "]"}]}], "}"}]}], "}"}], "]"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"solV", ",", 
                    RowBox[{"f", "[", 
                    RowBox[{"z", ",", "P"}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"solV", ",", "0"}], "}"}]}], "}"}], "]"}]}], 
               "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Point", "@", 
             RowBox[{"{", 
              RowBox[{"z", ",", "P"}], "}"}]}]}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fBen", "[", "p_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"z", "*", "p"}], ",", 
            RowBox[{"p", "\[LessEqual]", 
             RowBox[{"Py", "[", "z", "]"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"z", "*", 
              RowBox[{"Py", "[", "z", "]"}], "*", 
              FractionBox[
               RowBox[{
                RowBox[{"Px", "[", "z", "]"}], "-", "p"}], 
               RowBox[{
                RowBox[{"Px", "[", "z", "]"}], "-", 
                RowBox[{"Py", "[", "z", "]"}]}]]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{
                  RowBox[{"Px", "[", "z", "]"}], "-", "p"}], 
                 RowBox[{
                  RowBox[{"Px", "[", "z", "]"}], "-", 
                  RowBox[{"Py", "[", "z", "]"}]}]]}], ")"}], "*", "z", "*", 
              RowBox[{"PsatB", "[", "temp", "]"}]}]}], ",", 
            RowBox[{
             RowBox[{"Py", "[", "z", "]"}], "<", "p", "<", 
             RowBox[{"Px", "[", "z", "]"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"PsatB", "[", "temp", "]"}], "*", "z"}], ",", 
            RowBox[{"p", "\[GreaterEqual]", 
             RowBox[{"Px", "[", "z", "]"}]}]}], "}"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fTol", "[", "p_", "]"}], ":=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "z"}], ")"}], "*", "p"}], ",", 
            RowBox[{"p", "<", 
             RowBox[{"Py", "[", "z", "]"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "z"}], ")"}], "*", 
              RowBox[{"Py", "[", "z", "]"}], "*", 
              FractionBox[
               RowBox[{
                RowBox[{"Px", "[", "z", "]"}], "-", "p"}], 
               RowBox[{
                RowBox[{"Px", "[", "z", "]"}], "-", 
                RowBox[{"Py", "[", "z", "]"}]}]]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{
                  RowBox[{"Px", "[", "z", "]"}], "-", "p"}], 
                 RowBox[{
                  RowBox[{"Px", "[", "z", "]"}], "-", 
                  RowBox[{"Py", "[", "z", "]"}]}]]}], ")"}], "*", 
              RowBox[{"(", 
               RowBox[{"1", "-", "z"}], ")"}], "*", 
              RowBox[{"PsatT", "[", "temp", "]"}]}]}], ",", 
            RowBox[{
             RowBox[{"Py", "[", "z", "]"}], "\[LessEqual]", "p", 
             "\[LessEqual]", 
             RowBox[{"Px", "[", "z", "]"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"PsatT", "[", "temp", "]"}], "*", 
             RowBox[{"(", 
              RowBox[{"1", "-", "z"}], ")"}]}], ",", 
            RowBox[{"p", ">", 
             RowBox[{"Px", "[", "z", "]"}]}]}], "}"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"fugPlot", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"fBen", "[", "p", "]"}], ",", 
           RowBox[{"fTol", "[", "p", "]"}]}], "\[IndentingNewLine]", "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"p", ",", "0.1", ",", "3"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.1", ",", "0.5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0.5"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Green", ",", "Blue"}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<pressure (bar)\>\"", ",", "\"\<fugacity (bar)\>\""}], 
           "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"fob", "\[Equal]", "3"}], ",", "\"\<\>\"", ",", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"Row", "@", 
               RowBox[{"{", 
                RowBox[{"\"\<fugacity of benzene = \>\"", ",", 
                 RowBox[{"Round", "[", 
                  RowBox[{
                   RowBox[{"fB", "[", 
                    RowBox[{"z", ",", "P"}], "]"}], ",", "0.01"}], "]"}], 
                 ",", "\"\< bar    fugacity of toluene = \>\"", ",", 
                 RowBox[{"Round", "[", 
                  RowBox[{
                   RowBox[{"fT", "[", 
                    RowBox[{"z", ",", "P"}], "]"}], ",", "0.01"}], "]"}], 
                 ",", "\"\< bar\>\""}], "}"}]}], ",", "17"}], "]"}]}], 
           "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"label", "[", 
             RowBox[{"\"\<toluene\>\"", ",", "Blue", ",", 
              RowBox[{"{", 
               RowBox[{"0.4", ",", 
                RowBox[{"fTol", "[", "0.4", "]"}]}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"label", "[", 
             RowBox[{"\"\<benzene\>\"", ",", "Green", ",", 
              RowBox[{"{", 
               RowBox[{"0.2", ",", 
                RowBox[{"fBen", "[", "0.2", "]"}]}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PointSize", "@", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"fob", "\[Equal]", "3"}], ",", "0.02", ",", "0.01"}], 
              "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"Point", "@", 
             RowBox[{"{", 
              RowBox[{"P", ",", 
               RowBox[{"fT", "[", 
                RowBox[{"z", ",", "P"}], "]"}]}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Point", "@", 
             RowBox[{"{", 
              RowBox[{"P", ",", 
               RowBox[{"fB", "[", 
                RowBox[{"z", ",", "P"}], "]"}]}], "}"}]}]}], "}"}]}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{"fob", ",", "\[IndentingNewLine]", "1", ",", 
        RowBox[{"Show", "[", 
         RowBox[{"PxyPlot", ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"600", ",", "400"}], "}"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", "2", ",", 
        RowBox[{"Show", "[", 
         RowBox[{"fugPlot", ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"600", ",", "400"}], "}"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", "3", ",", 
        RowBox[{"Show", "[", 
         RowBox[{"GraphicsRow", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"PxyPlot", ",", "fugPlot"}], "}"}], ",", 
           RowBox[{"Spacings", "\[Rule]", "0"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"600", ",", "400"}], "}"}]}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "Full"}]}], "]"}], "]"}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"fob", ",", "3", ",", "\"\<\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<P\[Hyphen]x\[Hyphen]y\>\"", ",", "Italic"}], 
                "]"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"Row", "@", 
                RowBox[{"{", 
                 RowBox[{"\"\< fugacity versus \>\"", ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<P \>\"", ",", "Italic"}], "]"}]}], "}"}]}]}], 
              ",", 
              RowBox[{"3", "\[Rule]", "\"\< both \>\""}]}], "}"}], ",", 
            "Setter"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"P", ",", "0.35", ",", "\"\<pressure (bar)\>\""}], "}"}],
             ",", "0.1", ",", "0.5", ",", "0.01", ",", 
            RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "z", ",", "0.6", ",", "\"\<overall mole fraction benzene\>\""}], 
             "}"}], ",", "0.05", ",", "0.95", ",", "0.01", ",", 
            RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "temp", ",", "55", ",", "\"\<temperature (\[Degree]C)\>\""}], 
             "}"}], ",", "40", ",", "59", ",", "1", ",", 
            RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}]}], 
        "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.6859847935017414`*^9, 3.685984851268081*^9}, {
   3.6859848958621826`*^9, 3.68598498054436*^9}, {3.6859850152644453`*^9, 
   3.685985320823121*^9}, {3.6859853550811877`*^9, 3.685985411286357*^9}, {
   3.685985786290412*^9, 3.6859858040804725`*^9}, {3.6859858395965796`*^9, 
   3.685985862960617*^9}, {3.685985919411723*^9, 3.685985957015829*^9}, {
   3.685986003320916*^9, 3.6859860700500827`*^9}, {3.6859861023641644`*^9, 
   3.685986126610219*^9}, {3.685986180509341*^9, 3.685986198123384*^9}, {
   3.685986228157433*^9, 3.685986254436474*^9}, {3.6859862937276196`*^9, 
   3.6859862958276224`*^9}, {3.6859863498777237`*^9, 3.6859864949020176`*^9}, 
   3.6859865825892353`*^9, {3.685986807874965*^9, 3.6859870336634293`*^9}, {
   3.6859870771465282`*^9, 3.685987134854638*^9}, {3.68598716921274*^9, 
   3.6859871746517487`*^9}, {3.6859872079218163`*^9, 
   3.6859872378248787`*^9}, {3.685987269080928*^9, 3.6859873390930986`*^9}, {
   3.685987433042266*^9, 3.685987443743283*^9}, {3.685987519542535*^9, 
   3.685987521333604*^9}, 3.689613132381448*^9, 3.689613200690688*^9, {
   3.689613292768856*^9, 3.689613309225049*^9}, {3.689613782687429*^9, 
   3.689613800170417*^9}, {3.753492658982369*^9, 3.753492664834678*^9}, {
   3.7534927465397854`*^9, 3.7534927625983543`*^9}, {3.753492840414929*^9, 
   3.7534928457707872`*^9}, {3.75349307036895*^9, 3.7534931598584075`*^9}, {
   3.7534931899346285`*^9, 3.7534932832817793`*^9}, {3.753493338114671*^9, 
   3.753493381198681*^9}, {3.7534934146890516`*^9, 3.7534935081816535`*^9}, {
   3.7534935412996387`*^9, 3.753493560310858*^9}, {3.753493600384115*^9, 
   3.753493718273311*^9}, {3.7534937640077715`*^9, 3.7534938383696995`*^9}, {
   3.753493871613823*^9, 3.753494220284878*^9}, {3.753494358667751*^9, 
   3.753494410236473*^9}, {3.7534944428502855`*^9, 3.7534944458349895`*^9}, {
   3.7534944927956233`*^9, 3.7534944974354224`*^9}, {3.7534945277859735`*^9, 
   3.7534945284535656`*^9}, {3.7534947952580423`*^9, 3.753495127661327*^9}, {
   3.753495190883879*^9, 3.7534951925243673`*^9}, {3.7534952603661575`*^9, 
   3.753495312380399*^9}, {3.7537353051286507`*^9, 3.7537353259946437`*^9}, 
   3.7537354206700077`*^9, {3.7537356559233932`*^9, 3.7537356603820343`*^9}, {
   3.753735719126155*^9, 3.753735762878009*^9}, {3.7537357968431997`*^9, 
   3.7537358071756015`*^9}, 3.753735948156996*^9, {3.7537359888541555`*^9, 
   3.753735988999288*^9}, {3.7537360821413*^9, 3.7537360974591565`*^9}, {
   3.7537361697180853`*^9, 3.753736299991957*^9}, {3.7537363597732058`*^9, 
   3.7537363639149747`*^9}, {3.753736405444869*^9, 3.7537364439520655`*^9}, {
   3.7537364998076982`*^9, 3.753736563959697*^9}, {3.7537365998265047`*^9, 
   3.753736744516341*^9}, {3.753736816001665*^9, 3.753736932430525*^9}, {
   3.7537369820007596`*^9, 3.7537371078442287`*^9}, {3.7537372769567223`*^9, 
   3.753737308890564*^9}, {3.753737424078681*^9, 3.7537375498103456`*^9}, {
   3.7537376165835514`*^9, 3.7537376404046764`*^9}, {3.753737704019164*^9, 
   3.75373774724544*^9}, {3.753737799219653*^9, 3.7537378743447456`*^9}, {
   3.7537379067618446`*^9, 3.753737929509284*^9}, {3.7537379768384914`*^9, 
   3.753738035235484*^9}, {3.753738196378255*^9, 3.753738199671251*^9}, {
   3.753738285348736*^9, 3.753738332597183*^9}, {3.753738376520146*^9, 
   3.7537386850293665`*^9}, {3.75373879184489*^9, 3.7537389371513076`*^9}, {
   3.753738979192765*^9, 3.753738979332893*^9}, {3.7537390197912164`*^9, 
   3.7537390277937155`*^9}, {3.753739100364977*^9, 3.75373910507244*^9}, {
   3.7537395739172354`*^9, 3.7537395849239273`*^9}, {3.7537397566783075`*^9, 
   3.753739762041169*^9}, {3.7537398647546344`*^9, 3.753739932540886*^9}, {
   3.753740125972743*^9, 3.7537401261929426`*^9}, {3.7537402031273437`*^9, 
   3.753740229789653*^9}, {3.7537403080763206`*^9, 3.7537403810236444`*^9}, {
   3.7537404393042874`*^9, 3.7537404749019203`*^9}, {3.7537405586332927`*^9, 
   3.753740598353636*^9}, {3.7537406328942413`*^9, 3.753740687888096*^9}, {
   3.7537407203911676`*^9, 3.753740762499503*^9}, {3.7537408244483194`*^9, 
   3.7537408728976464`*^9}, {3.7537409254235554`*^9, 3.753740958127287*^9}, {
   3.753741023080632*^9, 3.7537410691076746`*^9}, {3.753741166464259*^9, 
   3.7537411695540714`*^9}, {3.753741246321255*^9, 3.753741257535787*^9}, {
   3.7537413035967236`*^9, 3.7537413755853357`*^9}, {3.75374141474116*^9, 
   3.753741428839652*^9}, {3.7537415100769*^9, 3.7537416136821833`*^9}, {
   3.7537416478064404`*^9, 3.753741690972781*^9}, {3.753741860386422*^9, 
   3.753741874376151*^9}, 3.75374193633389*^9, {3.753742021843067*^9, 
   3.753742022601757*^9}, {3.7537420857893715`*^9, 3.753742086161711*^9}, {
   3.7537422972868342`*^9, 3.753742301964813*^9}, {3.7537423710069494`*^9, 
   3.753742380435521*^9}, {3.753742417265458*^9, 3.7537424279267144`*^9}, {
   3.753742495478177*^9, 3.753742519765191*^9}, {3.7537425603403654`*^9, 
   3.7537425902723403`*^9}, 3.7537427099772553`*^9, {3.753742832601823*^9, 
   3.7537428335596952`*^9}, {3.7537429122615056`*^9, 3.7537429136988144`*^9}, 
   3.753742952551648*^9, {3.7537430051359053`*^9, 3.753743087077042*^9}, {
   3.7537431240225086`*^9, 3.75374315698801*^9}, {3.753743196469084*^9, 
   3.7537431974079385`*^9}, {3.7537433278208017`*^9, 3.753743429289131*^9}, {
   3.753743498052944*^9, 3.753743499057859*^9}, {3.7537435618272285`*^9, 
   3.7537436126064425`*^9}, {3.753743784240782*^9, 3.7537438046040206`*^9}, 
   3.753743865289752*^9, {3.753743956789567*^9, 3.7537439587513523`*^9}, {
   3.753743994502359*^9, 3.753744025406168*^9}, {3.753744056886283*^9, 
   3.7537440723368044`*^9}, {3.753744105026231*^9, 3.7537441419885263`*^9}, {
   3.7537442203483105`*^9, 3.7537442366332407`*^9}, {3.753744394354048*^9, 
   3.7537444246405926`*^9}, {3.7537445422301683`*^9, 3.753744582654909*^9}, {
   3.7537446750114985`*^9, 3.753744735393283*^9}, {3.7537447897383404`*^9, 
   3.7537449639425917`*^9}, {3.7537452314241476`*^9, 3.753745236912141*^9}, {
   3.7537453006325507`*^9, 3.7537453007766805`*^9}, {3.753745712097252*^9, 
   3.7537457706681213`*^9}, {3.7537458063100376`*^9, 
   3.7537458468448324`*^9}, {3.753745877131966*^9, 3.7537458899870305`*^9}, {
   3.753745944876487*^9, 3.7537459710163345`*^9}, {3.7537460191599255`*^9, 
   3.753746064273543*^9}, {3.7537460957867327`*^9, 3.753746097517308*^9}, {
   3.753746509278056*^9, 3.75374664817705*^9}, {3.753746684714366*^9, 
   3.753746815201708*^9}, {3.7537468716134963`*^9, 3.7537468815533247`*^9}, {
   3.753747071531962*^9, 3.7537472627361794`*^9}, {3.75374730683127*^9, 
   3.753747308730998*^9}, {3.753747506725993*^9, 3.753747525253707*^9}, {
   3.7537475683592873`*^9, 3.753747639571999*^9}, {3.753747719466318*^9, 
   3.7537477594626894`*^9}, {3.75374779620461*^9, 3.7537478083550854`*^9}, {
   3.753747895207*^9, 3.753747937542548*^9}, {3.753747970248555*^9, 
   3.753748022258852*^9}, {3.753748076285992*^9, 3.753748193066098*^9}, {
   3.7537929373353558`*^9, 3.753792938297374*^9}, {3.7537930296741543`*^9, 
   3.753793036416375*^9}, {3.753793081737817*^9, 3.753793083577765*^9}, {
   3.753793172232771*^9, 3.753793216987213*^9}, {3.7537932524550343`*^9, 
   3.753793296855884*^9}, {3.753793351943671*^9, 3.7537934740633173`*^9}, {
   3.7537935209123573`*^9, 3.753793524553129*^9}, {3.753793578057644*^9, 
   3.753793600691367*^9}, {3.753801224712729*^9, 3.75380129661674*^9}, {
   3.753801349621285*^9, 3.753801373218397*^9}, {3.7538014671980753`*^9, 
   3.753801507976124*^9}, {3.753801566256096*^9, 3.753801592104556*^9}, {
   3.753801657526257*^9, 3.753801849380481*^9}, {3.753801881407859*^9, 
   3.753801934640177*^9}, {3.753801976558613*^9, 3.753801991068372*^9}, {
   3.753802046160325*^9, 3.753802085308591*^9}, {3.753802117921712*^9, 
   3.7538021201711493`*^9}, {3.753802158832284*^9, 3.753802232019038*^9}, {
   3.753802267762542*^9, 3.753802281299203*^9}, {3.753802330223701*^9, 
   3.753802397175168*^9}, {3.7541512458419447`*^9, 3.75415124917493*^9}, {
   3.756053533274231*^9, 3.756053587827536*^9}, {3.756053620912998*^9, 
   3.756053662074727*^9}, {3.7560536981624813`*^9, 3.756053699065113*^9}, {
   3.756474095029101*^9, 3.756474235342297*^9}, {3.756474269241744*^9, 
   3.756474287809483*^9}, {3.756474318462534*^9, 3.7564743214404593`*^9}, {
   3.756474520463687*^9, 3.756474520644395*^9}, {3.756474551663413*^9, 
   3.756474552791594*^9}, 3.756494300836383*^9, {3.756746950637774*^9, 
   3.756747092273303*^9}, {3.756747125402239*^9, 3.756747164207258*^9}, {
   3.756747207224038*^9, 3.756747214124733*^9}, {3.7567472792400312`*^9, 
   3.7567472946614523`*^9}, {3.7567473513611183`*^9, 
   3.7567474775444307`*^9}, {3.757258365311552*^9, 3.757258373712242*^9}, {
   3.757258606322057*^9, 3.757258608202435*^9}, {3.757258914477488*^9, 
   3.757258984834004*^9}, {3.7572662038339567`*^9, 3.757266238551766*^9}, {
   3.7592553003249216`*^9, 3.7592553044356456`*^9}, {3.759255390698661*^9, 
   3.759255427995491*^9}, {3.7592554976708884`*^9, 3.7592555473136873`*^9}, 
   3.7592555773891945`*^9, {3.759255620770033*^9, 3.7592557609948854`*^9}, {
   3.7592558085337777`*^9, 3.7592558113179693`*^9}, {3.759255841444228*^9, 
   3.759255868709814*^9}, {3.7592559701706753`*^9, 3.759256054258503*^9}, {
   3.7592560928956985`*^9, 3.7592561636037984`*^9}, {3.759256300895333*^9, 
   3.759256304207912*^9}},
 CellLabel->"In[17]:=",
 CellID->175806228,ExpressionUUID->"140d83d8-99c1-44a8-9fe2-8a45cba662e1"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`fob$$ = 3, $CellContext`P$$ = 
    0.27, $CellContext`temp$$ = 55, $CellContext`z$$ = 0.6, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`fob$$], 3, ""}, {
      1 -> Style["P\[Hyphen]x\[Hyphen]y", Italic], 2 -> 
       Row[{" fugacity versus ", 
          Style["P ", Italic]}], 3 -> " both "}}, {{
       Hold[$CellContext`P$$], 0.35, "pressure (bar)"}, 0.1, 0.5, 0.01}, {{
       Hold[$CellContext`z$$], 0.6, "overall mole fraction benzene"}, 0.05, 
      0.95, 0.01}, {{
       Hold[$CellContext`temp$$], 55, "temperature (\[Degree]C)"}, 40, 59, 
      1}, {
      Hold[
       Grid[{{
          Manipulate`Place[1], 
          Manipulate`Place[2]}, {
          Manipulate`Place[3], 
          Manipulate`Place[4]}}, Alignment -> Left]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    600., {197., 203.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`fob$83709$$ = 
    False, $CellContext`P$83710$$ = 0, $CellContext`z$83711$$ = 
    0, $CellContext`temp$83712$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`fob$$ = 3, $CellContext`P$$ = 
        0.35, $CellContext`temp$$ = 55, $CellContext`z$$ = 0.6}, 
      "ControllerVariables" :> {
        Hold[$CellContext`fob$$, $CellContext`fob$83709$$, False], 
        Hold[$CellContext`P$$, $CellContext`P$83710$$, 0], 
        Hold[$CellContext`z$$, $CellContext`z$83711$$, 0], 
        Hold[$CellContext`temp$$, $CellContext`temp$83712$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`Px$, $CellContext`Py$, $CellContext`PsatB$, \
$CellContext`PsatT$, $CellContext`PxyPlot$, $CellContext`fugPlot$, \
$CellContext`sol$, $CellContext`solL$, $CellContext`solV$, $CellContext`fT$, \
$CellContext`fB$, $CellContext`f$, $CellContext`L$, $CellContext`V$, \
$CellContext`label$, $CellContext`fBen$, $CellContext`fTol$}, 
        SetOptions[Plot, LabelStyle -> {Black, 17, FontFamily -> "Arial"}]; 
        Off[
          MessageName[Solve, "ratnz"]]; $CellContext`PsatB$[
           Pattern[$CellContext`T, 
            Blank[]]] := 
         0.00133322368 
          10^(6.87987 - 1196.76/($CellContext`T + 
            219.161)); $CellContext`PsatT$[
           Pattern[$CellContext`T, 
            Blank[]]] := 
         0.00133322368 
          10^(6.95087 - 1342.31/($CellContext`T + 219.187)); $CellContext`Px$[
          
           Pattern[$CellContext`x$, 
            
            Blank[]]] := $CellContext`x$ \
$CellContext`PsatB$[$CellContext`temp$$] + (
            1 - $CellContext`x$) $CellContext`PsatT$[$CellContext`temp$$]; \
$CellContext`Py$[
           Pattern[$CellContext`x$, 
            
            Blank[]]] := \
($CellContext`x$/$CellContext`PsatB$[$CellContext`temp$$] + (
             1 - $CellContext`x$)/$CellContext`PsatT$[$CellContext`temp$$])^(-\
1); $CellContext`sol$ = 
         Solve[{($CellContext`solVap/$CellContext`PsatB$[$CellContext`temp$$] + \
(1 - $CellContext`solVap)/$CellContext`PsatT$[$CellContext`temp$$])^(-1) == \
(($CellContext`z$$ - $CellContext`solLiq)/($CellContext`solVap - \
$CellContext`solLiq)) $CellContext`P$$ + (($CellContext`solVap - \
$CellContext`z$$)/($CellContext`solVap - $CellContext`solLiq)) \
$CellContext`PsatB$[$CellContext`temp$$] $CellContext`solLiq + \
(($CellContext`solVap - $CellContext`z$$)/($CellContext`solVap - \
$CellContext`solLiq)) $CellContext`PsatT$[$CellContext`temp$$] (
               1 - $CellContext`solLiq), $CellContext`solLiq \
$CellContext`PsatB$[$CellContext`temp$$] + (
               1 - $CellContext`solLiq) \
$CellContext`PsatT$[$CellContext`temp$$] == (($CellContext`z$$ - \
$CellContext`solLiq)/($CellContext`solVap - $CellContext`solLiq)) \
$CellContext`P$$ + (($CellContext`solVap - \
$CellContext`z$$)/($CellContext`solVap - $CellContext`solLiq)) \
$CellContext`PsatB$[$CellContext`temp$$] $CellContext`solLiq + \
(($CellContext`solVap - $CellContext`z$$)/($CellContext`solVap - \
$CellContext`solLiq)) $CellContext`PsatT$[$CellContext`temp$$] (
               1 - $CellContext`solLiq)}, {$CellContext`solVap, \
$CellContext`solLiq}]; $CellContext`solL$ = ReplaceAll[$CellContext`solLiq, 
           Part[$CellContext`sol$, 1]]; $CellContext`solV$ = 
         ReplaceAll[$CellContext`solVap, 
           
           Part[$CellContext`sol$, 
            1]]; $CellContext`V$ = ($CellContext`z$$ - \
$CellContext`solL$)/($CellContext`solV$ - $CellContext`solL$); \
$CellContext`L$ = ($CellContext`solV$ - $CellContext`z$$)/($CellContext`solV$ - \
$CellContext`solL$); $CellContext`fB$[
           Pattern[$CellContext`z$, 
            Blank[]], 
           Pattern[$CellContext`P$, 
            Blank[]]] := 
         Piecewise[{{$CellContext`z$ $CellContext`P$, $CellContext`P$ < \
$CellContext`Py$[$CellContext`z$]}, {$CellContext`V$ $CellContext`solV$ \
$CellContext`P$ + $CellContext`L$ $CellContext`PsatB$[$CellContext`temp$$] \
$CellContext`solL$, $CellContext`Py$[$CellContext`z$] <= $CellContext`P$ <= \
$CellContext`Px$[$CellContext`z$]}, {$CellContext`PsatB$[$CellContext`temp$$] \
$CellContext`z$, $CellContext`P$ > $CellContext`Px$[$CellContext`z$]}}]; \
$CellContext`fT$[
           Pattern[$CellContext`z$, 
            Blank[]], 
           Pattern[$CellContext`P$, 
            Blank[]]] := 
         Piecewise[{{(
              1 - $CellContext`z$) $CellContext`P$, $CellContext`P$ < \
$CellContext`Py$[$CellContext`z$]}, {$CellContext`V$ (
               1 - $CellContext`solV$) $CellContext`P$ + $CellContext`L$ \
$CellContext`PsatT$[$CellContext`temp$$] (
               1 - $CellContext`solL$), $CellContext`Py$[$CellContext`z$] <= \
$CellContext`P$ <= $CellContext`Px$[$CellContext`z$]}, \
{$CellContext`PsatT$[$CellContext`temp$$] (
              1 - $CellContext`z$), $CellContext`P$ > \
$CellContext`Px$[$CellContext`z$]}}]; $CellContext`f$[
           Pattern[$CellContext`z$, 
            Blank[]], 
           Pattern[$CellContext`P$, 
            
            Blank[]]] := $CellContext`fB$[$CellContext`z$, $CellContext`P$] + \
$CellContext`fT$[$CellContext`z$, $CellContext`P$]; $CellContext`label$ = Text[
           Framed[
            Style[#, 18, FontFamily -> "Arial", #2], Background -> White, 
            FrameStyle -> None, FrameMargins -> 
            Tiny], #3]& ; $CellContext`PxyPlot$ = Plot[{
            $CellContext`Px$[$CellContext`x], 
            $CellContext`Py$[$CellContext`x]}, {$CellContext`x, 0, 1}, 
           PlotRange -> {{0, 1}, {0, 0.5}}, PlotStyle -> {Orange, Red}, Frame -> 
           True, FrameLabel -> {"mole fraction benzene", "pressure (bar)"}, 
           PlotLabel -> If[$CellContext`fob$$ == 3, "", 
             Row[{"fugacity of benzene = ", 
               Round[
                $CellContext`fB$[$CellContext`z$$, $CellContext`P$$], 0.01], 
               " bar    fugacity of toluene = ", 
               Round[
                $CellContext`fT$[$CellContext`z$$, $CellContext`P$$], 0.01], 
               " bar"}]], AspectRatio -> Full, Epilog -> {
             $CellContext`label$["liquid", Orange, {0.22, 0.42}], 
             $CellContext`label$["vapor", Red, {0.76, 0.1}], 
             PointSize[
              If[$CellContext`fob$$ == 3, 0.02, 0.01]], 
             
             If[$CellContext`Py$[$CellContext`z$$] <= $CellContext`P$$ <= \
$CellContext`Px$[$CellContext`z$$], {
               Point[{$CellContext`z$$, 
                 $CellContext`f$[$CellContext`z$$, $CellContext`P$$]}], 
               Point[{$CellContext`solL$, 
                 $CellContext`f$[$CellContext`z$$, $CellContext`P$$]}], 
               Point[{$CellContext`solV$, 
                 $CellContext`f$[$CellContext`z$$, $CellContext`P$$]}], 
               Orange, Dashed, 
               
               Line[{{$CellContext`z$$, $CellContext`P$$}, \
{$CellContext`solL$, 
                  $CellContext`f$[$CellContext`z$$, $CellContext`P$$]}}], 
               Line[{{$CellContext`solL$, 
                  $CellContext`f$[$CellContext`z$$, $CellContext`P$$]}, \
{$CellContext`solL$, 0}}], Red, 
               
               Line[{{$CellContext`z$$, $CellContext`P$$}, \
{$CellContext`solV$, 
                  $CellContext`f$[$CellContext`z$$, $CellContext`P$$]}}], 
               Line[{{$CellContext`solV$, 
                  $CellContext`f$[$CellContext`z$$, $CellContext`P$$]}, \
{$CellContext`solV$, 0}}]}], 
             Point[{$CellContext`z$$, $CellContext`P$$}]}]; $CellContext`fBen$[
           Pattern[$CellContext`p$, 
            Blank[]]] := 
         Piecewise[{{$CellContext`z$$ $CellContext`p$, $CellContext`p$ <= \
$CellContext`Py$[$CellContext`z$$]}, {$CellContext`z$$ \
$CellContext`Py$[$CellContext`z$$] (($CellContext`Px$[$CellContext`z$$] - \
$CellContext`p$)/($CellContext`Px$[$CellContext`z$$] - \
$CellContext`Py$[$CellContext`z$$])) + (
               1 - ($CellContext`Px$[$CellContext`z$$] - \
$CellContext`p$)/($CellContext`Px$[$CellContext`z$$] - \
$CellContext`Py$[$CellContext`z$$])) $CellContext`z$$ \
$CellContext`PsatB$[$CellContext`temp$$], $CellContext`Py$[$CellContext`z$$] < \
$CellContext`p$ < $CellContext`Px$[$CellContext`z$$]}, \
{$CellContext`PsatB$[$CellContext`temp$$] $CellContext`z$$, $CellContext`p$ >= \
$CellContext`Px$[$CellContext`z$$]}}]; $CellContext`fTol$[
           Pattern[$CellContext`p$, 
            Blank[]]] := 
         Piecewise[{{(
              1 - $CellContext`z$$) $CellContext`p$, $CellContext`p$ < \
$CellContext`Py$[$CellContext`z$$]}, {(
               1 - $CellContext`z$$) $CellContext`Py$[$CellContext`z$$] \
(($CellContext`Px$[$CellContext`z$$] - \
$CellContext`p$)/($CellContext`Px$[$CellContext`z$$] - \
$CellContext`Py$[$CellContext`z$$])) + (
               1 - ($CellContext`Px$[$CellContext`z$$] - \
$CellContext`p$)/($CellContext`Px$[$CellContext`z$$] - \
$CellContext`Py$[$CellContext`z$$])) (
               1 - $CellContext`z$$) \
$CellContext`PsatT$[$CellContext`temp$$], $CellContext`Py$[$CellContext`z$$] <= \
$CellContext`p$ <= $CellContext`Px$[$CellContext`z$$]}, \
{$CellContext`PsatT$[$CellContext`temp$$] (
              1 - $CellContext`z$$), $CellContext`p$ > \
$CellContext`Px$[$CellContext`z$$]}}]; $CellContext`fugPlot$ = Plot[{
            $CellContext`fBen$[$CellContext`p], 
            $CellContext`fTol$[$CellContext`p]}, {$CellContext`p, 0.1, 3}, 
           PlotRange -> {{0.1, 0.5}, {0, 0.5}}, PlotStyle -> {Green, Blue}, 
           Frame -> True, FrameLabel -> {"pressure (bar)", "fugacity (bar)"}, 
           PlotLabel -> If[$CellContext`fob$$ == 3, "", 
             Style[
              Row[{"fugacity of benzene = ", 
                Round[
                 $CellContext`fB$[$CellContext`z$$, $CellContext`P$$], 0.01], 
                " bar    fugacity of toluene = ", 
                Round[
                 $CellContext`fT$[$CellContext`z$$, $CellContext`P$$], 0.01], 
                " bar"}], 17]], AspectRatio -> Full, Epilog -> {
             $CellContext`label$["toluene", Blue, {0.4, 
               $CellContext`fTol$[0.4]}], 
             $CellContext`label$["benzene", Green, {0.2, 
               $CellContext`fBen$[0.2]}], 
             PointSize[
              If[$CellContext`fob$$ == 3, 0.02, 0.01]], 
             Point[{$CellContext`P$$, 
               $CellContext`fT$[$CellContext`z$$, $CellContext`P$$]}], 
             Point[{$CellContext`P$$, 
               $CellContext`fB$[$CellContext`z$$, $CellContext`P$$]}]}]; 
        Switch[$CellContext`fob$$, 1, 
          Show[$CellContext`PxyPlot$, ImageSize -> {600, 400}], 2, 
          Show[$CellContext`fugPlot$, ImageSize -> {600, 400}], 3, 
          Show[
           
           GraphicsRow[{$CellContext`PxyPlot$, $CellContext`fugPlot$}, 
            Spacings -> 0, ImageSize -> {600, 400}, AspectRatio -> Full]]]], 
      "Specifications" :> {{{$CellContext`fob$$, 3, ""}, {
         1 -> Style["P\[Hyphen]x\[Hyphen]y", Italic], 2 -> 
          Row[{" fugacity versus ", 
             Style["P ", Italic]}], 3 -> " both "}, ControlType -> Setter, 
         ControlPlacement -> 1}, {{$CellContext`P$$, 0.35, "pressure (bar)"}, 
         0.1, 0.5, 0.01, Appearance -> "Labeled", ImageSize -> Small, 
         ControlPlacement -> 
         2}, {{$CellContext`z$$, 0.6, "overall mole fraction benzene"}, 0.05, 
         0.95, 0.01, Appearance -> "Labeled", ImageSize -> Small, 
         ControlPlacement -> 
         3}, {{$CellContext`temp$$, 55, "temperature (\[Degree]C)"}, 40, 59, 
         1, Appearance -> "Labeled", ImageSize -> Small, ControlPlacement -> 
         4}, 
        Grid[{{
           Manipulate`Place[1], 
           Manipulate`Place[2]}, {
           Manipulate`Place[3], 
           Manipulate`Place[4]}}, Alignment -> Left]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{35.919000000000004`, {6., 9.256}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({
       TagSet[$CellContext`x, 
        MessageName[$CellContext`x, "shdw"], 
        "Symbol `1` appears in multiple contexts `2`; definitions in context \
`3` may shadow or be shadowed by other definitions."], 
       Attributes[PlotRange] = {ReadProtected}}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.7537460346290016`*^9, 3.753746065577618*^9, 3.7537461197422886`*^9, 
   3.7537463800259995`*^9, 3.7537464324875093`*^9, 3.753747271314597*^9, 
   3.7537473099340925`*^9, 3.7537476476473455`*^9, {3.7537477404291115`*^9, 
   3.753747760453591*^9}, {3.753747805481471*^9, 3.7537478094020395`*^9}, {
   3.753747921868266*^9, 3.7537479387786727`*^9}, {3.753747982497946*^9, 
   3.753747994091486*^9}, 3.7537480289521728`*^9, 3.753748083313386*^9, 
   3.7537481994086356`*^9, 3.753793050731633*^9, {3.753793203056786*^9, 
   3.753793217629744*^9}, 3.753793301422928*^9, 3.753793425261587*^9, 
   3.7537934748710546`*^9, 3.753793531235112*^9, {3.753793585288416*^9, 
   3.753793601563356*^9}, 3.7538012413766317`*^9, {3.7538012918273983`*^9, 
   3.753801297378933*^9}, 3.753801375481739*^9, 3.7538015095885077`*^9, {
   3.753801572207588*^9, 3.7538015930731373`*^9}, {3.753801692262005*^9, 
   3.753801740336355*^9}, {3.753801771827333*^9, 3.7538018505389433`*^9}, 
   3.7538019144647293`*^9, 3.7538019488839912`*^9, 3.753801991716281*^9, {
   3.753802055114455*^9, 3.753802086282495*^9}, 3.753802121017992*^9, {
   3.753802162248506*^9, 3.753802233606887*^9}, 3.753802282990985*^9, 
   3.7538023997091017`*^9, 3.754151252709258*^9, 3.7560535913745947`*^9, {
   3.7560536467297573`*^9, 3.756053662962339*^9}, 3.75605370024017*^9, {
   3.7564742164611998`*^9, 3.7564742360019503`*^9}, 3.7564742887181883`*^9, 
   3.756474347835552*^9, 3.756474522756145*^9, 3.756474553753335*^9, 
   3.7564943018901663`*^9, 3.756746990238996*^9, {3.756747041312022*^9, 
   3.756747093980891*^9}, {3.7567471567695827`*^9, 3.756747164723795*^9}, {
   3.756747207988315*^9, 3.756747214641245*^9}, 3.756747295859789*^9, {
   3.7567473936527967`*^9, 3.756747409908053*^9}, 3.756747447984933*^9, 
   3.756747478556809*^9, 3.75725837465793*^9, 3.75725860913136*^9, {
   3.7572589198565493`*^9, 3.757258986225869*^9}, 3.7572662409901114`*^9, 
   3.759254942765978*^9, 3.7592553058970604`*^9, 3.759255761733241*^9, 
   3.7592558122377415`*^9, {3.7592558451038637`*^9, 3.7592558849735417`*^9}, {
   3.7592560295539055`*^9, 3.7592560554910994`*^9}, {3.7592561106007757`*^9, 
   3.7592561649882507`*^9}, 3.7592563053320613`*^9},
 CellLabel->"Out[17]=",
 CellID->348379819,ExpressionUUID->"d8e17931-6711-415d-896f-e08abe1b17bb"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Snapshots",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SnapshotGroup", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "To create snapshots, click 'Add Snapshot' in the toolbar at least \
three times, and adjust the controls of each copy to show a range of \
interesting settings. Optional captions for the screenshots may be included \
in the Details section.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSnapshotGroup"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "5ceeaa2e-bc41-41df-b0b1-768df9ed8cb0"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SnapshotGroup"},
 DefaultNewCellStyle->"Text",
 CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
 CellID->98938448,ExpressionUUID->"db0abe4d-a7e5-4637-ab84-847b0b7858e8"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
5yZNmliznHzyyfqkWM+ee+65GZGo5iS/FcDvHAnFToeVsipLKNbbf/PNN7t3
737fffclfMFK4aeffrrpppuGDx/u9IJ4UOlC8Wefffbwww/n5+eXZfiUpGoX
LFhAKAa8YePGjRqZd+jQwXyckxGKZfTo0ZmZmaNGjYpdTMuQl5e3cuXK5fv9
5AnLli3LyclR5Jk7d24Zb1iv2VWJqlKFqtbpd5aOrJ1HO5J2p2j91H/i89+g
YvfwRx55RB+c5s2b9+/f/4orrihXrlyzZs1i3LswKyurZs2alSpV6tWr19tv
v33DDTdo9rp1627atMkUeOaZZ7oUde2116rMiSeeWOzCACiLNAzFtWvXtn85
dtxxx91+++3qDlKSY+JSllDcrVs3vSk1m6eeemrCF6wUBg8erOVp2rSpeagN
NHbs2FmzZjm7VOmg7Pth6ULxXXfdpZf78ccfSz122r1799SpUxcvXpzYagPB
ULx69eoCQjHgcvoIawB/zDHHWOdLJykUiwb/1apVmzdvXowyijDLi3I6YCWG
0qta3ezs7JkzZ8Z5G6ZoNLsqUVWqkFAcUcgutGHDhog7WwJD8bfffqvhXIMG
DTSyNVPuuecefY6UlKPN8vjjj6vAsGHDrCmdOnXSlBhfHD377LMq8MILL8Re
GABllG6hWD2yPvv169e/Nej888+vWLGippx00knmFvbpoCyhuFatWjVq1FCP
lvClKh2NiPr27TtmzBjzUP2I1nb79u2dXSrHJWQ/dCoUb9y4UTVceumlia1W
5s+fv2rVqgJCMbyiR48eTZs2XbRo0fXXX6/G+cgjj7zjjjvs8c0UmDx5shqB
KlWqPPXUU9ZTw4cPv/zyy6tXr37yySf37t075Ne477zzTuvWratWrargee21
16rNt57Sh6hz584aSOvZli1bDho0yHpq6tSperm33nrLmpKfn68p9957bxmX
J8Tnn38eMsw2oXjKlCm33XZbnTp1Dj/88Jtuuumbb76xz/XJJ5+cffbZhxxy
iJ698MILv/rqK+sptZlasP79+ysONGzYUA2m9dTmzZsVHNStxFge+zFi74Xi
JUuWzJgxo4z3rNfsqkRVEYqjCdmFzF1CwoXn3237hT8VY6ct3J9whw4dak1Z
u3atPtcxjuref//9bdq0sY4Liz7vquTJJ5+MWF5Djtq1ax9xxBH6HMVeGABl
lG6h+N1331Xj8OCDD1pT1MJooKKJ//3vf8sScxKo1KE4NzdXb+Siiy5KxlIl
BKHYSMh+SCgG0twVV1xhzgOpVq1ahw4d9If5Nkyfd3sBjUhr1qx57rnnDh48
2Ex/++23NV0JVHP94Q9/0N9t27YtCN6/XgYOHKgpisNKmkqvmZmZ1phWPaCm
61kF2FtuueWoo46yh1M1L3r49NNPW0u4YcMGTfnTn/5UluUJd/3115vWzJpi
QvGxxx5buXJlBV4lXD087LDDTGcnw4YN05QaNWroJU477TT9rZIzZ840z86a
NUtTlKb1Zps1a6Z3bX+5448/vnz58jGuKeT5UPztt9+WPRSrEkJxDKkPxeYg
b3Z2tn2iPh0HHXTQjh07Ys9rufvuu1XJiBEjIj77t7/9Tc8OGDAgztoAlFq6
heL77rvPNA72iQ899JAmqmWInUH+/e9/N2nSpE+fPtaUQYMGaYoanNgzvvHG
Gyo2ceJE+0QNQjQqWLx4cbSwU1jCUPzwww+bsUrVqlVPOOGESy65RBMnTZqk
v//xj39YxfLy8jTFvsxaY3rvrVu31ghEizR8+PDHHntMZaxl00jj9ttv16hD
7XDz5s179uyp0Zf9pdWN9ujRQ0/ppVu1atW/f3/7U6pKFervJ598UpVYS3jd
dddpol5Of7/++uv2Cu+55x5NnDNnTvjbNOW1Su0Tu3XrpomKVNaLakNryqGH
HnrllVd+9NFHVsnvv/9e0zUm/Mtf/mION5jp6u/U+5hjK+pxNOa0ZolnHWrE
qDeueY8++uirr7566dKlEbaQTVn2Q0tZQvGMGTM0RtXQV4NMjZxnz55tL6Mt
/sADD5x88slmDPzqq6/u3bvXPPXss882btxYNRx88MEamnbu3Nle7TfffKPN
qjo1FNf6LOn9QQjF8BiTMZWCreOqaio15eabb7YXUHNtnR5ZGLx+lJomNSYr
VqwwU2699VYVe+6558zD008/XRlwzZo15uEzzzxz6qmnTpgwoXD/IVrryK+G
7m3atLnhhhvMwzhDcUmXJ9zhhx+uAvbUYEJxrVq1rBTcr18/TVELYx7edttt
el9qos1DBXk9q77DPDShWH3QmDFjwl9O7bye/fDDD6Mtj+dPn1aTXvbTp1UJ
p0/HUIrTp8cElToUt2zZMjMzs6Dot09XXXWV9nb7tbNi+O677ypUqKDRjv0T
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
qn3llVfMjBUqVGgc3dNPP52k9wUAQDzoBwEALkUoTpQRI0ZYPf5DDz1kf2rd
unXNmjUzT9WuXXvnzp3xV3vzzTebGc8999xELzIAAAlDPwgAcClCcaKccsop
ptdu3Lhx+Llh2dnZ5cqVMwXee++9+Ktt0aKFmevBBx9M6PICAJBI9IMAAJci
FCfExo0bra/HX3rppYhlOnToYAq0atUqzmp37txZoUIFM9cHH3yQuOUFACCR
6AcBAO5FKE6IL774whoMzJ8/P2KZAQMGmAKZmZlajfFUO3fuXKvastzMAgCA
pKIfBAC4F6E4IR577DHrMiDRrqs5btw4q2fXao+n2nfeeceUr169+t69e3/6
6afRo0c/88wzzz///NixY3NzcxP6JgAAKCX6QQCAexGKE6Jr166m127YsGG0
MkuWLLEGAyNHjoyn2h49epjytWrVuuaaazIzMzOKuuSSS9atW5e49wEAQGnQ
DwIA3ItQnBDXXXed6Z3btGkTrczmzZutTnzIkCHxVHvOOedkFOfQQw/917/+
lbi3AgBAidEPAgDci1CcEO3btzdd84UXXhitjFaO1YO/9tprxda5d+/e6tWr
2/v9gw8+WC/UtWvXs88+u1KlStb0qlWrLl++PKFvCACAEqAfBAC4F6E4Idq1
a2f65QsuuCBaGXXuVvf93HPPFVtnTk6OVb5cuXIDBw787bffrGcXLlzYsmVL
q4AWIFo93QEAjippn+JG9IMAgGhK2qekHqE4Iazzuy699NJoZXbv3m313dFu
V2G3fPnyu+66q3379k2bNv3www/DC2zfvv3oo4+26vz6668j1pOQ/TBRO3Na
1cPCJLWSRNWTVguTqHpYmKRWkqh60mph0h/9oBvrYWGSWkmi6kmrhUlUPSxM
UitJVD1ptTDJRihOiIsvvrjYb8jVd1sdd5y/pSrWqFGjrDpff/31iGU8+aHw
3ptiYZJaSbrVw8IktZJE1ZNWC5P+6AfdWA8Lk9RKElVPWi1MouphYZJaSaLq
SauFSTZCcUJ07NjR9MhnnHFGtDLr16+3Om514gl53a1bt1p13nnnnRHLePJD
4b03xcIktZJ0q4eFSWoliaonrRYm/dEPurEeFiaplSSqnrRamETVw8IktZJE
1ZNWC5NshOKEuPfee02PXK9evWhlZs2aZXXc48aNS9RL16lTx9R50UUXRSzg
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
M3bs2H379l27dm3Pnj0ffPCB/HxRiauray4/cy7Wod4e3qdlr6rfIP4mgG4d
Yx2Zo3rwgMaOJV9fjXbYzc30ZOkLF1iHCOCgWCXh2NjYUaNG+fn5vfLKK8rG
q1evBgQEqDrKLl26mI8vLDTUQYD8MJKxBbVQ6uhT9FQ8xbMOCsCOuEjCgjXF
586dk+tjUFCQsnHdunVKSZ07d675/lOnTpW3T5o0qYinXrZsmXKW4cOHm3/r
xo0b9erVk78lvT6RP+acJ6PRqPy+vWTJkmesPqH566+/Kmds2rRpTsfhYh3q
KmYXTatkNYb4fYwh1nbzJn3yCZUsqdEOe3lRaKjpDU0AyBnbJCzV5fPnz5tv
iY+PX7x4cUhISJs2bUJDQ5cvX26rc6EOAuTHbJptXk1X0krWEQHYFxdJWLCm
OC0tTR5P7Ovrq4yi6NOnj1I0r127puwsVVvlkdRSKS/iqRs1aiQfqlatWtb3
hkVHR8uBSRYtWpSfA544cUIJe8aMGZr7KP80d3d389vFzXGxDnWSlUE7RqvH
EE/0oVM2e00olOho6tuXPDw02mGpR5Y65Vu3WIcIwAHnScKogwB5iqXY0lRa
Kaiv0qusIwKwOy6SsGBNsUS5d2vIkCFS27tp0yalCj/33HPKblK9Vp6yJTl5
8mRRTnr37l3lUFOnTtXcp2PHjvIOzz//fH6OGRERoRzzVg7dx88//6zsc+TI
Ec19uFiHeoi/SvNesBpD/C+Kj2EdmePZu5defdU0Yti6Hfb1pS++oLg41iEC
cMNJkjDqIEB+SF2wUlOl7ljqkVlHBGB3XCRh8ZriWbNmKfXRy8urmBmpvMr7
jBs3zvxzT+3bty/iSc3v0D5+XHvw+uTJk+UdDAaD9GPM85gLFiyQB0/UqlUr
p31WrVqlnHev1Mho4WId2t3pFaZ3hNVjiEdhDLEFo9H0uOMXXtDohaWvChVo
yhTKx/QTADCnfxLOyMhILYhCPBHaGuogQJ5+pp/NK+tsms06IgA9cJGExWuK
pQjr169fzIrU+SrPnTZ/zIjUOO/bt6+IJ/3ss8/ko7m5ueX0XM3NmzcrJ5V+
7EU8o2z48OHyAV1cXHJ6gcHFOrSj9Ie0NsRqDHFFurKTdWSOJDWVIiOl/zC0
2+FnnqE5cyh/nwEEABX9k/Czzz5rXQRzJ5XCChUqtGzZcujQoQcOHCjESVEH
AXIXR3FP0VNKcW1BLYxkg99HATg+LpKweE2xJCEhoV27dublvkWLFomJicoO
wcHB8napOz5x4kTRz9i3b1/5gNWqVctpn7Nnzyrx2OTBJrdv3y5VqpR8wPr1
6+e0Gxfr0F5uHadvaluNIX4FY4izPXhAX31FTz2l3Q43bUorV1JWFusoATim
fxLW/M1wgYSGhkoFvUAnRR0EyF1f6qvUVw/yOEtnWUcEoBMukrCQTbHs6tWr
UVFRCxYsuH79uupbEydObNq06bhx4/Jz+1Z+dO/eXS7KL7zwQk77xMXFKS8G
IiMji37Snj17KgfM5enZXKxDuzgQoTGG+EAE67AcxvnzpmdHe3trt8Mvv0y7
dqn/yvEomlGVduY2DxRsQ/rPtmpV2rqVdRxgAzw2xZLevXsX6KSogwC52Ek7
zavsF/QF64gA9MNFEha4KdZThw4d5KLcrl27nPaRfjhK7Z41a1YRzxgeHq4c
rUmTJjndq0acrEMbe3iPlnWxGkNc2/TGMUh27qQuXbSfo+XuTu++S6dOaf/F
g9+afpIbw/QN1ykFB5sux5o1rOMAG9A/Cd+9e3fUqFFKjShfvvxnn30WFRW1
57HFixePGzfu6aefVnZ45ZVXpk+fLu3z4osvmvfFK1cWYFIM6iBATh7Ro2fo
GaXW1qW6aaT9pHQAIXGRhMVuih88eBAZGTlixIjXX3+9fv36/v7+MY9nqkZE
REjF9M8//7TViYKCguS63LZt25z2MRqNSvmeOHFiUU43ZcoU5VCenp6nT5/O
Zed+OShKAA7tyk7TR4ZVHfHavqYPFzu5tDSKiqJGjbTfGi5VioYNI6vbKiyg
KdYNmmIO5ZRs9c+3u3btcnV1lWvEmDFjNO+JSktLmzp1qsFgkPYpW7bslStX
5O3z5s3z8fGR/65U2vJ/UtRBgJyMpJFKuXUhl31U1EfZADgmx6mDhSBqU5yZ
mTl79mxfX99ili5cuED/3HAlvWb4+OOPbfLUzZYtW8rH79y5cy4hKWHkNK4i
T1K05r8bd3FxyXPaIxfr0DayMkwPlLYeQ3x6BevIWLt3j/7zH9PjozXb4cqV
6euvKSEh7+OgKdYNmmKB6J+EX3vtNblGDPx/9u4DPIpq/xt4GoQEQg0l0kIJ
xUiJgAJC9E/vQQQponIFCx25cEHRgBVRilwBQRSkiKCiiCJFAQuvNBEQKQIS
wVASeiCQhCS/d8bJnZ3Mzm5CMjNnztnv59nnPt7ZKWdnTs45X2Z3zogR3tdU
O5TevXurC/fs2aN2MefP5/cJDOgHAQzto31BFKR2usMJfSj4HC4aYSFD8ZUr
Vxo3buxnRAnFLVq0UJcMHDhQfSp1gXXq1CnPfyG/du2aetCC/ZYqLS2tf//+
2pHAhx9+mOdWXNRDE1xOoPdb6G8QS0t8fBriX3+lQYOoWDGPz9H6+GPKf/1H
KLYNQrFAbG6EL126VKRIEamPCAkJSU/P4yuaGRkZytyFd9xxh3Z5y5YtlY5m
9+7d+Twu+kEAd5mU2ZSaqv1uFaqSQimsCwVgNy4aYSFDsfbJG5IqVaqoXyRT
QrHu2dSFf9xH7969lV01k1KGB2fOnFGPuGrVbd+7lMY5999/v7qH4ODgTz75
JD8bclEPC+vASoNpiDdP8t1piKWcK1WPVq2Ms3BAAPXqRR4m9PQGodg2CMUC
sbkR/vXXX5VuokWLFvlZX+q2lPW1D6VUHyX95Zdf5vO46AcB3M2gGdoO+Cv6
inWJABjgohEWLxQvW7ZM7THbt2+vzLjUtWtXbSjOzMxcvHhx8eLFlYWRkZEZ
GRmFOejw4cOVXUVERHhaZ9euXWrBNmzYcFv7T0hIqF+/vrp52bJlf/rpp3xu
y0U9LLj067TmCf0N4hmVKWEr65Ixcv48vfYaVani8YfDo0fT/348eNsQim2D
UCwQmxvhvXv3Kj2FlymKtGrXrq2sf0DzhL2hQ4cqCz/77LN8Hhf9IIBOAiWE
UqjaBz9MD7MuEQAbXDTC4oXijh07Kj3mfffdp0ZdXShWSOVU7yB/9913hTno
3Llzlf34+/vfuHHDcJ1Vq1apvflff/2V/51LI5yKFSuq29aoUePw4cP535yL
elhAZ/fSO3X1iXhFD0q9wLpkLHj/pnTNmjRjRr5+OOwFQrFtEIoFYnMjfPny
ZaWzCAgIUJ4t6cXx48fVziU5OVldrvakUozN53HRDwLodKAOajdchsqco3Os
SwTABheNsGChOCsrS3lspjQYOH36tLrcMBRLBg4cqCxfsGBBYY67detWtbPe
vHmz4TqjRo1SVqhUqVL+9/z777+Hh4erO2/evLl23JIfXNTDgtj+tts0xMVo
5zusi2W7tDT5mdLNmxtnYenVrh2tXSv9bZhxrBT5N9q++W8ONktKIinOpPr8
I9OFYH8jrE631KRJE6lf9rRaWlra3XffrawZHR2tLpeidFBQkHtS9g79IIDW
Ulqq7YwX0SLWJQJghotGWLBQLHWd7v07eQ7FixcvVpZPmDChMMeVPnhYWJiy
q9GjR7uvkJmZWatWLWWFuLi4fO728uXLd9xxhzoS6Nmzp5fhjSdc1MPbk3qe
Puqqv0E8pz6d28+6ZPY6cYL+8x8KDzfOwsWL09ChdOgQ61IC+Dr7G2HtdEV3
3XXXGrevHGRnZ69evbphw4bqajNnzqR/nrv17rvvVq5cWVlYr169/B8U/SCA
6jydL0fl1C65DXl8+hyAL+CiERYsFO/evVvpNzt06KBd7ikUL1myRFk+VIoP
hTNgwABlV6GhoX/++afu3fnz56t9ujQUyec+hw0bpm7Vu3dvaURRgIJxUQ9v
w4nNND1Cn4jXPulD0xBnZdHXX1OXLvLzsqz7pjQAmMT+RjglJUXKs34aUs6N
jY3t1atX3759W7ZsGRERoX23UaNGV69eJc0/FCvy82BnLfSDAIpH6BG1Vw6h
kON0nHWJAFjiohEWLBRLIwF/f3+p66xWrZp2uadQPHbsWGX522+/XchD79ix
Qzm0MvzQ/txJGmaoP16uW7duluaLrBcvXmzatGmTf0ycOFG7QyngBwQEqIOB
L7/88luvLl++bFgwLuphvsjTED/nNg1xaTr4KeuS2SUpid54g2rUMM7C/v7U
saNp35QGAJMwaYRPnTqlfonau9q1a587l/NTx+eee05d3rp169t9BCX6QQDJ
elqv7Z7foDdYlwiAMS4aYcFCsUT9dpZ2IgnDUCwNA9SfKeX/IZZeqHNYKP9O
3qVLl5EjRzZr1kwdJEhDAt3zNv/++291E93XybQTT+THF198YVgqLuph3i6d
oIXN9TeIP7iPLt/Go1p4lZ1NmzfTww9T0aLGcbhsWRo7lo4dY11QADDAqhG+
cuXKmDFj1F8HuytbtuzUqVNTNT9dV6ZVKlas2NNPP53nHMeG0A+Cj7tO16tT
dbWHbkyNb5Gvzg4J8D9cNMLiheI+ffoonWNERIQagd1DcUpKSocOHZSFAQEB
0ucq/KGlIYQ6jYUh9wmRPQ0GMjMzg4ODMRjIceBjer2kfhriLS9SVkG+R8eT
5GR6802qXdvjQ7SaNqVFi8jDg14BwAnYNsLJycmLFi3q27dvixYtatSoUbNm
zfbt2w8fPnzu3LnKV6a19u7du3///lu3Cj6GRz8IPm4MjVE76UAK/IV+YV0i
APa4aITFC8UHDhxQu9GQkJA33njj8OHDnTt3VpZIofjSpUsfffSR+iARyYgR
I0wsgDT8qFq1qq6nlkYjhjejz549q/77ee/evdXlZ86cua2RgOTrr782LA8X
9dAjj9MQf8+6ZFZSbg337evx1nBIiDz7Ur6nSgEAhvhuhAsE/SD4pp20M4AC
1N763/Rv1iUCcAQuGmHxQrFk5syZnnrM0qVL65ZERUWlWjDvSXJy8vr165cv
X75x48Y8Z4q0FBf10NiZXw2mIf44jm5cZF0yy5w7J98ajoryeGu4Xj2pftNF
cc8AgHA4boQLB/0g+JQMymhADdQOuwbVSCWfeQQogFdcNMJChuLs7Gzp5Kv/
8uxF9erVpTPAtrRW46IeGtj+Nr1c1G0a4jmsi2WNzEz66ivq2ZOCgoyzcHAw
DRhA37O+P75vKc2KpC3xjIvhC6Q/28hI2rSJdTnABLw2wgLBJQAbvEqvanvu
TYQGHCAHF42wkKFYsWvXrubNm3uKw8WKFYuPj7/hAz/G5KIe5nI9mZZ3cZuG
+E469xvrklng+HF6/nm64w6Pt4br1pXnV7pwgXVB/7Fzjnwt1g1nXQ4fEBcn
X3236WWBR/Y3wt27d691+/744w+by2kb/vpB4M0f9EcxKqZ23o/T46xLBOAg
XDTCAodi+ueW8fbt2z/88MNJkyY9/PDDbdu2HTx48LRp07744ovExETWpbMJ
F/XQ5c/vjKYhfooyxPrnixs3aNkyeuABeR4lT7eG+/dnf2tYB6HYNgjFArG/
Eb7rrrvy/ztc1Z49e2wup2046weBN9mUfT/dr3bh5an8BXLGP2UDOAMXjbB4
ofjq1auXLl1iWACn4aIeyrJu0bcTaYq/2zTEn7Eumal27qRnnqFSpTzeGo6O
ln817JBbwzoIxbZBKBYIQjFz3PSDwKcFtEDbka+gFaxLBOAsXDTC4oXi4cOH
Fy1a9KGHHlq3bh3DYjgHF/WQLv1J791jMA3xlZOsS2aS06dp2jSqX99jFg4L
oyefpB07WBfUK4Ri2yAUC8T+RnjevHmTPHjuuedGjhzZv3//mjVrqnH49ddf
3717d0ZGhs3ltA0f/SDw6QydKUWl1O68C3VhXSIAx+GiERYsFKenp4eEhCi9
fMOGDVkVw1E4qIe/rTCahjhehGmIb96klSupUycKDPQYh++7jxYvJjNmyrYc
QrFtEIoF4thGeMGCBYGBgVJ3Wbx48Z07d7IujoUcewmAU4mJifHx8bGxsdHR
0eViy/nF+/klyj16CSpxkkT5x3wA83DRCAsWig8ePKj+0/eECRNYFcNRHF0P
06/RF4PcpiGuQn/9wLpkhbZjh/w16dKlPWbhihVp/Hg6coR1QW8HQrFtEIoF
4uRG+Msvv1R6zCpVqrAui4WcfAmAO9u2bYuJiYn6R0RUhF+Un/yK8fPb5jeb
ZrMuHYATcdEICxaKjx49qobiWbNmsSqGozi3Hp7ZQ/+t4zYNcU++pyE+cYJe
ftnbRMNFitCDD0ojUbp1i3VZbx9CsW0QigXi3Eb4H/Xr11c6TakDZV0Wqzj8
EgBHEhMTGzdurCTimlE1A6MCc0JxlF9oTOipxFOsCwjgRFw0woKFYkndunWV
/r1169bZ2dkMS+IQTqyH0nX5eabBNMS75rEuWUFdukQLFlCrVh6fJi29YmJo
9mw6f551WQshLYUuJ1CqIx8CJpikJEqQTnUq63KACZzYCGuMGjVK6TQXLVrE
uixWcfglAI7Ex8dH/U/JqJJqIpZe1aKqSe+yLiCAE3HRCIsXitesWRMcHKx0
8Q888IDA//SdT46rh/I0xJ31N4jnRlPSAdYlu33p6fTFF9SrlzyDkqcsXKEC
Pfss7d/PuqwAwIbjGuHchg0bpvSYI0eOZF0Wqzj8EgBHYmNjlURcJaqKNhGX
iSojLZTeZV1AACfiohEWLxRv37594sSJ2mkmSpYs2aRJk759+z7j2dmzZxmW
2VJP5ca4NMc30VuV9In4q6c5m4Y4O5t++kn+yXDZsh6zsBSTpbC8di2XX5MG
gEJ4yg3rEnlTvXp1pa+cPn0667JYhaPLAQ4XHR0thd9aUbWKRBVRE7H039IS
abn0LusCAjgCX/2gQrxQjPkZdZxSDzMzaNN/9NMQv1GGDq1mXbLbsX8/TZhA
1ap5zML+/vKXqOfPJ0yWDQD/cEoj7Ob8+fOPPPKI2g9+//33rEtkFcdeAuCO
cqe4TFQZ7W3iKlFVlNvHuFMMYIiLRhihGKHYDhePG0xDvKg1XeHkkRQnTtBr
r1F0tMcsLL3q1JEfsSWtCQCgYX8jPHPmzGc9Gzly5NNPP927d+/w8HC1EwwO
Dk5JSbG5nLZxRD8IQoiPj68WVU2biEtGlVR/ZYzfFAMY4qIRFi8UP/roo81u
3/HjxxmW2VLs6+H+5fR6WK44/FIgbZ3MwTTE587RO+9QixbesnB4OI0YIU/A
BABgxP5GuAD/OPzuu+/aXEg7se8HQRSnEk+FxoSqiTgwKrBmVE0lEcfExCQm
JrIuIIATcdEIixeKQYdlPZSnIX5cf4N4ZlX660dmRcqPCxfovfeoTRsKDPSY
hUNDqV8/+uoryshgXVwAcDTnh+LHH3/c5hLajIvxGHBhNs322/bPrMT/hOKI
qAg1EW/bto116QAciotGGKFYeMzq4elf6L9R+kS88kG64dQf2165QosXU6dO
FBTkbZbhrl1p+XK6fp11cQGAD5Y2wllZWe4LH3744bu8atCgQZMmTdq2bTtm
zBhfGMlzMR4D5ztJJ0tQCXk0kOjnF+9XLrZcdHR0bGxsfHw87hEDeMFFI4xQ
LDwG9VCehniGfhriV0NotyO/nnftGn30EfXoQUWLent8VuvW9O678k1kX7Zv
Kc2KpC34zZT1pD/byEjatIl1OcAEljbCXbt2rVKlSqdOnXbt2mXdUXjHxXgM
nK8LdVFHBqWo1Bk6w7pEAHzgohEWOxQfO3Zs5syZXbp0adiwYcWKFcuXL3/X
XXe1b9/+lVde+f3331mXziZ218PrSbSsk9s0xHdRksNOeEqKnIV79qRixbz9
ZDgmhqZNo5MnWRfXGXbOka/muuGsy+ED4uLk6rdmDetygAksbYQbNWqkfAX6
m2++URcOGTIkNja2X79+1h2XL1yMx8DhVtAK7fhgAS1gXSIAbnDRCIsaiv/6
66++fft6/xVVu3btjh49yrqklrO1Hh7fSG9V1Cfir4fSrZv2lcG7K1do2TL5
vnBwsLcsHB1Nr7xCPlA9bg9CsW0QigViaSOsPkH6q6++UhcqvymuXLmydcfl
CxfjMXCyi3SxAlVQRwmxFJtN2awLBcANLhphIUPx/v37tTNNeFGsWLF169ax
La3VbKqH8jTE492mIS5Lhz634+h5unyZliyhbt28fUdamVbpxRfJZ75FcNsQ
im2DUCwQSxvhChUqKN3Z8OGuP0yEYh0uxmPgZI/T4+pYIZiCj9AR1iUC4AkX
jbB4ofj8+fPly5fXJt969ep17tz56aefHjp0aPfu3Rs1ahQQEKC+W6JEiX37
9jEssNXsqIfyNMTN3KYhjmU/DXFyMi1cSJ0755GFa9akCRNo717GpXU+hGLb
IBQLxNJGuHHjxkpfFhoaOm7cuCVLlqxevbpSpUrSkrCwsNW347q4zw/kYjwG
jvUtfasdNLxKr7IuEQBnuGiExQvFL7zwghp4/+///u+HH35wX+fQoUP9+/f3
9/dXVmvbtq395bSN5fVw/zKjaYinsJyG+NQpmj2b7r/f25xK0qt2bZo4kfbs
YVZO7iAU2wahWCCWNsLPP/98fr4WlR97xG0MuRiPgTOlUmpNqqkOHRpQgwzC
VIwAt4eLRli8UKx+cbpXr17Z2d5+8fHaa6+pgwGBbxZbWA/Tr9Hnj7pNQ1yN
Tv5k1RG9O3qU3niDmjWTHxbt/TvSzz+P+8IFgVBsG4RigVg6GDh//nzLli0R
ir3jYjwGzjSOxqkDiAAK2Ek7WZcIgD9cNMKCheKkpCSlcy9fvnx+vgnWpk0b
Zf25c+faUDwmrKqHp3fT7Nr6RLzqIbunIc7Opt27adIk+dFYXoKw9KpXT/69
8P79thZPMAjFtkEoFojVg4H09PSRI0dWrFgxMDCwMKEY/zgMoLOH9gRSoDqS
GE2jWZcIgEtcNMKCheJdu3YpnXuvXr3ys/6MGTOU9Z999lmry8aK+fVQyqH/
7y16uYjbNMTzTT6QFxkZ8hSuw4ZRlSp5ZOGYGPk50gcP2lc2gaWl0OUESvXt
yZrtkZRECdKpTmVdDjCBbYOB7Ozs1NRUqZuuV6+e1K9VqlTp+u2wp5BMcDEe
A6e5RbdiKEYdT1Sn6tfoGutCAXCJi0ZYsFB89uxZJeT27NkzP+svXLhQWf/F
F1+0umysmFwPr52jZR31N4jnNaBkW1JnSgqtWkX9+1OpUt6CsL8/tWxJ06fT
iRN2lAoAwDP7BwN4+rQOF+MxcJppNE07tviGvsl7GwAwwkUjLFgoltSsWVMa
DJQrV+7atbz/QW/QoEFKKN64caMNZWPCzHp4bIPRNMTDLJ+G+NQpmjuXOnXK
4yHSQUHUrh3Nm0dnzlhbHgCAfLN/MPDvf/+7Z8+ezzzzjM3HdSwuxmPgKMfp
eAiFqCOMATSAdYkAOMZFIyxeKH7ssceUnNutW7esrCwva27atEn5BVaRIkVS
UlJsK6HNzKmHmRm0cZzBNMSHvzBh54ays2nXLvlXwI0b5/EF6RIl6KGHaNky
umTvz5kBAPKBi8GA2HAJ4Ha1pbbqOKMclUumZNYlAuAYF42weKH4zJkzys1i
SYcOHXbv3u2+Tnp6+rx588qUKaOs9u6779pfTtuYUA8vHqMFTfU3iBffT1f/
NqOAud24QWvX0pNPUkREHlm4YkUaMoS+/prS0swvBgCASbgYDIgNlwBuyyJa
pB1wLKElrEsEwDcuGmHxQvGGDRteeukl7RM177///mHDhk2bNu2dd96Jj48f
NGhQ1apVtSsMMjJixAiGn8JEha2H+5bSayX00xB//xJle7sLf9tOnaL586lb
NwoJySMLR0XR+PEk1TGvXwMAAHAILgYDYsMlgPxLoqSyVFYddrSn9qxLBMA9
Lhph8UKx8oCRwitevDjDT2GigtfDtBRaPdBoGuJt5pQsM5O2baPnnqOGDfMI
woGB1KoVTZtGhw+bc2gAALtwMRgQGy4B5F9f6quOP0Ip9AThiZ0AhcVFI4xQ
jFBsLHEXza7lNg1xb7p5ubAFuniRPvqIBgygsmXzyMJhYdS7Ny1ZQhcwBxAA
8IqLwYDYcAkgn76ir7QDkek0nXWJAETARSMsXigeMmRIazN07dqV4acw0W3X
w+xs2vamwTTEvywoeCGkfe7eTS+/TC1ayLd9vWfh6tVpxAh5GuL09IIfEayw
bynNiqQt8azL4QOkP9vISPmvAPjHxWBAbLgEkB8plFKVqqrDkSbUJJMyWRcK
QARcNMLihWLQub16eO0cLe3gNg1xwwJOQ3zhAq1YQY8+ShUq5OsL0lOn0m+/
FeRAYI+dc+T6sG4463L4gLg4+e9izRrW5QATcDEYEBsuAeTHCBqhjkuCKGgv
7WVdIgBBcNEIIxQL76ncvK16bD29WUGfiKUEdFvTEGdlyVMpvfQSNW9OAQF5
ZOFy5eiRR+TgjNmUuIBQbBuEYp495YZ1iXwdLgfk6Wf6OYAC1AHKBJrAukQA
HOOxH0QoFl6+6mFmOm0Yq5+GeFo5OvJlfg9z+jQtXkz9+sk513sQll6NGtHz
z+MJ0vxBKLYNQrFAuBgMiA2XALxLp/RoilaHKbWp9g26wbpQAOLgohFGKBZe
3vXwwlFa0MRtGuIH6GpiHhumpdG339K4cdSgQd5BuFQp+alZH3wgx2fgFEKx
bRCKBcLFYEBsuATg3Uv0knbIsoW2sC4RgFC4aIQRioWXRz3ct8RgGuIfXvE2
DfHvv9OsWdS5M4WG5p2FGzeWJ1368Ue6dcv0jwZ2Qyi2DUKxQLgYDIgNlwC8
OEyHgylYHbg8QU+wLhGAaLhohBGKheexHqal0GcD9DeIZ1WnU0aX7+xZWraM
HnuMIiLyDsJlylCfPrRoEZ05Y+lHA7shFNsGoVggXAwGxIZLAJ5kU3YraqWO
YCpSxUuEh5wAmIyLRhihWHjG9TBxp8E0xJ/0yTUNcWoqrV9PY8fm69vRgYHy
dEtTptD27ZSJKQwEhVBsG4RigXAxGBAbLgF4Mo/maUczq2gV6xIBCIiLRhih
WHj6eihPQzzNbRriUNqzUH731i35+Vcvv0z3309Fi+adhatVoyFD6NNP6fJl
w6ODUNJS6HICpV5gXQ4fkJRECQnyP0wB/7gYDIgNlwAMJVJiSSqpjmm6U3fW
JQIQExeNMEKx8HLVw2tnaWl7g2mIv18j/0y4a1cKC8s7CJcoQd260ezZdPgw
u48FAMAHLgYDYsMlAENxFKcObsIo7G/6m3WJAMTERSOMUCw8Vz08+g29Wd6V
hUf5UXc/io2i8uXz9e3o5s3pxRflR2ZlZDD9QAAAPOFiMCA2XAJw9yl9qh3o
zKE5rEsEICwuGmGEYuHJ9VCehvhZeRriZ/3oQT9q7Eel8krByqt2bXrmGVq9
Gt+OBgAoGC4GA2LDJQCdy3S5ElVShzstqWU2ZbMuFICwuGiEEYqFJ9fDJyLp
bj8qm78gXKkSPfKI/OzokydZlx0AgHtcDAbEhksAOkNoiDruKUpFD9JB1iUC
EBkXjTBCsfDkephnEC5Zknr0kH8m/PvvrMsLACAULgYDYsMlAK2ttNWf/NUx
0GSazLpEAILjohFGKBaex1AcEkJt29Jrr2ESJQAA63AxGBAbLgGobtLNKIpS
B0N30p3plM66UACC46IRRigWXq5QXKQItWpF8fG0dSulpbEuGgCA+LgYDIgN
lwBU2idO+5P//yMMWQEsx0UjjFAsPLkeVg2gf3WhTZsw7SkUyr6lNCuStsSz
LocPkP5sIyPlv1ngHxeDAbHhEoDkD/qjHbXTfmduGA1jXSgAn8BFI4xQLDy5
Hp7HhMJghp1z5Mm81g1nXQ4fEBcnD9nWrGFdDjABF4MBseES+LibdPNFejGY
gtU4XI7KVaEqKZTCumgAPoGLRhihWHhc1EPgA0KxbRCKBYJGmDlcAl+2ntbX
olq656pIAXkLbWFdNABfwUUjjFAsPC7qIfABodg2CMUCQSPMHC6Bb0qkxN7U
2/1Jo+2o3VE6yrp0AD6Ei0YYoVh4XNRD4ANCsW0QigWCRpg5XAJfc4tuzaSZ
JaiELg5HUMTH9DHr0gH4HC4aYYRi4XFRD4EPCMW2QSgWCBph5nAJfMrP9HND
aqiLw4EUOIpGXaWrrEsH4Iu4aIQRioXHRT0EPiAU2wahWCBohJnDJfARF+ni
EBriT/66RHwP3fMr/cq6dAC+i4tGGKFYeFzUQ+ADQrFtEIoFgkaYOVwC4WVT
9iJaFE7hujhchsq8S+9mURbrAgL4NC4aYYRi4XFRD4EPaSl0OYFSL7Auhw9I
SqKEBEwsLgY0wszhEojtAB1oRa3cH6j1KD2aREmsSwcAfDTCCMXC46IeAgCI
Co0wc7gEorpO18fRuCAK0sXh+lT/e/qedekAIAcXjTBCsfCeyo11cQAABPeU
G9Yl8nW4HEL6nD6vSlV1cTiUQqfS1AzKYF06AJ/GYz+IUCw8LuohAICo0Agz
h0sAAMAQF40wQrHwuKiHAACiQiPMHC4BAABDXDTCCMXC46IeAgCICo0wc7gE
AAAMcdEIIxQLj4t6CAAgKjTCzOESAAAwxEUjjFAsPC7qIQCAqNAIM4dLAADA
EBeNMEKx8Lioh8CHfUtpViRtiWddDh8g/dlGRtKmTazLASZAI8wcLgEAAENc
NMIIxcLjoh4CH3bOoSl+tG4463L4gLg4eXaRNWtYlwNMgEaYOVwCAACGuGiE
EYqFx0U9BD4gFNsGoVggaISZwyUAAGCIi0YYoVh4XNRD4ANCsW0QigWCRpg5
XAIAAIa4aIQRioXHRT0EPiAU2wahWCBohJnDJQAAYIiLRhihWHhc1EPgA0Kx
bRCKBYJGmDnHXoK1tHYJLZFem2kz67IAAFjFsY2wFkKx8Lioh8AHhGLbIBQL
BI0wc469BCWppJ/8p+7XkBqyLgsAgFUc2whrIRQLj4t6CHxAKLYNQrFA0Agz
59hLgFAMAL7AsY2wFkKx8Lioh8CHtBS6nECpF1iXwwckJVGCdKpTWZcDTIBG
mDnHXgKEYgDwBY5thLUQioXHRT0EABAVGmHmHHsJEIoBwBc4thHWQigWHhf1
EABAVGiEmXPsJUAoBgBf4NhGWAuhWHhc1EMAAFGhEWbOsZcAoRgAfIFjG2Et
hGLhcVEPAQBEhUaYOcdeAl0ovkJX1tP6eIrvRb1G0ajltPwYHcvPfpIoaSNt
fJPeHEgD+1P/qTT1G/rmHJ3ztP5u2v0tfSu9ztJZ6f9mU/ZhOvwBfTCEhjxM
D79Cr6yjdcmU7L7hHtqjbJif107ayba0hTwuAJjFsY2wFkKx8LiohwAAokIj
zJxjL4E2FG+hLeWonPJ/ta8H6AEvwS2DMibSxAAKcN8wkAIn0aRbdMt9q7JU
VlnneXr+D/qjJtV03zyUQhfRIt2Glamy+5qeXiEUwra0hTwuAJjFsY2wFkKx
8LiohwAAokIjzJxjL4EaiqVXEAV5SpcRFPET/eS++WE6HEMx3pNpU2rqfrtZ
jZkdqWN5Ku9l89E0WrthYUKx/aUt5HEBwCyObYS1EIqFx0U9BAAQFRph5hx7
CbShWHkVoSLNqXkf6lOP6mmXl6JSl+iSdts0SqtBNbTrRFJkL+olvaT/0C5v
RI2yKEu7rRozdZs3o2ZSktXdSD1Fp9QNW1PrO+gO95cUlmtSzdJUWrttA2rA
trSFPC4AmMWxjbAWQrHwuKiHwId9S2lWJG2JZ10OHyD92UZG0qZNrMsBJkAj
zJxjL4EuFFen6vton/ru+/R+USqqvjuJJmm3fY1e096TnUEztJluAS3Qbvsu
vavdVhczG1Pjn+ln5S0pRc6jedp3dcf15Bpd096QLU/lT9AJ5qUtzHEBwCyO
bYS1EIqFx0U9BD7snENT/GjdcNbl8AFxcfIYbc0a1uUAE6ARZs6xl0AbisMp
3P1pUStppbpCCSpxns4ryxMpsTgVV99aQSvcd/4tfavd+WW6rL6ljZkVqMIV
uqLb9jl6Tl2hDbXJ84NkUmYX6qJuUoyKqbmVYWkLeVwAMItjG2EthGLhPZUb
6+IAzxCKbYNQzLOn3LAuka9z7OXQhuI36U33FbIpuwE1UNdZTsuV5TNpprqw
O3X3tP84ilNX+5w+V5drY+b79L77hifppPbObJ4f5Gl6Wl3fn/w/po+177Iq
bSGPCwAFxmM/iFAsPC7qIfABodg2CMUCQSPMnGMvgRqKwyjsBt0wXEeKgWpk
i6ecX68MpaHqwiW0xNP+F9EidbVpNE1dro2ZUqI03FZ98NeddKf3T/EGvaH9
AvMr9IpuBValLeRxAcAsjm2EtRCKhcdFPQQ+IBTbBqFYIGiEmXPsJVBDsZe7
sT/RT2pk60f9lIXtqJ26sCbVbE/tDV9VqIq62hAaou5TjZlSlsykTMPjlqEy
yjr1qJ6Xj7CSVvqTv3qUx+gx93VYlbaQxwUAszi2EdZCKBYeF/UQ+IBQbBuE
YoGgEWbOsZdADcVxFOdpHe13g5tQE2VhdaquvTmbn9f9dL+6TzVmSvvxdNxw
Cs8zFP9IPwZTsHqIWIpNp3T31ViVtpDHBQCzOLYR1kIoFh4X9RD4gFBsG4Ri
gaARZs6xl0ANxV2pq6d1LtNlNbI1pIbKQu0zk/P5uovuUvepxsz6VN/TcfMM
xUfoiPaLzVEUdZEuGq7JqrSFPC4AmMWxjbAWQrHwuKiHwAeEYtsgFAsEjTBz
jr0Eaih+kB70tM5BOqhGNvWGcjWqpi6cTJNfp9fzfGkfUVX4UJxESTWpploG
aYdH6ainXbEqbSGPCwBmcWwjrIVQLDwu6iHwIS2FLidQ6gXW5fABSUmUIJ3q
VNblABOgEWbOsZdADcWtqJWndb6hb9Rk92/6t7JQ+2vZX+iX2z1uIUPxDbpx
L92rFqAoFf2BfvByOFalLeRxAcAsjm2EtRCKhcdFPQQAEBUaYeYcewnUUFyM
il2lq4br/If+oya7eTRPWTiMhqkL/0v/9bT/3+n3F+iFV+nV5bR8P+1Xlxcm
FGdR1oP0oPYrx14e7My2tIU8LgCYxbGNsBZCsfC4qIcAAKJCI8ycYy+Bdp5i
wy/uJlNycSqurqPekJ1Ns9WFlajSFbpiuP8e1ENd7RF6RF1emFA8mkZrE7EU
J/P8mKxKW8jjAoBZHNsIayEUC4+LeggAICo0wsw59hJoQ3EYhe2gHdp3b9Gt
ATRAXUH7FevzdF77kKvH6DFpZd3Ol9Ny7WRJP9KP6lsFjplv09vaRCxFyGzK
zvNjsiptIY8LAGZxbCOshVAsPC7qIQCAqNAIM+fYS6ANxdKrNJVeRasu02Xp
rcN0+AF6QH1LCm67aJd223k0T7ttM2q2m3Yr0/hepasv0UtBFKS+G0Mx2m0L
FjPX0toAClD3WYpKbaSNX9PXq2n1Z/SZ4SuBEliVtvDHBQCzOLYR1kIoFh4X
9RAAQFRohJlz7CXQhWLlFUiBJaiEbuHj9LhuWynZ3U1361YLoZAqVEUb9Pz+
eTT07/S7dtuCxcyn6Wn30np/PUfPsSpt4Y8LAGZxbCOshVBsuuzs7JUrVw4d
OrRt27YxMTGDBw/+4IMPjhw5YuIhhgwZEh0d3a1bt/yszEU9BAAQlQ82wugH
80kNxffSvRWogmGu9Cf/CTTB/Xu/9M8UxoNokPdYWopK6b6VTSxCsf2lLfxx
AcAsjm2EtRCKzbVnzx5pAOBnZMyYMdI4ofCHkEYayg5r1qyZn/W5qIcAAKLy
tUYY/WD+RVCEEsrG0bijdLQ5NdfevpTisBQD19E67zv5mr5uQA109z2ll5S4
J9Gki3TRfRN1At9m1MzTbqtTdWWdJtREWTKWxt5uKH6VXmVV2sIfFwDM4thG
WAuh2ETHjh0rX7684UhAMWjQoMzMzMIcYsuWLSEhIWIMBoA/+5bSrEjaEs+6
HD5A+rONjKRNm1iXA0zgU40w+sFCuk7Xv6Pv5tG8b+lbT09LNpRO6b/Rbyto
xXyaL+Xow3Q4jdKsK2chsSotX2cJQBhcNMIIxWaRevl69eqp/X6/fv02btx4
8ODBhQsXSr22unzSpEkFPsSnn35avHhxdVfiDQbA6XbOoSl+tG4463L4gLg4
+SbGmjWsywEm8J1GGP0gAAC446IRRig2y4oVK9Ruevz48dq3Tp8+HR0drbwV
Hh6elnbb/yx57ty5hx56SPfv7RgMgN0Qim2DUCwQ32mE0Q8CAIA7LhphhGKz
NG7cWOmj69Sp4/7dsMOHDwcEBCgrLFmy5Lb2LK1ftmxZ9y+hYTAAdkMotg1C
sUB8pxFGPwgAAO64aIQRik2RnJys9tHTp083XKdjx47KCvfee2/+9/z2229r
BwBVqlRp1aoVBgPABkKxpQ4dom+/zXl16+YxFGdn03ff5az2u9sEIlISOXqU
1q6lN9+kJ56gBx+kxx+nZ5+l5cvp3Dnj4/7yS87eTp+W/+/167R5M738MvXu
Le/htdfoxx/zVf5jx2jVKpo8mfr1o4EDado0Wr+ezp71uP7OnTnHTU6mrCz5
KGPHygedMEH+gALxkUYY/SAAABjiohFGKDbF2rVr1f563759hutMmzZNWcHf
3186jfnc80svvaTuuWfPnhcvXpw0aRIGA8AGQrGl2rd3PRI1JsZjKN661bVa
q1au5VKunDuXqlTx+CDY0FCaMYPcn3FUrlzOClImXbeOQkIMtm3enHbv9lhy
KW5L8dnf32DDgAAaN45u3jTYSiqPss5LL8khWrfhww8X4BQ6k480wugHAQDA
EBeNMEKxKV544QWlgw4KCvL0XM0NGzao3bp02vO5Z2Uw0KJFi/Xr1ytLMBgA
ZhCKLfXee65IWL68x1AsxU91tbffzll465Z8fzY/c6R0767fYdmyOW9VqkRF
injcsHhx+a6uuw0bqGTJPA5avz7t2aPfUE3f4eEGm4waVcjT6Rw+0gijHwQA
AENcNMIIxaYYPHiw0kHXqFHD0zqHDh1SBwMrV67M555/+umnb3MPRDEYAGYQ
ii119arr5qnycg/FN264EmjRonT+fM7yjz/OtWGJEnL4HTKE+valRo30eVMX
RtRQrN28Vy/5Dm+HDhQYmOte899/59r2wgU5Smu3rVJFPnTnzjm5Xn3dcQel
pOTa1vCWtPpyD9Hc8pFGGP0gAAAY4qIRRig2RZ8+fZQOumXLlp7WuXTpkjoY
WLhwYYGPhcEAMJOWQpcTKPUC63KI69FHXalw0iRKTdWvoA2/Um5VNW+e64vH
V3JPb7pxI0VEuFZ48slc7+pCce3adOSI693166lUKde7Awbk2lY6lvpWcDC9
+67rrawsevFF+evT6grPPptrW10orlNH/v3ynDnyQ8batbvdM+dkPtIIox8E
AABDXDTCCMWm6NChg9JBt/M8lpNOjjoYmD17doGPhcEAgLC2bHGFxLvvNlih
SxfXCl99lbNw1y7XwqgoMpzsZsUK1zpt2+Z6SxuKpf9W7z6rvvvOtYK/v+vZ
WV9/nSvVfv+9wXEXL3atEBhIv/3meksbisuUyXnMl4h8pBFGPwgAAIa4aIQR
ik3Rtm1bpYNu06aNp3Wys7PVwcDUqVMLfKwCDAYMFbgAAGCV7GyqUcMVFQ8d
yvXuuXMUFOT6/e+tWznL16yhe+7JeV7WtGnGe5Yip7pb3Y08bSh+7TXjzVu3
dq3z/vs5CydMcC188EGPn6hJE9dqr7/ueksbiufN835iuOCpsfWR9hb9IACA
j+O6H0QoNoU6PUSXLl08rZOZmakOBjxNV5Ef+BdyAJG99JIrKj7/fK633n7b
9db48QbbpqRQRobB8osX6bPPXNtKCVpLDcXFi9O1a8al+uQTg29Q9+iRr58A
f/GFa7XHHnMt14bivXs9bs4/H2mE0Q8CAIAhLhphhGJTdOrUKc9/Ib927Rp+
SwUAefjrL9fcRpGR8p1W1d13u1LkwYMe93D+PP30k/y95YkT5d8d33mnfrKk
Zs1yra+G4kaNPO5TCq3q5g88kLMwKipnSUAApad73PbECde22tlptaHYUxgX
go80wugHGTpJJ+Mozv2JdZ2p85/0J+vSsZeZKf/jXMeOudpC6b/79qXjx1kX
DsAHcNEIIxSbonfv3koH3Uw32tQ4c+aMOhhYtWpVgY+FwQCA4Nq2dY3bpHir
kFKwYbRU3bghP+eqfn23cbHby1Mo7tHDY5EuXnRtXq+evERKweqDqStX9vZx
bt1yrVm6tGu5GoorVcrfeeGVjzTC6AeZyKCMaTStOBXX/Z1XoSqf0WesS8fe
6dM0ZYrcRHlqDosUoZEjKTmZdUEBhMZFI4xQbIrhw4crHXRERISndXbt2qUO
BjZs2FDgY2EwACC4jz5yjdiefjpn4cSJroXahzwrjh+X5zzyEoS1Uwl7CsXd
unksUlqaa3Nlwp3r112ptnz5PD5RiRI5awYHuxaqm8fE5O+88MpHGmH0g/b7
gX6IpmjdX3sQBY2lsddI5G9f5Ck7mzZtkh91oD6GwfsrLIxeecXgef8AYAou
GmGEYlPMnTtX6aD9/f1v3LhhuM6qVavUwcBff/1V4GNhMAAgOKkNUWdBkhJr
ero8vVHVqjlLihXTz7iUlES1aukHeUWLUuPG8m94p0+nrVvlnxvnGYrj4jwW
SQrd6ubKT5KlIkkJV1lSrpy3j6M9tPaeshqKDZ+zLRAfaYTRD9opmZIfp8fd
411Larmf9rMuHUsXLtBbb8kzy3nKv82by49kkFpH97ciImjBAvm71gBgLi4a
YYRiU2zdulXt6Ddv3my4zqhRo5QVKhXuu4IYDAAz+5bSrEjaEs+6HD5A+y3o
devohx9c/7d/f/3K8fG5BnaDBsmTNKnPplacOeNaoWnTXG+podjLHVspVqub
q9+y1hbSy4+CDxxwraY9BEKxWNAP2iObshfQgjJURhfpylG59+l96V3WBWRG
GnsOHOj6tzrdq0QJqRq4HumXnS3PU6d92L/6qldP/gEyAJiIi0YYodgU0gcP
CwtT+ujRo0e7r5CZmVmrVi1lhTgvt2PywZcHA8DYzjk0Rcpow1mXwwfExrqG
aEOG0IgRrv+7aZO3lXUPrFZJW6nr6EKo9unTunvQqsmTXZv/5z85C7VPn167
1uNn0T40W/tcYoRisaAftMFe2tucmutinD/5P0FPXKALrEvHRkqKPKVbgwYe
bw1Lb82dK6/mLj1dbp/Cww22uu8+8r3BLIBVuGiEEYrNMmDAAKWPDg0N/fNP
/cMe58+fr/4T+urVqwtzIJ8dDAB7CMW2kSKDOjgrV44qVMj576pV5e8t62hv
jRw7ZrA3aRPtDqUxopZ2nuIpUww2v3qVypRxrfPzzznLx41zLWzcONeDslWp
qVSxomu1d95xvYVQLBz0g9ZJoZQxNCaQAnXprQE12EbbWJeOjb175YcuqE8s
0L2kdnHgQNqWj3MjtXDPP5/rcfjqq2dPOnzY+k8CIDouGmGEYrPs2LHD399f
6aYrV658WNOMLl68ODAwUHmrbt26WZox7cWLF5s2bdrkHxMnTszPgXxwMABO
gVBsG22G1b5eeMFg5fLlXSu4f21VyqpDhuTaSe3auVbQhuLSpenIkVzvSu2V
NO5UV5BSuRp+jx/PlcffeEN/6MxMGjbMtUJAgPwtbhVCsXDQD1rkE/rkDrpD
1xyUoBLTafotupX39mK5eZOWLJF/Guzp1nCtWvTmm/LcdLfl9GkaPNj1pHz1
FRQkf+9a23QBwO3iohFGKDbR4MGD1X8GDw0N7dKly8iRI5s1a6YOEqQhge55
m3///be6ST6/TuZrgwFwEIRi2yihWEqRuvGZ4ZyaHTu6VqhRg/bsyVmeni7P
6PT44/qdhIfn2lwbiv3+eU71qlXyuJP+ib1duuR6d+XKXNtOmpTrXXXWTyny
HDhAbdrkeveZZ3Jti1AsIvSD5jpGxzpSR/fk14t6/U1/sy6d3f74g8aO1bdY
2vT64IO0caPxl1by6eBB6t7dYOfFi9OLLxp/BxsA8sRFI4xQbKL09PShQ4f6
ebZw4ULdJhgMAE8Qim2jhOJmzXINy2JjjVdetizXav7+1LChfB/F8OuAyuvk
SdfmhkPMIkXku8a6hdJgUSc1lapV068mxWr3bzRGR5PuicQIxSJCP2iWNEqb
QlOKUTHdH2cNqrGO1rEuna1u3aLPPpPnb5faNsP2rHJl+ZcfiYmmHfHHH43v
RJcvL/8EJCNDOlZifHx8bGxsdHS09L/SfyeaeHgA4XDRCCMUm27RokVVq1bV
DQNatGjx008/ua989uxZ9d/Pe/funZ/9T5kyRVm/bt26+Vmfi3oIfEAoto0S
ip97LteAbNEij+sPGOAx/yqvHj1yfQt66lTXttpQrE4F5f6SDpGWZnDo06f1
d5PdX507yxOl6CAUiwv9YCFtok1RFKX7QypKRZ+n52+Q8XRXQjp1Sr4/GxFh
3K5IGblDB/r8c6smUZKSeJ06Bse9445tkZExtWtHacXExGzLzw+YAXwSF40w
QrFFkpOT169fv3z58o0bNyYkJDAsCRf1EPiAUGwbJRRLYzL1EVslSnib9igr
ixYupEqV9KO3YsXk+8vffCOv8/33ruUPPeTaVg3F9evLz5Rp2VL/s7qGDeWb
0d598IH8Qz73GznNm8s//zP8OqP6U2hPd8BF4bONMPrBAjhNp/tSX/cI2Iba
HKEjeW8vBKk9kxqtHj0MfuGrvMLD5bmGDX9NYq5bt+RHW2sfFujnl+jn19jP
Lyo4OKpyZX0uxv1iAENcNMIIxcLjoh4CH9JS6HICpfroxB+2SkoiKUSkpt7e
VunpdOgQffWVPIz79FP5kVn5uYOiDcUKKX1v2iTPYrJmjfwTu/yTNtyxQw7I
778v74FpDnIONMLMcXEJMilzNs0uSSV1EbAiVVxOy1mXzibJyfIT+wynD1Ze
991Hy5cbf2nFOlLDNmWK+qOQeCkRq6/Q0Khq1Vy5OD4+3taSAXCCi0YYoVh4
XNRDAGDGPRSDqdAIM+f8S7CDdsRQjC4CBlDAMBp2hTzMHi6WH36g/v2paFHj
LFyypPwk+99+Y1nCpCTlafqx2lCsvMLCoiIj5VAcK/r3XgAKxvmNMCEU+wAu
6iEAMINQbDE0wsw5+RJcoktP09P+5K8Lgk2p6W7azbp0lrtyhf77X7rzTo+3
hhs3pgULvP12xGa1a0eXKKEPxdLL3z+qTJmoevWiWRcQwImc3AirEIqFx0U9
BABmEIothkaYOcdegiW0pDyV1wXBUlRqDs3Joqy8t+fZL7/IM6iHhhpn4WLF
5NnkduxgXUo3sbGxUVFRVatGhYQYROOgoNjp0+3+djeA8zm2EdZCKBYeF/UQ
AJhBKLYYGmHmHHgJDtLBWIp1j4MDaMA5Ose6dBZKTZWfOqCbbk77qlOHZs6k
S5dYF9SD+Ph49RfEERFRRYvqcnG89BGqV6elS+XHhQGAwoGNsDuEYuFxUQ8B
gBmEYouhEWbOUZcglVIn0IQiVEQXB+tS3c20mXXpLHToEI0aZTD/ufIqUoR6
96bNjj8BiYmJMTExai6uXTuqQoWowEAlEcf882zqnE/UqBFt2MC6uADO4KhG
2BOEYuFxUQ8BgBl1aqS77mJdFDGhEWbOOZfgS/qyOlXXJcIQCnmVXk2ndNal
s0RGBq1cSQ884PHWcLVq9MordPYs64Lm27Zt27S5WFKrVlREREzx4tvcP13b
trRnD+sSA7DmnEbYC4Ri4XFRDwGAmcREefIm6cXRqJQraISZc8Il+Iv+6kE9
3ENhF+pygk6wLp0lEhLoued0k/y6XgEB1LkzrV2br4njnCYxMTE+Pj42NjY6
Olr6X+m/pSUXLtCzzxo8QNvfX36w9gkxLzJAvjihEc4TQrHwuKiHwId9S2lW
JG3BPIzWk/5sIyPlqX6Bf2iEmWN7CTIoYypNDaVQXS6sSlVX02qGBbNIVpY8
WXqXLnLsNYzDFSrQxInCTmMufa5HHpGDsO5TS2F59Gg6f551+QBY4KIfRCgW
Hhf1EPiwcw5N8aN1w1mXwwfExcmjqDVrWJcDTIBGmDmGl+B7+v5OulOXC4Mo
aByNu07XWZXKImfP0quvyl+H9vRN6fvvp48/pnQxvyeey6+/Uvv2BmegZEl6
7TW6cYN1+QDsxUU/iFAsvKdyY10c4BlCsW0Qinn2lBvWJfJ1TC5HEiU9Ro+5
R8P76L7f6Dd7ymCbLVuoTx/5YVmGWbhUKRo5kg4eZF1K223aJM+z7H5C7riD
3n+fy++NA+QTj/0gQrHwuKiHwAeEYtsgFAsEjTBzNl+CLMqaT/PLUBldGAqn
8A/og2zKtrMwlrp0iWbNorp1Pd4abtpUTn+pqawLyk52Ni1bJv8axv3k3Hmn
/JNqAF/ART+IUCw8Luoh8AGh2DYIxQJBI8ycnZfgV/r1HrpHF4D8yX8IDblA
F2wrhtV27KBBgygkxDgLh4bS4MG0ezfrUjpGWhrNmOGa/k77at2atm9nXT4A
i3HRDyIUC4+Legh8QCi2DUKxQNAIM2fPJbhKV0fRqEAK1OWehtTw/5Eg46Lr
1+m99ygmxuOt4fr1afZsunKFdUEd6fJlmjDB+F8SHnqI/viDdfkALMNFP4hQ
LDwu6iHwAaHYNgjFAkEjzJwNl2AlrYygCF3WKUElZtCMW3TL6qPb4MABGj5c
fk6UYRYuWpT69aPvv2ddSh78/Tf9618Gj+YOCqKhQ+ncOdblA7AAF/0gQrHw
uKiHwAeEYtsgFAsEjTBzll6Co3S0PbV3T4oP0UOJlGjdce2RlkYffUStWnm8
NRwZSVOnUlIS64Ly5sAB6trV4HwWL06TJ9O1a6zLB2AqLvpBhGLhcVEPgQ9p
KXQ5gVLF+Vmcc0lDzIQEn348jUDQCDNn0SW4STcn0+RgCtYlm1pUaz2tt+KI
djp+nP7zHwoPN87CgYHUvTutWyfPSgwF9v33dM89Bqe3QgWaO5duifAVAwAZ
F/0gQrHwuKiHAACiQiPMnBWXYANtkMKvLs1IAflFelEKy6YfzjaZmfTFF9Sx
I/n7G8fhSpXohRfo5EnWBRXIJ59Q7doGpzoqij79lHXhAMzART+IUCw8Luoh
AICo0AgzZ+4lSKTEPtTHPS+2pbZ/EMcPSzp9mqZMoSpVPH5Tuk0bOaNlZLAu
qIikszpnjnyD2P2033sv/fAD6/IBFA4X/SBCsfC4qIcAAKJCI8ycWZcgkzJn
0awwCtMFl0pUaQWtMOUQ9svOpk2bqFcv+UFPhlm4TBl69lk8G9kO165RfLz8
s2L3q9CtG/3+O+vyARQUF/0gQrHwuKiHAACiQiPMnCmXYDttb0SNdGElgAJG
0IirdLXw+7ffhQv01lvGX9xV71F++CHduMG6oD7m7Fl65hmDf6MIDKQnnqBE
7h/eZoKjR2nfPvl1+jTrokD+cNEPIhQLj4t6CAAgKjTCzBXyElyki0/Sk/7k
r0uNzajZHtpjViHtJA3TBg6k4GDjLFyihHTGaO9e1qX0bUeOyLfv3a9OSAhN
nMjTTNDZ2bR0qRxjTVSpUs7ZeOghM3cL1uGiH0QoFh4X9RAAQFRohJkr8CXI
puzFtDicwnXRpDSVnkfzsoizJy+npNC8edSwocdbww0ayA89vsrlfW8x/fyz
8XxY5crRzJmUns66fHnZvz+n/OZOMIhQzB0u+kGEYuFxUQ8BAESFRpi5gl2C
A3SgNbV2z44DaWAScTYv77599PTT8i1gwywcHEyPPELbtrEuJXjw5ZdUv77B
hYuMpOXL5VuxzvTLL64vgSMU+zgu+kGEYuFxUQ+BD/uW0qxI2hLPuhw+QPqz
lYY7mzaxLgeYAI0wc7d7Ca7T9fE0PoiCdCmkPtXfSlutKaMlbt6kJUuoeXOP
t4Zr1aI336Tz51kXFPKSmUkLF9IddxhcxJgYh/YVW7a4CinlehMhFHOHi34Q
oVh4XNRD4MPOOTTFj9YNZ10OHxAXZ/6/rQMjaISZu61L8AV9UY2q6ZJHCIW8
Tq9nEDfTER09SmPHUtmyxlk4MJB69qSNG517kxEMpabSa69RyZIG17R9e8f9
DByhGFRc9IMIxcLjoh4CHxCKbYNQLBA0wszl8xIkUEI36uYeIqWF0lsWl9Ec
t27RZ59R27bk728chytXpsmT8QRjvp0/T6NHU9Gi+osrXfRHHqGEBNbl+x+E
YlBx0Q8iFAuPi3oIfEAotg1CsUDQCDOX5yVIp/TX6fUQCtGFyGpU7Qv6wp5C
FtKpU/TiixQRYZyFpbjUoQN9/rmcmkEMf/5J/foZ/OtHcLD8JYGLF1mW7cYN
Sk6mTz5xlWrRInmJ9EpLM1g/M5OOHZOD87Rp8gPEvv1WXtMLT6H48uWco1y/
7nFbdZ3UVG+HuHCBNm+WC/PWW/K3072X5+rVnH1m/O+7JFlZ8kPG5s+nqVPp
m2/o3Dlvmxf4uBzhoh9EKBYeF/UQ+IBQbBuEYoGgEWbO+yXYSlvrUT1djixC
RcbT+OvkeWztDNLYe/166tFD/ka0YRwuV47GjZMTBwjpl1+oTRuD616qFL3x
BrM5pkeN8vgz9ldfzbVmdraclytWNFizenWP95c9hWL1H4V69/ZYNvU3BQMH
Gq8gZdiaNQ3KIy3cuNF4k+jonHXeeUc+59Kew8L0mzdsSL//7rFUBTsuR7jo
BxGKhcdFPQQ+IBTbBqFYIGiEmfN0Cc7RuYE00H3k3ppa/05ex68OkJwsp54a
NTymj/vuo2XLjG/MgWDWr6dGjQzqQJUqcuTMsn3qsBEjPFbLl192rZaQQE2b
elxTeT3+uMGkzJ5CcX6+Vl26dM46Awbo35Ly7PDh3grj7y9/cf3mTf2Gd97p
+nStW3vcPDRUvnvursDH5QgX/SBCsfC4qIfAB4Ri2yAUCwSNMHPulyCLsubR
vNJUWjf8DKfwxbQ4mxz9/KkffqD+/Q1+Uqq8wsJo2DD67TfWpQR7Scl3yRKq
Vs2gStx1F339ta2FefttatYs17/YVK8uL5FeS5e6CqzLj9L6vXvLvZ/uIdv/
93/6/VsUirt3z3XcOnXkL6hLr6gofU7XUUOx+goIoNq15Q+ou2VcsaLB7NIF
Pi5HuOgHEYqFx0U9BD4gFNsGoVggaISZ012CX+gXaXiuiw7+5P8kPXmRmP4U
06srV+i//zUYfquvxo3l3zBeu8a6oMBOWpr8W9QyZQyqx/33086dthbG+4O2
pk/P9S85K1fmenfWLCpSxLXC8uW53rUiFK9f7zpcqVL0/vu53v30U9c03/7+
tGNHrnd1f5WtWsk/KFbcuiV/NO2vGz76yLTjcoSLfhChWHhc1EPgQ1oKXU6g
1Ausy+EDkpLkL5Z5fw4IcAKNMHPqJbhCV0bQiAAK0CWGRtRoO21nW0gvfvmF
hgyRv3tpmIWLFZNvIW13bvHBbpcu0fjxcsVwry19+tj3A3MvofjoUVfxpPB7
4IDB5t98k+sGq/ZL1KaH4owMqlfPlT2/+85gw717KSgoZ5177801nZk2FEdF
GdwLfvtt4xu+hTwuR7joBxGKhcdFPQQAEBUaYeaUS7CCVlSiSrqUEEZhs2hW
JmWyLqOB1FT5B6HNmnm8NVynjvyUWrbPGQbHOnVKzl8BAfpqI4XQ4cPlf3m1
mpdQPHeu661nnvG4h86djW8Wmx6Kv/jCdaAnn/S4rdSQqKvt2eNarg3FX31l
sOH1665gK30os47LES76QYRi4T2VG+viAAAI7ik3rEvk63SXQ80HfajPaTrN
unQGDh2Sn6ujjt51L2l03bu3fFOJ03tGYKfffssVLbWvwEA5IJv1cuclFGuf
xOVl1uyff3at9sILruWmh+KpU10H2rDB47br1rlW+/hj13I1FPv7e3y0XeXK
Oeu0bWvacVUmXkezXjz2gwjFwuOiHgIAiAqNMHPaIKy8alPtDeR5DMpIRob8
88MHHvB4a7hqVXrlFTpzhnVBgTdSPs3zOc+FfBke1FMoloKhsrxsWW/Fvn7d
tYc+fVzLTQ/FTzzhOtCQIfIsZoavgQNdq2kfo62GYqkAnqhfk77/ftOOq7L0
ypry4qIfRCgWHhf1EABAVGiEmdOG4mAKnkyTb5KzZjdJSKDnnzeerdXvnyfZ
du4sx4pMJ37LG/iQnS3/k0utWo4Ixept07vvzqPYFSrkrNmwoWuh6aHYyzxK
nl6PPuraXA3F99zj8bjqXMbaUFzI46oYpt18vrjoBxGKhcdFPQQAEBUaYebU
UNye2h+lo6yL45KVJf8CsWtXgx9+Ki8pEUycSCdOsC4oiCIjQ36Gufr7VhNf
7ryE4uLFc5a3apVHgdUbrNWquRaaHoqrV7/tz9uunWtzNRS7zx6lMgzFhTyu
innmzfPFRT+IUCw8LuohAICo0AgzJ12CCIpYSSvzXtUuZ8/Sq68azyqrvGJj
5R8Puj/GFqDwbtyQ07G5L3f5uVPcuHEeRS1VKmdN7T3lPEPxgw963GFwsEEo
1j7O7vXX8/XSziFV4FBcyOOqTL+apr+46AcRioXHRT0EABAVGmHmpEtwla6y
LkUOKSn06ZNrDlbtS4oAI0fSwYOsSwlQaF5CsfrD+dKlve3h8mXXHjp1ci3P
MxR37Wq8w5s3XTvUhuJHHnEtv3D7004WOBQX8rgc4aIfRCgWHhf1EPiwbynN
iqQt8azL4QOkP9vISNq0iXU5wARohJlzwiW4dIlmzaK6dT3eGm7ShN5/H5OT
gzi8hOInn3S9dfy4xz1IfaC62hNPuJZ7CsVVquQsl0K3oX37jEPxSy+5lnt5
CrT0V7xsmTyB8sGDuf5UCxyKC3lcjjihEc4TQrHwuKiHwIedc2iKH60bzroc
PiAuTu4j16xhXQ4wARph5thegp07adAgCgkxzsKhofJof/duhgUEsMTWra56
/vnnud566y3XW4ZPjlK0auVa7ZNPXMs9heLatXOWV60q/2Df3ZQpxqF45UrX
8tatPZbnhRdcq40d61pe4FBcyONyhIt+EKFYeFzUQ+ADQrFtEIoFgkaYOSaX
4Pp1eu89ionxeGu4fn2aPVv+giiAkHbscNX2RYtyvZWc7HrgVUCAPB+xO21g
DA3NdYfUUyiW8qa6ycyZ+h2uXStPzWwYim/cyPXMK+kv193Bg1SyZM4K/v50
5IjrrQKH4kIelyNc9IMIxcLjoh4CHxCKbYNQLBA0wszZfAkOHKDhw13jWN2r
aFHq25e+/97OEgEwIP0hqNVeioRbttCePXIcVvz3v653g4Np3jx50ihFZibF
x+d6JPvkybn27CkUS0FYm6M/+YRSUuTlp0/TwoXyEu1fojYUS1avdr0lZc8x
Y+QfIKu++871cDC/3D9wpkKE4kIelyNc9IMIxcLjoh4CHxCKbYNQLBA0wszZ
cwnS0uijj3J94VP3ioyUHx6blGRDWQDYu349151Z5TV4cM67UvJt2DDXW6VL
U5s28reIS5TItVz6m9LN0O0pFF+6pE++RYtSjRrGf4+6UCzp0CHXCsWLU4sW
1LOnK88qrypV6OTJXBsWJhQX5rgc4aIfRCgWHhf1EPiAUGwbhGKBoBFmzupL
8Oef9J//UHi48dg7IIC6d6d164x/5AggsMcf1/85SHFPdfEi9e/v8R+RlJe0
wrVr+t16mY94+XJ9Lta+Xn/d9Ywv91CcmkqjR8u3a72Up2JFOnxYv2EhQ3GB
j8sRLvpBhGLhcVEPgQ8IxbZBKBYIGmHmLLoEmZny32jHjh5Hs9LQfdIkjm/u
ABTSrVvyc+QqVHD9UZQvr19n9Wr59/XaL0v7/fNFYilgfvaZ8W6rVs1ZrV8/
g3cPHqSWLSkoyLW3wED51/2LF8vvDh+es3DQIOOd//ijPH1w0aL6P+fwcJo6
1SChSxo1ylmnQwePp0J9vED79qYdlyNc9IMIxcLjoh4CHxCKbYNQLBA0wsyZ
fglOn5bnUlHnf3F/tWkj/54xI8PcwwLw6tQp2rZN/k5FerrxCjduSJGEPvxQ
jq6bN1NiYmGPePMmbd8uP7pqwwa6evuzlEtx/tAh+a94wQJ5D0eP2vTnzOq4
VuOiH0QoFh4X9RD4kJZClxMoVegJ5h0iKYkSEnidjxByQyPMnFmXIDtbnji1
V69cN6G0rzJl6NlneX08LACARbjoBxGKhcdFPQQAEBUaYeYKfwkuXKDp012z
oLq/7r1XvsN144Yp5QUAEAoX/SBCsfC4qIcAAKJCI8xcYS6BNKJ59FF5yhjD
LFy8uLRz+vVXEwsLACAaLvpBhGLhcVEPAQBEhUaYuQJcgpQUeeJU3ZQx2tdd
d9HcuQX5rSIAgK/hoh9EKBYeF/UQAEBUaISZu61LsG8fPfOMfqZU9RUcTI88
Ij8yCAAA8omLfhChWHhc1EMAAFGhEWYuP5fg5k1askSeRNXTreFatejNN+n8
eRvKCwAgFC76QYRi4XFRDwEARIVGmDnvl+DoURo7lsqWNc7CgYHUsydt3Cg/
ehoAAAqAi34QoVh4XNRDAABRoRFmzvAS3LpFn31G7dqRv79xHK5cmSZPNmG+
VAAAH8dFP4hQLDwu6iHwYd9SmhVJW+JZl8MHSH+2kZHylKjAPzTCzOkuwalT
9OKLFBFhnIWljNy+PX3+uZyaAQCg8LjoBxGKhcdFPQQ+7JxDU/xo3XDW5fAB
cXHy6HzNGtblABOgEWZOuQTZ2bR+PfXoIX8j2jAOlytH48bRsWOsiwsAIBYu
+kGEYuE9lRvr4gDPEIptg1DMs6fcsC6Rr9NdDvc43LIlLVtGaWmsCwoAIAQe
+0GEYuFxUQ+BDwjFtkEoFggaYeYMg7D0CgujoUPpt99Ylw8AQGhc9IMIxcLj
oh4CHxCKbYNQLBA0wsy5h+LGjWn+fLp2jXXJAAB8ABf9IEKx8Lioh8AHhGLb
IBQLBI0wc2ooLlaMHnuMtm9nXSAAAF/CRT+IUCw8Luoh8AGh2DYIxQJBI8yc
dAnq1KEZM+jiRdZFAQDwPVz0gwjFwuOiHgIfEIptg1AsEDTCzEmXIDubdSEA
AHwVF/0gQrHwuKiHwIe0FLqcQKkXWJfDByQlUYJ0qlNZlwNMgEaYOVwCAACG
uGiEEYqFx0U9BAAQFRph5nAJAAAY4qIRRigWHhf1EABAVGiEmcMlAABgiItG
GKFYeFzUQwAAUaERZg6XAACAIS4aYYRi4XFRDwEARIVGmDlcAgAAhrhohBGK
hcdFPQQAEBUaYeZwCQAAGOKiEUYoFh4X9RAAQFRohJnDJQAAYIiLRhihWHhc
1EMAAFGhEWYOlwAAgCEuGmGEYuFxUQ+BD/uW0qxI2hLPuhw+QPqzjYykTZtY
lwNMgEaYOVwCAACGuGiEEYqFx0U9BD7snENT/GjdcNbl8AFxceTnR2vWsC4H
mACNMHO4BAAADHHRCCMUC4+Legh8QCi2DUKxQNAIM4dLAADAEBeNMEKx8Lio
h8AHhGLbIBQLBI0wc7gEAAAMcdEIIxQLj4t6CHxAKLYNQrFA0Agzh0sAAMAQ
F40wQrHwuKiHwAeEYtsgFAsEjTBzuAQAAAxx0QgjFAuPi3oIfEAotg1CsUDQ
CDOHSwAAwBAXjTBCsfC4qIfAB4Ri2yAUCwSNMHO4BAAADHHRCCMUC4+Legh8
SEuhywmUeoF1OXxAUhIlSKc6lXU5wARohJnDJQAAYIiLRhihWHhc1EMAAFGh
EWYOlwAAgCEuGmGEYuE9lRvr4gAACO4pN6xL5OtwOQAA7MRjP4hQLDwu6iEA
gKjQCDOHSwAAwBAXjTBCsfC4qIcAAKJCI8wcLgEAAENcNMIIxcLjoh4CAIgK
jTBzuAQAAAxx0QgjFAuPi3oIACAqNMLM4RIAADDERSOMUCw8LuohAICo0Agz
h0sAAMAQF40wQrHwuKiHwId9S2lWJG2JZ10OHyD92UZG0qZNrMsBJkAjzBwu
AQAAQ1w0wgjFwuOiHgIfds6hKX60bjjrcviAuDjy86M1a1iXA0yARpg5XAIA
AIa4aIQRioXHRT0EPiAU2wahWCBohJnDJQAAYIiLRhihWHhc1EPgA0KxbRCK
BYJGmDlcAgAAhrhohBGKhcdFPQQ+IBTbBqFYIGiEmcMlAABgiItGGKFYeFzU
Q+ADQrFtEIoFgkaYOVwCAACGuGiEEYpNl52dvXLlyqFDh7Zt2zYmJmbw4MEf
fPDBkSNHWO2Ti3oIfEAotg1CsUB8sBFGPwgAACouGmGEYnPt2bNH6qz9jIwZ
M0bq0+3fJxf1EPiAUGwbhGKB+FojjH4QAAC0uGiEEYpNdOzYsfLlyxv22opB
gwZlZmbavE8u6iHwIS2FLidQ6gXW5fABSUmUIJ3qVNblABP4VCOMfhAAAHS4
aIQRis0i9cj16tVT++h+/fpt3Ljx4MGDCxcurFmzprp80qRJNu+Ti3oIACAq
32mE0Q8CAIA7LhphhGKzrFixQu2dx48fr33r9OnT0dHRylvh4eFpaWl27pOL
eggAICrfaYTRDwIAgDsuGmGEYrM0btxY6Zrr1Knj/j2uw4cPBwQEKCssWbLE
zn1yUQ+ZwJnxBGfGC5wcT3BmPPGdM4N+0GfhDFsKp9dqOMNW4+IMIxSbIjk5
Wf2n7OnTpxuu07FjR2WFe++91859clEPmcCZ8QRnxgucHE9wZjzxkTODftCX
4QxbCqfXajjDVuPiDCMUm2Lt2rVqx71v3z7DdaZNm6as4O/vL51G2/bJRT1k
AmfGE5wZL3ByPMGZ8cRHzgz6QV+GM2wpnF6r4QxbjYszjFBsihdeeEHplIOC
gjw9A3PDhg1q5y6ddtv2yUU9ZAJnxhOcGS9wcjzBmfHER84M+kFfhjNsKZxe
q+EMW42LM4xQbIrBgwcrPXKNGjU8rXPo0CG14165cqVt+zSlHppVmR21HxTG
0p2YtR9HFcas/aAwlu7ErP04qjDOh36Qx/2gMJbuxKz9OKowZu0HhbF0J2bt
x1GFsRpCsSn69Omj9MgtW7b0tM6lS5fUjnvhwoW27VPIPwrxPhQfhdm3lGZF
0pZ4RxSG5/3kvRNphchI2rTJEYWxcT8oDL/QD/K4HxTG0p2YtR9HFcas/aAw
lu7ErP04qjBWQyg2RYcOHZQeuV27dp7WkU6O2nHPnj3btn0K+Uch3ofiozA7
59AUP1o33BGF4Xk/ee8kLo78/GjNGkcUxsb9oDD8Qj/I435QGEt3YtZ+HFUY
s/aDwli6E7P246jCWA2h2BRt27ZVeuQ2bdp4Wic7O1vtuKdOnWrbPp8CMMmK
MfdJoXjL+DtZF0R8e6tXl0Lx3A4dWBcEzJGffoR36AcBAMCT/PQjbCEUm6JV
q1ZKj9ylSxdP62RmZqodt6epJazeJ0Ch3OadYii4/N0pBnAO9IMAAMAvhGJT
dOrUKc9/zb527Zracefnt1RW7BMAAMAK6AcBAIBfCMWm6N27t9IjN2vWzNM6
Z86cUTvuVatWMdknAACAFdAPAgAAvxCKTTF8+HClR46IiPC0zq5du9SOe8OG
DUz2CQAAYAX0gwAAwC+EYlPMnTtX6ZH9/f1v3LhhuM6qVavUjvuvv/5isk8A
AAAroB8EAAB+IRSbYuvWrWqnvHnzZsN1Ro0apaxQqVIlVvsEAACwAvpBAADg
F0KxKaQPHhYWpvTLo0ePdl8hMzOzVq1aygpxcXGs9gkAAGAF9IMAAMAvhGKz
DBgwQOmXQ0ND//zzT9278+fPV/+5e/Xq1Qz3CQAAYAX0gwAAwCmEYrPs2LHD
399f6ZorV658+PBh9a3FixcHBgYqb9WtWzcrK0t96+LFi02bNm3yj4kTJ5qy
TwAAAPuhHwQAAE4hFJto8ODB6j9Zh4aGdunSZeTIkc2aNVM7dKn71j0b8++/
/1Y3MfzqVwH2CQAAwAT6QQAA4BFCsYnS09OHDh3q59nChQt1m+Q5GCjAPgEA
AJhAPwgAADxCKDbdokWLqlatquuyW7Ro8dNPP7mvfPbsWfXfunv37m3KPgEA
ABhCPwgAAHxBKLZIcnLy+vXrly9fvnHjxoSEhMLvMDs7+7333uvatWt0dHSt
WrUefvjhDz744MiRI4Xf7cqVK4cOHdq2bduYmJjBgwebsls7WfQRLl26NGfO
nJEjR3bq1Klhw4ZdunQZO3bswoULr127Zkqx7WHD9c3IyOjfv3+7f/z9998m
7tlSFp2Z48ePL126dNSoUa1atbr33nsfffTRqVOnnjt3zpQy28OKMyN1DdLf
jvTX1L59+0aNGvXq1WvSpEm8f991yJAhUmvcrVu3Qu5HgEbYE176QR2zriyP
rKiNYnSmZrHiDEt/aG+++eagQYNatGjRpEmTHj16vPzyyydOnDCrzHzBsMdS
VpzeDz/8cEFetm/fbtZH8AKhmAt79uyR6p7h18bGjBkjVVFH7dZOVnwEqbmb
NWtW2bJlDXdbuXLlVatWmf5BrGDP9Z04caK6299++82UfVrNojMzbdo09bE/
WmFhYdKIxWf/oL755ht10hwdKd2YkpXsJ40KlI9Qs2bNwuxHgEbYNvacK7Ou
LI9MP8PCdKZmMf0MZ2VlvfXWW6VKlXLfob+//8yZM634FE6GYY+lrDi9Fy9e
NNyhzlNPPWX6x3GHUOx8x44dK1++vJeqMmjQoMzMTIfs1k4WfYR//etfef55
xsfHW/GJTGTP9f3hhx8CAgLUfXLRO1hxZlJSUnr16uW9zrzxxhsWfSKzWHFm
1qxZ4/20hIeHnz171qJPZJEtW7aEhIQo5S9MdBKgEbaNPefKrCvLIyvOsBid
qVmsOMPPPfec99M7YcIEiz6OA2HYYymLTq/U6nqvwwqEYpBIFaxevXpqrejX
r9/GjRsPHjy4cOFCqctWl0+aNMkJu7WTRR/ho48+UrcNDg6ePHnyzz//fPLk
SakZfPLJJ7UPO3VyPbfn+l65cqV69eraVsv5vYNFZ6Z///7qtrVr15aGeVLT
unfv3ueff169dyz9h1SXLPpchWfFmTl9+nS5cuXUbaUec9euXYmJidKemzVr
pi7v2LEjR7dEP/300+LFi6uFL3B0EqARto0958qsK8sjK86wGJ2pWaw4w6tX
r1Y3DAsLmzFjxuHDhxMSElauXBkZGam+JZ15yz6Wg2DYYynrTu/MmTOVbYOC
gup49vLLL1vxuXQQih1uxYoVamUbP3689i1pwBkdHa28FR4enpaWxny3drLi
I0gjc/XfwUqUKCH9vetW+Pzzz9WDSqN6cz6JBey5vgMHDvTLzfm9gxVn5rvv
vlP32bx586tXr2rfXbdunfruE088YdonMZsVZ2b69OnqPl9//XXtW1IP27Zt
W/XdnTt3mvZJLHPu3LmHHnpIV+cLHJ0EaIRtY/W5MvfK8sj0MyxMZ2oWK+qw
+kXWYsWK6TpfKbtVq1ZNebd06dKpqammfRKnwrDHUtad3kcffVTZNjY21tQi
FwRCscM1btxYqS116tRx/1rC4cOH1W9xLFmyhPlu7WTFR9i/f7/6Vz9r1izD
dQYNGqSsUKRIkfT09EJ9BsvYcH0//vhjPzfO7x2sODPdu3dXNilZsmRycrKX
FSIiIhx7S9SKM/Pggw8qm0RGRmZlZene/eOPP9SaM2/ePBM+g5WkT23408gC
RycBGmHbWHquTL+yPDL9DAvTmZrF9DN87Ngx9QxPmTLFfQVpP+oK27ZtM+Ez
OBuGPZay7vQ2aNBA2fDZZ581r7wFhFDsZNIA+/+3d9/RVVTrw8fRRCAIClyq
FCmioKBIRwQjCggoNdKU6/XSUQFByk+xk6sIXlBsly6CBKQKi46IuATkDSgE
FJUgHeFNQnnJL0jIefdir/us8bSczJmZ076fP1hhZs/M3nvm7Geec6bI527y
5Mley7Rr104XaNq0aWhX6ySbmvD+++/Lan3d57h48WIpk5qaarIBdnJg/x49
erRkyZJ6DcZfWMI8OtjRMxkZGeqMTi+SnJzstcwXX3xRt27dxMTEHj16qEHS
fANsY9Mxc+edd+pFWrdu7bVAiRIldIEhQ4aYrLojpk6dajwLqly58v3336//
Npc6RcEg7Bhb+8ryPRuJ7Ojh6AimVrGjh2fMmCGXoHv+EO+69kwk2ejnn38e
VAPCHqc9trKve3NycuLj4/WC8+fPt6i+5pEUh7Mvv/xSjsMffvjBa5mJEyfq
Amp4VHsnhKt1kk1NmDNnjn5nxO233+6rjPEunvD89tXu/Xv16tUHH3xQL96y
ZcsdO3ZESnSwo2dUwivrPHLkiNVVdohNx0xiYqJeRH2mPOeqlch3y2H+NJjX
X39d+qdLly4ZGRkvvfSS/q+51CkKBmHH2NpXlu/ZSGRHD0dHMLWKTcfwxYsX
t2/fPm/ePK9zlyxZIhuN9Pff5YvTHlvZ173Gr27C4UWEJMXhbPz48fpQiY+P
9/VINzXWyRGl9mYIV+ukEDZh9OjRep3qfD48z1Tt7pxJkybpBUuUKJGenv79
999HSnSwo2deeeUVXbhmzZrG6Wq0/PXXX8P2Ymk3Nh0zw4cPl0U8z8qM+ciC
BQuCbYOddFWbN2++du1aPSXI1CkKBmHH2NpXlu/ZSBSqozH8g6lVnO/hK1eu
tG3bVjZ68uTJIFcY5jjtsZV93Ttz5kzpWHW+dOjQoaVLl06YMOHtt99WY7Lz
b6YgKQ5n/fr100dL9erVfZU5cOCAHIcpKSkhXK2TQtWE06dPywWfdevWtWSd
lrO1c3744YfChQvrBWfPnq2mRFB0sKNn5LbZnj17qv9u27Zt6NCh6tjQF7ap
o6VVq1afffaZlc2wgU3HjApwcm15mTJlFi9erKerE7a33npLLpqqWrVqmN9R
qHbrxo0bjVOCTJ2iYBB2jK19ZfmejUQhORojIphaxeEePnLkSFJSkqytb9++
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
4/uUKVOkjANP7g0hTntsZdMQYXwG6Z49e7yWmThxopRx4OViJMVhrk+fPvpg
KFas2KFDh9zmGk+2ly5dGvLVOsmmJgwdOlQWTEpKUp90S2vtECf3b2Q9ccKO
npHrhOPi4jwfZnLhwgW5ejCcT7Mt7xnjxVReP0pXr141fhufnp5uTUscEXzq
FAWDsGOc7KsYTIpd9vRwdARTq1jew1u3bpVFvKYhx44dk3fEFy5c2NdVr1GD
0x5b2dG969atk6U6duzoWeD48eNy7XT16tUvX74cbDPyQ1Ic5nbs2CGvDq9U
qZLx+8A5c+aok3A964477lBnmMYFMzIyGjVq1PCacePGWbXa8GFHz+zatcv4
/ISVK1du9CsrK8uh1haQTYeNV5EVHezomeXLl0sPlChRwvhb8IkTJ4y3Jk2Z
MsXuBppmec+o+HX33XdL21VINd43pKJJr169ZG737t0daKOFAkmdon4QdoyT
A1psJsWW93DUBFOrWN7DajitXbu29PD//M//GAdY1f/GucnJyQ60MbTM9bCJ
IcIVaac9lrBjEM7Ozq5atar05MiRI40Xk+zcuVMlwjLXmWvJSIrDX79+/eSo
KFasWIcOHZ577rnGjRvL8amORs9HvRmvw/f6LaK51YYVy3vG+M6IQKhsyMHm
FoxNh42niIsOdvRM3759jQeGigvPPPNMz549S5cuLRObN28e5tmN5T2jjofC
hQvL3BtvvLFt27ZjxoxRPWO801BFWBU3HWyoBQJJnWJhEHaMYwNabCbFLqt7
OJqCqVUsP4bT0tLUemRurVq1hgwZ8sILL7Rr104e7agkJiaGeeixiokeNjFE
uCLwtMcSdgzCKtfWt8ZrKgseOHDgqFGjHnroIeN0tWBeXp4DbSQpDn+XL19W
A52faOL1Ndn5ftLNrTasWNszxmf+BCic47hNh42niIsOdvSMGq6Tk5Ply1JP
KnCcPHnSkfaZZ0fPLFu2zPjsWU933XVXamqqI+2zkiVJcRQMwo5xbECL2aTY
wh6OsmBqFTuO4SVLltx8881+1tm1a1dfr0WIPiZ6mKQ4cDYNwnPmzDF+t+NG
ZdxqTHbsWx2S4kgxe/bsKlWquB0tzZs39/W+v1OnTsm3N0lJSVatNgxZ1TPG
N48HaPXq1U610iSbDhsj4/MtI+hdG3b0zJYtWxo1amT8bbTQtbf0vvzyy/8b
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
0ElMTNQTGzduHEgltQIlxcHsApfheBg7dqzXpZ5++mldoEWLFgHWXyL+/Pnz
fZUpXbq0LiMPAA9mv1vSCjU+N2zYUNY/ZswYzzLOV9KmjwOAyCIDiK/EUKlS
pYou8+STT8rEfKOb6UFGBXHjLVdCVWPAgAGrVq3Kyclx25a5RaSYuaTY8ob7
oiovhf286tdciDQq0HlIIF0hDh48KCsx3rcO5IukGBFHAuu7777rOVeS4ooV
K3rO9UyK1SEtg+3LL7/sZ7vyGsF69erpKb4infFRkIHw9bubmwCT4qlTp/pa
w4YNG4xPwPDFGIzkiZpub0X0r0BJcTC7wGU4Hnw1/J///KcuEPhjNyTie71i
XLv77rt1mc6dO+spwez34FuRm5sr/aP3l9drzJyvpE0fBwCRRQaQr7/+2lcZ
uWqobdu2MjHf6BbMIHPx4kW5i9aTStY8c8OCLhJ8UmxHw70yPkXE88ERwlyI
1EychwTSFSIzM1NWUqBXMQIkxYg4Eli9DncTJkzQcytUqOA515gU68unjddr
vfLKK362265dO12sYcOGeoqvSGd8D0KJAFibFHteMav95z//8Rp6VHRr2rTp
mDFjvF62JE8+sS8pDmYXuPI7HlzB/VLsZzSTn63//ve/6ynB7PfgWzF06FDZ
euPGjX3dseV8JW36OACILDKA+LmoVX6EVVmnTMw3ugU5yOTm5i5ZskTFOHlU
oJsePXq4jagFWiSQpLhNmza6gNek2KaGezImxTNnzvRVzFyIdJk9DwmkK8S5
c+dktSTFKBCSYkQca5NiRe7B7Nevn5/t1q5dWxdr3769nuIr0jVr1sytpCWC
SYq/+uorSTwLXUsqX3zxxUWLFqWlpck7F+RCLJV7yoKdOnXSE5s0aRJ4VQt6
T7HpXeCyOSk2PuzFTYn/vqpSbqoKZr8H2Qrj41aqVq166tQpXxtyvpI2fRwA
RBYZQCT4epIsz3grTb4JkVWDTE5OzqZNm8aOHXvPPfcU+itfF+IGsojxVMH4
lEgjlRLqAgVKii0fXY2XT/t5z6+5EGn6PMRVkKT40KFDsomFCxcG2nKApBgR
yPKkWN5ql5iY6GujV65cSUhI0MXka09fSbEq4KcOwvPOI/+CSYrVCYYsO3Hi
RK/rv/POO3UB1SEyceTIkfm2RaW3KjT37t377bff1lMKmhSb3gUum5NiX1dq
nT17VvpTnrkdzH4PphWLFy+W56io85C9e/f62brzlbTp4wAgssgAMnnyZK8F
Lly4IOPqa6+9JtPzTYiCHGQyMjI8n4atgqzxZRZPPfWU6UVU8JKJni8w0uSb
4QIlxXaMrnIv8PPPP++rjLkQafo8xFWQpHjnzp2yFT8X6gOeSIoRcSxPiocM
GaKnqFE3LS3N60anT58uC3744Yd6oq+kWOqgbN682esK9+3bd8MNN6gUpm7d
urJC/4JJimvVqqXn1q5d2+vKT548KYmVMTP96KOP8m2L3Dok71CQpFilsW6F
vSbFpneBy+ak2NcNvG+++aZURoVgPTGY/W66FWq8lfdUxsXFrVmzxn/TnK+k
TR8HAJFFBpD69et7LfDuu+/KWGF8eVC+CZG5QUbl4K1atdIvxp01a5bXpVq2
bKlXe9ttt5lbxK0JxmRfHDlyROpfoKTYjtFV7pl64oknfJUxFyJNn4e4CpIU
G19B9csvv/gvDBiRFCPiWJ4Ur1+/XiZ26tTJ61LySEw1Msu1qb6S4h9++EEG
cDX4e36fnJeXJ5clFwr4rQHBJMXy3e8DDzzgOVd9rlUWIys3ZjS//fabhD+v
P+Nu2LBBFpSThNmzZ0t3Xb161Vjea1Jsehe4bE6KVYBWEdZtbmZmZqlSpXSB
evXqSQOD2e/mWqEivrw+o9BfvyvwxflK2vRxABBZZABRli9f7jZXhaHy5cvr
uRUrVjQ+JzDfhMjcIKMmyoOqVGT0+mRCefBX06ZNzS2ilStXTk+89dZbL168
aCyvamt8iHSBkmI7RtcOHTrowr6+u3CZDZGmz0NcBUmK33vvPV0yPj7+0qVL
+bYXECTFiDiWJ8VKly5dZHqPHj0uXLggs1RWeO+998pc43Mq/Dw9Q376LHTt
na2HDx+WWepj8swzz8jce+65J8CGB5MUy5uV4uLiNm3aZJylPtRuj4K86667
jAVGjRols/r06aPKy6xdu3bdcsstepbaL2fPntXTU1JSZBFVnytXrkiw9poU
u8zuApfNSbFStGjRjRs3yqxDhw7JF+mFPJ69aXq/m2iF6u3bbrtNVvjSSy8F
2DonKxnkFgFEDWNSfNNNN3355Zcy6+jRo8bXybl9vxdIQmRukBkxYoRMHz58
uCops1Q6afzlWt6bbGIRRaW6Mr1///4SRk+fPq3iXSGDAiXFphvuhwrNurza
elZWltcy5kJkMOchgSfFSUlJumSrVq0CaS8gSIoRcexIitPT0+UaVKVcuXLd
unV7/vnn27Zta4zjVatWNcYIP0lxRkaG8Se84sWLt2/fXoXIgQMHShZZ6Not
t4F/XoJJiiXM6XjUt2/f9957T6VR999/vzG6aaVKlTL+vHvu3Dl9tZim6t+z
Z0/VlkcffVQ2WuivT7T47rvvjCu87rrr4uPjz58/7/KdFJvbBS77k2Jd//r1
6w8dOvSxxx6Th4coHTp0cFvQ9H430Qq1+4yVrFatmuo0tcWiPqg97nwlg9wi
gKhhHMn1uKqSuGHDhnXu3FnigtK8eXO364sCSYjMDTIqg5PfNJVKlSqpQWz8
+PFqtDdmdmrNx48fN72IsmXLFmPbixQp0qxZM5WlytXCoqBJseWj688//yxL
rVq1ymsZcyEymPOQwJNi+VHe123LgC8kxYg4diTFrmv3ZsoNL141aNBARUPj
Iv7fs5CWltaoUSM/K1RRIN87QI2CSYpVcDFeoOXpjjvumDx5svzX+MWvsnfv
Xrlx2JMKiG4/U+bk5MgLjsX27dtdvpNic7vAZXNSrKK250mL1qtXL+PP2cLc
fjfRirFjx/rZiid5DJqTlQxyiwCihgwgxrzJTWJiYmZmptuCASZE5gaZTZs2
xcfH+1lKxb709PQgF3H99TFTblq1avXOO+/ovwuaFJtuuB/yXqTRo0d7LWAu
RAZzHhJgV/z000+y+P79+wNvMuAiKUYEKlmypB7xPv74Y8+5EydO1HOrVKni
OVcdovJGgBUrVrjNvXTp0ogRI4wv/tNUpjZp0iTP5zcaX7CbkpLiuTlVQCXp
lSpV8oxQgwYN8kxs/TP+/Gr8ClorUqSInjV37lyvi2dnZ7/xxhvFixc31kSF
s9tvv33KlCmqZ1QD5fHOno+dvHz58pgxYzw7p0mTJjrbdaNq2KxZM2O4nDdv
nsvwxo1p06Z5LlXQXeDK73hQBg4cqAv4ebS1Gzl527dv36effiq3M2uVK1f2
tS3NxH430Yrx48cXKoh3333X+UoGuUUAUcP4rZqKU3JzrqaGWZUQed4V6wog
uglzg8yBAweSkpKMFz5p1atXV2Oa8Y6hYBZRPvvss6pVqxrLV6xYccCAASr+
yoM4+vTp41jDfZFLxFWW6rWA6RBp+jwkwK6Q7xZUXl+gJgMukmLAm1OnTq1f
v37WrFlr1qxRsS/4FWZlZW3btk1FPZWJ792711fEdIDKOn/88celS5eqyLJz
504TNTl58uS6detUW7Zu3XrmzBn/hU+fPr1nzx7V5IyMjAJtxfJdEKQjR46k
pKSo3aeaH/hS4bPf/XC+khHRLQCs5XmpiUrWFi5cuHjxYhUmVFpn4bZMDDIq
X0tNTV2wYMGMGTM2b97s+YO1JYu4roXF1atXz58//7fffgukfIFYMrqqiskX
/irQB7JIgUJk8OchXuXl5clzNj744ANL1omYQlIMAAAAW+V7/wXCR58+ffTO
8vNipnAjr7GoUKHC/xoegAYEiKQYAAAAtiIpjiD79u3Tdz8VLVo0wF/AQ65r
1676AHvnnXdCXRdEJJJiAAAA2IqkOLLIu41eeeWVUNclf3v37tW3eJcvX97t
TdBAgEiKAQAAYCuS4shy8uTJ0qVLq/2ldlyBHqYREm3bttVH17Jly0JdF0Qq
kmIAAADYiqQ44ixYsEDvsv79+4e6Lv6sW7dO17NXr16hrgsiGEkxAAAAbNWx
Y8dW13z55ZehrgsC1a1bN5VsxsXFHTlyJNR18alhw4aqkuXKlTt79myo64II
RlIMAAAAwM2lS5d+uyY3NzfUdfHp2LFjqob5viMS8I+kGAAAAAAQs0iKAQAA
AAAxi6QYAAAAABCzSIoBAAAAADGLpBgAAAAAELNIigEAAAAAMYukGAAAAAAQ
s0iKAQAAAAAxi6QYAAAAABCzSIoBAAAAADGLpBgAAAAAELNIigEAAAAAMYuk
GAAAAAAQs0iKAQAAAAAxi6QYAAAAABCzSIoBAAAAADGLpBgAAAAAELNIigEA
AAAAMYukGAAAAAAQs0iKAQAAAAAxi6QYAAAAABCzSIoBAAAAADGLpBgAAAAA
ELNIigEAAAAAMYukGAAAAAAQs0iKAQAAAAAxi6QYAAAAABCzSIoBAAAAADGL
pBgAAAAAELNIigEAAAAAMYukGAAAAAAQs0iKAQAAAAAxi6QYAAAAABCzSIoB
AAAAADGLpBgAAAAAELNIigEAAAAAMYukGAAAAAAQs0iKAQAAAAAxi6QYAAAA
ABCzSIoBAAAAADGLpBgAAAAAELNIigEAAAAAMYukGAAAAAAQs0iKAQAAAAAx
i6QYAAAAABCzSIoBAAAAADHLpqT4/wAAAAAAEAnsSIoBAAAAAIgUFibFAAAA
AABEGZJiAAAAAEDMIikGAAAAAMQsnRRfuHDh/Pnz2dnZoa4OAAAAAAAOUVmw
yoVVRpyTk5OVlXXp0qVQ1wgAAAAAAIeoLFjlwiojdrlcmZmZKjsmLwYAAAAA
xAKV/6osWOXCeXl5Kim+fPmySpC5sxgAAAAAEAtU/quyYJULu/5L/3CspnNz
MQAAAAAgWqnkV2fE6g/XX+np+jpqUmMAAAAAQDRRea6+alr/IuzyRl9HrZw/
f/7/AQAAAAAQLVSeqxNe41XTXuXk5Kjc+f8CAAAAABAt9NuX/KfDAAAAAAAA
AAAAAIBY8P8BKy5bng==
     "], {{0, 504.}, {643.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{643.5, 504.},
   PlotRange->{{0, 643.5}, {0, 504.}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`fob = 3, $CellContext`P = 0.27, $CellContext`z = 
     0.6, $CellContext`temp = 55}},
 CellID->580523355,ExpressionUUID->"9c84fa9f-5611-4ef8-bf7f-264c929f67e6"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
WfuqGv+rrrrKmnPSpEnVq1fXHnXKKacoMvfp00dRWjU//fTT8/LyzDxjxoyp
VKnS6NGjY7ximjewiJOzPZEjDaxiu3Z4fV56lKSPRmHwy6UeYfSB0iIjR46M
8/MIIB6E4uSpeCjWdlEJ559/fuIqFVnqh08+DMXqYVeWlOzRRZlozPDzzz9n
ZmbOnDkzzptfRKPFVYiKUoGE4sQK2YU2bNgQbX9L4Jht+vTpyiyKKlu3bjVT
7rjjDn1+lZSjLfLOO+9ohvvuu8+aYo53dO3a1ZrSpk0bJeU1a9aYhxp/Kgdp
Ho1j4/g8JQahOBm0KS+99NKDDz7YnDb/3HPPnX322dazjz/++AUXXGD+VmBp
2LBhyPBegfq8887TxBdffNGa2Ldv39q1a8+bNy/ai6Z5A4s4OdsTOdLA6oW0
tz/00EOlfbD+lJeXt//++zdp0mTz5s1xLgIgHgkPxT/99FPv3r07dOig/uvc
c899+umnra/aTjvttBNOOMH+Qj/++OMRRxxx9913W1PUdvXp00cTGzRooOHT
xx9/bD2lAKXpgwcP1kisZcuW1apVM9PXr1/fs2fPQw89dJ999tHr3nvvvdZp
V4VlDMWquV5CI0D1yPvuu69eZfjw4SpNjVXz5s1r1ap16qmnfv311/ZF3njj
jUsuuaR+/fqqgKoxa9Ys66mIoXjEiBEXX3xxnTp1jj766H79+sX4qd2AAQMO
O+wwlaDXVa26dOkSYyWI1pWqV69ePbWWWvPffPONvTStWK1nrR+VdtJJJ1mn
omkgoQK1lDm/UX+bN6j59ffAgQOtEmJsWWvVzZkz56KLLtK2a9y48VVXXRXj
ALfZEN9+++1NN92kmVXn66677vvvvw+pc7SdodRX/PDDD4+IRO83nm1hrWet
KL1l7Vrt27d/++23469eOPshjDQcs5mhyNKlS2fMmLFr166KDEW0uApRUYTi
hAvZhWJ8xMKHZ9v2Cn8q9q77yCOP6NP65ptvWlOys7PVksT4ecXnn3+uZnPV
qlXWlKysLBWiXsA83LJli2YIOf3P5Ljx48fHrk+iDBo0SO221cba2+oYjUNZ
uwkz/+LFi9VAKQAecMABf/vb38LDXamvqDLPOuusmjVrPvbYY2Z6tL4vWqs+
ZcoU/f3aa69ZJWt0rSl33nmneRijf4m/55LPPvtML60+wjxUMKlSpYrZrErB
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
GAAAAADgW4RiAAAAAIBvEYoBAAAAAL5FKAYAAAAA+BahGAAAAADgW4RiAAAA
AIBvEYoBAAAAAL5FKAYAAAAA+BahGAAAAADgW4RiAAAAAIBvEYoBAAAAAL5F
KAYAAAAA+BahGAAAAADgW4RiAAAAAIBvEYoBAAAAAL5FKAYAAAAA+BahGAAA
AADgW4TihNuzZ8+oUaNuv/32c84559hjj+3Zs+ebb765bNmychf49ttv/7s0
M2bMSOBbAACg3OgHAQDuQihOrLlz52oAkBHJPffco3FCWQvMy8uLWFqIXr16
JePtAABQJvSDAADXIRQn0PLly/fff/8YXfZNN920e/fuMpX59ddfMxgAALgC
/SAAwI0IxYmiXv7www+3eufu3btPmDBhyZIlr7/+eqtWrazpDz30UJmKfe65
58yCVatWbRPd448/nqT3BQBAPOgHAQAuRShOlJEjR1o9/v33329/at26de3b
tzdPNWrUaOfOnfEXe/3115sFzzjjjERXGQCAhKEfBAC4FKE4UY455hjTa7dp
0yb83LDMzMzKlSubGd555534i+3QoYNZ6t57701ofQEASCT6QQCASxGKE2Lj
xo3W1+PPPPNMxHk6d+5sZujUqVOcxe7cubNq1apmqffffz9x9QUAIJHoBwEA
7kUoTogvvvjCGgzMnz8/4jzDhg0zM1SqVEmrMZ5i586daxVbkZtZAACQVPSD
AAD3IhQnxMMPP2xdBiTadTXHjx9v9exa7fEU+8Ybb5j569Sps2fPnl9++WXM
mDFPPvnk0KFDx40bl5OTk9A3AQBAOdEPAgDci1CcED179jS9dsuWLaPNs3Tp
UmswMGrUqHiK7d27t5m/YcOGV1xxRaVKlTJKuvDCC9etW5e49wEAQHnQDwIA
3ItQnBBXXnml6Z1POeWUaPNs3rzZ6sRff/31eIo97bTTMkrToEGD//znP4l7
KwAAlBn9IADAvQjFCXH++eebrvncc8+NNo9WjtWDv/DCC6WWuWfPnjp16tj7
/X333Vcv1LNnz1NPPbV69erW9Fq1aq1cuTKhbwgAgDKgHwQAuBehOCHOOecc
0y+fffbZ0eZR525130899VSpZS5fvtyav3Llyi+++OLvv/9uPbto0aKOHTta
M6gC0crpBQBwVFn7FDeiHwQARFPWPiX1CMUJYZ3f1aVLl2jz7N692+q7o92u
wm7lypW33Xbb+eeff8QRR3zwwQfhMxQUFBx00EFWmd99913EchKyHyZqZ06r
cqhMUgtJVDlpVZlElUNlklpIospJq8qkP/pBN5ZDZZJaSKLKSavKJKocKpPU
QhJVTlpVJtkIxQlxwQUXlPoNufpuq+OO87dUpRo9erRV5ksvvRRxHk9+KLz3
pqhMUgtJt3KoTFILSVQ5aVWZ9Ec/6MZyqExSC0lUOWlVmUSVQ2WSWkiiykmr
yiQboTghunXrZnrkE044Ido869evtzpudeIJed2tW7daZd56660R5/Hkh8J7
b4rKJLWQdCuHyiS1kESVk1aVSX/0g24sh8oktZBElZNWlUlUOVQmqYUkqpy0
qkyyEYoT4s477zQ9crNmzaLNM2vWLKvjHj9+fKJeunHjxqbM8847L+IMnvxQ
eO9NUZmkFpJu5VCZpBaSqHLSqjLpj37QjeVQmaQWkqhy0qoyiSqHyiS1kESV
k1aVSTZCcUK8/PLLpkeuVKnSjh07Is5jP8Vr9erV8Rduv65IuNq1a5syb7zx
xogzePJD4b03RWWSWki6lUNlklpIospJq8qkP/pBN5ZDZZJaSKLKSavKJKoc
KpPUQhJVTlpVJtkIxQnxzTffWB395MmTI85z9913mxmaNm0aT5l33XVXixYt
atasecABB0SbJysry3rdaFfydMV+6AjWTDSsmRhYOdGwZqLxyZqhH/Qz1nBS
sXqTjTWcbK5Yw4TihNAbt+6l2KdPn/AZdu/e3bp1azPDZZddFk+Z/fr1szr6
efPmRZxn2LBh1jyfffZZxHlcsR86gjUTDWsmBlZONKyZaHyyZugH/Yw1nFSs
3mRjDSebK9YwoThRrr32WtMp16pV65dffgl59rXXXrN67TFjxsRT4Pjx461F
LrroovAZsrOzrXPGWrZs+dtvv0UsxxX7oSNYM9GwZmJg5UTDmonGP2uGftC3
WMNJxepNNtZwsrliDROKE+WHH36oVKmS6ZoPPPDAzMxM66kRI0ZUqVLFPNW2
bds//vjDeiovL+/444/vGPT//t//sxe4Y8eO5s2bW+OBvn37avVaz86cOVMD
AOvZDz/8MFrFXLEfAoBX+acRph8EAIRzRSNMKE6gnj17Wr1zrVq1unTpctdd
d51wwgnWIEFDgpDrbdp/DBV+OpkGGNWqVbNmUO+vnapfv37nnHOOfboW3LNn
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
WdLNQExMjPknHTx4sHTAMt6ezcQ6/B97mLtUUEA2btS8OFq2FxaflF66FCOW
ALjBYlMsGDZsWLlOijoIAACymEjCHDfFSgoJCRGLco8ePYztI/zlSLV70aJF
Zp4xKipKOlq7du2MPatGGFmHGulJnM9dunqVTJhg9CVazs6ad0of5vqt2gB2
SfkknJmZOXnyZKlG1KhR4/PPP1+zZs2hv6xdu3batGl169aVdujdu/f8+fOF
fV555RXtvnjz5s2mnxR1EAAAZDGRhPluiu/fvx8TEzNhwoQ333yzRYsWfn5+
N/56HjU6Olooprdu3bLUiYKCgsS63L17d2P7qNVqqXzPnDnTnNPNmTNHOpSr
q+v58+fL2Pl9I8wJwPIM5y7NqUlSf6EdliUUFZEtW4hwl6hSybfDfn5kxgyS
kUE7UAAwi7Fkq3y+TUxMdHR0FGvE1KlTZZ+JKigomDt3rkqlEvapVq3a9evX
xe2xsbFeXl7i9wqlzfSTog4CANg526mDFcBrU1xcXLx48WJvb+9ndF2+fJn8
/cCVcM/w6aefWuStm126dBGPHxoaWkZIUhjGxlU8lRCt9s/GHRwcnjrt0dbX
YdFjsi3cYO5SVx7mLt24QSZPJjVrGn1SWrjh3LqVGP/tBgBwQPkk/MYbb4g1
YtSoUWXvKRWUAQMGSBtPnTollZh79+6ZeFLUQQAAkMVEEuayKc7JyWnduvUz
csSmuGPHjtKWoUOHSm+lrrBevXo99Sfk+fn50kkr9lmqJ0+eDBkyRPtOYNWq
VU/9Lpteh1zOXRKW0w8/kNdeIw4O8r1wtWpk7FiSwt2rwwBAjsJJOCsry9nZ
WagRlSpVKigoKHvnwsJCcXahr6+v9vZOnTqJhSYpKcnE86IOAgCALCaSMJdN
sfabNwR+fn7Sg2RiU6z3bmrzX/cxYMAA8VDt27c3ts+dO3ekM8bHx5f3FMJ9
Trdu3aQjuLq6fv+9SSOKbHcdXtpFZlXjau7SpUuaTw3XqGH0V8MdOxLh/u3R
I9qBAoByFE7Cp0+fFstERyHhmEAoW+L+2i+llF4lvWPHDhPPizoIAACymEjC
/DXFa9eulSpmcHCwOHHp9ddf126Ki4uL4+LiPDw8xI3169cvLCw056SRkZHi
oWrVqmVsn5MnT0qBJSQklOv4N27caNasmfTt3t7eh01+I5MtrkN1CTkwVWbu
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
fgwAgFdMJGHOmuKCgoJKlSqJVb5Vq1a0wrApVlyHj+7LzF2KH0Ce5FnrjGXI
ziYrV5LgYM3ngo31wq6upH9/8sMPwkKhECEA2CWbvRlYtmyZo6OjUC49PDxO
nDhBOxwrstlLAABgD5hIwpw1xcnJydKPvqOiomiFYVOstQ7Tf5WZu/R/c61y
rjLk5pI1a0jv3sTFpazXZwUFkdhYkpOjdHgAYPds+WZgx44dYsX08/OjHYsV
2fIlAADgHhNJmLOm+PLly1JTvGDBAlph2BSrrMNTMZTnLuXlkXXrSN++ml/+
GuuFVSrSsSOJjsbrswCAIhu/GWjWrJlYNIUCSjsWa7HxSwAAwDcmkjBnTbHA
399frO9du3ZV4xOjFl+HmrlL71Kbu5Sfr5mX9MYbxM2trNdnvfgimfX/7N0J
dBTF1gfwbJBAiBBIWGSRRRFEkPUhPgQUZXWByKoivBcWQQEFFXwo4BNEZHNF
kF0RAooLKIuIgnoAQR6oYZdFJewBBI0Ektyvhuar6fT0TCYz3V1TNf/f6ePB
nurq6urKrb6zdL9Mhw870SQAAJ9C/GJgyJAh2qQ5d+5c0W2xS4ifAgAAtUkR
hNVLij/55JPY2Fhtim/VqpXCb337ycpxKOq5S3/84fpcuHPnAnLhG2+k0aNp
9257GwMAUBghfjEwaNAgbcYcPHiw6LbYJcRPAQCA2qQIwuolxZs2bRo5cqT+
MRPXXHNNo0aNunfv/qh3x9T9hm3//AKvyPS5Sz+nWddSD5mZNG8edezo6/fC
bLnhBho1in780caWAAD4rb8H0S3y5brrrtPmysmTHb8phFMkOh0AAAqQax7U
qJcU4/mMBhaMw7xc+nqM2XOXdlrRQA8nTtDMmdSmDcXE+MqFa9SgZ5+l7dtt
aQMAgEVC9mLg1KlTDz30EJ8H169fL7pFdgnZUwAAEA6kCMJIipEUF8D13KV2
Tjx36fff6Y03qFUrX89UYku1ajRiBKl7vgBAMc5fDEydOvVJ7wYPHjxgwIAu
XbokJSXxSTA2Nvb8eRFP03OEFNdjAACqkiIIq5cU9+rVq0nh/fLLLwLbbKug
xqEDz13avZteeomaNPGVCLOlZk3X58I//GDlrgEA7Of8xUAAbw6//fbbDjfS
SVJcjwEAqEqKIKxeUgwGgY9Dk+culbPmuUt5ebRliyvJrVWrgFy4Th0aM4Z+
+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
rLaIFumPcjbN1r+6fbvri9Oe36ZOSqLXXqNLeF6TpZAUAydFEEZSrDwpxiEA
gKoQhIUL51OQkUHt2xtzwNKlKS1NdMtskEmZZaksP9BW1CqP8jyLrVrlut2W
Z2p8/fX0wQfOt1pBWVl08iQtXeru27lzXWvYcvGiSfmcHNq/35U4T5xIU6fS
2rWukj54S4rPnr26lz//9LotL/PXX752cfo0rVvnasykSfTFFwW0548/rtbJ
31fJzXXdZGzGDJowgVaupOPHfW0e8H4lIkUQRlKsPCnGIQCAqhCEhQvbU7B4
sSv/NaR+HTrQ0aOiW2aPPtSHH2gcxe2lvd5KspxlzhyqWNEkNW7WjHAZG6Qh
Q0w6VlvGjctXMi/PlS+XK2dS8rrrvH6+7C0prlDh6vouXby2jf9FPPyweQGW
w1avbtIetnLNGvNN6tS5WuaNN1xvCLCaExKMm9erR+npXlsV2H4lIkUQRlKs
PCnGIQCAqhCEhQvDU3D6NHXrZry6Zhfqs2aJbpltvqQv9Yc7jsYVuMlff7ly
NM/8hS0pKRY/WjesPP6416T4v/91Fzt0iBo39lpSW3r3NvnFt7ek2J+vVZcq
dbXMgw8aX2L57GOP+WpMZCQNHWry2LKbbnIfnecv9/lSvLjr03NPAe9XIlIE
YSTFypNiHAIAqApBWLhwOwWffebODvjSogUdPCi6ZbbJoqwaVIMfbl2qe4n8
/YXwiRM0aJDxqc1sKVLEldwp8/1VJ736KjVp4nrOl/5jX7aGLe++e7VMbq4x
f2Tlu3Sh+++na6/Nt/6OO4z125QU33tvvv3WrEk9eriWG24w5ukGPCnmS1SU
69v47AANb7mUK0fZ2ZbtVyJSBGEkxcqTYhwCAKgKQVi48DkF589Taqrx+jwu
jqZMceUgChtBI/gRR1HUZtpc2Br27KFOnUw+pLvmGnrpJddneVBYvm+0NXmy
+1WWORp+5D5tmutNCV5g4cJ8r9qRFK9a5d5dyZI0O98d2lw/Nue3qouMpM35
x5chKW7e3PWDYs3ly65Di452v/r++5btVyJSBGEkxcqTYhwCAKgKQVi4MDkF
69dT1arGnK5RI9q1S3TLbLaDdsRQDD/owTQ44Kq++YaaNjVJjStVovnzFX9j
wXI+kuJ9+9xPjmbJ788/m2y+cmW+D1j1X6K2PCm+dIlq1XLnnl9+abLh9u3u
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
9GWqUtUUSmEL+4d+/S10Sy7l6rflaaZh8ybUhGWyhg9Sf6Pf+Ia30+3X0rWe
C0uWq1P1UlRKv21dqiu2tUHuFwCsIsU8iKRYeVKMQwAAVSEIC8dOwddf03XX
GTOrxo1p1y6RDTMkxdfRdTtoB391Ns0uSkX5q6NolH7b8TRe/5nsFJqiz+lm
0kz9tm/T2/ptDWlmfaq/kTZqL7EscjpN179q2K83F+iC/gPZZEo+SAeFtzaY
/QKAVaSYB5EUK0+KcQgAoCoEYeHYKYiMzJcOx8TQ2LF0WfQPSfVJcRIled4t
Ko3SeIESVOIUndLWH6Ej8RTPX1pEizwrX0tr9ZWfpbP8JX2aWZbKnqNzhm2f
pWd5gTvpzgIPJIdyOlAHvkkcxfG8VWBrg9wvAFhFinkQSbHypBiHAACqQhAW
jp0CfUZ8003s4kd0m67QJ8Wv0CueBfIory7V5WUW0kJt/VSaylfeS/d6q/9+
up8X+4g+4uv1aeZsmu254a/0q/6T2QIPZAAN4OUjKXIxLda/Kqq1Qe4XAKwi
xTyIpFh5UoxDAABVIQgLx5PiqCgaPpz+/lt0g/4fT4oTKCGLskzLsDSQp2yj
abS2ciAN5CsX0AJv9c+lubzYRJrI1+vTTJZRmm7Lb/x1E93k+yheppf1X2B+
kV40FBDV2iD3CwBWkWIeRFKsPCnGIQCAqhCEhdOS4mrVaMMG0U3JjyfFPj6N
/Za+5SlbD+qhrbyL7uIrq1P1u+lu06USVeLF+lJfXidPM1kumUM5pvtNpESt
TC2q5eMQ0igtkiL5Xh6hRzzLiGptkPsFAKtIMQ8iKVaeFOMQAEBVCMLCsVPQ
rx9duCC6HR54Unw/3e+tjP67wY2okbbyOrpO/+GsP0tLasnr5Gkmq8fbfpMo
qcCk+Bv6JpZi+S5aUItsyvYsJqq1Qe4XAKwixTyIpFh5UoxDAABVIQgLF7Kn
gCfFHamjtzJn6SxP2epRPW2l/p7Jfi430828Tp5m1qba3vZbYFK8h/bov9h8
A92QSZmmJUW1Nsj9AoBVQjYI6yEpVp4U4xAAQFUIwsKF7CngSXFn6uytzE7a
yVM2/oFyFarCV46hMS/RSwUu+ltUBZ8Un6AT1ak6bwOrcB/t81aVqNYGuV8A
sErIBmE9JMXKk2IcAgCoCkFYuJA9BTwpbk7NvZVZSSt5Zjechmsr9b+W/YEK
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
ypUrG6bsZs2affvtt56Fjx07xt/r7tKliyV1AgAACIR5EAAA5IKk2CYnT55c
tWrVwoUL16xZc+jQoeArzMvLe+eddzp27FinTp0aNWp069Ztzpw5e/bsCb7a
tLS0gQMHtm7dukGDBqmpqZZU6ySbDuHMmTNvvvnm4MGD27VrV69evQ4dOgwb
NmzWrFkXLlywpNnOcOD8Xrp0qWfPnndd8fvvv1tYs61s6plffvnl3XffHTJk
SPPmzZs2bdqrV68JEyYcP37ckjY7w46eYVMD+9thf0133333LbfckpKSMmrU
KNm/79q3b18Wje+5554g61EgCHsjyzxoYNWZlZEdo1GNydQqdvQw+0N75ZVX
+vTp06xZs0aNGt13333//e9/Dx48aFWb5YLLHlvZ0b3z58+fWZBNmzZZdQg+
ICmWwrZt29jYM/3a2BNPPMGGaEhV6yQ7DoGFu2nTppUuXdq02ooVKy5ZssTy
A7GDM+d35MiRvNqffvrJkjrtZlPPTJw4kd/2Ry8hIYFdsYTtH9TKlSv5Q3MM
WHZjSa7kPHZVoB1C9erVg6lHgSDsGGf6yqozKyPLe1iZydQqlvdwbm7upEmT
SpYs6VlhZGTk1KlT7TiKUIbLHlvZ0b2ZmZmmFRr079/f8sPxhKQ49O3fvz85
OdnHUOnTp09OTk6IVOskmw7hX//6V4F/nqNHj7bjiCzkzPndsGFDVFQUr1OK
2cGOnjl//nxKSorvMfPyyy/bdERWsaNnPvnkE9/dkpSUdOzYMZuOyCZfffVV
sWLFtPYHkzopEIQd40xfWXVmZWRHD6sxmVrFjh5+9tlnfXfviBEjbDqcEITL
HlvZ1L0s6voewxokxcCwAVarVi0+Knr06LFmzZqdO3fOmjWLTdl8/ahRo0Kh
WifZdAjvv/8+3zY2NnbMmDEbN2789ddfWRjs16+f/manoTzOnTm/586du+66
6/RRK/RnB5t6pmfPnnzb66+/nl3msdC6ffv2//znP/yzY/YPNpZsOq7g2dEz
GRkZZcqU4duyGXPLli1HjhxhNTdp0oSvb9u2rUQfiX7wwQfx8fG88QGnTgoE
Ycc401dWnVkZ2dHDakymVrGjh5ctW8Y3TEhImDJlyu7duw8dOpSWlla1alX+
Eut52w4rhOCyx1b2de/UqVO1bWNiYmp699///teO4zJAUhziFi1axAfb008/
rX+JXXDWqVNHeykpKenixYvCq3WSHYfArsz5+2AlSpRgf++GAh999BHfKbuq
t+ZIbODM+X344Ycj8gv92cGOnvnyyy95nbfeeusff/yhf/Xzzz/nr/773/+2
7EisZkfPTJ48mdf50ksv6V9iM2zr1q35q99//71lR2Kb48ePP/DAA4YxH3Dq
pEAQdozdfWXtmZWR5T2szGRqFTvGMP8ia1xcnGHyZblblSpVtFdLlSr1119/
WXYkoQqXPbayr3t79eqlbduiRQtLmxwIJMUhrn79+tpoqVmzpufXEnbv3s2/
xbFgwQLh1TrJjkP48ccf+V/9tGnTTMv06dNHK1CkSJHs7OygjsE2DpzfxYsX
R3gI/dnBjp659957tU2uueaakydP+ihQoUKFkP1I1I6e6dy5s7ZJ1apVc3Nz
Da/u3buXj5zp06dbcAx2Ykdt+tPIgFMnBYKwY2ztK8vPrIws72FlJlOrWN7D
+/fv5z08duxYzwKsHl7gu+++s+AYQhsue2xlX/fWrVtX2/DJJ5+0rr0BQlIc
ytgFNv+7mzx5smmZtm3bagWaNm0qtlon2XQIr7/+Oq/W2+8cly5dysts27Yt
wAOwkwPn97fffitVqpRWg/4TlhCfHezomczMTHZFp20yfvx40zIffPDBzTff
3KpVq27durEgGfgB2MamMXPTTTdpm9x5552mBRISErQCAwcODLDpjnj11Vf1
V0GVKlVq3ry59u/AUicFgrBjbO0ry8+sjOzoYTUmU6vY0cOzZs3iX0H3/CCe
rtwTie900aJFQR1AyMNlj63s696LFy/GxMRoGy5cuNCi9gYOSXEoW758OR+H
O3bsMC0zceJErQALj+zsCKzWSTYdwrx587RnRtSsWdNbGf2veELz3Ve7z29u
bu4dd9yhbX777bdv3rxZltnBjp5hCS+v89dff7W6yQ6xacy0atVK24T9TXm+
yirh7y2H+N1gXnjhBd4/nTp1yszMHDVqlPa/gaVOCgRhx9jaV5afWRnZ0cNq
TKZWsWkMX7hwYdOmTe+++67pqx9++CHfqezPvysQLntsZV/36t+6CYUHESIp
DmXPPfecNlRiYmK83dKNxTo+otjZFFitkwQewtNPP63Vya7nQ/NK1e7OmTRp
krZhQkLCwYMHt2zZIsvsYEfPjB49Witco0YN/XoWLffv3x+yX5Y2sGnMDB06
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
YgAAAABAZBGKAQAAAACRRSgGAAAAAEQWoRgAAAAAEFmEYgAAAABAZBGKAQAA
AACRRSgGAAAAAEQWoRgAAAAAEFmEYgAAAABAZBGKAQAAAACRRSgGAAAAAEQW
oRgAAAAAEFmEYgAAAABAZBGKAQAAAACRRSgGAAAAAEQWoRgAAAAAEFmEYgAA
AABAZBGKAQAAAACRRSgGAAAAAEQWoRgAAAAAEFmEYgAAAABAZBGKAQAAAACR
RSgGAAAAAEQWoRgAAAAAEFmEYgAAAABAZBGKAQAAAACRRSgGAAAAAEQWoRgA
AAAAEFmEYgAAAABAZBGKAQAAAACRRSgGAAAAAEQWoRgAAAAAEFmEYgAAAABA
ZBGKAQAAAACRRSgGAAAAAEQWoRgAAAAAEFmEYgAAAABAZBGKAQAAAACRRSgG
AAAAAEQWoRgAAAAAEFmEYgAAAABAZBGKAQAAAACRRSgGAAAAAERWmkLxfwAA
AAAAyATpCMUAAAAAAGSKFIZiAAAAAAAuM4RiAAAAAEBkEYoBAAAAAJFlQvHJ
kydPnDhx+vTpkt4dAAAAAACKiaRgycKSiAsLC48dO1ZQUFDSewQAAAAAQDGR
FCxZWBKx4zj5+fmSjsnFAAAAAIAokPwrKViy8IULFyQUnzlzRgIyVxYDAAAA
AKJA8q+kYMnCzn+ZH45lOhcXAwAAAAAuVxJ+TSKWfziXMtPNedREYwAAAADA
5URyrjlr2vwi7MRjzqMWJ06c+F8AAAAAAC4XknNN4LXPmo6rsLBQsvP/AAAA
AABwuTBPX0ochwEAAAAAAAAAAAAAUfD/IuvmFA==
     "], {{0, 504.}, {643.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{643.5, 504.},
   PlotRange->{{0, 643.5}, {0, 504.}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`fob = 3, $CellContext`P = 0.13, $CellContext`z = 
     0.33, $CellContext`temp = 57}},
 CellTags->"Snapshot",
 CellID->1999604583,ExpressionUUID->"b2d2d3c8-bf0a-4080-98d5-9b5460374f0b"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
ewt06VaLAt+lm907a57dwX///VcZsHDhQo+0SZziDedsBRS3NFihQgWdahcu
XLBrhhV9+/Y1vmk655CFopgEEfC05cuXt3V37733nr9N8y6OMqidO3c+8MAD
KM+dO7e/bNPHnVPGwBTKHD9+vGjRojpJzksvvZSenu6bNpcvX66fcRUpUiQp
KSlDxrB7m+nSg9Clm907ax7fQYpi3+MN52zFhg0b1F0XfVGMmvrOWaAoJkag
KCZBxMmTJ5WLq1GjxrJlyy5evJiQkHD58mV/m+ZdIiIiZK8/++wzbfnXX38t
5QGbQblzyhiYQhYkVFWqVFE9p1u3bmvXrj18+PCsWbOQIKnysWPH+qDNxMTE
woULa/M9JPbow1i9du3aqrxly5YZej7C7m2mSw9Cl25276x5fAcpin2MN5yz
FUuXLs2TJ49qSl8Uf/rpp1ItPDy8kmMmTZpk3AA655CFopgEETt27FB+ctWq
Vf42x3ekpqaes3Dz5k1teeBnUO6cMgamkOXHH39U3Wb06NHaRZCokZGRsqhI
kSJWV4Q32vz444/VilOnTtUuQn7YtGlTtRS93fg+snub6dKD0KWb3TtrFMXB
jjecsyI5Obljx46m+9EXxb169ZJqjRo1yvDOOIDOOWShKCZBxObNm5Wf9Ox8
DkFK4GdQ7pwyBqaQ5bHHHpNTX6lSJdtheLGxsVmyZJEK3333nbfbbN++vZSX
K1fOdordv//+W/XwDHVUdm8zXboNge/Sze6dNYriYMcbzllA/UKFCpls0BfF
UVFRUm348OEZ3hkH0DmHLBTFJCi4ffv2rVu31q1bp/wkctFbFiRNRWSUn45G
MMJ7SwWdV11Onjy5atWqb775ZuXKlampqapcVoQNjlbERs+ePQvzsO7MmTOX
LVt2+vRpI/uFS2bbtm2LFi1CqvDrr78iwbC7Fdl97d5hr/Hzyy+/lKORK1cu
qYDjoPYU6GxaVdPZL0crHjt2bPny5djZ9evXaw+Urc06p8wptoEpLi7up59+
QuaDA2V8qGpycvKaNWtwhKOjo1NSUnRqql6kSnCCtmzZgj1du3at/p4aQedQ
e9tIlzfne2CP6jMff/yx3TotW7aUCnXq1PF2m4888oiUN2nSxO6K+fLlkwr9
+/c3Yozgke6dIc8jPQd/5SdWnDt37tKlS0+dOmXcbE9Blx44Lt3sE6+us4Mu
22PWFcUe6UJmnzvnDG3Rx3jDOQuff/65VgiXLl26QYMGTkXxzZs3w8PDpdr3
33+f4f1xQIg751CGopgEBXan9RBGjRqFSK1uTsJx2W2hbdu2UqF79+62Szdt
2tS4cWOrlqtWrbp169ZffvlFfj766KO2K6LC008/rX3/RQFPrjO0LCkpaciQ
IQULFrRaC3v63XffWSUY6pVGZBRSMmDAALtHA/n56NGj1U+d2/gdOnSQOrVr
13ZUx4qrV6+i8Zw5c1pttFSpUv/5z3+sIoX+KTOyOW1gwpGU6VkUERERffv2
vXHjhqPVkedMmTKlePHiVltHO7NmzbK7Sv78+aXOmTNnYmJiENOzZcumXbdi
xYp//PGH1VoodLSnVhQpUsRfRrq8Od+jrjiwb98+u3WmTZsmFcLCwhCVvNom
LnApt+sBUFM5nzfeeMPYLv4fbnZvFzyP2mJCQkKnTp2wm2p/4Q2MW+4R6NJl
qX9dutmHXl1nB122x+xYFLvfhXzsnF3boo/xhnMWJk6cqFp+/vnnL1y4MHbs
WPmpI4pxkNVaHhxqEuLOOZShKCZBQZkyZWzdizBs2DAjA6ieeeYZqdC5c2er
RXPmzMmaNavdxnPkyNGuXTv5/5FHHtGuhfj16quvKt/lCLtDerZt24YQr7NW
t27dtNHfdqpS+GS7K+bKlQuNq5/vvPOO3aOBiKOcsNVrko5Yu3ZtiRIldGxu
0qRJfHy8qq9/yoxsUVn48MMPq/TGiqioqGPHjtmue+rUqfr16+tYi7Bre99e
RbG5c+eq9MYKdBWVxwo6iaIVCKb+MtLlzfkedFqxJzw83NETnDVr1iizEcW8
2ubQoUNVue1XibW53A8//GB4L13v3i57HrWVLl26WFWuW7euccs9Al26lPvR
pZt969V1dtBle8yORbGbXcjHztnlLfoYbzhnQRwpHJH6NLARUTx79mypky9f
PlxfJ0+eXLZs2eTJkz/44AO0k9EvAihC3DmHMhTFJCh4/fXXkck88cQTylE8
/fTT7Sx899137oQ/rQMH1apVw7b69Olj+/jPKoPCdtUiOLTWrVuPHj163Lhx
vXv3LlmypFqECGg1AObs2bNqvCVADgA3iFjTo0cP7V3l8ePHq1VsM6iZM2di
36tWrarqy9FAI1iqJoeEXrM71GfGjBnKctjj9PgjD9E+AYHNnTp1GjlyJI5q
3rx5VTm2q0aO6Z8yp1s0awKT4sknn0Tq1bNnT+299AceeACeR7si3FTp0qVV
haJFi+KwvP322x06dChSpIgqf+qpp6y2aHtrF92gY8eODRo00J6a3LlzX7x4
Ua2FQ1HbHvXq1UMKp21Nu0UfG+ny5nwPrj4xBr3XUZ0jR44omxctWuTVNpFo
qQOLY7VkyRIpv3379vvvv68G70Ev6I9utcLl7u2y53GU3YFvvvnGuOUegS5d
Cv3l0s0+9+r6O+iaPWbviGIfO2d3tuhjvOGchT///HPdunXaEiOieNCgQVKn
UKFCOFa2arRVq1aJiYkGbVCEuHMOZSiKSRChnd9D+3aGy+EPsbVSpUrKg02e
PFnlG+np6W+88YbWNVllUDVq1FDe+ODBg9pF169f79evn1rxzTff1C597rnn
1CK4ce1nLA4fPlysWDFZlCtXrmvXrkm5o49aOpq0RI1fAlu2bLE9GvDwsrR5
8+Z2D5cWJP/Qd6rB7t27K8PMFsmgDgWYMmWKdl1Hp8wI2sCE/+fMmaMWXbhw
QTvrr9VhUXezTZYHNKisFsGJNWvWTC1VAkfQpjRIz7R96dKlS2qCEdstOgIt
qFUQ2bVvh/nYSJc3p0NqauqKDGKVQtgFV6hYgl7nqA5SSmWwkYGFbrb5v//9
T9sbcclHRUVpT0S5cuV27tzp1AwtLndvlz2PNu+Cx4C72759O/a0a9eu6DkZ
Mt5T0KX7xaWb/efVHe2gy/Z4QxT7PoJ43D8HkXN2hBFRrN471gEn4r///W+G
Nk3nHLJQFJMgwuMZ1NKlS9WKdt8HHDx4sKqgzaD+/PNPVT5//nzbFW/evKm+
bq/dIsxWK9odFfPrr7+qCgsWLJDCjGZQ586dU6MHX3/9datNHDt2TG3CyIDP
lStXqvrt27e3rXDjxg01rA6J35kzZ9QiT4li25ulOOlly5aVpUg71btLcXFx
6n20+vXr207/gty4Vq1aUgEtaDMBbUozd+5cqxUTEhJwnGVpp06dnNq/ceNG
tQsRERFHjhxRi3xspDub02HZsmWmDHLgwAGnzbZo0UIqIxV0VAcWqja/+OIL
H7S5a9cuRztVvnz5q1evOrXBCte6t8uex3x/3vXVV19l1GBvQJfuF5du9p9X
d7SDLtvjcVHs+wjiDf8cRM7ZEU5F8d27d7UjNACOPyzs06cPDqPWweKwZ2jG
KjrnkIWimAQRHs+gevbsKYVIUbT3ZhXnz59XYU6bQcXExLz55ptoqmHDho7m
W2jUqJGs2LZtW1UId6dMjY6Otl0Lfh45drly5Vq2bKnSm4xmUKBNmzayqFCh
QlajOseNGyeL8ufPrzNZhGLMmDFSH1mZVtlpQQhQ+zVv3jxV7hFRjJhodz5V
tfvg999/l8KPPvpIFe7fv99uy9o0devWrapcneuqVavaHaOozmnTpk31jT98
+DCEsFQODw9X5vnFSHc2p4OX8i51H97RbM9my2Wi2nz//fe93SYOoKM3BAV0
0Qx9pNjsavd22fOYNXkXMjrjk7d7Fbp0v7h0s/+8uqMddNkej4ti30cQb/jn
IHLOjnAqio8fP642BOf25ZdfamcyP3jwYM2aNVUFpyFbC51zyEJRTIIIj2dQ
6i2eLl26ONqoGi9kNdZOh7i4uLlz5z700EOyIjatFnXt2lUKixUrZrA1s0sZ
1M8//6yOyfLly1U5/C3SMyl/7bXXjGy9bt26Ur9x48aO6ty5c0flA9pxQR4R
xZMmTbJb4dq1a6px9ekENZ1L0aJFHbV85coV9fKR9lU4tQvdunWzu6I6fYh6
OpYnJSWpO8kme0PIfGykO5vTAclA2Qxy8uRJp82qEXGtW7d2VCc9PV0dXkdf
BvFUm1OmTFHl4eHhI0aMWL169d69exctWqR0ismiRzKki13r3vroeB6zJu+y
KvcjdOl+celm/3l1Rzvosj0eF8W+jyDe8M9B5Jwd4VQUnzp16vXXX2/RokXV
qlXtDpCAC9W+qa0z77cVdM4hC0UxCSI8m0Ehl1CT5Oh8S0XdwXaUQcEzI12Z
OHFir1696tSpo54PKrReTn3eJUNfzXAhg7p165b66od2pJb2GNp9N80KBDg1
Q8irr76qU7NatWpS7fnnn7e7OZdFsc73BwsVKiR11Nyn2u+wlHCMqqOdzVWl
NI76w8svvywV6tev78gkOEntDWr0H9s6PjbSnc35HnWp6jyM0OYkRl5bc7nN
xMRENbKxYMGCMTExVmup6U9BjRo1jO3i/+Fa99aSIc9j1uRdgwYNMm6nV6FL
971LN/vVq9vdQXfs8bgo9n0ECSL/7A3n7Agj7xQ7ZfHixcoY48OS6ZxDFopi
EkR4NoNKTU1Va33wwQeONqpGx9lmUNHR0dopFxyh9X5q7s0MfXvOhQwKDBky
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
brFqd+vWrdaWHj162HvOmjXLenFyWFjYqlWrynjexMRE6xTNmzf3tc/PP/9s
R3FqampZTrdz586EhAT7aDfddFMxO4uYQwAAAAD6iIgRZVFs929kZGRmZqa9
vUmTJlb/njhxwt748ssvWy+0jouLK+N5hwwZYp33kksu8bVPVlaWnbEpKSln
cJZFixYlJSX169cvPDzcPtTw4cPdvyhPIuYQAAAAgD4iYkRZFJtfjpWKnTt3
dt8eHx9vbV+9erX79p49e1rb9+/fX5bz2q9kvuyyy3ztY35z7JJ99tlnz+As
1157baXCOnbsWMyHMVlEzCEAAAAAfUTEiLIoXrt2rVWLV155pfv2u+66y9r+
8ssvu2+fPHmytf2zzz4ry3nj4uKs4/Tt29fXPvn5+XbMTp069QzOctFFF1Xy
EBUVtWjRomIeNcqHM1gAAAAAAHjyFR0iukNZFJvLs94p3KtXL/ftL7zwgpWQ
Y8eOdd9uX/xqxowZZTmv/YxzfHy8r31yc3PtkvX1sU3FW7hw4Ycffvj999+/
+uqr/fr1s48WFhb2/vvv+3qUiDkEAAAAoI+IGFEWxcb/v324du3a7u+0/fzz
z61+LBLLK1assLYnJyeX5aQDBw4s8ZniY8eO2Rl7Zu8pLuKZZ56xD9iyZctT
p0553U3EHAIAAADQR0SM6Iti+ynUBx54wN64e/dua2N4eLj5a3v7pEmTrO2P
PPJIWU5qXwu6a9euvvbZu3ev3bBpaWllOZ3neU0ff/yx131EzCEAAAAAfUTE
iL4oNvPW7sTBgwd/+eWX1vZmzZpZG7t162Z9qu+SJUsiIyOtjW+88UZZTpqc
nGwdp1GjRr72Wb16tb2wpUuXluV0NvOrs4/5zDPPeN1HxBwCAAAA0EdEjOiL
4qysrKioKDsVq1atam2fMWOGvTEkJKROnTr2/w0PD9+6dWtZTjp79mz7yL4+
ICktLc0+444dO/w5bF5enrnnli1bfO2wb98++5j33HOP131EzCEAAAAAfUTE
iL4oNk6/gzgiIsJKxbZt21objx49Gh0dXcmbO+64o4xntN+bbFq+fLnXfcaO
HWvt0LBhQ3+OOXLkyMqVK5v7t2nTxtc+9tW2TU888YTXfUTMIQAAAAB9RMSI
yig2Tr+JeNKkSfXq1bviiivsjTt27IiNjS1SxFdeeeXhw4fLeDrzC69Zs6Z1
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
R7Ej8vPzzdY2izsuLq5Tp06JiYlz58795ZdfynLMrKysf//732PGjBk4cGCH
Dh3i4+PvvvvulJSUY8eOlfhYEXMIAAAAQB8RMUIUB1Z6eroZwl7fuTxu3Diz
l0t7wJycnKeffrpu3bpejxkTE5OWllb8EUTMIQAAAAB9RMSIvig+derUydI4
g1D15ddff61fv77XerWMGDEiNze3VMf8xz/+UcwBLQ8++GAxRxAxhwAAAAD0
EREj+qL4wgsvLLEii6hatWqjRo169uw5bty4VatWndl5zdpt06aNfcyhQ4cu
W7Zs48aNKSkpLVq0sLdPnjzZ/2O+8cYb9gMjIiIeeuihb7/9dufOnV999dWt
t94aEhJi3RUWFlbM91zEHAIAAADQR0SM6Ivi9u3blzaKi0hKSjK/kNKe9803
37SPMH78ePe79uzZ065dO+uuevXqnTx50p8D5ufn288716hRw+zrIju89957
9hm7du3q6zgi5hAAAACAPiJihCj26qabbirteTt27Gg9tnXr1p6vkc7IyAgN
DbV2ePXVV/054Pr16+31PP300173GTFihLVD5cqVs7Ozve4jYg4BAAAA6CMi
RvRFcWZm5qRJk+ycbNCgwZQpU1577bWvTnv99dcffvjhpk2b2jtcccUVM2fO
NPe59NJL3bv4nXfeKdVJ7Qc+9dRTXvcZMGCAtcPFF1/szzFnzZplH3Pfvn1e
93n77bftfdLT073uI2IOAQAAAOgjIkb0RfGKFSvCwsKsTnzggQfMBXvuk52d
baar9Z7cOnXqbNu2zdr+8ssvR0VFWY+Ni4vz/6QffPCBHafr1q3zus+0adOs
Hczzel1VEfPnz7c+gKl169a+9lm4cKF93pUrV3rdR8QcAgAAANBHRIzoi+Kr
r77aisQ77rij+D0nTJhg7ZmQkGBvTE9PtzaGhoYeOHDAz5NOmTLFelR4eLiv
60svXbrUDljz2+7nkYs3fvx4e7W+QlvEHAIAAADQR0SMKIvirKysypUrm5FY
rVo1X++xteXk5FStWtXcOTo62n37JZdcYpXmDz/84Od5ExMTrYc0b97c1z4/
//yzHcWpqal+HrkY+/fvr1mzpnXA9u3b+9pNxBwCAAAA0EdEjCiL4jVr1liR
2L17d3/279q1q7X/rl277I124S5evNjP8w4ZMsR6iBnUvvYxg92O4pSUFD+P
XIyhQ4faB3ziiSd87SZiDgEAAADoIyJGlEXx2rVrS3zm1N15551n7f/jjz/a
G5OSkqyN7777rp/n7d+/v/WQyy67zNc+5jfHbthnn33WzyP7Yr/229SlSxdf
r9k2hMwhAAAAAH1ExIiyKD506JD9Htvt27cXv/OWLVvsrszMzLS325eJXr16
tZ/njYuLsx7St29fX/vk5+fbp5s6daqfR/Zq+vTp9qEiIiJ++umnYnYe5UNZ
FgAAAAAANl/RIaI7lEWxyf64pc6dO5vr8bXbyZMnL7roImvPdu3a2dvNlA4P
D/cs5eL17NnTekh8fLyvfXJzc+2S9fWxTSUyy9r9OWKz/Uv81GMRcwgAAABA
HxExoi+K3Z9Fbd++/aJFi4rsYHblwoULO3ToYO82c+ZM4/R1t1544YWYmBhr
Y5s2bfw/6cCBA0t8pvjYsWP2Gc/sPcVmyA8bNsy9iF955ZUSHyViDgEAAADo
IyJG9EXx0aNHzZ6t5Mbs3EsvvfTaa6+9/vrrL7nkkkaNGrnfe+GFFx45csQ4
/bnA7tv96U1bQkKC9aiuXbv62mfv3r32wdPS0kr7dWVlZfXu3dv9VdNvv/22
Pw8UMYcAAAAA9BERI/qi2PTbb7/ZL6Iu3nnnnbd//37rURMnTrS39+rVKycn
x/8zJicnWw80i9vXPqtXr7aPv3Tp0lJ9Rdu3b2/btq398Lp1637zzTd+PlbE
HAIAAADQR0SMqIxi0+HDh8eNG2e/O9iT2ZVTp049fvy4/RDr2d6qVavedttt
JX7GcRGzZ8+2DhsSEnLixAmv+6Slpdln37Fjh/8HX7t2bYMGDezHNm/ePCMj
w/+Hi5hDAAAAAPqIiBGtUWzJzMycN2/e9ddf3717d7MlW7Ro0a9fv+TkZLNh
rZdMuzPbc/369adOnTqDE61YscKO1uXLl3vdZ+zYsdYODRs29P/IP/30U716
9eyD/8///I//l/+yiJhDAAAAAPqIiBHdURw05hdes2ZNq1vvvPNOzx1yc3Nb
tmxp7TBo0CA/D3vo0KHo6Gi7iK+++ur/+r6eti8i5hAAAACAPiJihCgOlBtu
uMFK18jIyK1btxa5d86cOXbbLly40M9j3n777fajEhISzLI+g4WJmEMAAAAA
+oiIEaI4UFatWhUSEmIFbExMjPvbfufPnx8WFmbdFRsbm5eXZ9918ODBLl26
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
AAAgMEeEEUKx6zliHsKJCMUAAAAIzBFhhFDseo6Yh3AiQjEAAAACc0QYIRS7
Xr+/srocuAehGAAAAB76ebG6oqwRil3PEfMQTuQRik/JqeWy/Hl5vot0eUwe
my2zd8mu7Izzu/y+UlaOk3E9pMcD8sBr8toX8sVROeqv/Q/ywypZpZYjckT9
b6ZkpkjKdJneR/rcL/e/LC//S/51TI55d9woG42O2Vk2yAZrqw1xvwAAAHbg
iDBCKHY9R8xDOJE5FH8lX10tVxv/a16aS/MAwe2CXBghI3JLbu+O8RI/UkZe
lIvevYpLcaPNs/LsL/JLFani3b2AFJghMzw6lpNy3i39Lfklv7XVhrhfAAAA
O3BEGCEUu54j5iGcSIditSRIgr90WVbKrpN13t1TJKWu1A2cTOtLfe/LzTpm
tpW2JaVkgO5DZIi5YyihOPrVhrhfAAAAO3BEGCEUu54j5iGcyByKjSWP5Gkk
je6T+2pIDfP6olI0VVLNfdMlvbJUNre5Vq7tIl3Uov5gXn+z3HxJLpn76pjp
0b2BNFBJ1uNC6gE5oDs2labXyDXeiwrLVaRKMSlm7ltLallbbYj7BQAAsANH
hBFCses5Yh7CiTxCcSWptFk2663TZFpeyau3jpSR5r6vyCvma7JvyBvmTPe+
vG/u+568Z+7rETPrSJ1v5Vtjk0qR78q75q0e+/UnTdLMF2RLSsk9ssfyakPZ
LwAAgB04IowQil3PEfMQTmQOxSWkhPfdopIlWTcoJIWOy3Fj/W/yW0EpqDfN
lbneg6+SVebBT8pJvckcM0tJqVNyyqPvM/KMbtBCWmR5IBmS0V7a6y75JJ/O
rRZWG+J+AQAA7MARYYRQ7HqOmIdwInMoHifjvBtkSmYtqaXbzJbZxvqJMlGv
vFvu9jd+R+mom30in+j15pg5TaZ5d9wv+81XZrM8kP7SX7ePk7h5Ms+81apq
Q9wvAACAHTgijBCKXc8R8xBOpENxYSl8Ts75bKNioI5sz8vzxsoBMkCvnCWz
/I0/Q2boZmNlrF5vjpkqUfrsq2/8daPcGPgoXpfXzR9gflle9mhgVbUh7hcA
AMAOHBFGCMWu54h5CCfSoTjA1dh1sk5Htm7SzVjZSlrplVWkSmtp7XMpL+V1
sz7SR4+pY6bKkhmS4XO/V8lVRpsaUiPAISRLcpzE6b08JA95t7Gq2hD3CwAA
YAeOCCOEYtdzxDyEE+lQ3FE6+mtj/mxwPalnrKwklcwXZ7Oz3C636zF1zFTj
+NtvCSmRZSj+Rr5JlES9i2bS7Lyc925mVbUh7hcAAMAOHBFGCMWu54h5CCfS
obiDdPDX5qSc1JGtttQ2VprvmZzN5Sa5SY+pY+YNcoO//WYZinfIDvMHm6+X
60/ICZ8trao2xP0CAADYgSPCCKHY9RwxD+FEOhR3ls7+2myX7Tqy6QvKFaWi
XvmCvPCqvJrlYr5FVeih+Hf5vYpU0TWoAXfKTn9DWVVtiPsFAACwA0eEEUKx
6zliHsKJdChuIk38tflCvtDJ7kl50lhp/rbsf+W/Od1viKH4nJxrKA11AXkl
79fydYDdWVVtiPsFAACwA0eEEUKx6zliHsKJdCjOJ/lOy2mfbZ6Sp3Sye1fe
NVYOlIF65RSZ4m/8bbJtlIwaI2Nmy+yf5Ce9PpRQfEkudZbO5o8cB7ixs7XV
hrhfAAAAO3BEGCEUu54j5iGcyPycYp8f3D0mxwpKQd1GX5CdLJP1yjJS5pSc
8jn+PXKPbvagPKjXhxKKh8gQcyJWcTLLw7Sq2hD3CwAAYAeOCCOEYtdzxDyE
E5lDcWEpvF7Wm7delIvdpbtuYP6I9XE5br7J1UPykGrsMfhsmW1+WNI38o3e
FHTMnCSTzIlYRchMyczyMK2qNsT9AgAA2IEjwgih2PUcMQ/hROZQrJZiUmy+
zD8pJ9WmFElpLs31JhXcvpfvzX3flXfNfRtIgx/kB+Mxvqfl9EvyUoIk6K11
pa65b3Axc6kszS259ZhFpehKWblMli2WxYtkkc9lr+y1qtrQ9wsAAGAHjggj
hGLXc8Q8hH1kSmaqpP4qv26QDV/IF7Nl9hSZ8rw8793SIxQbS7zEF5JCHisf
loc9+qpkd4vc4tEsv+QvL+XNQS/XlVtDb5Nt5r7Bxcz+0t+72sDLM/KMVdWG
vl8AAAA7cEQYIRS7niPmIaLgtJzeK3v/K//9Ur6cJ/PekXdGy+ghMqSn9Gwv
7RtJo2pS7Wq52nw51bx4D6hDcUNpWEpK+ewVJ3FPy9Pen/uVK48w7iW9AsfS
olLU41PZYkUojn61oe8XAADADhwRRgjFrueIeYignZWzB+TAZtm8RtYslIVT
Zeqr8uqT8uQj8sg9ck8TaaKyWGkp7XFhMYjFe9dlpayxaZgM2yk7Vaw270XF
YbXrf8m/Ate/TJbVklre5anEPVJGnpAT3l30A3wbSAN/w1aSSkabelLPWPOE
PJHTQx4jY6yqNvT9AgAA2IEjwgih2PUcMQ/h4bycPypHt8v2dbJuiSyZITPG
y/in5ek+0qeLdLldblcR6Rq5JlESQ4y6oYRib3/IH6tl9bvy7ipZ5e9uyf6O
d4tsmStzVahXOTpFUtIlPdgXL+KsqtZZrxIAAIA4JIwQil3PEfMwRmRIxnE5
vkN2fCvffi6fz5JZE2XiSBk5QAb8Xf7eSlrdIrdUkkre38mN8lJEilSWyvWk
Xhtp0026DZJBz8lzVr94AAAAcB5HhBFCses5Yh46mnFnql2yS9+ZarJMfkFe
eFQe7S7d20rbBtKgilQpJsXMT8+J/lJQClaUinWkTktpeZ/c90/557Py7Bvy
xkyZuVSW/kf+kyIpv8vvPr//CwAAAATBEWGEUOx6jpiH9nRGzuyVvRtl45fy
ZbIkvyPvvCwvD5WhD8lDHaRDI2l0vVwf4M5U0VnySb5r5JpaUut2ub2LdOkj
fZ6Wp8fK2Gky7RP55Gv5eqtsPSyH+ZwtAAAAos8RYYRQ7HqOmIfRdE7OHZSD
P8lPX8lXi2TR+/K+zztT5ZE8FkbdBEkoISWqS/XG0vguuethefhxefwVeWWq
TF0oC9fIms2y+YAcOCtnrX45AQAAAL8cEUYIxa7X76+sLidSzsv5I3Jkm2z7
Wr5eIkumybRxMu5pebqv9O0iXZpL81pSq5yUyyf5LIy6uSX3VXLVdXJdQ2l4
p9zZQ3o8Jo+9KC++JW/NkTkrZeX38v1u2X1STlr9cgIAAADB6OfF6oqyRih2
PUfMQ38yJON/8r9f5Jfv5Ltlsuwj+ehNefM5eW6gDOwm3VpL63pS71q5Vj8w
16rF552pJskkVfC/5F+q+J2yUx3IJblk9SsKAAAARI8jwgih2PVsOA8zJfOk
nPxVfv1evl8uy+fInCky5UV5cbAMflAebCftGkiDqlL1KrnK2jtTFZACFaTC
zXJzC2nRVbr2l/7PyDMTZMIMmfGZfMadqQAAAIDAbBhGvBGKXS+a8zBN0vbJ
vh/lR593pmosjatJtRJSIl7iLYy6iZJYVsreJDc1k2adpXMf6fOUPDVWxiZJ
0ifyyb/l31tl6yE5xJ2pAAAAgBARimEHoc9D7ztTvSavDZNh/5B/dJSOTaXp
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
/xd099et
     "], {{0, 504.}, {643.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{643.5, 504.},
   PlotRange->{{0, 643.5}, {0, 504.}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`fob = 2, $CellContext`P = 0.27, $CellContext`z = 
     0.15000000000000002`, $CellContext`temp = 59}},
 CellTags->"Snapshot",
 CellID->1382634578,ExpressionUUID->"168009e0-53d5-44fa-81ed-77caccb72a8e"],

Cell[BoxData[
 PaneBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
FsXR0dHq8sSFCxd++O/qFR07dtSiODw8XNtZqVftltSLFi2yyQAOHTqkhHCq
az/16tUrwfqzQGNiYsaNG6d8nVTfs0SJEkuXLrX8DvJOTpJe5HnsGoFpNSy1
8FAPLG+Hk6vEGkxEjiA0FHPmiJOcq1ZN7/2ilccLL+Dzz8VxZF4gTERE2ZW8
3WGwKFa89NJLajD27NlTidANGzaomax49dVXtd3i4uK0u2wpjh49mvmPPnPm
TNGiRVOtV5WS58rnWvWeX331lYU3VA0aNMjCO8g7OUlWdy9hz1gE1rbUwn65
sORjHF+KmAd6D5eyvQcPsH27WALpgw/EXaDTWcE5cqBmTXz3HZYtw5Uren8H
IiIi/cnbHcaL4gkTJmi1mCtXLtN4nDhxorqPr6+v1s6KRo0aZf5zldo1fc9P
P/1006ZNJ06cCAwMfOGFF7Tt/fv3T/97Lly4UHuhu7v7L7/8smfPnvDw8B07
dnh5eTk7O6tPubq6Wvg1l3dykmTuX0fwFMx+Cz7OZlt4sBsWvo8j8/E4Su/h
UvZ24QIWL0aPHiJslbxNZwg/84w4L3rYMGzbJlKaiIiITMjbHcaLYmWEVapU
efpwqlK+2n2nK1asaBrOSmlm/nMXLVqkvWefPn1Mn7p8+XLlypXVp4oUKfI4
fZeYJSQkaMed8+bNq/R1ih1WrlypfWKtWrXMvY+8k5Pk8DASh2ZiXiP4uppt
YeWpuQ3Fbg95oyHSyf374nCwv79YDrh4cbPZW8oJrzqhyL//6uKCKlXEMqxB
QTh9Wu/vQOR4AgKQ/G4tRJSdydsdxotixZ07dxo2bGhaxPXq1bt79662Q4sW
LdTtSh0fOXLEJh9ao0YN9T0rVKjw9DnSJ0+e1M7injt3bnreUBmYNv5x48al
uo92ubSbm5vpElSm5J2c5NAeR4kDvgvfFwd/zZ4m7YzZ9cXh4/vX9R4uZT/x
8eLy3tmzxdXB1avD1TVdx4LfT5y6n7+EX37Bpk3KHyd6fw0ix6b+h0NElEje
7jBkFKsuXLgwb968oKCgixcvpnhq+PDhtWrV8vX1Vb6OTT4rIiJCC9jRo0en
uk+TJk3UHWrXrp2e95w4caL2nlevXk11n2XLlmn7HDp0KNV95J2c5IhiHuL4
MnE5sF8uS5cMB7wuLiu+e0nv4VI2ExEhVj7q3x8NGyJ//vSeFK08ypfHl19i
+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
eOeb8beKUPzJ2M6hHgigBxmKQz0KAGHEm+gUhgjFAdG5c2eZTHv37u2pTVFR
kQqwnh6xZHafAICy7F3k+DLRkfVNqMcBaCIx8fIfANAcoTggevXqVe5V3QsX
LlToN8Vm9AkAAAAAMCIUB0R8fLxMpnFxcZ7anDp1SgXYJUuWhKRPAAAAAIAR
oTggRo8eLZNpvXr1PLXZuXOnCrBr164NSZ8AAAAAACNCcUC8//77MplGRkZe
vHjRbZslS5aoAPvrr7+GpE8AAAAAgBGhOCA2bdqkwunGjRvdthkzZoxsULdu
3VD1CQAAAAAwIhQHhJh4bGyszKfPPPOMa4OioqImTZrIBv369QtVnwAAAAAA
I0JxoAwdOlTm06pVq2ZmZjqtnTt3rrrsu3z58hD2CQAAAABQCMWBsn379sjI
SBlR69evf/jwYbVq/vz5UVFRclWzZs2Ki4vVqtzc3Hbt2rUtNWnSpID0CQAA
AADwEqE4gIYPH64u3VatWrV3795PP/10XFycCrYixjrdI/r48eNqE7dfgfah
TwAAAACAlwjFAVRYWJiUlBThWUpKitMm5YZiH/oEAAAAAHiJUBxwqampDRo0
cIquHTt23LJli2vj7Oxsdc03Pj4+IH0CAAAAALxEKDZJTk7OmjVrFi1alJ6e
npWV5X+HJSUlycnJDz74YIsWLZo0aTJo0KB58+b98MMP/neblpaWlJTUvXv3
O+64Y/jw4QHpFhZjRp3k5eW99957Tz/9dK9evW677bbevXuPGzcuJSXlwoUL
gRo2rCEIp6nff/99yJAh95U6fvx4AHuG1syrvV9++WXhwoVjxozp3Llz+/bt
hw0bNn369NOnT/vfMyzDpPITn9XFW614873//vtvv/32AQMGTJ48mR/ioWwj
RowQAaRPnz7+dBLmoYNQrIWMjAxRPG6/Pj127FhRY2HVLSwm4HUiAsisWbNq
1qzpts/69esvWbLEjIlAR8E5TU2aNEl1u2/fvoD0Cd2ZV3szZsxQt8o0io2N
/ec//8mbLxymld/q1avV0zydPPjggwG5iAPrEUlWFknjxo197iT8QwehOPz9
/PPPtWvXdltF0mOPPVZUVBQm3cJizKiTxx9/vIwOpalTp5o0I2gkOKepzZs3
V6pUSfVJKIbDtNo7f/78gAEDyj77vfHGG2bMCBoxqfxWrFhRdu3VqlUrOzvb
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
9NFHjRc669evLz5sGDf0+XX3bRbiEMW5c9ddd3Xr1s3Ym3GPQR6kP3sEABsi
FAMAymX8ZB4dHf3FF1+o7+4ac58kgoyKLSdOnDBe7jQ+yejSpUsiR6hVQ4YM
uXDhglqbmZnZpk0btXbatGlqladQLDKjWp6QkJCbm6tWifev++67T61dunSp
lxM33mjL9SfAxlAsUsnrr7++ffv2lJSUwYMH5+fniwZqCjVr1ty/f79x299+
++3JJ59Um0+aNMm4tl+/fmqVSDHG43bw4ME6derIVTExMeqglX2jLddQ7PPx
d/y5HkSsNr4KYuKtW7dWa71/LLIxFIv/njdvnlolXsru3bt76tPn1z3gsxA9
qE0aN25s/Olu8Adpxl8HALAqQjEAoFzGT+auD7o1pqf777/fae3nn3+u1n7/
/fdq+VdffaWWP/zww647vXjxovoOs0h/x44dk8vdhuKsrCz1q9hOnTqpzK4U
FRW1a9dONrjxxhudrjZ64n0onj17ttPaLVu2qLUfffSRa+cFBQXqx9ePPPKI
Wi52pDaUX8N2smrVKtVg4cKFcmFFQ7HPx9/x53pITU112vDEiRNiDHJtfHy8
a89uGUOxvM5uJF508arJtXXq1BGfRuRyf173wM5i06ZNagrVq1c/dOiQWhX8
QZr01wEArIpQDAAol/pkfsstt7iufeqpp9Tn9q1btzqtFWFKrV2xYoVaPmHC
BLkwKirKmCCMRJZU286fP18udBuK33zzTbVw7969bnszZslt27Z5M3EvQ7GI
Fa43pMrIyJg0aZJIu126dPF0h6i7775b9tCnTx+1UORrtdN169a5biX21ahR
o4YNG/bs2fOTTz6RCysain0+/o4/14PbO3GpeXXv3t1tz65UomzcuLHb+zar
CQobNmyQC/153QM4i4MHD4ogLBtHR0er4YVqkCb9dQAAqyIUAwDKpT6Zjxgx
wnXtyy+/rD5dy68NG507d06tXbZsmVresWNHufDee+/1tN/i4mK1a/UFY7eh
WN1sqnbt2p56EyNR97xSvwsum5ehuFevXt70ZpSVlZWamtqkSRPXHgYPHiwX
1qlTx/sOKxqKfT7+DkM9JCQkuN1QTaFLly5ejl+F4ldffdVtgwsXLqjXQj22
yZ/XPVCzyM7OVlexBde7Ogd/kCb9dQAAqyIUAwDKpT6Zyzs7OZk2bZpcK5KX
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
AADs4P8DMDEFqg==
     "], {{0, 504.}, {643.5, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{643.5, 504.},
   PlotRange->{{0, 643.5}, {0, 504.}}]]], "Output",
 TaggingRules->{
  "Settings" :> {$CellContext`fob = 1, $CellContext`P = 0.27, $CellContext`z = 
     0.6, $CellContext`temp = 55}},
 CellTags->"Snapshot",
 CellID->18808259,ExpressionUUID->"bf2fda12-e3e8-41ae-a37b-83f58a7fa1e2"]
}, Closed]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->"SourceInformationGroup",
 CellID->62407265,ExpressionUUID->"9f20cec1-a446-4788-9a52-78defdd1667c"],

Cell[CellGroupData[{

Cell[TextData[{
 "Contributed By",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"AuthorNames", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "'John Smith' for single authors; 'John Smith, Robert Ford, and \
Jane Doe' for multiple authors. To credit people other than Demonstrations \
authors, please see the 'Details & Citations' section."}], "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNames"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "3e2525e9-fa7f-4bfc-a451-2638b72efbc7"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "AuthorNames"},
 DefaultNewCellStyle->"Item",
 CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
 CellID->255368948,ExpressionUUID->"af7afe04-2d07-438b-9946-26ef7fdad250"],

Cell["John L. Falconer", "Item",
 TaggingRules->{},
 CellID->959769204,ExpressionUUID->"743e45b7-6a16-486f-884e-cfcfcf28280a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details & Citations",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"DetailCells", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "This optional section is for a more detailed description of the \
Demonstration than the caption, but it should still be as concise as \
possible. This section may also include numbered snapshot captions (e.g., \
Snapshot 1: phrase or sentence without an initial capital and without a \
period, unless more than one sentence is used) and explanations of the ", 
           StyleBox["Manipulate", "MRbig"], 
           " control labels. Define any symbols undefined so far. Include \
only text in this section \[LongDash] no code, graphics, etc. Do not change \
the cell style or copy cells from other sections. \n\nA book reference uses \
this format: \n   L. D. Schmidt, ", 
           StyleBox[
           "The Engineering of Chemical Reactions", FontSlant -> "Italic"], 
           ", New York: Oxford University Press, 1998. \n\nAn article \
reference uses this format: \n   D. Pearson, \"A Polynomial-Time Algorithm \
for the Change-Making Problem,\" ", 
           StyleBox["Operations Research Letters", FontSlant -> "Italic"], 
           ", ", 
           StyleBox["33", FontWeight -> "Bold"], 
           "(3), 2005 pp. 231\[Dash]234."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDetailCells"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "53c44ff3-dff7-4e9d-8bba-f65e093be16e"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "DetailCells"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
 CellID->441931514,ExpressionUUID->"89f2ec77-5dec-4f00-90c3-8208fdb72325"],

Cell[TextData[{
 "The saturation pressures ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["P", "i", "sat"], TraditionalForm]], "InlineMath",
  ExpressionUUID->"af9ba481-c8ff-4cd7-a0a8-709ca74daf06"],
 " were calculated using the Antoine equation:"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.6448612691090956`*^9, 3.6448613230051785`*^9}, 
   3.6452089720821033`*^9, 3.6452092093737063`*^9, {3.6466655647360477`*^9, 
   3.646665578353272*^9}, {3.6863261744410505`*^9, 3.686326195234167*^9}},
 CellID->211747867,ExpressionUUID->"f707d44b-a3b9-4413-aa5b-ee5d3ffeefda"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["P", "i", "sat"], "=", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["A", "i"], "-", 
       FractionBox[
        SubscriptBox["B", "i"], 
        RowBox[{"T", "+", 
         SubscriptBox["C", "i"]}]]}], ")"}]}]}], TraditionalForm]], 
  "InlineMath",ExpressionUUID->"ecf84161-f630-4107-88bd-0ad8e2dbcfd9"],
 ","
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.6448612691090956`*^9, 3.6448613230051785`*^9}, 
   3.6452089720821033`*^9, 3.6452092093737063`*^9, {3.6466655647360477`*^9, 
   3.646665578353272*^9}, {3.6863261744410505`*^9, 3.686326191382551*^9}},
 CellID->101825244,ExpressionUUID->"01995d33-6008-4efa-821a-2af3dd5a541b"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]], "InlineMath",ExpressionUUID->
  "d03f6e4f-7304-4769-871c-a4e2c4329376"],
 " represents either benzene or toluene (",
 Cell[BoxData[
  FormBox[
   StyleBox["B",
    FontSlant->"Plain"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "37879eee-d990-4442-a8d9-2422d9881b8b"],
 " or ",
 Cell[BoxData[
  FormBox[
   StyleBox["T",
    FontSlant->"Plain"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "8da9a129-39b1-4054-ad92-b64a2c9ec18e"],
 "), ",
 Cell[BoxData[
  FormBox["T", TraditionalForm]], "InlineMath",ExpressionUUID->
  "e6f32547-c59b-47f0-9c97-8846b271f15a"],
 " is temperature (\[Degree]C), and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "i"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "fdb27edb-26cd-40eb-b5dc-5527b84fb054"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", "i"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "b0d3c9f3-a17b-42d9-86da-a95a2cb77f22"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["C", "i"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "f4a08cff-054a-4d13-91ec-d8d6fd14d7d7"],
 " are Antoine constants."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.6448612691090956`*^9, 3.644861385905776*^9}, {
   3.646680521459852*^9, 3.646680526283813*^9}, {3.647022095822089*^9, 
   3.647022116652914*^9}, 3.689613457580124*^9},
 CellID->1549812350,ExpressionUUID->"44e2a7e0-c1ab-4714-9020-6fa50c2dce68"],

Cell[TextData[{
 "The fugacity ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["f", "i"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "a3a7c195-0265-4581-beb7-fe21086e95d4"],
 " of a component depends on temperature and molar composition."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.6448612691090956`*^9, 3.6448614719686985`*^9}, {
   3.644861509220829*^9, 3.644861546777978*^9}, {3.6448616032912097`*^9, 
   3.6448616044072733`*^9}, 3.6448622906455245`*^9, {3.645208996142702*^9, 
   3.6452090035360045`*^9}, {3.646665587887662*^9, 3.6466655908471613`*^9}},
 CellID->250155393,ExpressionUUID->"815bc4bb-2996-40db-af6c-2806c364cf58"],

Cell["In the liquid region:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.6448612691090956`*^9, 3.6448614719686985`*^9}, {
  3.644861509220829*^9, 3.6448615611818013`*^9}, {3.6466656117828827`*^9, 
  3.646665612358779*^9}, {3.686326211749997*^9, 3.6863262132964*^9}},
 CellID->118267598,ExpressionUUID->"d136d0bc-ca22-4c2d-a1ee-f57901ef909d"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", "i"], "=", 
    RowBox[{
     SubscriptBox["x", "i"], " ", 
     SubsuperscriptBox["P", "i", "sat"]}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"7a6bfb25-8adb-47ea-b21b-61f883e6d7a4"],
 ","
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.6448612691090956`*^9, 3.6448614719686985`*^9}, {
   3.644861509220829*^9, 3.644861608240493*^9}, {3.645209044332387*^9, 
   3.6452090515225277`*^9}, 3.6452092064539795`*^9, 3.6452134973251286`*^9},
 CellID->61668353,ExpressionUUID->"708ac121-a0e1-4f2b-98d7-dbfb09382c7c"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "112445a9-8704-45e4-82cc-377bde296da3"],
 " is the liquid mole fraction and both ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["P", "i", "sat"], TraditionalForm]], "InlineMath",
  ExpressionUUID->"fe7f8b21-f07c-48a4-afc1-25fced792cf2"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["f", "i"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "f35fd6f8-5916-4467-923e-60cb437150b8"],
 " have units of bar."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.6448612691090956`*^9, 3.6448614719686985`*^9}, {
   3.644861509220829*^9, 3.644861644604573*^9}, 3.644862292389624*^9, {
   3.645209058406365*^9, 3.645209094825083*^9}, 3.6466804847707043`*^9, 
   3.678556759878099*^9},
 CellID->97501916,ExpressionUUID->"bde4d4cb-e789-47dc-9f7b-74005aa7890e"],

Cell["In the vapor region:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.6448612691090956`*^9, 3.6448614719686985`*^9}, {
  3.644861509220829*^9, 3.6448616558092136`*^9}, {3.646665614550939*^9, 
  3.6466656156549177`*^9}, {3.686326215465804*^9, 3.686326215668604*^9}},
 CellID->359042034,ExpressionUUID->"9b0abddf-66db-4eb5-aa89-24f7c9b2740e"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", "i"], "=", 
    RowBox[{
     SubscriptBox["y", "i"], " ", "P"}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"bd916361-cb68-471b-b178-dab63f92630d"],
 ","
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.6448612691090956`*^9, 3.6448614719686985`*^9}, {
  3.644861509220829*^9, 3.6448616868389883`*^9}, {3.6452091039502363`*^9, 
  3.645209104565832*^9}},
 CellID->107577952,ExpressionUUID->"45763841-aad5-46a3-9ce4-8208030a2802"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "i"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "0f4a5d43-0e5f-47f3-908f-4055db21dc01"],
 " is the vapor molar composition and ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]], "InlineMath",ExpressionUUID->
  "3f2b1e94-1fd4-4628-a515-cde377bcc8a0"],
 " is the total pressure (bar)."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.6448612691090956`*^9, 3.6448614719686985`*^9}, {
   3.644861509220829*^9, 3.6448617010027986`*^9}, {3.645209121544239*^9, 
   3.645209177178689*^9}, 3.6466804891146193`*^9, 3.6785567654881334`*^9},
 CellID->182100021,ExpressionUUID->"e44528bf-5312-42eb-b494-43cd3bf414df"],

Cell["When vapor and liquid are in equilibrium (VLE):", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.6448612691090956`*^9, 3.6448614719686985`*^9}, {
  3.644861509220829*^9, 3.644861740169039*^9}},
 CellID->106451190,ExpressionUUID->"8fbbbb78-2f35-4002-b6e4-3c8402a1f82c"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", "i"], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["y", "i"], " ", "P"}], "=", 
     RowBox[{
      SubscriptBox["x", "i"], " ", 
      SubsuperscriptBox["P", "i", "sat"]}]}]}], TraditionalForm]], 
  "InlineMath",ExpressionUUID->"b3783770-df1a-4b1c-81b8-dba068426721"],
 "."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.6448612691090956`*^9, 3.6448614719686985`*^9}, {
  3.644861509220829*^9, 3.6448617731199236`*^9}, {3.6452091669262643`*^9, 
  3.6452092233983107`*^9}, {3.6452135200874305`*^9, 3.645213542912736*^9}},
 CellID->22464714,ExpressionUUID->"f7f07377-45a9-431f-9f1b-c84e4202642d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "References",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ReferenceCells", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "This optional section is for a more detailed description of the \
Demonstration than the caption, but it should still be as concise as \
possible. This section may also include numbered snapshot captions (e.g., \
Snapshot 1: phrase or sentence without an initial capital and without a \
period, unless more than one sentence is used) and explanations of the ", 
           StyleBox["Manipulate", "MRbig"], 
           " control labels. Define any symbols undefined so far. Include \
only text in this section \[LongDash] no code, graphics, etc. Do not change \
the cell style or copy cells from other sections. \n\nA book reference uses \
this format: \n   L. D. Schmidt, ", 
           StyleBox[
           "The Engineering of Chemical Reactions", FontSlant -> "Italic"], 
           ", New York: Oxford University Press, 1998. \n\nAn article \
reference uses this format: \n   D. Pearson, \"A Polynomial-Time Algorithm \
for the Change-Making Problem,\" ", 
           StyleBox["Operations Research Letters", FontSlant -> "Italic"], 
           ", ", 
           StyleBox["33", FontWeight -> "Bold"], 
           "(3), 2005 pp. 231\[Dash]234."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoReferenceCells"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "857aa108-8bad-49a2-9be2-c3ffe2196680"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ReferenceCells"},
 DefaultNewCellStyle->"Text",
 CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
 CellID->592881655,ExpressionUUID->"b532a8ca-43c8-4949-9b69-e48b91c1d2ed"],

Cell["References for demonstration.", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->423796343,ExpressionUUID->"79fc2925-05f3-4de2-a495-004b073f0853"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Submission Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SubmissionNotes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Enter any additional information that you would like to \
communicate to the reviewer here. This section will not be included in the \
published resource.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSubmissionNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "702c281c-1cfb-46c1-b0a6-13a945139146"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SubmissionNotes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
 CellID->797097429,ExpressionUUID->"de883e5c-6b6e-459b-ab8c-e2e9a2b5b51e"],

Cell["Additional information for the reviewer.", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->820829112,ExpressionUUID->"ca4351e4-4032-4969-87fa-3222a9fb8e63"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the demonstration in search \
results.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20,
         FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "10ef707e-1001-4385-9052-f94bf053e6e5"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->938146184,ExpressionUUID->"46bbb074-5baf-46aa-a980-0a883de9f0e7"],

Cell["chemical engineering", "Item",
 TaggingRules->{},
 CellID->720902404,ExpressionUUID->"e82890ec-8bd1-4822-96fd-bf55d916c96a"],

Cell["fugacity", "Item",
 TaggingRules->{},
 CellID->874890799,ExpressionUUID->"afad738f-dd18-48b1-add2-053aee1b3b79"],

Cell["thermodynamics", "Item",
 TaggingRules->{},
 CellID->939515199,ExpressionUUID->"fbff74d1-dbff-4803-ad3f-78616c97ac79"],

Cell["separations", "Item",
 TaggingRules->{},
 CellID->903878728,ExpressionUUID->"f472aae7-d005-4f98-b6c6-ac7b8b834e91"],

Cell["vapor-liquid equilibrium", "Item",
 TaggingRules->{},
 CellID->576624648,ExpressionUUID->"a6a6597c-a776-408a-91bb-52a2d3e8dd5d"],

Cell["ideal solution", "Item",
 TaggingRules->{},
 CellID->742276060,ExpressionUUID->"fe863cec-e81f-4939-9ac5-eeb5790d7b5c"],

Cell["P-x-y diagram", "Item",
 TaggingRules->{},
 CellID->544125060,ExpressionUUID->"12693d9b-3ece-42fd-94ac-6e26fcb62f99"],

Cell["fugacity temperature dependence", "Item",
 TaggingRules->{},
 CellID->572259038,ExpressionUUID->"7f8e5ec6-2fe4-433a-82cd-7a4a5ff50ae8"],

Cell["fugacity pressure dependence", "Item",
 TaggingRules->{},
 CellID->176398325,ExpressionUUID->"df39cf02-5f7b-40eb-8498-514ee62db642"],

Cell["Raoults law", "Item",
 TaggingRules->{},
 CellID->272391191,ExpressionUUID->"d9732abb-930f-4cc6-9a31-4e8ac47a1b39"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Categories",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Categories", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose categories that best represent your demonstration. These \
choices determine which pages your demonstration will appear on when \
published to the repository.", "MoreInfoText"], Background -> GrayLevel[0.95],
         FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 
        5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCategories"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "429e86ba-f23c-4e5b-b785-5442613cb4a4"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
 CellID->845692503,ExpressionUUID->"c5628096-e0b5-4bdd-9973-aa5edefb2331"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Mathematics"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School K-2 Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Elementary School K-2 Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School 3-5 Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Elementary School 3-5 Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Middle School Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Middle School Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"High School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"High School Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Algebra I"}], 
                    "\" \"", 
                    StyleBox["\"High School Algebra I\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Geometry"}], 
                    "\" \"", 
                    StyleBox["\"High School Geometry\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Algebra II and Trigonometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Algebra II and Trigonometry\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Precalculus"}], 
                    "\" \"", 
                    StyleBox["\"High School Precalculus\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Calculus and Analytic Geometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Calculus and Analytic Geometry\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Advanced Calculus and Linear Algebra"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Advanced Calculus and Linear Algebra\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Finite Mathematics"}], 
                    "\" \"", 
                    StyleBox["\"High School Finite Mathematics\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Statistics"}], 
                    "\" \"", 
                    StyleBox["\"High School Statistics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{
                    Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Area"}], "\" \"", 
                    StyleBox[
                    "\"Area\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Equations"}], "\" \"", 
                    StyleBox[
                    "\"Equations\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Exponential Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Exponential Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Exponents and Logarithms"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Exponents and Logarithms\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Hyperbolic Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Hyperbolic Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Identities"}], "\" \"", 
                    StyleBox[
                    "\"Identities\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Inequalities"}], "\" \"", 
                    StyleBox[
                    "\"Inequalities\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Integers"}], "\" \"", 
                    StyleBox[
                    "\"Integers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Irrational Numbers"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Irrational Numbers\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Number Bases"}], "\" \"", 
                    StyleBox[
                    "\"Number Bases\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Parametric Equations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Parametric Equations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Perimeter"}], "\" \"", 
                    StyleBox[
                    "\"Perimeter\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Pi"}], "\" \"", 
                    StyleBox[
                    "\"Pi\"", FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polynomials"}], "\" \"", 
                    StyleBox[
                    "\"Polynomials\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Pre-Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Pre-Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Prime Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Prime Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Rational Numbers"}], "\" \"", 
                    
                    StyleBox[
                    "\"Rational Numbers\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Real Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Real Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Trigonometric Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Trigonometric Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Volume"}], "\" \"", 
                    StyleBox[
                    "\"Volume\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebra"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Algebra\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Algebra\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Algebra I"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Algebra I\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Algebra II and Trigonometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Algebra II and Trigonometry\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Precalculus"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Precalculus\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Complex Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Complex Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linear Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Linear Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polynomials"}], "\" \"", 
                    StyleBox[
                    "\"Polynomials\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Quadratic Forms"}], "\" \"", 
                    StyleBox[
                    "\"Quadratic Forms\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Rational Functions"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Rational Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Vector Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Vector Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Applied Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Applied Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Applied Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Approximation Methods"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Approximation Methods\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linear Algebra"}], "\" \"", 
                    StyleBox[
                    "\"Linear Algebra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Numerical Analysis"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Numerical Analysis\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Operations Research"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Operations Research\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Optimization"}], "\" \"", 
                    StyleBox[
                    "\"Optimization\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Special Functions"}], "\" \"", 
                    StyleBox[
                    "\"Special Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Wavelets"}], "\" \"", 
                    StyleBox[
                    "\"Wavelets\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Calculus & Analysis"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Calculus & Analysis\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Calculus & Analysis\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Calculus and Analytic Geometry"}], "\" \"", 
                    StyleBox[
                    "\"High School Calculus and Analytic Geometry\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Advanced Calculus and Linear Algebra"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Advanced Calculus and Linear Algebra\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Calculus"}], "\" \"", 
                    StyleBox[
                    "\"Calculus\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Complex Analysis"}], "\" \"", 
                    
                    StyleBox[
                    "\"Complex Analysis\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Derivatives"}], "\" \"", 
                    StyleBox[
                    "\"Derivatives\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Differential Equations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Differential Equations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Harmonic Analysis"}], "\" \"", 
                    StyleBox[
                    "\"Harmonic Analysis\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Integrals"}], "\" \"", 
                    StyleBox[
                    "\"Integrals\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Multivariable Calculus"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Multivariable Calculus\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Real Analysis"}], "\" \"", 
                    StyleBox[
                    "\"Real Analysis\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Related Rates"}], "\" \"", 
                    StyleBox[
                    "\"Related Rates\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Riemann Surfaces"}], "\" \"", 
                    
                    StyleBox[
                    "\"Riemann Surfaces\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Series"}], "\" \"", 
                    StyleBox[
                    "\"Series\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Special Functions"}], "\" \"", 
                    StyleBox[
                    "\"Special Functions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Vector Fields"}], "\" \"", 
                    StyleBox[
                    "\"Vector Fields\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Discrete Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Discrete Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Discrete Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Finite Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Finite Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Coding Theory"}], "\" \"", 
                    StyleBox[
                    "\"Coding Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Combinatorics"}], "\" \"", 
                    StyleBox[
                    "\"Combinatorics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Graph Theory"}], "\" \"", 
                    StyleBox[
                    "\"Graph Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Networks"}], "\" \"", 
                    StyleBox[
                    "\"Networks\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Sequences"}], "\" \"", 
                    StyleBox[
                    "\"Sequences\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Tiling"}], "\" \"", 
                    StyleBox[
                    "\"Tiling\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Trees"}], "\" \"", 
                    StyleBox[
                    "\"Trees\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Experimental Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Experimental Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometry"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Geometry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Geometry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Curves"}], "\" \"", 
                    
                    StyleBox[
                    "\"Algebraic Curves\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Algebraic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Surfaces"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Algebraic Surfaces\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Analytic Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Analytic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Conic Sections"}], "\" \"", 
                    StyleBox[
                    "\"Conic Sections\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Curves"}], "\" \"", 
                    StyleBox[
                    "\"Curves\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Differential Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Differential Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Ellipses"}], "\" \"", 
                    StyleBox[
                    "\"Ellipses\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometric Transformations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Geometric Transformations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Higher-Dimensional Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Higher-Dimensional Geometry\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Hyperbolic Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Hyperbolic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Nested Patterns"}], "\" \"", 
                    StyleBox[
                    "\"Nested Patterns\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Plane Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Plane Geometry\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polygons"}], "\" \"", 
                    StyleBox[
                    "\"Polygons\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Polyhedra"}], "\" \"", 
                    StyleBox[
                    "\"Polyhedra\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Projective Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Projective Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Reflections"}], "\" \"", 
                    StyleBox[
                    "\"Reflections\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Solid Geometry"}], "\" \"", 
                    StyleBox[
                    "\"Solid Geometry\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Surfaces"}], "\" \"", 
                    StyleBox[
                    "\"Surfaces\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Triangles"}], "\" \"", 
                    StyleBox[
                    "\"Triangles\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Historical Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Historical Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Historical Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Euclid's Elements"}], "\" \"", 
                    StyleBox[
                    "\"Euclid's Elements\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Foundations of Mathematics"}],
                     "\" \"", 
                    StyleBox[
                    "\"Foundations of Mathematics\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Greek Mathematics"}], "\" \"", 
                    StyleBox[
                    "\"Greek Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Unsolved Problems"}], "\" \"", 
                    StyleBox[
                    "\"Unsolved Problems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Number Theory"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Number Theory\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Number Theory\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Number Bases"}], "\" \"", 
                    StyleBox[
                    "\"Number Bases\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Prime Numbers"}], "\" \"", 
                    StyleBox[
                    "\"Prime Numbers\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Representations of Numbers"}],
                     "\" \"", 
                    StyleBox[
                    "\"Representations of Numbers\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Pure Mathematics"}], "\" \"", 
                    
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Pure Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Pure Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algebraic Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Algebraic Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Complex Analysis"}], "\" \"", 
                    
                    StyleBox[
                    "\"Complex Analysis\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Differential Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Differential Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Dynamical Systems Theory"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Dynamical Systems Theory\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Group Theory"}], "\" \"", 
                    StyleBox[
                    "\"Group Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Knot Theory"}], "\" \"", 
                    StyleBox[
                    "\"Knot Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mathematical Logic"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Mathematical Logic\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Theorem Proving"}], "\" \"", 
                    StyleBox[
                    "\"Theorem Proving\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Topology"}], "\" \"", 
                    StyleBox[
                    "\"Topology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Recreational Mathematics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Recreational Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Recreational Mathematics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Golden Ratio"}], "\" \"", 
                    StyleBox[
                    "\"Golden Ratio\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mathematics Problems"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Mathematics Problems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Unsolved Problems"}], "\" \"", 
                    StyleBox[
                    "\"Unsolved Problems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Statistics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Statistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Statistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Statistics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Statistics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Data Analysis"}], "\" \"", 
                    StyleBox[
                    "\"Data Analysis\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Probability"}], "\" \"", 
                    StyleBox[
                    "\"Probability\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Random Processes"}], "\" \"", 
                    
                    StyleBox[
                    "\"Random Processes\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Life Sciences"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Life Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Life Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Biology"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Biology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Biology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Biology"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Biology\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Developmental Biology"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Developmental Biology\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Growth Processes"}], "\" \"", 
                    
                    StyleBox[
                    "\"Growth Processes\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Molecular Biology"}], "\" \"", 
                    StyleBox[
                    "\"Molecular Biology\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Natural Forms"}], "\" \"", 
                    StyleBox[
                    "\"Natural Forms\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Plant Biology"}], "\" \"", 
                    StyleBox[
                    "\"Plant Biology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Zoology"}], "\" \"", 
                    StyleBox[
                    "\"Zoology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cognitive Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Cognitive Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Cognitive Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Perception"}], "\" \"", 
                    StyleBox[
                    "\"Perception\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Psychology"}], "\" \"", 
                    StyleBox[
                    "\"Psychology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Psychophysics"}], "\" \"", 
                    StyleBox[
                    "\"Psychophysics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Ecology"}], "\" \"", 
                    StyleBox["\"Ecology\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Medicine"}], "\" \"", 
                    StyleBox[
                    "\"Medicine\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Engineering & Technology"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Engineering & Technology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Engineering & Technology\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Applied Sciences"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Applied Sciences\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemical Engineering"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Chemical Engineering\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Civil Engineering"}], "\" \"", 
                    StyleBox[
                    "\"Civil Engineering\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Control Theory"}], "\" \"", 
                    StyleBox[
                    "\"Control Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Electrical Engineering"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Electrical Engineering\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Electrical Engineering\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Circuit Design"}], "\" \"", 
                    StyleBox[
                    "\"Circuit Design\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Signal Processing"}], "\" \"", 
                    StyleBox[
                    "\"Signal Processing\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fluid Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Fluid Mechanics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Image Processing"}], "\" \"", 
                    
                    StyleBox[
                    "\"Image Processing\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Machines"}], "\" \"", 
                    StyleBox[
                    "\"Machines\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mechanical Engineering"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Mechanical Engineering\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Nanotechnology"}], "\" \"", 
                    StyleBox[
                    "\"Nanotechnology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Robotics"}], "\" \"", 
                    StyleBox[
                    "\"Robotics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Signal Processing"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Signal Processing\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Signal Processing\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Audio"}], "\" \"", 
                    StyleBox[
                    "\"Audio\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Wavelets"}], "\" \"", 
                    StyleBox[
                    "\"Wavelets\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Kids & Fun"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Kids & Fun\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Kids & Fun\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "School Puzzles and Recreations"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"School Puzzles and Recreations\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"School Puzzles and Recreations\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Puzzles and Recreations: Elementary"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Puzzles and Recreations: Elementary\"", FontSize -> 12,
                     Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Puzzles and Recreations: Intermediate"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Puzzles and Recreations: Intermediate\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Puzzles and Recreations: Advanced"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Puzzles and Recreations: Advanced\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}}, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Everyday Life"}], "\" \"", 
                    StyleBox[
                    "\"Everyday Life\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "For Kids"}], "\" \"", 
                    StyleBox[
                    "\"For Kids\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Optical Illusions"}], "\" \"", 
                    StyleBox[
                    "\"Optical Illusions\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Puzzles"}], "\" \"", 
                    StyleBox[
                    "\"Puzzles\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Recreation"}], "\" \"", 
                    StyleBox[
                    "\"Recreation\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Computation"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Computation\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Computation\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Algorithms"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Algorithms\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Algorithms\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Automatic Reasoning"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Automatic Reasoning\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Coding Theory"}], "\" \"", 
                    StyleBox[
                    "\"Coding Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computational Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Computational Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Algebra"}], "\" \"", 
                    
                    StyleBox[
                    "\"Computer Algebra\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Graphics"}], "\" \"", 
                    StyleBox[
                    "\"Computer Graphics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cryptography"}], "\" \"", 
                    StyleBox[
                    "\"Cryptography\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Data Compression"}], "\" \"", 
                    
                    StyleBox[
                    "\"Data Compression\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Image Processing"}], "\" \"", 
                    
                    StyleBox[
                    "\"Image Processing\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Numerical Analysis"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Numerical Analysis\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Science"}], "\" \"", 
                    
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Computer Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Computer Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Computer Science"}], "\" \"", 
                    
                    StyleBox[
                    "\"High School Computer Science\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computational Geometry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Computational Geometry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Graphics"}], "\" \"", 
                    StyleBox[
                    "\"Computer Graphics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Data Structures"}], "\" \"", 
                    StyleBox[
                    "\"Data Structures\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Finite State Machines"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Finite State Machines\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Recursion"}], "\" \"", 
                    StyleBox[
                    "\"Recursion\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Theory of Computation"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Theory of Computation\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Computer Systems"}], "\" \"", 
                    
                    StyleBox[
                    "\"Computer Systems\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "NKS / Wolfram Science"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"NKS / Wolfram Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"NKS / Wolfram Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cellular Automata"}], "\" \"", 
                    StyleBox[
                    "\"Cellular Automata\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fractals"}], "\" \"", 
                    StyleBox[
                    "\"Fractals\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Nested Patterns"}], "\" \"", 
                    StyleBox[
                    "\"Nested Patterns\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Simple Computational Systems"}], "\" \"", 
                    
                    StyleBox[
                    "\"Simple Computational Systems\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Substitution Systems"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Substitution Systems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Business & Social Systems"}], "\" \"", 
           
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Business & Social Systems\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Business & Social Systems\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Actuarial Science"}], "\" \"", 
                    StyleBox[
                    "\"Actuarial Science\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Business"}], "\" \"", 
                    StyleBox[
                    "\"Business\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Economics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Economics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Economics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "High School Economics and Finance"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Economics and Finance\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Macroeconomics"}], "\" \"", 
                    StyleBox[
                    "\"Macroeconomics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Microeconomics"}], "\" \"", 
                    StyleBox["\"Microeconomics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Finance"}], "\" \"", 
                    StyleBox[
                    "\"Finance\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Law"}], "\" \"", 
                    StyleBox[
                    "\"Law\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Political Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Political Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Political Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "International Relations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"International Relations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Social Sciences"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Social Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Social Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Social Studies"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Social Studies\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linguistics"}], "\" \"", 
                    StyleBox[
                    "\"Linguistics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Our World"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Our World\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Our World\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School K-2 Science"}], "\" \"", 
                    StyleBox[
                    "\"Elementary School K-2 Science\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Elementary School 3-5 Science"}], "\" \"", 
                    StyleBox["\"Elementary School 3-5 Science\"", FontSize -> 
                    12, Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Middle School Science"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Middle School Science\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Everyday Life"}], "\" \"", 
                    StyleBox[
                    "\"Everyday Life\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geography"}], "\" \"", 
                    StyleBox[
                    "\"Geography\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometric Models"}], "\" \"", 
                    
                    StyleBox[
                    "\"Geometric Models\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "History"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"History\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"History\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Classic Science Experiments"}], "\" \"", 
                    StyleBox[
                    "\"Classic Science Experiments\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Euclid's Elements"}], "\" \"", 
                    StyleBox[
                    "\"Euclid's Elements\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Greek Mathematics"}], "\" \"", 
                    StyleBox[
                    "\"Greek Mathematics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "International Relations"}], 
                    "\" \"", 
                    StyleBox[
                    "\"International Relations\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Linguistics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Linguistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Linguistics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Language Arts"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Language Arts\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Textual Analysis"}], "\" \"", 
                    
                    StyleBox[
                    "\"Textual Analysis\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Machines"}], "\" \"", 
                    StyleBox[
                    "\"Machines\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Natural Forms"}], "\" \"", 
                    StyleBox[
                    "\"Natural Forms\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Navigation"}], "\" \"", 
                    StyleBox[
                    "\"Navigation\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Solar System"}], "\" \"", 
                    StyleBox[
                    "\"Solar System\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Programming Functionality"}], "\" \"", 
           
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Programming Functionality\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Programming Functionality\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "3D Graphics"}], "\" \"", 
                    StyleBox[
                    "\"3D Graphics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Version 7 Features"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Version 7 Features\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Short Programs"}], "\" \"", 
                    StyleBox[
                    "\"Short Programs\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Physical Sciences"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Physical Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Physical Sciences\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Astronomy"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Astronomy\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Astronomy\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Astronomy"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Astronomy\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Solar System"}], "\" \"", 
                    StyleBox[
                    "\"Solar System\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox["Chemistry", {False, "Chemistry"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Chemistry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Chemistry\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Chemistry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemical Kinetics"}], "\" \"", 
                    StyleBox[
                    "\"Chemical Kinetics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "General Chemistry"}], "\" \"", 
                    StyleBox[
                    "\"General Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Inorganic Chemistry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Inorganic Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Organic Chemistry"}], "\" \"", 
                    StyleBox[
                    "\"Organic Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Physical Chemistry"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Physical Chemistry\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Earth Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Earth Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Earth Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, 
                    "High School Earth and Environmental Sciences"}], "\" \"", 
                    StyleBox[
                    "\"High School Earth and Environmental Sciences\"", 
                    FontSize -> 12, Editable -> False, StripOnInput -> 
                    False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Meteorology"}], "\" \"", 
                    StyleBox[
                    "\"Meteorology\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "History of Science"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"History of Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"History of Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[
                    False, {False, "Classic Science Experiments"}], "\" \"", 
                    StyleBox[
                    "\"Classic Science Experiments\"", FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Classic Scientific Images"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Classic Scientific Images\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Materials Science"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Materials Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Materials Science\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Crystallography"}], "\" \"", 
                    StyleBox[
                    "\"Crystallography\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Physics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "High School Physics"}], 
                    "\" \"", 
                    StyleBox[
                    "\"High School Physics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Acoustics"}], "\" \"", 
                    StyleBox[
                    "\"Acoustics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Astrophysics"}], "\" \"", 
                    StyleBox[
                    "\"Astrophysics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "College Physics"}], "\" \"", 
                    StyleBox[
                    "\"College Physics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Electromagnetism"}], "\" \"", 
                    
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Electromagnetism\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Electromagnetism\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Electrostatics"}], "\" \"", 
                    StyleBox[
                    "\"Electrostatics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fluid Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Fluid Mechanics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Gravitation Theory"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Gravitation Theory\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Mechanics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Optics"}], "\" \"", 
                    StyleBox[
                    "\"Optics\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Particle Physics"}], "\" \"", 
                    
                    StyleBox[
                    "\"Particle Physics\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Quantum Physics"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Quantum Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Quantum Physics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Quantum Mechanics"}], "\" \"", 
                    StyleBox[
                    "\"Quantum Mechanics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Statistical Mechanics"}], 
                    "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Statistical Mechanics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Statistical Mechanics\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chemical Kinetics"}], "\" \"", 
                    StyleBox[
                    "\"Chemical Kinetics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox["Thermodynamics", {False, "Thermodynamics"}], 
                    "\" \"", 
                    StyleBox["\"Thermodynamics\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Waves"}], "\" \"", 
                    StyleBox[
                    "\"Waves\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Systems, Models & Methods"}], "\" \"", 
           
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Systems, Models & Methods\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Systems, Models & Methods\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Cellular Automata"}], "\" \"", 
                    StyleBox[
                    "\"Cellular Automata\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Chaos Theory"}], "\" \"", 
                    StyleBox[
                    "\"Chaos Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Discrete Models"}], "\" \"", 
                    StyleBox[
                    "\"Discrete Models\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Experimental Methods"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Experimental Methods\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Fractals"}], "\" \"", 
                    StyleBox[
                    "\"Fractals\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Game Theory"}], "\" \"", 
                    StyleBox[
                    "\"Game Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Generation of Form"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Generation of Form\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Multi-agent Modeling"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Multi-agent Modeling\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Networks"}], "\" \"", 
                    StyleBox[
                    "\"Networks\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Random Processes"}], "\" \"", 
                    
                    StyleBox[
                    "\"Random Processes\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Substitution Systems"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Substitution Systems\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Trees"}], "\" \"", 
                    StyleBox[
                    "\"Trees\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Creative Arts"}], "\" \"", 
           StyleBox[
            DynamicModuleBox[{Typeset`var$$ = False}, 
             StyleBox[
              PaneSelectorBox[{False -> TagBox[
                  GridBox[{{"\"Creative Arts\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                  GridBox[{{"\"Creative Arts\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Art and Design"}], 
                    "\" \"", 
                    StyleBox[
                    "\"School Art and Design\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Visual Patterns"}], "\" \"", 
                    StyleBox[
                    "\"Visual Patterns\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Architecture"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Architecture\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Architecture\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "Geometric Models"}], "\" \"", 
                    
                    StyleBox[
                    "\"Geometric Models\"", FontSize -> 12, Editable -> False,
                     StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Art"}], "\" \"", 
                    StyleBox[
                    "\"Art\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Color"}], "\" \"", 
                    StyleBox[
                    "\"Color\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Generation of Form"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Generation of Form\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Graphic Design"}], "\" \"", 
                    StyleBox[
                    "\"Graphic Design\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Iconography & Typography"}], 
                    "\" \"", 
                    StyleBox[
                    "\"Iconography & Typography\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Music"}], "\" \"", 
                    StyleBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    StyleBox[
                    PaneSelectorBox[{False -> TagBox[
                    GridBox[{{"\"Music\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"], True -> TagBox[
                    GridBox[{{"\"Music\"", 
                    OpenerBox[
                    Dynamic[Typeset`var$$]]}, {
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    CheckboxBox[False, {False, "School Music"}], "\" \"", 
                    StyleBox[
                    "\"School Music\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Audio"}], "\" \"", 
                    StyleBox[
                    "\"Audio\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Music Theory"}], "\" \"", 
                    StyleBox[
                    "\"Music Theory\"", FontSize -> 12, Editable -> False, 
                    StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}], "Column"], ImageMargins -> 0], 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    DefaultBaseStyle -> "OpenerView", 
                    BaselinePosition -> {1, 1}], "Grid"]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, 
                    ImageSize -> Automatic], Deployed -> False, StripOnInput -> 
                    False], DynamicModuleValues :> {}], FontSize -> 12, 
                    Editable -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, {
                    TemplateBox[{
                    CheckboxBox[False, {False, "Patterns"}], "\" \"", 
                    StyleBox["\"Patterns\"", FontSize -> 12, Editable -> 
                    False, StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], ImageMargins -> 0], "\[SpanFromLeft]"}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                   DefaultBaseStyle -> "OpenerView", 
                   BaselinePosition -> {1, 1}], "Grid"]}, 
               Dynamic[Typeset`var$$], Alignment -> Automatic, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> "OpenerView", ImageMargins -> 0, ImageSize -> 
               Automatic], Deployed -> False, StripOnInput -> False], 
             DynamicModuleValues :> {}], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJy9Wetz27gRb5PYkh+S33ncXW+Y6fRupnOednrT6Uy/MbKdaOKHavpyM/\
0Gk7CEBiRYkFSi/PXdBUlxQVBy+qH9ZAsLLBa7i9/+\
FvR3ToONIF9IHmzeFHla5KdBbzTj4UcePTzJnl2KLA+2YCCGf/QiGN7NuI5VtEhYLMIMFo9zHmc+\
qNm5YjnMYzmM+7unwWEQzpSSHh1+eRq8Ppc85knO9MKrZrw//Qud9fCbct/OuT+f/rV77qsrEUWSe+\
6uzZwX78R01jHD758GJ1Tmyym/\
18wbN2uPqfwtVzEHfzTiHzuXjz2WRN6dFlOVtFdYxkw0D5kMC1kQc/9IZ4wqsdHoJ0wuwPIOQ/\
5sGRLNWRLyyF59KRLOdG1ls/R7uvRCJCLn3X58TicGOUgze8IzX3OieOv83wVMUgmZcnL+\
OVUJBFcw2KxIwpb8ZS2vbFZTpkU+\
izMakkXK9b2S4IgODdvjCNXngpPB3XHCwRjZGu6Pk5xPuSZDh2OtjdFg33UR31vC3XLEe8MyquZ4wj\
TDgIBFHWfemnAtQMx1M/ZkIpofOxMlF5Ap4JOMjmp+\
6kRrMEFdrmn7t6utvuVdwy9Igna7cvODkkXMm4FeZY6/9fjN+\
V9cjb2RilPJP7uHGa7K7m7f7v2jYBHGGc6tNM2uw6UfOxwy/\
MDDXHXscuSnqRRw4yi89MBJMK7VZxEbpd4Vz2cq+hqzD+\
GEkDXggvLWZ4KsOrqBC1BmmXfLM1AQzki4b9JcxOKLmdAMHwQpD1fcuv6vbM4lz+keS+z4YWmBv/f/\
R6f+yMmC/ToLXM/snIHT5nDyOb2fz8/\
EwwPXFep03NCDdwzKWwK2uyq3DEZoK32eXxUS9gBoYvdQfFwTB+\
bKucpgXLIczg5Zxq3bKyBrksQLCv3AQiraDOBIdGBdIAdVgl4ILmmeHZ+JLNTcRnasf18N/\
oORikQy9YAJKBpaGI/vRcJgV2v+7lvN0pkzvX/N809Kf6QODgCaeWIf+\
k5I2K0Z2LjTnE7AOmFQFWjCirLfr/\
PQP3m0ju9XeQcZMCq0lTyHjchdR4Ru5A7W3IjhyKRbwB3Mbe9/YiWvq6l/\
LqVIrXr0qpoFG9xpBtoB4top/y06hOvTM/RhViKeq/yI1FpXunfNM0zmCcuhuFlAOZEs4V3WIhxPW+\
URhmY8svB0otW/0DfzLiU7t/xBOp4bBmBm1LWnG5otqEAsmUoLJd7BH1ViLr0lzyCS50UIun/\
MvIqakmXfXKgiiSo0Vg/duXjwFtL34wrZL0mm5Bz9qBXACa1Gg4pwlNfIf7qSgqyiBd/\
c8lRDiUjyxkKXO0wKbSPD1iN5vwaCH8vXl2dlFwHCYJFhG+\
GABGCHKlJneOd9onJn9LCxG1QCYRQhyVAzm8fo2rkFKP07lSqpptSyWw4YWZd/6g70+\
1slgVh6hh4QYCXTOuK3LrbbDYXGHHuUXQ/\
OWM66ah6qZvcAmDmN0C1UVWUODplv5coOBq8oEwJ33oZIq5JlY+CP/\
CJX5kRALlgGOEX9tqoOPCdKO+O+X07gHTX+\
YCkyRcOuIyO9SHM1RQHVZpyB6yC7M4vo7I9jNuX1wS3j17KqxsAgFFiPkMB9Z9Gd1oT/\
4vTrjrhnzhLkughzuIj0LlUVGdMBL2g4A5ZEYQwyttD28U/KyOBFJ0Z1HrO8fmTp9fvA+\
5P3q5IP0M8s3bCB5nMpC4kErUwOytAuNAtzm16vLAzfBQKBw7P95VhyHBT3kP55YWizIz6YzCB2BkJ\
KGzN/E7zhZ7nGtmLhP2n3J7WEJBaUC1Y7gbh0+eqBKi0lSwkNK46hIe8hMm3M5wnQ9M51R+\
NE6SlDCtCl9Wa17HB59A7h4JzpfLYMHHjhJ3qAUops+\
zyZC3BIRZ9qJxKIgE4FsqgFkIdlhTS5Rfb4diQZXLSwHvMabkZJiTUrFw/wr7mp1GWAprAScmmp/\
7fY9WkIEpPSQYFe6YzMHyBVod1jOU7C6oeqaAHqrsmKtD0VmkwpOSJIW7J/jqxDQ/\
5PMdhZjNYNq8Esb9X1vQtZAB+\
54uEMg0kpJWDAXJTZ7wDpVseCTWzpLEsmEEoRyg4jsbVN8iKuJWjjQT3WoftkWWuw6NVyjOu65G69C\
BKijq0krVqX4oE31xTKTe+NMHmF8GoFrRqnVIJDW6rSKk0d+T7whE+\
Q0R017uBKQVgMYjnLBtcMcBYbKLv1HyBpzd35vX+q1gig+\
RSAGdlpnadAEbYnXIc8teF2e5It4HgtC8pBJ/V652FrZv+\
KRyIE95OL9KbIsAxgZx4o0wlWAIkePfChiGBjKt0q1a9XkmyDHfF1pCQ5ry20qCUGMaASMUvZEMqRV\
ryeRAWiW9BzdDy9ZJ8oqit8oCOwjrn7AvtvndSlwjTQNvHfq71QJxmif02kKlFeRFYTvXMJxKBoU6x\
XlSN/8q5UxCV6uHqywaftdUVwdzRjymWye03fbRSSCmc3sO2HoY6iuvOWAcN36G9ZZQyUACxjSlN2i\
u8UpwCykNfGApsDu834Gtr4SE12O/RkCskGZwS2+\
IN3B8iSlPceXPmirsvVs5lbgY6X4EP00Bso5mKFDHtrAGTpctQSqttaMV+GI6HDQuTeGc/\
E1Ho2g59MdtLJ1Qi/\
hoP2XRr3vNaw6rTDawatz9KDRNmtulct2uEYjOfb8OECkL6l48Vv66bQwP20jDBCv+v+YONgSsc8/\
FjjzDuxP9Q48sH5nOtFxBYeFgxiFXBph/w37xvta9WrKAoWmq/jJet6+3Vt++\
O4RDEGY3Bcnf2SwTCmh6/pZvt3/DNAd1dr0pEzq4rY9jVQi2mL86/guoORaXfnpSX+\
dgOb8Nugfvs27H0QGZroEvtdX4OJkKPYwiBurwnSU1BPgAP4liKfRtYi2rBqnxzLXo6x4JSZgnCzSJ\
202biC8heaZr7+GIgDZELrkuwaufuG6Z5++72IsFpcFAm2Dd/XNLT48kXysoA2jwum1P5+\
hezvXnOhGv1/WDnbZGEMJAGYczP/9cr59ev74zevD5738Fy0MUnL+\
jyGQpjZ2d6rtiROaTYmJRZwCQITx1gW6hds/DBnXrd2fj7raJAPP3DT5Hp/8y44a/\
XIw2CmIFsrtfTSwBDc93wRbN6p1Hy27t0YdpZlW8s3DvzwjV+5WoND49cUSrexH/qHZIH1j+\
O9HkEnoeJxAh1stnEBRZo3g1gUs2fXKuHmw1umCuCEkI08GJzxGPbOy9SuPmZBIx5V+4+e/\
gfqo8Fu"},
 CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
 CellID->354685201,ExpressionUUID->"e15e7588-fc42-4cb0-bf5c-3909cd5b8819"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Demonstrations",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"RelatedDemonstrations", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Enter any additional information that you would like to \
communicate to the reviewer here.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedDemonstrations"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "a1ebe371-bb94-4ad5-a88a-628e140691f8"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "RelatedDemonstrations"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
 CellID->1132753,ExpressionUUID->"0423ebab-3692-4888-b839-8a4069bac556"],

Cell["Link to a related demonstration", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->919579287,ExpressionUUID->"a0b3032d-3763-4fa5-ad7d-5b81d45098fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "External Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExternalLinks", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Provide hyperlinks (not just bare URLs) to any relevant \
resources.wolfram.com pages, with the page title as the linked text. Links to \
", 
           ButtonBox[
           "NKS | Online", 
            BaseStyle -> {"Hyperlink", FontColor -> RGBColor[0.4, 0.45, 0.5]},
             ButtonData -> {
              URL["http://www.wolframscience.com/nks"], None}], 
           " should use the section title, not a page number. Links to \
non-Wolfram sites go in the Details section.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExternalLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e0ece831-5a5e-4b36-ae53-f785e1cab12f"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ExternalLinks"},
 DefaultNewCellStyle->"Item",
 CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
 CellID->843468725,ExpressionUUID->"54069e62-359b-4731-ae26-2cf194e181f6"],

Cell[TextData[ButtonBox["Fugacities in an Ideal Binary Mixture",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/FugacitiesInAnIdealBinaryMixture/"],
    None},
 ButtonNote->
  "http://demonstrations.wolfram.com/FugacitiesInAnIdealBinaryMixture/"]], \
"Text",
 TaggingRules->{},
 CellChangeTimes->{{3.7572581875531693`*^9, 3.757258189039184*^9}, {
  3.757258220326434*^9, 3.7572582410426598`*^9}},
 CellID->229222309,ExpressionUUID->"7fd5c811-154e-4173-b9e1-713dbbd8d714"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Symbols",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"RelatedSymbols", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "List the names of published resource objects from any Wolfram \
repository that are related to this function.", 
           StyleBox["\n", FontSize -> 4]}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedSymbols"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "23160d2f-60b9-4aa7-bb01-171f27560256"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "RelatedSymbols"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
 CellID->899564547,ExpressionUUID->"a3f28ff4-b169-4390-bb2b-dd8e7747ed1f"],

Cell["SymbolName (documented Wolfram Language symbol)", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->699278082,ExpressionUUID->"0d76a3e7-f211-4108-84b1-f8c203fbe30a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Published Date",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"PublishedDate", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"If known, the date Demonstration was published."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoPublishedDate"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "581f4577-9c4c-4d46-bf58-eced1c6a5e92"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PublishedDate"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
 CellID->364555554,ExpressionUUID->"65d5513d-50b3-4bac-b4e8-25967cfcdc42"],

Cell["2019-02-07", "Text",
 TaggingRules->{},
 CellID->583889232,ExpressionUUID->"61e1bf0b-a156-42d3-bc2c-428ba1e5b16f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your demonstration to ensure \
it is discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "73b840ef-2efb-4e12-9a0b-afba7d99548a"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->618273920,ExpressionUUID->"89b5c174-dd49-4444-8f47-58bc8d95913f"],

Cell[CellGroupData[{

Cell[TextData[{
 "AR Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityARSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your demonstration is expected to be supported \
through AR (Augmented Reality).", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityARSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "a6399748-b335-435e-ab18-aa4069ef498e"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityARSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellID->458960555,ExpressionUUID->"5e4bf9a0-082b-4143-b5a4-f585951af066"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, False}], "\" \"", 
           StyleBox[
           "\"Supported in ARPublish (Augmented Reality)\"", FontSize -> 12, 
            Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJw9j8tOwzAQRSlKKOW1ZJ0lVPJHmCCkSIhWGX7ATSfUwvZYnvEif4/\
NazlH9zFXXyloQRaHcLHLErMoWPcnnD7xOJ9x82q5kHYQ9Dyvfu75nJsxF8cWcoyUBI+dDZ0e9/\
ngLJ+6B50/PIbKRzTOyvLI7YtxjAou94kiJlngvicfjdiDrQo9/oaV/l0US4F5o7OQL5KpPkUu+\
8D9SsHdULJTTCimCmH9ROTQBAXXfeZiGUIZ8l/5B+\
sGbt4oFHYzIlNOE74vEeH2GX0plPSd9wX8smDe"},
 CellTags->{
  "CheckboxCell", "CompatibilityARSupport", 
   "CompatibilityARSupport-Checkboxes"},
 CellID->132666508,ExpressionUUID->"67e3d26e-033d-4569-898b-1f74cabf5837"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "98bad25e-d265-4055-b7dd-20582331f3fc"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellID->890453227,ExpressionUUID->"3b254ef4-257a-4a47-9223-372504b1f583"],

Cell["6", "Text",
 TaggingRules->{},
 CellTags->"ScrapeDefault",
 CellID->855801078,ExpressionUUID->"51f631f4-554f-492d-8740-ec6efd69d5ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your demonstration is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "f0445d34-0147-45b7-b202-2b98e460edd7"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellID->88638282,ExpressionUUID->"f44e9e7e-75e6-486c-a84a-8e703b312159"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[True, {False, True}], "\" \"", 
           StyleBox[
           "\"Supported in cloud\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxFjkuOwjAQRAUKf4bF7NhxgRwCjJAioQHRXCAkjbCw3Za7e5Hb4yDQbEvvVdV2XsIIpH\
MI45NKVClhYh7YPLG9D7g4WhYurkkxc5Wg5296H3Jx0ez9gsZISbDd2LBpHGn7NabnRBGTdLA25GMt\
9madlc700EfLe6colgLzbKtCPlNNf4Kc+sBmUMKqCoIpJpS6B2GyI3JYhxIWRjkrVcjHeXSoHeN/\
2L/l4o9CzpYXZNLU4LWLCD979HlQ0rvvBXKCW6E="},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->533929727,ExpressionUUID->"2f6ca710-d1c3-46f1-8d4e-d31e9c2997e8"]
}, Closed]]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
TaggingRules->{
 "ResourceType" -> "Demonstration", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> "2024.06.26", "CreationTimestamp" -> 
  3.929152059001058`16.34687382558368*^9, "UpdatedTimestamp" -> 
  3.929152059001102`16.346873825583682*^9, "CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWFtv2zYUri+\
5IPEyNECB9a0PeciCbR2GAduaXerJSeohSZPQ6XNo6UgRTJMqSaXxv98hJTm2I7mS7WCdHxJapL7z8\
dz40X5N7TpiGImYe0f3kQSlQsH9mlq7jEPQfj13uq7qXR//\
Ntrcw39rRx9jytTO3geQZv48HvZBSt9+9t+aFYQO4RIHLSeWErj+QFkM/\
jO1e3SHI6rNW0JDX4gBrmqehkqrVo8GQciDq5iBIq0rUCKWLvRGEZBmh2qKNJvvuQuFLNf+\
ZsIdmGUJ4J4juIZ7fUH1rd8o2vk5gKfIfmaPjJSGocNCpH3TAT/\
k4STdm4dXXhlS2Wt5S1XzPGYMif3weDI1cAUBUgWJTP0wiKV1zXi7f5UldQWRUKEWcpQAJjgqBWrY+\
NXU5jENWSwxMjX11QV1GeguV5oyRr4pYuivL+Lshdza6ompyGwRLTEf/hGhsdc4o5HdQ8xd86a/\
llgmLwuda8lRZdJ6O8EiEQu1eUyY0E6N1G5I/c0fEw/qh1uWPOavIt+WJX/\
gNwu81CBg7G11xCdui0Cp38qiZoP3scYwgmcKagsjzagLbcyrFcJum6LrAKMj8BB3+\
51gHgYSE5OrP8sCX8jwDgFv7pK2cCIBv0m1cc1V2g5yvNGpik6jCLh3zW8p9xh4DjCm5jpmVRbm+\
Ai/VvaSi7DY8VIE8rwHQ9yABmPuRIo4Wh4Ua7fVZmaE7eAOE/\
qFg4sCIUNQ3zu34A764h4f7zw8NtZJK5uz33bQHo2ZtvXNdQ5T8nX2iEBSm7mhLt3NxoFQg564jjwc\
p32/OMorAJ8KcAMfbGQlsHnCRJ+\
ym1tzpE16VP1S1uwJ6Heh5wFPGlH5cj2m3B05tyJ0oRNSJoJJYq2UmNR4SuL5ik2Z8kEedYqzz+\
2sOZMIfIwBd012Uw8wLzN4icfFeL/\
TBibAsiNlrSdjW9pLdokqh102yJIulSHqp6oUeL9KjaVSZtbqlIcyf57Dp7E/\
c32cFIg6q0p5L1ZwCgF1R92AC5l0pyzWqmmikV98h2Ut5eDOFN68MlzSzLweW1frp/\
imbYzHVf0WgM7a2LTFlZUSlsQ2Mgfsi1SBegq6hdWIEtqq5nWzutsxdWn5qY0u9uwAM3Wzy62x0Wec\
3BizLth4Cly672U7UuOT4RFs/8HbY/MTNmvqqPIxSLngoUvZhRQRoLesnluU8wTR/\
EtEPW2GrbZSwg2t9r5U7cq1HaVsyQjpj4YmhzbbVoz0xGrgbJqQHWKBzkBTz9wP0hsY2XRCnVxAXiY\
rXl+BD9Jk96ts6qG7rCYqE0ZnaCW3p/EdKrmCNk/R54+uns/s5+\
At3gmWuazMuUlU0PcHhSjVBH01nHkK/udCJLwEDmgAxMWAVNPt14WYyWmXlweJsYWF/JOZnK/\
sS3qvjJ5fCOoLU/EXy0ehgqx/CmuL6Pz9Qh6zwr64bP8nSn6hboEAP362X81KZ2fp4FoF/\
7oQ5ikkezHpKfcsLNS/K8RfTplXxS0rxX8v54//VoAvRfILkt2/\
Fu6DuJJG2H9mK2QZ3X1Y8rjKVdsLU11Qbnfn/Mae/TiO1RZHs2bny+6Vwq5Sfi8TnHKi+1+K4NOh"]\
]], "DefinitionNotebookFramework" -> "DefinitionNotebookClient", 
  "RuntimeConfiguration" -> {
   "Contexts" -> {
     "DemonstrationResource`", "DemonstrationResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Tagged", "HintPods" -> True, "LoadingMethod" -> 
    "Paclet", "PacletName" -> "DemonstrationResource"}, "ToolsOpen" -> True, 
  "SubmissionReviewData" -> {"Review" -> False}},
CreateCellID->True,
FrontEndVersion->"14.1 for Mac OS X x86 (64-bit) (June 13, 2024)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell[
       StyleData[StyleDefinitions -> "Default.nb"]], 
      Cell[
       StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
         Cell[
          BoxData[
           TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
          CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
          RGBColor[0.7508, 0.17868, 0.085283], CellTags -> {"MainDockedCell"},
           CacheGraphics -> False], 
         Cell[
          BoxData[
           TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
          TaggingRules -> {"Tools" -> True}, 
          CellTags -> {"ToolbarDockedCell"}, 
          CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}},
           CacheGraphics -> False, CellOpen -> Dynamic[
            CurrentValue[
             EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
       PrivateNotebookOptions -> {
        "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
       CellLabelAutoDelete -> False, 
       CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
       AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}]}, Open]], 
   Cell["Hint Styles", "Section"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell["Template Boxes", "Section"], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              StyleBox[
              "\"Add Snapshot\"", "Text", FontFamily -> "Source Sans Pro", 
               FontSize -> 11, StripOnInput -> False], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1953907064413444837; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "AddSnapshot"; (
                    Needs["DemonstrationResource`DefinitionNotebook`" -> 
                    None]; DemonstrationResource`DefinitionNotebook`\
AddManipulateSnapshot[
                    ButtonNotebook[]])]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1953907064413444837]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7071186616034202283; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7071186616034202283]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4937992391498864149; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4937992391498864149]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Subscripted Variable\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert subscripted variable placeholder\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    168721804526114855; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Subscripted Variable"; 
                    DefinitionNotebookClient`SubscriptInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    168721804526114855]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4246462567992284997; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4246462567992284997]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> GrayLevel[1], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.5489, 0.092317, 0.067842], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.88722, 0.77308, 0.76696], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3Ixe3bNuZmzrI0hiAgGyhCvCF3L11cERnS
IyGIiYDiQFmChtw4dnSaoRZQ/URl2UOtjS8unIcgIBsoAhQHygLV4DHkwc0b
M0z0gCqX+Xp8efkCLfyBIkBxoCxQDVAlLkPWpSUB1Sz2cPr9/TvWeASKA2WB
aoAqsRpy48TxXinhPlmx9w/u40kPQFmgGqBKoHpMQ3bWVwOt2FGYSzBdAdUA
VQLVYxqywM0BKHVv726ChgDVAFUC1UM0QpI0hD1FWxUohRmemACoBqgSqB5u
CBBQbghVXELdMKFK7FAlnVAlxVIr7zyjRi6GAMrLEzigsGQjFVDREPyAmHoH
APEDg3E=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I9T2bD1Ykb/TUgiAgGyhCvCEPrlzYnea7
XJsNEwHFgbIEDblz8vA6R0Wg+tV6HOc9pV/HaUEQkA0UAYoDZYFq8Bjy6Nb1
9S4qQJW7LAW+pOj/yTZBRkARoDhQFqgGqBKXIfuKooFqdljw/8wwQjMBgoDi
QFmgGqBKrIbcOXV0uS7HCh32D0m6WE2AIKAsUA1QJVA9piHHOsqAVpxwFsdj
AgQB1QBVAtVjGrI1xAIo9SRCnaAhQDVAlUD1EI2QJA1hr7GRBkphhicmAqoB
qgSqhxsCBJQbQhWXUDdMqBI7VEknVEmx1Mo7z6iRiyGA8vIEDigs2UgFVDQE
PyCm3gEAQ+/Dcg==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYInlEGaG3I69evv3z58gsGgGygCPGGvHjx4vv371g9
DhQHyhI05OXLl79//wYK/vz8+cTEvsVuDhAEZANFgOJAWaAaPIY8f/4cYsKT
k8en6ar3SAgiI6AIUBxiDlAlLkO+fv0K5D4/d7ZfXgLNBAgCigNlgWqAKrEa
AnTkv3///vz8OdvMAKsJEASUBaoBqoR7CtmQT58+AdmXli7CYwIEAdUAVQLV
Yxry8+dPIHtNZAhBQ4BqQCH/8ydEIyRJQ9h//vwBsjHDExMB1QBVAtXDDQEC
yg2hikuoGyZUiR2qpBOqpFhq5Z1n1MjFEEB5eQIHFJZspAIqGoIfEFPvAACe
kBKf
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> GrayLevel[0.9], 
               Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
               Automatic], FrameStyle -> Directive[
                GrayLevel[0.9], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert comment for reviewer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7544339529118446740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment for reviewer"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7544339529118446740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1923617830619908649; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1923617830619908649]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1439263868824766472; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1439263868824766472]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              GrayLevel[0.9]}}, 
          GridBoxFrame -> {
           "Columns" -> False, "RowsIndexed" -> {1 -> GrayLevel[0.9]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[
                 RasterBox[CompressedData["
1:eJztnXvQFlUdx0ktEbIsMsnKUWqaLkOYKWNNiHSbQUrtRdLUerm8L+AlbJBE
ur7gIFlmzeQ4iOIlanTGCyT4RzPZWDKKt1E0TSP6OcZomhI5mpFmnc/s7rTv
tufsue3zHHj44+Mg7HMu39095/wu5+xhs8/pm7vXiBEjzh2p/tM3a/GUhQtn
LZl+gPqfGQvOPWPegsGBqQsWDc4bXHj07L3VXw4oZir2Ucj7dmlOyel2O3qR
0YptOaMTaE+vsULxn5wLE2hPL/Fexc6S/jvzv+t2u3qFW0vaF2xIoF29wLQa
7QumJdC+3Zl9FVsM+m/Jr+l2O3dXlhi0Lzg/gXbujrxT8ZKF/i/l13a7vZ1m
kuKNLZZ/vYX2Bde12I79FZMT0LvKKsUOxQ8Vh0Yue7KD9gXHRG7DOMWPFC8o
Lk9A7yrLSn3/t+JmifOc7KPY7KH/5vy3ofVPUaxTvFYqeygBvavM1+jwgGKm
+K9LzvbQvuAszzpHKmYb7vu8BPSucnyDFs8qlirGOpR5oOJvAfpvV7zNob6D
FRco/tpQ7ucS0LvKREtN/qVYo/ioRZmrArQvsBmrafvP87bZlHlEAnpXeYeH
NhsVM6R+nD5Sho+5vrym0Ys6v6i406NMl3e4U+wt2bzro9GTivMUb83Lep3i
rgjaF9yVlzkirwMb7c+eZb2q2CsBvet4OlAnbKeVim9F1L6AMhmL/hFYzlMJ
6KzjvhZ0S417EtBZx4YE9GmbWxLQWcflCejTNisT0FnHUAL6tM13EtBZx9wu
acIak3nxMcWjir/I8PhkTAYS0FnHcR3S+znFz3Itxku9b4P15nsUp0tm7/09
Ut1TE9BZxxEtar4z1/yzktkarm0bpRhU/DGwHYcnoLOOsS3o/rxkfqO3R2oj
du85kvmRfdpzUAI668AufDWS7ujzbWkvpsPYdI9jm16R/9nRqfJUJP1/L1kc
63uKryg+rHh95La+QbIxzbZN2xLQt4m7I+lfx4uS5f4wfsSK8fI8f9+y/rsT
0LeJdS3qX4Y1568VJ4nffFzlEos61yWgb5U3KT6t+KZivcRb57nwJ8WXJcwv
yW9vaqiHvuFjwZfHOuzNHdaa52yCZPG31ZLZOjF89LHA/xeyPmSuf8yhPvrO
PHW1ZPHXj0icmHMB8bg+xUWK28Uu/6bbsEbBv++7TpmQl+FbPxrdofiBZGPj
uyzrxT4hh+frihslm+u7rWUIN+Z98rkHyyO3hTUh+SCLFcfK8DU1efTkKMRa
t8fiGcUmyfy9NyjWijn3sw7mZ5+9GfwmNJZkgjghuRWsrXnmX05Ab3xm+HbJ
oyjbuqzR50gWn/y84gDJ7GzyUh61KPdXeRmu9+CslvtLHO4TeV194h+7DeUh
yfZw1WlE+74rWWy/TiPWLP3SnC+y2kN/xq7nWuozWn+hUp8uf6otyFWcLfo1
I+vJGZZacX/uaKjvdI97cHFLfZ+rqW9ZS/VVuVfxbkO/eaY/6agV788thjrJ
43L1nR3eQt+HDPWxZlvdsvZotJ+hDeRbnuCoUwFxgI2Guq/yKPOJiH1fZVEf
Ntb6lrS/TcxzIbb0Ek/tC7BZdPMBazzXfXpXROr7WrH3kzD3+OSFmdgq2drF
VO+i/B6E6A/9hnZc5ljWnAh93yjutsgYyWzrGNoz3x/dUB+5tnV5xYwpX1Jc
I5lv4MW8THJreUbIl/1A5TeMow9o2vKCoxZHBfb9EcVbHLUvOETi2ME2ORus
t8u2EjngrPlt1oDMrdiRh5V+f5rh+j4HDcYE9BvtbP0POohvh/g0se1s1h2L
S3/mmXO1dZk3iO+enJcxSvR2pas94OMP4pn4UKD2Bezl+aen/jbjLXt7Tsr/
3G/oL/PnhlzrMyQ7d+B3+b8xLmE3f1yxIC9L509+3LH/Oxz7XLZtYzFd/Gxk
m1z5WZLNzfMM5RCrfX/pN325juVriv0uvLO8C18zlGdaA4foX2fbxuJMR+23
WpZb+HZ09xc/XHnO1I3t15auIT7yY0PbXMYGF//Y/Ja0L3CxkS+1LBNf+fOa
MtiTMq50LTEn3fNYjQ+eZ2jbpyzbNtqhv0tb1h5cbORTLcu831DGmsq1A4Zr
q/PqDMO1J1q2bbxlX6/sgPYFV1q2abxleQ8byqj64K4yXFvNzVwTQf9TLfvK
ve9EbtBSy/aAbezjQUMZiyvX6vIrGJPK8XDGLN1+OuaZKZZtu9Shv8ta1t7F
R/2yQ7mbDOUwh36mdO21mutOK10zylAmMXPWxOW1lImtDn2GM1vS3jVGs8Oh
7BsM5ZBrxVqyGMuqcanHZbg9i66mvELshq+KXS6dTz4xGk2PrL1PjNJF/xWG
cm7Kr+E+YFthYxU+IHwr2GC8l9hk2Ga6ODZjUX9e1iLLdl3moT9gq8Y6f4J1
ss8e9Fcc6phuKIf7XthK+BYGxe4coDL47SbmZeADrs4pdYyVsLg4Phvb9YcO
fEch/rcxlvVwRoApj6u8jsXHxvti80zguyMXaGTp98TVmnyxsDKg3wVod4in
9vhMHwms/yiH+kzxBnzJ1bUdPucL8t9tz68j94n54KeSvSsja+pZXlNWlY9J
vHwEfPi2z2EB6wdTHM+WOQ51mnw/0O/Yhzo+KMPXSXXgh3Jd8zRxp9jHHBgf
10aq9woHbYh7mfxcxBQPDtCeZ548SlOOLrHR2yJrX7Be7OKPMc4cKXjCUaOh
hvJ4J33PEWJdbvK5Mceb8idi0GQjN/XfB5d8ZOzlpnMx0Mg1nw3fqmlNTi7M
vS1rX6Czkdvau3uxo1ZN5zjBb8X+DBj2Lp2s+TfGIuYo1/hKKFUfNfGCtvIP
WQO6xDrgJxblMh/0i348Z38Sz1rdWpP3h5zHhzqsewFaFzY7cbLQM1macD2H
DX1+aVk2Objk4vI+sHZhrMHvPyjDxynsZvK6OKPimS7pXgbbDr8COdCbpd38
W3K5XfPAWQ/9xqOuP0i2fsOnxJpjUyJ6l8FHgk2zotRf9gQcK5ltzl6BWPtI
C5Y76g+smdtek3QC7GD2g7C3ZZLY2wL4H8hLID5IfnHI/iP8QRM87gHrNfZh
p7Y/RAca3S6ZrcEYH2KzVGFvGXvMmL+vlsy2dtl/hx/Mdz875/Hpctq6BX3H
R8O6Hvud5yvGXlgXiDmRa8CeTPy/Tbla+JN994nyu5mS7Tftht70jTnlG5Lt
uY2Rqxqbmy36cUlgHbyHvNv4Cjq5byfF/ddVbM8fYM9/jHg168r5+X1v2ocU
yq5w/oBLvICzL3z2xpkgv5/cBvz+rPV/If+fJ+dLymdPAs+za64qsdpxkeqv
wlzP2sn3rJ8qKZ+9Cgd59gt9yJmNtXefMYk8GV1OXQgpnj1cELpfjbPB8Bv4
7Ftn3cc6jDGtrbP3IMWztwumRuoj6zxy19gzSry3bp4mDkB8eyDXvK29ulWO
S0BnHabczBB4ntkfj68NG455sFvnruj27qZAG+dmp8ZQAjrriJGzkTopfnun
YHfwVTaR8ncmXc9z3BW5LwGddYTGDIjD8X639f0FxsfQM7yeTkDnOkLOXiXn
AX9B+fsjMfffV78/QnzySc+y8Pd12sdsg8/Zw2jMN3Dq7F7snFjf3zmypnzq
ZG+NT56f7jyibmKbK08eON96sskNjfE9B5szR/gW1hqx//7URIsyO03T2fP4
hsmXdYnHkRe9vaFcE+RIH+hQH+8wfqNnG8o9PgG9q+jyt8it4JyrulxkG0LO
YTvbs058GzNFH+9se4+vD0Ol9jHm4ne33eNmotvf35wsWWynHGdre5+dD4zV
+JH5Rmtsf/4xHvpPjtyGQyX7ti65ijZzSqehv/u3WP51Dtpf32I7iOlMSkDv
TkM+Z7HvzkSvfn+8E5xvoX/o+XF70MO6xHQu0xbx35+xBzumGfSflkD7eoG6
70zemkC7egVyfMox9p3ifq7nHsK4sKT/ii7U3+uwn2Nbjs8Z/3sI55ScbrfD
m/8Cm+a3ew==
                  "], {{0, 0}, {96, 100}}, {0, 255}, ColorFunction -> 
                  RGBColor], {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], PlotRange -> {{0, 96}, {0, 100}}, 
                  ImageSizeRaw -> {96., 100.}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Demonstration Resource\"", FontFamily -> 
                    "Source Sans Pro", FontWeight -> "SemiBold", StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"DEFINITION NOTEBOOK\"", FontFamily -> 
                    "Source Sans Pro", FontTracking -> "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {2 -> GrayLevel[1]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> GrayLevel[1], 
                 StripOnInput -> False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Demonstration Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> GrayLevel[1], 
               StripOnInput -> False], 
              "https://resources.wolframcloud.com/DemonstrationRepository"}, 
             "HyperlinkURL"]}, {
            TemplateBox[{
              
              TemplateBox[{
               "\"Open Sample\"", 
                "\"View a completed sample definition notebook\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 1953775238739395670; (
                DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                DefinitionNotebookClient`ViewExampleNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[1953775238739395670]]& , 
              "\"View a completed sample definition notebook\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Style Guidelines\"", 
                "\"View general guidelines for authoring resources\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 6116318327813659236; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                SystemOpen[
                 "https://demonstrations.wolfram.com/guidelines.php"]), 
               DefinitionNotebookClient`ButtonCodeID[6116318327813659236]]& , 
              "\"View general guidelines for authoring resources\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0.05]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 1908941340027841465; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[1908941340027841465]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[0.57555, 0.57556, 0.57554]], "Grid"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Check\"", "\"Check notebook for potential errors\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 3941141659801008137; (
                DefinitionNotebookClient`$ClickedButton = "Check"; 
                DefinitionNotebookClient`CheckDefinitionNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[3941141659801008137]]& , 
              "\"Check notebook for potential errors\"", False}, 
             "OrangeButtonTemplate"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 6058522267645278627; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[6058522267645278627]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"To my cloud account\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8267267753343341396; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "DeployCustom"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "To my cloud account"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource["Demonstration", 
                    ButtonNotebook[], "CloudPrivate"], "ShowProgress" -> 
                    True]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8267267753343341396]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1628664177886538591; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "DeployCustom"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource["Demonstration", 
                    ButtonNotebook[], "CloudPublic"], "ShowProgress" -> 
                    True]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1628664177886538591]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             Alignment -> Right, StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False]}, ImageSize -> 15, 
                    PlotRange -> {{0., 15.75}, {0., 16.5}}, AspectRatio -> 
                    1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your demonstration submission\
\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    2169377100431483360; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   2169377100431483360]]& , 
                  "\"Submit changes to update your demonstration \
submission\"", True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    GrayLevel[1]]}, StripOnInput -> False]}, ImageSize -> 15, 
                    PlotRange -> {{0., 15.75}, {0., 16.5}}, AspectRatio -> 
                    1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your demonstration to the Wolfram Demonstration \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    850153740503147579; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   850153740503147579]]& , 
                  "\"Submit your demonstration to the Wolfram Demonstration \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.1511, 0.15112, 0.15108], 
              RGBColor[0.7508, 0.17868, 0.085283]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[0.1511, 0.15112, 0.15108], 2 -> 
              RGBColor[0.7508, 0.17868, 0.085283]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[0.1511, 0.15112, 0.15108]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[
              RasterBox[CompressedData["
1:eJztnXvQFlUdx0ktEbIsMsnKUWqaLkOYKWNNiHSbQUrtRdLUerm8L+AlbJBE
ur7gIFlmzeQ4iOIlanTGCyT4RzPZWDKKt1E0TSP6OcZomhI5mpFmnc/s7rTv
tufsue3zHHj44+Mg7HMu39095/wu5+xhs8/pm7vXiBEjzh2p/tM3a/GUhQtn
LZl+gPqfGQvOPWPegsGBqQsWDc4bXHj07L3VXw4oZir2Ucj7dmlOyel2O3qR
0YptOaMTaE+vsULxn5wLE2hPL/Fexc6S/jvzv+t2u3qFW0vaF2xIoF29wLQa
7QumJdC+3Zl9FVsM+m/Jr+l2O3dXlhi0Lzg/gXbujrxT8ZKF/i/l13a7vZ1m
kuKNLZZ/vYX2Bde12I79FZMT0LvKKsUOxQ8Vh0Yue7KD9gXHRG7DOMWPFC8o
Lk9A7yrLSn3/t+JmifOc7KPY7KH/5vy3ofVPUaxTvFYqeygBvavM1+jwgGKm
+K9LzvbQvuAszzpHKmYb7vu8BPSucnyDFs8qlirGOpR5oOJvAfpvV7zNob6D
FRco/tpQ7ucS0LvKREtN/qVYo/ioRZmrArQvsBmrafvP87bZlHlEAnpXeYeH
NhsVM6R+nD5Sho+5vrym0Ys6v6i406NMl3e4U+wt2bzro9GTivMUb83Lep3i
rgjaF9yVlzkirwMb7c+eZb2q2CsBvet4OlAnbKeVim9F1L6AMhmL/hFYzlMJ
6KzjvhZ0S417EtBZx4YE9GmbWxLQWcflCejTNisT0FnHUAL6tM13EtBZx9wu
acIak3nxMcWjir/I8PhkTAYS0FnHcR3S+znFz3Itxku9b4P15nsUp0tm7/09
Ut1TE9BZxxEtar4z1/yzktkarm0bpRhU/DGwHYcnoLOOsS3o/rxkfqO3R2oj
du85kvmRfdpzUAI668AufDWS7ujzbWkvpsPYdI9jm16R/9nRqfJUJP1/L1kc
63uKryg+rHh95La+QbIxzbZN2xLQt4m7I+lfx4uS5f4wfsSK8fI8f9+y/rsT
0LeJdS3qX4Y1568VJ4nffFzlEos61yWgb5U3KT6t+KZivcRb57nwJ8WXJcwv
yW9vaqiHvuFjwZfHOuzNHdaa52yCZPG31ZLZOjF89LHA/xeyPmSuf8yhPvrO
PHW1ZPHXj0icmHMB8bg+xUWK28Uu/6bbsEbBv++7TpmQl+FbPxrdofiBZGPj
uyzrxT4hh+frihslm+u7rWUIN+Z98rkHyyO3hTUh+SCLFcfK8DU1efTkKMRa
t8fiGcUmyfy9NyjWijn3sw7mZ5+9GfwmNJZkgjghuRWsrXnmX05Ab3xm+HbJ
oyjbuqzR50gWn/y84gDJ7GzyUh61KPdXeRmu9+CslvtLHO4TeV194h+7DeUh
yfZw1WlE+74rWWy/TiPWLP3SnC+y2kN/xq7nWuozWn+hUp8uf6otyFWcLfo1
I+vJGZZacX/uaKjvdI97cHFLfZ+rqW9ZS/VVuVfxbkO/eaY/6agV788thjrJ
43L1nR3eQt+HDPWxZlvdsvZotJ+hDeRbnuCoUwFxgI2Guq/yKPOJiH1fZVEf
Ntb6lrS/TcxzIbb0Ek/tC7BZdPMBazzXfXpXROr7WrH3kzD3+OSFmdgq2drF
VO+i/B6E6A/9hnZc5ljWnAh93yjutsgYyWzrGNoz3x/dUB+5tnV5xYwpX1Jc
I5lv4MW8THJreUbIl/1A5TeMow9o2vKCoxZHBfb9EcVbHLUvOETi2ME2ORus
t8u2EjngrPlt1oDMrdiRh5V+f5rh+j4HDcYE9BvtbP0POohvh/g0se1s1h2L
S3/mmXO1dZk3iO+enJcxSvR2pas94OMP4pn4UKD2Bezl+aen/jbjLXt7Tsr/
3G/oL/PnhlzrMyQ7d+B3+b8xLmE3f1yxIC9L509+3LH/Oxz7XLZtYzFd/Gxk
m1z5WZLNzfMM5RCrfX/pN325juVriv0uvLO8C18zlGdaA4foX2fbxuJMR+23
WpZb+HZ09xc/XHnO1I3t15auIT7yY0PbXMYGF//Y/Ja0L3CxkS+1LBNf+fOa
MtiTMq50LTEn3fNYjQ+eZ2jbpyzbNtqhv0tb1h5cbORTLcu831DGmsq1A4Zr
q/PqDMO1J1q2bbxlX6/sgPYFV1q2abxleQ8byqj64K4yXFvNzVwTQf9TLfvK
ve9EbtBSy/aAbezjQUMZiyvX6vIrGJPK8XDGLN1+OuaZKZZtu9Shv8ta1t7F
R/2yQ7mbDOUwh36mdO21mutOK10zylAmMXPWxOW1lImtDn2GM1vS3jVGs8Oh
7BsM5ZBrxVqyGMuqcanHZbg9i66mvELshq+KXS6dTz4xGk2PrL1PjNJF/xWG
cm7Kr+E+YFthYxU+IHwr2GC8l9hk2Ga6ODZjUX9e1iLLdl3moT9gq8Y6f4J1
ss8e9Fcc6phuKIf7XthK+BYGxe4coDL47SbmZeADrs4pdYyVsLg4Phvb9YcO
fEch/rcxlvVwRoApj6u8jsXHxvti80zguyMXaGTp98TVmnyxsDKg3wVod4in
9vhMHwms/yiH+kzxBnzJ1bUdPucL8t9tz68j94n54KeSvSsja+pZXlNWlY9J
vHwEfPi2z2EB6wdTHM+WOQ51mnw/0O/Yhzo+KMPXSXXgh3Jd8zRxp9jHHBgf
10aq9woHbYh7mfxcxBQPDtCeZ548SlOOLrHR2yJrX7Be7OKPMc4cKXjCUaOh
hvJ4J33PEWJdbvK5Mceb8idi0GQjN/XfB5d8ZOzlpnMx0Mg1nw3fqmlNTi7M
vS1rX6Czkdvau3uxo1ZN5zjBb8X+DBj2Lp2s+TfGIuYo1/hKKFUfNfGCtvIP
WQO6xDrgJxblMh/0i348Z38Sz1rdWpP3h5zHhzqsewFaFzY7cbLQM1macD2H
DX1+aVk2Objk4vI+sHZhrMHvPyjDxynsZvK6OKPimS7pXgbbDr8COdCbpd38
W3K5XfPAWQ/9xqOuP0i2fsOnxJpjUyJ6l8FHgk2zotRf9gQcK5ltzl6BWPtI
C5Y76g+smdtek3QC7GD2g7C3ZZLY2wL4H8hLID5IfnHI/iP8QRM87gHrNfZh
p7Y/RAca3S6ZrcEYH2KzVGFvGXvMmL+vlsy2dtl/hx/Mdz875/Hpctq6BX3H
R8O6Hvud5yvGXlgXiDmRa8CeTPy/Tbla+JN994nyu5mS7Tftht70jTnlG5Lt
uY2Rqxqbmy36cUlgHbyHvNv4Cjq5byfF/ddVbM8fYM9/jHg168r5+X1v2ocU
yq5w/oBLvICzL3z2xpkgv5/cBvz+rPV/If+fJ+dLymdPAs+za64qsdpxkeqv
wlzP2sn3rJ8qKZ+9Cgd59gt9yJmNtXefMYk8GV1OXQgpnj1cELpfjbPB8Bv4
7Ftn3cc6jDGtrbP3IMWztwumRuoj6zxy19gzSry3bp4mDkB8eyDXvK29ulWO
S0BnHabczBB4ntkfj68NG455sFvnruj27qZAG+dmp8ZQAjrriJGzkTopfnun
YHfwVTaR8ncmXc9z3BW5LwGddYTGDIjD8X639f0FxsfQM7yeTkDnOkLOXiXn
AX9B+fsjMfffV78/QnzySc+y8Pd12sdsg8/Zw2jMN3Dq7F7snFjf3zmypnzq
ZG+NT56f7jyibmKbK08eON96sskNjfE9B5szR/gW1hqx//7URIsyO03T2fP4
hsmXdYnHkRe9vaFcE+RIH+hQH+8wfqNnG8o9PgG9q+jyt8it4JyrulxkG0LO
YTvbs058GzNFH+9se4+vD0Ol9jHm4ne33eNmotvf35wsWWynHGdre5+dD4zV
+JH5Rmtsf/4xHvpPjtyGQyX7ti65ijZzSqehv/u3WP51Dtpf32I7iOlMSkDv
TkM+Z7HvzkSvfn+8E5xvoX/o+XF70MO6xHQu0xbx35+xBzumGfSflkD7eoG6
70zemkC7egVyfMox9p3ifq7nHsK4sKT/ii7U3+uwn2Nbjs8Z/3sI55ScbrfD
m/8Cm+a3ew==
               "], {{0, 0}, {96, 100}}, {0, 255}, ColorFunction -> 
               RGBColor], {
              ImageSize -> {Automatic, 12}, ImagePadding -> {{5, 0}, {0, 0}}, 
               BaselinePosition -> Scaled[0.25], 
               PlotRange -> {{0, 96}, {0, 100}}, 
               ImageSizeRaw -> {96., 100.}}], 
             "Wolfram Demonstration Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentReplyIcon"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.076923], 
         FaceForm[{#, 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{1.5, 7.5}, {6.5, 11.5}, {
          6.5, 3.5}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJw9U2tIVEEUvq5iVkttZmdfuo/ZbQukJGKVqPBLUTGJ0h9hVLIJRYhUVJj2
AjGRWCKiF0llZWRCSEnZExEJ06CotaiQyH7EIrthT3u6NXPn3jswnDlzzzlz
vu8711u9vWJzsqIoSXwv5tuk6IsgrQvOnLf+1CRC5ZKbg3WJAIJV90rNJoJF
XOR6sebI6W3pyXq8DxccIoGwa+uxj/v/McxNbTxZOJ3w4Rkb+ZVgWGk2ZbcQ
Yfm0V+07Jhm6St7vzVhI2JfBT78ZCkI8cj2hqe/xxaIJJm0PoWEssCgtzvCc
lzlYYwXP5iUYHpXlHV4xasXLeh4wyKCWX2fDqcJwbfQ+w4F83vGQDT1fJ1/U
dzJ842bsih1XB3hiI0NzrPyOq9mBPb1tjpyNDBXci5U7MVQnLhji4nMsE+9W
c6ARL3i3XSWbXNiiLi8EzPxbbqydsaD73LgHJ2wp/OiFoKVJ8Ui+Chha6M3T
H8NZUMPm+XB9p8h0QtATjvtxqUh0SBgV76QHZN+lszReA5pNQ66o1+8HV6O3
rdWCBIcTuKHxHJ4NQdO1sx4Nxxy4VYBug2dVt4lMnB/vGCi7TSgWz/504Etk
VbXlNSGkCmWHqFYbJXziYXlT7VKXEdLq2DDMwyvvksTZZ5W4OgiCjmCVFTUP
dh+3HSKJ8y9hqUogIfqn83PkCUndQoTLQsZ2gpperL3fQJLXIMEn5F5GaD3D
l50g2O3OIkhiCUf7v8/fMJOMuRPTmT2FjLlU+0ghY471+dV93epzr/sPPaJz
u3Ev65sNX/8//gP5Ei2u
          "]]}, AspectRatio -> Automatic, ImageSize -> {13., 13.}, 
        PlotRange -> {{0., 13.}, {0., 13.}}]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11], "\[SpanFromLeft]"}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9], 
            ItemBox[
             ButtonBox[
              TagBox[
               StyleBox[
                TemplateBox[{"\"Reply \[RightGuillemet]\"", 
                  StyleBox["\"Reply \[RightGuillemet]\"", "HyperlinkActive"], 
                  BaseStyle -> "Hyperlink"}, "MouseoverTemplate"], FontSize -> 
                9], 
               MouseAppearanceTag["LinkHand"]], BaseStyle -> "Hyperlink", 
              ButtonFunction :> (SelectionMove[
                 ParentCell[
                  EvaluationCell[]], After, Cell]; 
               DefinitionNotebookClient`CommentInsert[]), Evaluator -> 
              Automatic, Method -> "Queued"], Alignment -> Right]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.88722, 0.77308, 0.76696]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 2045406886999866622; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[2045406886999866622]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYI9uuJUYJobchmTZGFisJTpAUhCMgGihBvyC5t0Tly
Qj0SgpgIKA6UJWjIdi3RSVJYtMMRUBaoBo8hu3VEJ0vjMwGCgGqAKnEZMl8B
uy8wEVAlVkOAjiTSBAiCewrZkKXKwiQZAlSPach0GWL9AkFA9RCNkCQNYU/A
GymYCKgebggQUG4IVVxC3TChSuxQJZ1QJcVSK+9QJRdTqzyhVslGKqKiIfgB
MfUOAGAkpIY=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYI9uuJUYJobchOXaENOjyrtDkgCMgGihBvyB5dkXXa
3Mu12TARUBwoS9CQ3brCK7XZsZoAQUBZoBo8huzVFQW6HI8JEARUA1SJyxCg
xwmaAEFAlVgNATqSSBMgCO4pZEM26/CRZAhQPaYha7Q5STIEqB6iEZKkIWz8
kYI1muCGAAHlhlDFJdQNE6rEDlXSCVVSLLXyDlVyMbXKE2qVbKQiKhqCHxBT
7wAAuk3GZQ==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFASiMWBGMT+TwgQowYI9uuJUYJobcjZGK8nK+Z9uXsTgoBsoAjxhhx11H61
ZwtWjwPFgbIEDTnha/n96SOg4K8vn67O6tgRag5BQDZQBCgOlAWqwWPIYWuV
b4/ug2w8e3S9nexybTZkBBQBigNlgWqAKnEZ8mz9MiD3zaXTKw150UyAIKA4
UBaoBqgSqyEnfMz//fnz59fPTe7qWE2AIKAsUA1QJVA9piH3pnUB2XfWzMNj
AgQB1QBVAtVjGvLhwikQO82HoCFANUCVQPUQjZAkDWH/eP0SyMYMT0wEVANU
CVQPNwQIKDeEKi6hbphQJXaokk6okmKplXeokoupVZ5Qq2QjFVHREPyAmHoH
AG0Lmsg=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.7508, 0.17868, 0.085283], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.7508, 0.17868, 0.085283], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[{
                Thickness[0.066667], 
                FaceForm[{
                  GrayLevel[0.75], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{7.5, 
                  5.6426}, {6.475, 5.6426}, {5.643, 6.4746}, {5.643, 
                  7.4996}, {5.643, 8.5256}, {6.475, 9.3576}, {7.5, 9.3576}, {
                  8.525, 9.3576}, {9.357, 8.5256}, {9.357, 7.4996}, {9.357, 
                  6.4746}, {8.525, 5.6426}, {7.5, 5.6426}}, {{7.5, 10.287}, {
                  5.962, 10.287}, {4.714, 9.0386}, {4.714, 7.4996}, {4.714, 
                  5.9616}, {5.962, 4.7136}, {7.5, 4.7136}, {9.038, 4.7136}, {
                  10.286, 5.9616}, {10.286, 7.4996}, {10.284, 9.0386}, {9.038,
                   10.285}, {7.5, 10.287}}, CompressedData["
1:eJxTTMoPSmViYGAwBGIQHdN/6KvGHQ2Hu1tbai4YCzn4mHc6JqSqOZhLHYhW
cBR2sNxyomxfvIrD+5OHndZm8jncPPc9+PFTFYfHx2fsnjaBxSENBNSUHRKN
Qg20VjI62JvG7fLsUXZYuveguFowk8PZMyCg6LCZp3BN9+1/9tb3/Xun5yk4
mDRsd2h6xO4AtO3pBSVpOB9sXpoEXH3jVOfunOcicPOMQWCzKNw+vySBCEsT
Ibh7gIYLNTsIw917Uen2z7osPrh/QN6N6WeB+9cFaPpvoDmH2paHn9ok6tAu
BvIhk4PAy+3rmYH2lu+bL6V/95/91523uv6mSjg8rBJZ5/6Q3cH4yEa9PGVp
OJ+Zs0s+GegvmHqlvtJC6bOKcPOmfGOLnwEMF5h9u9X5ubcCww3mHrC3n6nA
3QsLd5h/wOEOjBeYf2HxBgsP/bsqbI1TNR1g4QWMBR6mbE14eIKdpaIFD28P
kMPZNRxg8QHjw+ILph4WnyjmAd0Nsw+WHmDugbkb5l5YeoKJw9TB/AszBxYe
MHtg4WXIsUYmCugOWHjC3AkLbxgfFh8w9bD4gpkHi0+YfbD4Rk//AAQ8Rd0=

                  "], CompressedData["
1:eJxdVA1IU1EYHStG2VxrxByaa073dFtRkiYheW9/EmhkGaWW/WjaEs1ICxEJ
zX6sCCuzX7USSiLRKHEWESWSaVFWhpkWlaiZWk5Lnab19p7nCj0Yb/fx3e/n
nPMdj5jk9XFSiUSyg/853r/GGtO6ODO1z+yylme70ePLtrc3fDXSwkyu+qi3
Oztn8ceSJi1FvC72R9TyIB3Nyl9xMrHTTJcHfWsufaCjT+qvr6pcNI+evjbs
21HmQbfkVv/2aTVTF+tryadDevp2TYwy4r6ZDsm2XQx9p6fH1M0vh96aqER4
DDSpc/SW7axJvFdgoNNK50TtDDTRthtXanR7OSqXmo+pI40TdTlapT3SvS7N
hxb9LHkaYuVoe4O+xT7OiX3Gc9SzxX4w4Q9HjY6EFo7GC89knDJiScWzSo4G
Vw7wN3zEex2TdVD3vKNc4GRfIwcTHqbmmeiroXA+xIs+58ceGDPRsFMX9qiy
9eL3FjOtO/Doqmu5B8PlRwbx38rjpJh/t/Anj5twb+kEjt5m2v+GB+i9lrrw
sIS3GcU4ngecHVU1h91YvEHm+OfK8iWrsh/XX9ewetuFQdWsnxhhYBXrd/WX
9NlltUo2T4rlTG8GUbB5fQUC5AwPfpoFH72cGV4ingqG5/48zdSNCjnDW+h3
qpzxMZenq0orY3yJ+EkZn2L+cQLcC2p0d/ZZRglwrw0J4CVpJ9CL0K5/P4Ge
xPw2Ar0NO9LX9BDoUTz3EehVxGOQQM8OuTxMlTC944x9QDz2BfkqIn/f/3DC
ldXT5DdOtxRrWD9OFn1i2oia9et7yaTJ36Bm8+SGp3pd+DuLzWuLfREd8kzJ
8Hia5JdppQqG19ryc3E5sXKGZ2vwlLQZPC/A+7CzI0LB+EhffDto02YF4ysn
Npq/Imd8Lp3XeLnDXcb41o8N7v9cIGV6GOntfrzEc5xAL02q/mWv4kcJ9BT2
R5PSpBom0NvC0JtOwQYbgR5X7k7uO1LXQ6BXv+KKgOHqPgI9F201PlfWDhLo
3X5t173vKRK2DzhjXxCPfUI+7BvqYR/RD/YV/UJXmAe6w7zwA+ABvwBe8BPg
Cb8B3tgL8AG/Al/YK/AJvwPf8EPoAX4JvcBPoSf4LfQGH4Ae4dfQ6//+/w8B
rcVF
                  "]}]}, AspectRatio -> Automatic, ImageSize -> {15., 15.}, 
               PlotRange -> {{0., 15.}, {0., 15.}}], True -> GraphicsBox[{
                Thickness[0.066667], 
                FaceForm[{
                  GrayLevel[0.25], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{7.5, 
                  5.6426}, {6.475, 5.6426}, {5.643, 6.4746}, {5.643, 
                  7.4996}, {5.643, 8.5256}, {6.475, 9.3576}, {7.5, 9.3576}, {
                  8.525, 9.3576}, {9.357, 8.5256}, {9.357, 7.4996}, {9.357, 
                  6.4746}, {8.525, 5.6426}, {7.5, 5.6426}}, {{7.5, 10.287}, {
                  5.962, 10.287}, {4.714, 9.0386}, {4.714, 7.4996}, {4.714, 
                  5.9616}, {5.962, 4.7136}, {7.5, 4.7136}, {9.038, 4.7136}, {
                  10.286, 5.9616}, {10.286, 7.4996}, {10.284, 9.0386}, {9.038,
                   10.285}, {7.5, 10.287}}, CompressedData["
1:eJxTTMoPSmViYGAwBGIQHdN/6KvGHQ2Hu1tbai4YCzn4mHc6JqSqOZhLHYhW
cBR2sNxyomxfvIrD+5OHndZm8jncPPc9+PFTFYfHx2fsnjaBxSENBNSUHRKN
Qg20VjI62JvG7fLsUXZYuveguFowk8PZMyCg6LCZp3BN9+1/9tb3/Xun5yk4
mDRsd2h6xO4AtO3pBSVpOB9sXpoEXH3jVOfunOcicPOMQWCzKNw+vySBCEsT
Ibh7gIYLNTsIw917Uen2z7osPrh/QN6N6WeB+9cFaPpvoDmH2paHn9ok6tAu
BvIhk4PAy+3rmYH2lu+bL6V/95/91523uv6mSjg8rBJZ5/6Q3cH4yEa9PGVp
OJ+Zs0s+GegvmHqlvtJC6bOKcPOmfGOLnwEMF5h9u9X5ubcCww3mHrC3n6nA
3QsLd5h/wOEOjBeYf2HxBgsP/bsqbI1TNR1g4QWMBR6mbE14eIKdpaIFD28P
kMPZNRxg8QHjw+ILph4WnyjmAd0Nsw+WHmDugbkb5l5YeoKJw9TB/AszBxYe
MHtg4WXIsUYmCugOWHjC3AkLbxgfFh8w9bD4gpkHi0+YfbD4Rk//AAQ8Rd0=

                  "], CompressedData["
1:eJxdVA1IU1EYHStG2VxrxByaa073dFtRkiYheW9/EmhkGaWW/WjaEs1ICxEJ
zX6sCCuzX7USSiLRKHEWESWSaVFWhpkWlaiZWk5Lnab19p7nCj0Yb/fx3e/n
nPMdj5jk9XFSiUSyg/853r/GGtO6ODO1z+yylme70ePLtrc3fDXSwkyu+qi3
Oztn8ceSJi1FvC72R9TyIB3Nyl9xMrHTTJcHfWsufaCjT+qvr6pcNI+evjbs
21HmQbfkVv/2aTVTF+tryadDevp2TYwy4r6ZDsm2XQx9p6fH1M0vh96aqER4
DDSpc/SW7axJvFdgoNNK50TtDDTRthtXanR7OSqXmo+pI40TdTlapT3SvS7N
hxb9LHkaYuVoe4O+xT7OiX3Gc9SzxX4w4Q9HjY6EFo7GC89knDJiScWzSo4G
Vw7wN3zEex2TdVD3vKNc4GRfIwcTHqbmmeiroXA+xIs+58ceGDPRsFMX9qiy
9eL3FjOtO/Doqmu5B8PlRwbx38rjpJh/t/Anj5twb+kEjt5m2v+GB+i9lrrw
sIS3GcU4ngecHVU1h91YvEHm+OfK8iWrsh/XX9ewetuFQdWsnxhhYBXrd/WX
9NlltUo2T4rlTG8GUbB5fQUC5AwPfpoFH72cGV4ingqG5/48zdSNCjnDW+h3
qpzxMZenq0orY3yJ+EkZn2L+cQLcC2p0d/ZZRglwrw0J4CVpJ9CL0K5/P4Ge
xPw2Ar0NO9LX9BDoUTz3EehVxGOQQM8OuTxMlTC944x9QDz2BfkqIn/f/3DC
ldXT5DdOtxRrWD9OFn1i2oia9et7yaTJ36Bm8+SGp3pd+DuLzWuLfREd8kzJ
8Hia5JdppQqG19ryc3E5sXKGZ2vwlLQZPC/A+7CzI0LB+EhffDto02YF4ysn
Npq/Imd8Lp3XeLnDXcb41o8N7v9cIGV6GOntfrzEc5xAL02q/mWv4kcJ9BT2
R5PSpBom0NvC0JtOwQYbgR5X7k7uO1LXQ6BXv+KKgOHqPgI9F201PlfWDhLo
3X5t173vKRK2DzhjXxCPfUI+7BvqYR/RD/YV/UJXmAe6w7zwA+ABvwBe8BPg
Cb8B3tgL8AG/Al/YK/AJvwPf8EPoAX4JvcBPoSf4LfQGH4Ae4dfQ6//+/w8B
rcVF
                  "]}]}, AspectRatio -> Automatic, ImageSize -> {15., 15.}, 
               PlotRange -> {{0., 15.}, {0., 15.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell[
    StyleData["HintPodTitleBar"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{
            Offset[{0, -3}, {1, 1}], 
            Offset[{0, -1.3443}, {1, 1}], 
            Offset[{-1.3443, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{1.3443, 0}, {-1, 1}], 
            Offset[{0, -1.3443}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], {-1, -1}, {-1, -1}, {-1, -1}, {1, -1}, {
            1, -1}}]], 
         InsetBox[
          FormBox[
           StyleBox[
           "\"Notebook Analysis\"", FontColor -> GrayLevel[0.4], FontColor -> 
            GrayLevel[0.4], FontFamily -> "Source Sans Pro", FontWeight -> 
            Plain, FontSize -> 13, StripOnInput -> False], TraditionalForm], 
          Offset[{8, 0}, {-1, 0}], 
          NCache[
           ImageScaled[{0, 1/2}], 
           ImageScaled[{0, 0.5}]]], 
         TagBox[
          TagBox[
           TooltipBox[{
             GrayLevel[0.6], 
             DiskBox[
              Offset[{-13, -10}, {1, 1}], 
              Offset[6]], 
             GrayLevel[0.97], 
             AbsoluteThickness[1.5], 
             CapForm["Round"], 
             LineBox[{{
                Offset[{-15, -8}, {1, 1}], 
                Offset[{-11, -12}, {1, 1}]}, {
                Offset[{-15, -12}, {1, 1}], 
                Offset[{-11, -8}, {1, 1}]}}]}, 
            FrameBox[
             StyleBox[
             "\"Close analysis pod\"", "Text", FontColor -> 
              RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
              "Plain", FontTracking -> "Plain", StripOnInput -> False], 
             Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
             RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
             StripOnInput -> False], TooltipDelay -> 0.1, 
            TooltipStyle -> {Background -> None, CellFrame -> 0}], 
           Annotation[#, "Close analysis pod", "Tooltip"]& ], 
          EventHandlerTag[{"MouseClicked" :> NotebookDelete[
              EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
            Automatic, PassEventsUp -> True}]]}, AspectRatio -> Full, 
        ImageSize -> {Full, 20}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 0}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterTop"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {4, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterBottom"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {0, 4}}]& )}], 
   Cell[
    StyleData["HintPodFooter"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{{-1, 1}, {-1, 1}, 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 1.3443}, {-1, -1}], 
            Offset[{1.3443, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-1.3443, 0}, {1, -1}], 
            Offset[{0, 1.3443}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], {1, 1}, {1, 1}}]], 
         InsetBox[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{3}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False], 
              
              StyleBox[#, FontColor -> GrayLevel[0.4], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 12, 
               StripOnInput -> False], 
              StyleBox[
               TemplateBox[{5}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False]}, "RowDefault"], TraditionalForm]], 
          
          Offset[{5, 2.5}, {-1, 0}], {-1, 0}]}, AspectRatio -> Full, 
        ImageSize -> {Full, 21}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 3}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodMenuItems"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       TemplateBox[{#, FrameMargins -> 3, Background -> GrayLevel[1], 
         RoundingRadius -> 0, FrameStyle -> Directive[
           AbsoluteThickness[1], 
           RGBColor[0.75686, 0.82745, 0.88235]], ImageMargins -> #2}, 
        "Highlighted"]& )}], 
   Cell[
    StyleData["HintPodActionMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], #2}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          Dynamic[
            If[
             CurrentValue["MouseOver"], 
             GrayLevel[0.96], 
             GrayLevel[1.]]]}, "Highlighted"], ButtonFunction :> 
        ReleaseHold[#3], 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["HintPodDisabledMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], 
              StyleBox[#2, FontOpacity -> 0.4]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          GrayLevel[1.]}, "Highlighted"], ButtonFunction :> Null, 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic, Enabled -> False]& )}], 
   Cell[
    StyleData["HintPodActionLabel"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[#, FontColor -> GrayLevel[0.2], FontFamily -> 
         "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, LineIndent -> 
         0, StripOnInput -> False], FrameMargins -> 0, ImageMargins -> 0, 
        BaselinePosition -> Baseline, ImageSize -> Full]& )}], 
   Cell[
    StyleData["HintPodMenuDelimiter"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[
         GraphicsBox[{
           CapForm["Round"], 
           GrayLevel[0.9], 
           AbsoluteThickness[1], 
           LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
          PlotRange -> {{-1, 1}, {-1, 1}}, ImageMargins -> {{0, 0}, {2, 2}}, 
          ImagePadding -> {{5, 5}, {0, 0}}, ImageSize -> {Full, 2}], 
         LineIndent -> 0, StripOnInput -> False], FrameMargins -> 0, 
        ImageMargins -> 0, BaselinePosition -> Baseline, ImageSize -> 
        Full]& )}], 
   Cell[
    StyleData["HintPodIconChevron"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.2], 
         AbsoluteThickness[1.8], 
         CapForm["Round"], 
         JoinForm["Miter"], 
         LineBox[{{-0.5, 1}, {0.5, 0}, {-0.5, -1}}]}, AspectRatio -> Full, 
        BaselinePosition -> Bottom, ImageMargins -> {{0, 4}, {0, 0}}, 
        ImageSize -> {5.6, 7.7}]& )}], 
   Cell[
    StyleData["HintPodIconPopOut"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4h1yra8Dd6g4rHN/WCWip+KwRiYqxXq+isNk
CZYwvlwEDROHqYPpKwUrUHFgAIEDKg5nzwDBG2VU/hlluPogMEMCzm9kOdpv
aC6OJi/mINR84NRCVwQfIq8M519wufHhi5Yymn4lNPOVHNLAQBHO/6YR03/o
K5eDB9Ab69wFHJoeHZ+xexqng8r0/xPqfvM5cG9dVnl8JacD0FO6m+byOPxL
/f4kUZHbQZr3ge4EBW6HD2IeAX9m8Dhkzyqfs2gxp8ONxmK3Kd/4HOYsUt75
p50Tbi6YesgF9b8ShJ+oCOfD3Anjw/zx9JP8pXx7hD9h4QfjqxtyAKNCBU0e
EY4wPqr5iHh4/nvlx0tnVRyYObvkk98pOwA9+X75MRUHWWD03udHxCssngGf
XO7X
          "]]}, AspectRatio -> Automatic, ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconWrench"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.4], 
         AbsoluteThickness[1], 
         Opacity[1.], 
         JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGYCYmWv6mZ9n3/2cmJZvp/5BBzci37yv9wu6/Au
ysnuhaQynG8at8uT55AGXJwBDHQdPl3yTRKIUIfzo1Ks7/vzajiosjVOdfbW
ccjaUzJZokUFrv8ySLmlqoPbts9/r1iowsVh6mD6zp4BAh4NnPbA3AHTr+ss
8/rRNoS7YXyYv2D+7H/ySf5SPrdD7D/nX29ff7H/6hXZZnGNGc6HqYPRMPED
b+bZ6FxBqAPpOprL7YAefgCtVISU
          "], CurveClosed -> {1}]}, AspectRatio -> Automatic, 
        BaselinePosition -> Scaled[0.2], ImagePadding -> 0.5, 
        ImageSize -> {16., 16.}, PlotRange -> {{0., 16.}, {0., 16.}}]& )}], 
   Cell[
    StyleData["HintPodIconInfo"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{6.81, 13.}, {
           3.3914, 13.}, {0.62, 10.229}, {0.62, 6.81}, {0.62, 3.3914}, {
           3.3914, 0.62}, {6.81, 0.62}, {10.229, 0.62}, {13., 3.3914}, {13., 
           6.81}, {13., 10.229}, {10.229, 13.}, {6.81, 13.}}, CompressedData["

1:eJxTTMoPSmViYGCQB2IQbct1fXGBrbRD6+vAHXKtvA7r3B9WiayTdoCI8zgc
/qoR039IHkoLOjCAgYKDB0iZu4CDPFijgsOsmSDAC1UnCzWPE0rLQMXZHV6x
mAia1Ug56E1Y8MMwjdXh685bXX9VJRx4Jq9sCvRkcTh7BgREHfoPgTSwOAQB
db8OFHYAO4eLFeo+IQcRMIMLzoe4h9dBW2LqFc4MYYd4zdMCx38JOviYdzom
pIo4PJgjuHSvo6jDkgKQz0QdCsEelHDQjAHZJAa1VxIqLwH3Jzofok8S4i9W
RQews67LQsJhnoKDMRjIQ9Q3wMJJwQFMJULDSRJmrhzUPKh6Blmof+QcwM6K
kXb4Bgq2rzJQcXFovMhA5UUdciqqluo0SztsKMqY+NZG2OHV1E08hTrSDquA
oTmXQdABPX4BaWq/EA==
           "], {{8.81, 9.79}, {8.8101, 9.5122}, {8.5878, 9.2854}, {8.31, 
           9.28}, {7.51, 9.28}, {7.2283, 9.28}, {7., 9.5083}, {7., 9.79}, {7.,
            10.62}, {7.0054, 10.898}, {7.2322, 11.12}, {7.51, 11.12}, {8.35, 
           11.12}, {8.6239, 11.115}, {8.8447, 10.894}, {8.85, 10.62}}}]}, 
        AspectRatio -> Automatic, ImagePadding -> 0.5, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconNone"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       GraphicsBox[{}, AspectRatio -> Automatic, ImageSize -> {16., 16.}, 
        PlotRange -> {{0., 16.}, {0., 16.}}, BaselinePosition -> Scaled[0.2], 
        ImagePadding -> 0.5]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreAlways"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYCYpF17g+rROQcbLmuLy6wlXaoBguoOvQf+qoR
w6/i8CZwh1zralWH4oyJb2vsVRx0N819v/yYqoO0/l0VtkYEv/U1UOFRBP/D
8mPe5pyqcP0z8oSaD3ipws2H0famcbs8fVQd2BqnOnevUXUAa+dWdUgSiLDc
ckLVwQPounXHVeB8kK1TmxH8gN7peULOKnD9EP+owM2H+QvmzyUFIBEeuHxC
mb+c2CtuuP75NjpXZj3jgpsP0s11nRPO5+feuqzyOAec73dxYsy/w+xw/WDr
uNjh5n9MPhPr7cEG93+V2Wq78Nus8PCB8WHhB+PDwhemHxb+MPNh8ZMGBhJw
f8Lkv2nEAJXwOGyu/rQh4DWrwwrTs9Z+F7kdvHiYtNunsTrYgrwpy+XQteHh
y6lGbA6HxNWCWRdzOJwKObhiyTk2B3fmCm4VDXaouRwOEaeMjmzUY4OHhybI
eA02eHgt/GH4bJ0qm4PT+bSrz4Hh+Z0tfobPVDZ4eIOVx7DD3QlzNwMYIPx1
smzffCl9FUg4u7M5hPEBU1S+isPs0Pmr195gdTAGgc0qUHewOswDJhfv7yoO
/g7CiYcvszoAU9vrQAtVh6V+QAFnNqg9iHj5dMk3SWAGIt78wBGJiFcYH+ZP
GB/mT5h+WLqBmQ/zJwC4F0s3
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInCell"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
            0}}}, {{{11.69, 13.37}, {7.57, 13.37}, {7.57, 12.37}, {7.76, 
           12.37}, {11.19, 8.93}, {11.19, 1.25}, {7.57, 1.25}, {7.57, 0.25}, {
           12.19, 0.25}, {12.19, 13.37}}, {{9.17, 12.37}, {11.17, 12.37}, {
           11.17, 10.37}}}], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIjIGYCYo+HVSLr3EUdbLmuLy6wlXZYUgBiyTlAxJUc
kt9FOdllyDuU6yrKf1mD4LM879F466sMV28MApuVHX7yv9y+3lkOQj9WdngU
Ib794gFZh/Dojfvf/FN22CHX+jrQAsHvf/JJ/tJ6GTgfbI+ODFz/2TMgIA03
vxroqodVQg5gSkQO6m4mVPubGR1E7I/d2fpE2cHy2tFckwYGB2n9uypsjCoO
YG89/GcP4wd5zm1QO/QHzr9wNeyN/u5f9jD9kHD4aQ8zX+z36XcnD3+3v8fE
2SXfrOygvqBzw8OX3+yDQAxHBB/srr9KcL7mW959BjuV4PrnCi7de7BcCW4+
LLwhND88PmDyEHcLOjg2PTo+Y/d3+/21shbpLYIOTglPLyjd/mZ//wH35JVM
CD4knATgfL0JC34YPuOH688Nq1237REf3HzNmP5DXzX4HLhVNOp6dv6yP3xZ
O1UyiRcePrlH/22q/sQDD79vGiANPA5yy1946NUzOOy61fU39TuPw5GNenmL
GxkdwPal8cLjB2Y+LP7SwEDCgQEMZODyf7+VPpgTKOOw9ldM7tE6XgfmCqCL
9sk43PfvnZ4nxAuJZ2NZB5j9UV933uraK+swf/XaG/HfeCDudZJzuA1yTgov
PH3CzBcAJg/mdHmHVElQyuSH851lXj8ykxKEq4eFNwCKHGBr
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInNotebook"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYC4qAdcq2vAwUcbLmuLy6wFXdYUgBiSTp4PKwS
Weeu4GCgtVL4AouUw1zBpXsPlis4vDlgqexlLeWg+ZZ3n8FOBB+s/y+CH6S+
oHODoyJc/z0mzi75ZkW4+cYgsFnRoanYbco3N0kHEftjd7Y+UXRYeM3kvcVR
CYeQx0tnH2FQgroLwb9pWxmxYqs4nP9zQfrmV8bicP0g1VzXxeDmf9OI6T/0
lcsB6Bmgj6QcGMDggz1MvoTnRNz7f2/sf/K/3L7+saLDzmCriP/PX9iHR2/c
/+YfzL1P4Pz+Xoc96+IfwPkrVqZm1068AdcPtAxo4yW4+ccenln/jOGkPcz/
MjWJRqEGh+xh4QPjw8IPxoeFL0w/LPxh5sPiB0KzwuNPHhibO+Su2h8GKTvE
7aAYeYAl7+5Z+/rfVgXnOLgdPu6qO5h345j9voPiasGsXHA+JJw44Hy9CQt+
GD5jh+vPDatdt+0RG9x8TZByDTYH/uky5V7st+21JaZe4cxgdZgp5PnFqOuh
vQY/99ZlP1kcIO54CjWfxeFeX0HUh0Uv7bdEft15i4vVoa2/Q3Oiy1t77Xax
m+fKWeHxAzMfFn9pYCACj1+YfMeX29cbgfF/+LJ2qmQSKzx95B79t6n6Ews8
/cDsB3O5JB1Upv+fUPebxeHIRr28xQeB6e+Cy40PX1gdnjTPO7uKX8qh/8kn
+Uv57A4sYXy6m2KlHDjBCY3DwV9OLMvXGJjeda7MejaXC56eYeENAPSkchE=

          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
          3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJdIGYC4qAdcq2vL6o52HJdX1ywVwtC24rB+YdTViWE
XBKE86tF1rk/rOJxMAaBzxpwPkReDY2vCDVPCMpXhvPB+jerwfnPf6/8eOms
ukPDdoemR+wiUHkNuHtgfJh7YXy2xqnO3W/U0eQ14ObB+DD7YHzNmP5DXzWY
4PzY3KP/NlX/toeZBxYP/GIPsw/GBzuHSxrOX7TF/MchFSkH9g9iHgF/Ptmb
vrdwdTeSdNjZywYU+WQPcb8E1B+f7H8EP146m0XcYeE1E6DKT/Z9IGUXRB02
V3/aEJD92R5s7A4Rh1kzQeCr/YQFPwyfvRN2+Put9MEcwe/2894vP+ZtLuxw
3793ep7QT3uIOiEHkC651t/2YH8a80LtY3NA5TPB+RPrflsVnPtkL/8lJ6xW
T8jhTSDYo1DzxOB8BjBQh/O/aQADzlQTTV4bbh6MD7MPxoeFfwDI2czaDmfP
gAA0nCdqOTglPL2gdFvDweNhlci645oO8iAPzdOEmPNXw+EPMDp9k7Qc4nZ5
8jC9VncAG39KywE9/QIAH6UuJw==
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{
          5.63, 11.05}, {5.63, 10.44}, {6.0569, 10.539}, {6.5048, 10.49}, {
          6.9, 10.3}, {9.53, 10.3}, {9.53, 11.05}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{7.92, 3.73}, {
          8.0396, 3.4994}, {8.0784, 3.2353}, {8.03, 2.98}, {9.41, 2.98}, {
          9.41, 3.73}}}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}}}, {{{6.73, 6.21}, {6.2, 5.82}, {6.67, 5.46}, {11.22, 5.46}, {
          11.22, 6.21}, {6.73, 6.21}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{8., 8.7}, {
          8.0514, 8.4458}, {8.0162, 8.1818}, {7.9, 7.95}, {10.25, 7.95}, {
          10.25, 8.7}}}]}, AspectRatio -> Automatic, ImagePadding -> 0.75, 
        ImageSize -> {15., 15.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconHint"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[#], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}}, {{{9.015, 17.37}, {4.4559, 17.37}, {0.76, 
           13.645}, {0.76, 9.05}, {0.76, 4.455}, {4.4559, 0.73}, {9.015, 
           0.73}, {13.574, 0.73}, {17.27, 4.455}, {17.27, 9.05}, {17.27, 
           13.645}, {13.574, 17.37}, {9.015, 17.37}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQbcixRiYqRcVh3bak+pu23A5rf8XkHt2n7OC/fkpq
x2MOB8+5DWqHnik5nP8e/HjpbHYHj4dVIuvYlRyAiisjVrA78Bau6b6toegQ
ApQ9soDdQepAtIJjoILDJ8fzaVefczgs6Nzw8GWoPNx84yMb9fIeyzr831T9
acMFXod1N+LL/OVkHV5uX8/8/IyAw7Fck4btDrIOZQ/mCC7dK+TAXMGtomEn
6/DP+dfb1w0iDkIi9sfufJV1ePRy6iYeQzGHac7dOc+t5R3SwEDcwe7FzTW/
bBQc9kybwF+1TcLh7TwbnStSig7Hd+3oZSuQdDjab1iuy6jk0MIL8qGkg8f+
WlmL50oO9uHRG/fnSDr4fu4LLjmi7HDw1ELXbZslHGDhAzO//9BXjRh+VQeG
iXW/rQzEHKzv+/dOz1N1uFfY1fekSMRhzhGFDUUZqhB/LhaCmFOs6sC0h1VI
ZL+Ag8g6d2AIqjqYCJrZ7L3E64Ae/gDrrapT
           "], CompressedData["
1:eJxTTMoPSmViYGBQBGIQ/emSb5KAhJoDAwg0aDhYbjlRtu++isNudX7urWpK
DrX2pnG7Tqo4TFPsKy2sVnRQvv2zLqtGBULfUXAI6J2eJ8Ss4mDSsN2hKUnB
Ia0jOfZOmrKD/l0Vtsar8g5Gz9apPlms5GDgs4zLLVXeweLHoZRVDxQdnNdm
3ivskneQW/7CQ09e0aHEbco3tnh5h+jLex6LxCo4FErzPtC9IO+wVfT36Xed
8nDzH5tJHYheIOeQBxJ4pOCgu2nu++Vscg75Qs0HTjUqOjDkN7IcPS/rcObd
ycNOukoObqqlTLM4ZOD+O7JRL2/xQWkHHibtdrFITYeb8WX+ctOkHQ6eWui6
zVjLQfD4rh29bdIO/Ye+asTwazuAnJswRdohaIdc6+uL2g6qbI1TnbtlHGy5
ri8uqNVxEIgAhtg3WYj5B3QcgKEkzcsAdOfS2UcUDHQdEp5eULotqehw89z3
4Mepug63pGsSjUyVHMr3zZfSj9V1uKKdKvkoQtmhOGPi25p6XQeQ8p91KhB9
lroOIGH7UlWH+qw9JZNn6EDs54bGF4OOA9AVtlzhag6KG4oyJupqO4CCYaGr
mgM4XiO0HK5WvFQz9FBzuAzi7tR0cNv2+e8VCzUHJ5AF0poO6PEPAFdvzZk=

           "]}]}, AspectRatio -> Automatic, BaselinePosition -> Scaled[0.1], 
        ImagePadding -> 0.5, ImageSize -> {14., 14.778}, 
        PlotRange -> {{0.76, 17.27}, {0.73, 17.37}}]& )}], 
   Cell["Documentation", "Section"], 
   Cell["Usage", "Subsection"], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell["Details & Options", "Subsection"], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    PasteAutoQuoteCharacters -> {}, StyleMenuListing -> None], 
   Cell["Examples", "Subsection"], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell["Links", "Section"], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell["Annotation", "Section"], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["HiddenMaterial"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.3, 0.7, 0.6], "Thickness" -> 2}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"hidden\"", "HiddenMaterialCellLabel", StripOnInput -> False], 
           "\"Hidden input cells will be closed on the published web page but \
will remain open in the downloadable example notebook\""}, 
          "PrettyTooltipTemplate"]], "HiddenMaterialCellLabel"]}, {
      None, None}}, StyleMenuListing -> None, Background -> 
    RGBColor[0.8, 1., 0.9]], 
   Cell[
    StyleData[
    "HiddenMaterialCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.3, 0.7, 0.6, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", 
    PrivateFontOptions -> {"OperatorSubstitution" -> False}, FontColor -> 
    GrayLevel[0.5]], 
   Cell["Special Input", "Section"], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 8263526385974082686; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog[
                    "Demonstration", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[8263526385974082686]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 5263076252613204070; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog[
                    "Demonstration", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[5263076252613204070]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell["Misc", "Section"], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["RelatedSymbol", StyleDefinitions -> StyleData["Item"]], 
    DefaultNewCellStyle -> {"RelatedSymbol", FontFamily -> "Source Sans Pro"},
     DefaultFormatType -> DefaultInputFormatType, FormatType -> InputForm], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[0.9]]}, Visible -> False, FrontEndVersion -> 
  "14.1 for Mac OS X x86 (64-bit) (June 13, 2024)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"cf4fad7f-5506-462b-8e2f-0201deb23727"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Name"->{
  Cell[580, 22, 341, 6, 70, "Title",ExpressionUUID->"b0713b89-5154-4a08-ba9c-9da68dec10ad",
   CellTags->{"Name", "Title"},
   CellID->145039789]},
 "Title"->{
  Cell[580, 22, 341, 6, 70, "Title",ExpressionUUID->"b0713b89-5154-4a08-ba9c-9da68dec10ad",
   CellTags->{"Name", "Title"},
   CellID->145039789]},
 "Caption"->{
  Cell[946, 32, 1495, 33, 70, "Section",ExpressionUUID->"8566c1d8-fa2c-4127-bad8-0c39959420bc",
   CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
   CellID->138150581]},
 "CaptionCells"->{
  Cell[946, 32, 1495, 33, 70, "Section",ExpressionUUID->"8566c1d8-fa2c-4127-bad8-0c39959420bc",
   CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
   CellID->138150581]},
 "TemplateCellGroup"->{
  Cell[946, 32, 1495, 33, 70, "Section",ExpressionUUID->"8566c1d8-fa2c-4127-bad8-0c39959420bc",
   CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
   CellID->138150581],
  Cell[4650, 124, 2246, 48, 70, "Section",ExpressionUUID->"dae2168a-5f5c-449d-aeb7-e9372650332d",
   CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
   CellID->447669593],
  Cell[7687, 195, 1944, 40, 70, "Section",ExpressionUUID->"d0b3f07c-327c-42f4-ab36-f72679877b17",
   CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
   CellID->791025314],
  Cell[62048, 1342, 1302, 31, 70, "Section",ExpressionUUID->"db0abe4d-a7e5-4637-ab84-847b0b7858e8",
   CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
   CellID->98938448],
  Cell[461544, 7941, 1221, 29, 70, "Subsection",ExpressionUUID->"af7afe04-2d07-438b-9946-26ef7fdad250",
   CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
   CellID->255368948],
  Cell[462931, 7979, 2197, 46, 70, "Subsection",ExpressionUUID->"89f2ec77-5dec-4f00-90c3-8208fdb72325",
   CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
   CellID->441931514],
  Cell[473004, 8241, 2173, 45, 70, "Subsection",ExpressionUUID->"b532a8ca-43c8-4949-9b69-e48b91c1d2ed",
   CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
   CellID->592881655],
  Cell[475795, 8302, 1242, 30, 70, "Subsection",ExpressionUUID->"de883e5c-6b6e-459b-ab8c-e2e9a2b5b51e",
   CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
   CellID->797097429],
  Cell[477666, 8348, 1106, 27, 70, "Subsection",ExpressionUUID->"46bbb074-5baf-46aa-a980-0a883de9f0e7",
   CellTags->{"Keywords", "TemplateCellGroup"},
   CellID->938146184],
  Cell[480113, 8420, 1128, 27, 70, "Subsection",ExpressionUUID->"c5628096-e0b5-4bdd-9973-aa5edefb2331",
   CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
   CellID->845692503],
  Cell[666860, 11886, 1216, 30, 70, "Subsection",ExpressionUUID->"0423ebab-3692-4888-b839-8a4069bac556",
   CellTags->{"Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
   CellID->1132753],
  Cell[668696, 11932, 1558, 37, 70, "Subsection",ExpressionUUID->"54069e62-359b-4731-ae26-2cf194e181f6",
   CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
   CellID->843468725],
  Cell[670800, 11987, 1191, 29, 70, "Subsection",ExpressionUUID->"a3f28ff4-b169-4390-bb2b-dd8e7747ed1f",
   CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
   CellID->899564547],
  Cell[672627, 12032, 1070, 26, 70, "Subsection",ExpressionUUID->"65d5513d-50b3-4bac-b4e8-25967cfcdc42",
   CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
   CellID->364555554],
  Cell[673857, 12067, 1073, 26, 70, "Subsection",ExpressionUUID->"89b5c174-dd49-4444-8f47-58bc8d95913f",
   CellTags->{"Compatibility", "TemplateCellGroup"},
   CellID->618273920]},
 "Initialization Code"->{
  Cell[4650, 124, 2246, 48, 70, "Section",ExpressionUUID->"dae2168a-5f5c-449d-aeb7-e9372650332d",
   CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
   CellID->447669593]},
 "InitializationCode"->{
  Cell[4650, 124, 2246, 48, 70, "Section",ExpressionUUID->"dae2168a-5f5c-449d-aeb7-e9372650332d",
   CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
   CellID->447669593]},
 "DefaultContent"->{
  Cell[6899, 174, 751, 16, 70, "CodeText",ExpressionUUID->"c0f3aa03-167a-4826-979a-3defedfadc2f",
   CellTags->{"DefaultContent", "samplecell", "TabNext"},
   CellID->687519280],
  Cell[475180, 8288, 578, 9, 70, "Text",ExpressionUUID->"79fc2925-05f3-4de2-a495-004b073f0853",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->423796343],
  Cell[477040, 8334, 589, 9, 70, "Text",ExpressionUUID->"ca4351e4-4032-4969-87fa-3222a9fb8e63",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->820829112],
  Cell[668079, 11918, 580, 9, 70, "Item",ExpressionUUID->"a0b3032d-3763-4fa5-ad7d-5b81d45098fe",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->919579287],
  Cell[671994, 12018, 596, 9, 70, "Item",ExpressionUUID->"0d76a3e7-f211-4108-84b1-f8c203fbe30a",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->699278082]},
 "samplecell"->{
  Cell[6899, 174, 751, 16, 70, "CodeText",ExpressionUUID->"c0f3aa03-167a-4826-979a-3defedfadc2f",
   CellTags->{"DefaultContent", "samplecell", "TabNext"},
   CellID->687519280]},
 "TabNext"->{
  Cell[6899, 174, 751, 16, 70, "CodeText",ExpressionUUID->"c0f3aa03-167a-4826-979a-3defedfadc2f",
   CellTags->{"DefaultContent", "samplecell", "TabNext"},
   CellID->687519280],
  Cell[475180, 8288, 578, 9, 70, "Text",ExpressionUUID->"79fc2925-05f3-4de2-a495-004b073f0853",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->423796343],
  Cell[477040, 8334, 589, 9, 70, "Text",ExpressionUUID->"ca4351e4-4032-4969-87fa-3222a9fb8e63",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->820829112],
  Cell[668079, 11918, 580, 9, 70, "Item",ExpressionUUID->"a0b3032d-3763-4fa5-ad7d-5b81d45098fe",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->919579287],
  Cell[671994, 12018, 596, 9, 70, "Item",ExpressionUUID->"0d76a3e7-f211-4108-84b1-f8c203fbe30a",
   CellTags->{"DefaultContent", "TabNext"},
   CellID->699278082]},
 "Manipulate"->{
  Cell[7687, 195, 1944, 40, 70, "Section",ExpressionUUID->"d0b3f07c-327c-42f4-ab36-f72679877b17",
   CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
   CellID->791025314]},
 "ManipulateGroup"->{
  Cell[7687, 195, 1944, 40, 70, "Section",ExpressionUUID->"d0b3f07c-327c-42f4-ab36-f72679877b17",
   CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
   CellID->791025314]},
 "SnapshotGroup"->{
  Cell[62048, 1342, 1302, 31, 70, "Section",ExpressionUUID->"db0abe4d-a7e5-4637-ab84-847b0b7858e8",
   CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
   CellID->98938448]},
 "Snapshots"->{
  Cell[62048, 1342, 1302, 31, 70, "Section",ExpressionUUID->"db0abe4d-a7e5-4637-ab84-847b0b7858e8",
   CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
   CellID->98938448]},
 "Snapshot"->{
  Cell[172875, 3178, 102732, 1690, 70, "Output",ExpressionUUID->"b2d2d3c8-bf0a-4080-98d5-9b5460374f0b",
   CellTags->"Snapshot",
   CellID->1999604583],
  Cell[275610, 4870, 81549, 1343, 70, "Output",ExpressionUUID->"168009e0-53d5-44fa-81ed-77caccb72a8e",
   CellTags->"Snapshot",
   CellID->1382634578],
  Cell[357162, 6215, 104047, 1712, 70, "Output",ExpressionUUID->"bf2fda12-e3e8-41ae-a37b-83f58a7fa1e2",
   CellTags->"Snapshot",
   CellID->18808259]},
 "SourceInformationGroup"->{
  Cell[461246, 7932, 273, 5, 70, "Section",ExpressionUUID->"9f20cec1-a446-4788-9a52-78defdd1667c",
   CellTags->"SourceInformationGroup",
   CellID->62407265]},
 "AuthorNames"->{
  Cell[461544, 7941, 1221, 29, 70, "Subsection",ExpressionUUID->"af7afe04-2d07-438b-9946-26ef7fdad250",
   CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
   CellID->255368948]},
 "Contributed By"->{
  Cell[461544, 7941, 1221, 29, 70, "Subsection",ExpressionUUID->"af7afe04-2d07-438b-9946-26ef7fdad250",
   CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
   CellID->255368948]},
 "AuthorNotes"->{
  Cell[462931, 7979, 2197, 46, 70, "Subsection",ExpressionUUID->"89f2ec77-5dec-4f00-90c3-8208fdb72325",
   CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
   CellID->441931514]},
 "DetailCells"->{
  Cell[462931, 7979, 2197, 46, 70, "Subsection",ExpressionUUID->"89f2ec77-5dec-4f00-90c3-8208fdb72325",
   CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
   CellID->441931514]},
 "Details & Citations"->{
  Cell[462931, 7979, 2197, 46, 70, "Subsection",ExpressionUUID->"89f2ec77-5dec-4f00-90c3-8208fdb72325",
   CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
   CellID->441931514]},
 "ReferenceCells"->{
  Cell[473004, 8241, 2173, 45, 70, "Subsection",ExpressionUUID->"b532a8ca-43c8-4949-9b69-e48b91c1d2ed",
   CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
   CellID->592881655]},
 "References"->{
  Cell[473004, 8241, 2173, 45, 70, "Subsection",ExpressionUUID->"b532a8ca-43c8-4949-9b69-e48b91c1d2ed",
   CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
   CellID->592881655]},
 "Submission Notes"->{
  Cell[475795, 8302, 1242, 30, 70, "Subsection",ExpressionUUID->"de883e5c-6b6e-459b-ab8c-e2e9a2b5b51e",
   CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
   CellID->797097429]},
 "SubmissionNotes"->{
  Cell[475795, 8302, 1242, 30, 70, "Subsection",ExpressionUUID->"de883e5c-6b6e-459b-ab8c-e2e9a2b5b51e",
   CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
   CellID->797097429]},
 "Keywords"->{
  Cell[477666, 8348, 1106, 27, 70, "Subsection",ExpressionUUID->"46bbb074-5baf-46aa-a980-0a883de9f0e7",
   CellTags->{"Keywords", "TemplateCellGroup"},
   CellID->938146184]},
 "Categories"->{
  Cell[480113, 8420, 1128, 27, 70, "Subsection",ExpressionUUID->"c5628096-e0b5-4bdd-9973-aa5edefb2331",
   CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
   CellID->845692503]},
 "DemoCategories"->{
  Cell[480113, 8420, 1128, 27, 70, "Subsection",ExpressionUUID->"c5628096-e0b5-4bdd-9973-aa5edefb2331",
   CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
   CellID->845692503]},
 "CheckboxCell"->{
  Cell[481244, 8449, 185579, 3432, 70, "Output",ExpressionUUID->"e15e7588-fc42-4cb0-bf5c-3909cd5b8819",
   CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
   CellID->354685201],
  Cell[676083, 12127, 1370, 35, 70, "Output",ExpressionUUID->"67e3d26e-033d-4569-898b-1f74cabf5837",
   CellTags->{"CheckboxCell", "CompatibilityARSupport", "CompatibilityARSupport-Checkboxes"},
   CellID->132666508],
  Cell[679951, 12235, 1328, 34, 70, "Output",ExpressionUUID->"2f6ca710-d1c3-46f1-8d4e-d31e9c2997e8",
   CellTags->{"CheckboxCell", "CompatibilityCloudSupport", "CompatibilityCloudSupport-Checkboxes"},
   CellID->533929727]},
 "Topics"->{
  Cell[481244, 8449, 185579, 3432, 70, "Output",ExpressionUUID->"e15e7588-fc42-4cb0-bf5c-3909cd5b8819",
   CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
   CellID->354685201]},
 "Topics-Checkboxes"->{
  Cell[481244, 8449, 185579, 3432, 70, "Output",ExpressionUUID->"e15e7588-fc42-4cb0-bf5c-3909cd5b8819",
   CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
   CellID->354685201]},
 "Related Demonstrations"->{
  Cell[666860, 11886, 1216, 30, 70, "Subsection",ExpressionUUID->"0423ebab-3692-4888-b839-8a4069bac556",
   CellTags->{"Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
   CellID->1132753]},
 "RelatedDemonstrations"->{
  Cell[666860, 11886, 1216, 30, 70, "Subsection",ExpressionUUID->"0423ebab-3692-4888-b839-8a4069bac556",
   CellTags->{"Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
   CellID->1132753]},
 "External Links"->{
  Cell[668696, 11932, 1558, 37, 70, "Subsection",ExpressionUUID->"54069e62-359b-4731-ae26-2cf194e181f6",
   CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
   CellID->843468725]},
 "ExternalLinks"->{
  Cell[668696, 11932, 1558, 37, 70, "Subsection",ExpressionUUID->"54069e62-359b-4731-ae26-2cf194e181f6",
   CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
   CellID->843468725]},
 "Related Symbols"->{
  Cell[670800, 11987, 1191, 29, 70, "Subsection",ExpressionUUID->"a3f28ff4-b169-4390-bb2b-dd8e7747ed1f",
   CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
   CellID->899564547]},
 "RelatedSymbols"->{
  Cell[670800, 11987, 1191, 29, 70, "Subsection",ExpressionUUID->"a3f28ff4-b169-4390-bb2b-dd8e7747ed1f",
   CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
   CellID->899564547]},
 "Published Date"->{
  Cell[672627, 12032, 1070, 26, 70, "Subsection",ExpressionUUID->"65d5513d-50b3-4bac-b4e8-25967cfcdc42",
   CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
   CellID->364555554]},
 "PublishedDate"->{
  Cell[672627, 12032, 1070, 26, 70, "Subsection",ExpressionUUID->"65d5513d-50b3-4bac-b4e8-25967cfcdc42",
   CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
   CellID->364555554]},
 "Compatibility"->{
  Cell[673857, 12067, 1073, 26, 70, "Subsection",ExpressionUUID->"89b5c174-dd49-4444-8f47-58bc8d95913f",
   CellTags->{"Compatibility", "TemplateCellGroup"},
   CellID->618273920]},
 "CompatibilityARSupport"->{
  Cell[676083, 12127, 1370, 35, 70, "Output",ExpressionUUID->"67e3d26e-033d-4569-898b-1f74cabf5837",
   CellTags->{"CheckboxCell", "CompatibilityARSupport", "CompatibilityARSupport-Checkboxes"},
   CellID->132666508]},
 "CompatibilityARSupport-Checkboxes"->{
  Cell[676083, 12127, 1370, 35, 70, "Output",ExpressionUUID->"67e3d26e-033d-4569-898b-1f74cabf5837",
   CellTags->{"CheckboxCell", "CompatibilityARSupport", "CompatibilityARSupport-Checkboxes"},
   CellID->132666508]},
 "ScrapeDefault"->{
  Cell[678664, 12198, 139, 3, 70, "Text",ExpressionUUID->"51f631f4-554f-492d-8740-ec6efd69d5ca",
   CellTags->"ScrapeDefault",
   CellID->855801078]},
 "CompatibilityCloudSupport"->{
  Cell[679951, 12235, 1328, 34, 70, "Output",ExpressionUUID->"2f6ca710-d1c3-46f1-8d4e-d31e9c2997e8",
   CellTags->{"CheckboxCell", "CompatibilityCloudSupport", "CompatibilityCloudSupport-Checkboxes"},
   CellID->533929727]},
 "CompatibilityCloudSupport-Checkboxes"->{
  Cell[679951, 12235, 1328, 34, 70, "Output",ExpressionUUID->"2f6ca710-d1c3-46f1-8d4e-d31e9c2997e8",
   CellTags->{"CheckboxCell", "CompatibilityCloudSupport", "CompatibilityCloudSupport-Checkboxes"},
   CellID->533929727]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Name", 822276, 14938},
 {"Title", 822436, 14942},
 {"Caption", 822598, 14946},
 {"CaptionCells", 822800, 14950},
 {"TemplateCellGroup", 823007, 14954},
 {"Initialization Code", 825968, 15000},
 {"InitializationCode", 826196, 15004},
 {"DefaultContent", 826420, 15008},
 {"samplecell", 827271, 15024},
 {"TabNext", 827465, 15028},
 {"Manipulate", 828316, 15044},
 {"ManipulateGroup", 828529, 15048},
 {"SnapshotGroup", 828740, 15052},
 {"Snapshots", 828945, 15056},
 {"Snapshot", 829149, 15060},
 {"SourceInformationGroup", 829635, 15070},
 {"AuthorNames", 829814, 15074},
 {"Contributed By", 830032, 15078},
 {"AuthorNotes", 830247, 15082},
 {"DetailCells", 830482, 15086},
 {"Details & Citations", 830725, 15090},
 {"ReferenceCells", 830963, 15094},
 {"References", 831176, 15098},
 {"Submission Notes", 831395, 15102},
 {"SubmissionNotes", 831620, 15106},
 {"Keywords", 831838, 15110},
 {"Categories", 832031, 15114},
 {"DemoCategories", 832248, 15118},
 {"CheckboxCell", 832463, 15122},
 {"Topics", 833108, 15132},
 {"Topics-Checkboxes", 833322, 15136},
 {"Related Demonstrations", 833541, 15140},
 {"RelatedDemonstrations", 833783, 15144},
 {"External Links", 834018, 15148},
 {"ExternalLinks", 834238, 15152},
 {"Related Symbols", 834460, 15156},
 {"RelatedSymbols", 834683, 15160},
 {"Published Date", 834906, 15164},
 {"PublishedDate", 835126, 15168},
 {"Compatibility", 835346, 15172},
 {"CompatibilityARSupport", 835557, 15176},
 {"CompatibilityARSupport-Checkboxes", 835816, 15180},
 {"ScrapeDefault", 836055, 15184},
 {"CompatibilityCloudSupport", 836238, 15188},
 {"CompatibilityCloudSupport-Checkboxes", 836506, 15192}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 341, 6, 70, "Title",ExpressionUUID->"b0713b89-5154-4a08-ba9c-9da68dec10ad",
 CellTags->{"Name", "Title"},
 CellID->145039789],
Cell[CellGroupData[{
Cell[946, 32, 1495, 33, 70, "Section",ExpressionUUID->"8566c1d8-fa2c-4127-bad8-0c39959420bc",
 CellTags->{"Caption", "CaptionCells", "TemplateCellGroup"},
 CellID->138150581],
Cell[2444, 67, 2169, 52, 70, "Text",ExpressionUUID->"b799a223-fc5e-4f8b-8fa2-fc95fe497f18",
 CellID->775430540]
}, Closed]],
Cell[CellGroupData[{
Cell[4650, 124, 2246, 48, 70, "Section",ExpressionUUID->"dae2168a-5f5c-449d-aeb7-e9372650332d",
 CellTags->{"Initialization Code", "InitializationCode", "TemplateCellGroup"},
 CellID->447669593],
Cell[6899, 174, 751, 16, 70, "CodeText",ExpressionUUID->"c0f3aa03-167a-4826-979a-3defedfadc2f",
 CellTags->{"DefaultContent", "samplecell", "TabNext"},
 CellID->687519280]
}, Closed]],
Cell[CellGroupData[{
Cell[7687, 195, 1944, 40, 70, "Section",ExpressionUUID->"d0b3f07c-327c-42f4-ab36-f72679877b17",
 CellTags->{"Manipulate", "ManipulateGroup", "TemplateCellGroup"},
 CellID->791025314],
Cell[CellGroupData[{
Cell[9656, 239, 35960, 788, 70, "Input",ExpressionUUID->"140d83d8-99c1-44a8-9fe2-8a45cba662e1",
 CellID->175806228],
Cell[45619, 1029, 16380, 307, 70, "Output",ExpressionUUID->"d8e17931-6711-415d-896f-e08abe1b17bb",
 CellID->348379819]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[62048, 1342, 1302, 31, 70, "Section",ExpressionUUID->"db0abe4d-a7e5-4637-ab84-847b0b7858e8",
 CellTags->{"SnapshotGroup", "Snapshots", "TemplateCellGroup"},
 CellID->98938448],
Cell[63353, 1375, 109519, 1801, 70, "Output",ExpressionUUID->"9c84fa9f-5611-4ef8-bf7f-264c929f67e6",
 CellID->580523355],
Cell[172875, 3178, 102732, 1690, 70, "Output",ExpressionUUID->"b2d2d3c8-bf0a-4080-98d5-9b5460374f0b",
 CellTags->"Snapshot",
 CellID->1999604583],
Cell[275610, 4870, 81549, 1343, 70, "Output",ExpressionUUID->"168009e0-53d5-44fa-81ed-77caccb72a8e",
 CellTags->"Snapshot",
 CellID->1382634578],
Cell[357162, 6215, 104047, 1712, 70, "Output",ExpressionUUID->"bf2fda12-e3e8-41ae-a37b-83f58a7fa1e2",
 CellTags->"Snapshot",
 CellID->18808259]
}, Closed]],
Cell[CellGroupData[{
Cell[461246, 7932, 273, 5, 70, "Section",ExpressionUUID->"9f20cec1-a446-4788-9a52-78defdd1667c",
 CellTags->"SourceInformationGroup",
 CellID->62407265],
Cell[CellGroupData[{
Cell[461544, 7941, 1221, 29, 70, "Subsection",ExpressionUUID->"af7afe04-2d07-438b-9946-26ef7fdad250",
 CellTags->{"AuthorNames", "Contributed By", "TemplateCellGroup"},
 CellID->255368948],
Cell[462768, 7972, 126, 2, 70, "Item",ExpressionUUID->"743e45b7-6a16-486f-884e-cfcfcf28280a",
 CellID->959769204]
}, Open  ]],
Cell[CellGroupData[{
Cell[462931, 7979, 2197, 46, 70, "Subsection",ExpressionUUID->"89f2ec77-5dec-4f00-90c3-8208fdb72325",
 CellTags->{"AuthorNotes", "DetailCells", "Details & Citations", "TemplateCellGroup"},
 CellID->441931514],
Cell[465131, 8027, 578, 12, 70, "Text",ExpressionUUID->"f707d44b-a3b9-4413-aa5b-ee5d3ffeefda",
 CellID->211747867],
Cell[465712, 8041, 748, 20, 70, "Text",ExpressionUUID->"01995d33-6008-4efa-821a-2af3dd5a541b",
 CellID->101825244],
Cell[466463, 8063, 1466, 42, 70, "Text",ExpressionUUID->"44e2a7e0-c1ab-4714-9020-6fa50c2dce68",
 CellID->1549812350],
Cell[467932, 8107, 647, 13, 70, "Text",ExpressionUUID->"815bc4bb-2996-40db-af6c-2806c364cf58",
 CellID->250155393],
Cell[468582, 8122, 347, 5, 70, "Text",ExpressionUUID->"d136d0bc-ca22-4c2d-a1ee-f57901ef909d",
 CellID->118267598],
Cell[468932, 8129, 602, 15, 70, "Text",ExpressionUUID->"708ac121-a0e1-4f2b-98d7-dbfb09382c7c",
 CellID->61668353],
Cell[469537, 8146, 896, 23, 70, "Text",ExpressionUUID->"bde4d4cb-e789-47dc-9f7b-74005aa7890e",
 CellID->97501916],
Cell[470436, 8171, 348, 5, 70, "Text",ExpressionUUID->"9b0abddf-66db-4eb5-aa89-24f7c9b2740e",
 CellID->359042034],
Cell[470787, 8178, 518, 14, 70, "Text",ExpressionUUID->"45763841-aad5-46a3-9ce4-8208030a2802",
 CellID->107577952],
Cell[471308, 8194, 693, 16, 70, "Text",ExpressionUUID->"e44528bf-5312-42eb-b494-43cd3bf414df",
 CellID->182100021],
Cell[472004, 8212, 276, 4, 70, "Text",ExpressionUUID->"8fbbbb78-2f35-4002-b6e4-3c8402a1f82c",
 CellID->106451190],
Cell[472283, 8218, 684, 18, 70, "Text",ExpressionUUID->"f7f07377-45a9-431f-9f1b-c84e4202642d",
 CellID->22464714]
}, Open  ]],
Cell[CellGroupData[{
Cell[473004, 8241, 2173, 45, 70, "Subsection",ExpressionUUID->"b532a8ca-43c8-4949-9b69-e48b91c1d2ed",
 CellTags->{"ReferenceCells", "References", "TemplateCellGroup"},
 CellID->592881655],
Cell[475180, 8288, 578, 9, 70, "Text",ExpressionUUID->"79fc2925-05f3-4de2-a495-004b073f0853",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->423796343]
}, Open  ]],
Cell[CellGroupData[{
Cell[475795, 8302, 1242, 30, 70, "Subsection",ExpressionUUID->"de883e5c-6b6e-459b-ab8c-e2e9a2b5b51e",
 CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
 CellID->797097429],
Cell[477040, 8334, 589, 9, 70, "Text",ExpressionUUID->"ca4351e4-4032-4969-87fa-3222a9fb8e63",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->820829112]
}, Open  ]],
Cell[CellGroupData[{
Cell[477666, 8348, 1106, 27, 70, "Subsection",ExpressionUUID->"46bbb074-5baf-46aa-a980-0a883de9f0e7",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->938146184],
Cell[478775, 8377, 130, 2, 70, "Item",ExpressionUUID->"e82890ec-8bd1-4822-96fd-bf55d916c96a",
 CellID->720902404],
Cell[478908, 8381, 118, 2, 70, "Item",ExpressionUUID->"afad738f-dd18-48b1-add2-053aee1b3b79",
 CellID->874890799],
Cell[479029, 8385, 124, 2, 70, "Item",ExpressionUUID->"fbff74d1-dbff-4803-ad3f-78616c97ac79",
 CellID->939515199],
Cell[479156, 8389, 121, 2, 70, "Item",ExpressionUUID->"f472aae7-d005-4f98-b6c6-ac7b8b834e91",
 CellID->903878728],
Cell[479280, 8393, 134, 2, 70, "Item",ExpressionUUID->"a6a6597c-a776-408a-91bb-52a2d3e8dd5d",
 CellID->576624648],
Cell[479417, 8397, 124, 2, 70, "Item",ExpressionUUID->"fe863cec-e81f-4939-9ac5-eeb5790d7b5c",
 CellID->742276060],
Cell[479544, 8401, 123, 2, 70, "Item",ExpressionUUID->"12693d9b-3ece-42fd-94ac-6e26fcb62f99",
 CellID->544125060],
Cell[479670, 8405, 141, 2, 70, "Item",ExpressionUUID->"7f8e5ec6-2fe4-433a-82cd-7a4a5ff50ae8",
 CellID->572259038],
Cell[479814, 8409, 138, 2, 70, "Item",ExpressionUUID->"df39cf02-5f7b-40eb-8498-514ee62db642",
 CellID->176398325],
Cell[479955, 8413, 121, 2, 70, "Item",ExpressionUUID->"d9732abb-930f-4cc6-9a31-4e8ac47a1b39",
 CellID->272391191]
}, Open  ]],
Cell[CellGroupData[{
Cell[480113, 8420, 1128, 27, 70, "Subsection",ExpressionUUID->"c5628096-e0b5-4bdd-9973-aa5edefb2331",
 CellTags->{"Categories", "DemoCategories", "TemplateCellGroup"},
 CellID->845692503],
Cell[481244, 8449, 185579, 3432, 70, "Output",ExpressionUUID->"e15e7588-fc42-4cb0-bf5c-3909cd5b8819",
 CellTags->{"CheckboxCell", "Topics", "Topics-Checkboxes"},
 CellID->354685201]
}, Open  ]],
Cell[CellGroupData[{
Cell[666860, 11886, 1216, 30, 70, "Subsection",ExpressionUUID->"0423ebab-3692-4888-b839-8a4069bac556",
 CellTags->{"Related Demonstrations", "RelatedDemonstrations", "TemplateCellGroup"},
 CellID->1132753],
Cell[668079, 11918, 580, 9, 70, "Item",ExpressionUUID->"a0b3032d-3763-4fa5-ad7d-5b81d45098fe",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->919579287]
}, Open  ]],
Cell[CellGroupData[{
Cell[668696, 11932, 1558, 37, 70, "Subsection",ExpressionUUID->"54069e62-359b-4731-ae26-2cf194e181f6",
 CellTags->{"External Links", "ExternalLinks", "TemplateCellGroup"},
 CellID->843468725],
Cell[670257, 11971, 506, 11, 70, "Text",ExpressionUUID->"7fd5c811-154e-4173-b9e1-713dbbd8d714",
 CellID->229222309]
}, Open  ]],
Cell[CellGroupData[{
Cell[670800, 11987, 1191, 29, 70, "Subsection",ExpressionUUID->"a3f28ff4-b169-4390-bb2b-dd8e7747ed1f",
 CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
 CellID->899564547],
Cell[671994, 12018, 596, 9, 70, "Item",ExpressionUUID->"0d76a3e7-f211-4108-84b1-f8c203fbe30a",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->699278082]
}, Open  ]],
Cell[CellGroupData[{
Cell[672627, 12032, 1070, 26, 70, "Subsection",ExpressionUUID->"65d5513d-50b3-4bac-b4e8-25967cfcdc42",
 CellTags->{"Published Date", "PublishedDate", "TemplateCellGroup"},
 CellID->364555554],
Cell[673700, 12060, 120, 2, 70, "Text",ExpressionUUID->"61e1bf0b-a156-42d3-bc2c-428ba1e5b16f",
 CellID->583889232]
}, Open  ]],
Cell[CellGroupData[{
Cell[673857, 12067, 1073, 26, 70, "Subsection",ExpressionUUID->"89b5c174-dd49-4444-8f47-58bc8d95913f",
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->618273920],
Cell[CellGroupData[{
Cell[674955, 12097, 1125, 28, 70, "Subsubsection",ExpressionUUID->"5e4bf9a0-082b-4143-b5a4-f585951af066",
 CellID->458960555],
Cell[676083, 12127, 1370, 35, 70, "Output",ExpressionUUID->"67e3d26e-033d-4569-898b-1f74cabf5837",
 CellTags->{"CheckboxCell", "CompatibilityARSupport", "CompatibilityARSupport-Checkboxes"},
 CellID->132666508]
}, Closed]],
Cell[CellGroupData[{
Cell[677490, 12167, 1171, 29, 70, "Subsubsection",ExpressionUUID->"3b254ef4-257a-4a47-9223-372504b1f583",
 CellID->890453227],
Cell[678664, 12198, 139, 3, 70, "Text",ExpressionUUID->"51f631f4-554f-492d-8740-ec6efd69d5ca",
 CellTags->"ScrapeDefault",
 CellID->855801078]
}, Open  ]],
Cell[CellGroupData[{
Cell[678840, 12206, 1108, 27, 70, "Subsubsection",ExpressionUUID->"f44e9e7e-75e6-486c-a84a-8e703b312159",
 CellID->88638282],
Cell[679951, 12235, 1328, 34, 70, "Output",ExpressionUUID->"2f6ca710-d1c3-46f1-8d4e-d31e9c2997e8",
 CellTags->{"CheckboxCell", "CompatibilityCloudSupport", "CompatibilityCloudSupport-Checkboxes"},
 CellID->533929727]
}, Closed]]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
